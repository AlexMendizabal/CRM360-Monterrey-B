{"version":3,"sources":["webpack:///src/app/shared/directives/is-ellipsed.directive.ts","webpack:///src/app/modules/comercial/controle-entregas/controle-entregas.module.ts","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/controle-entregas/lista/lista.component.scss","webpack:///src/app/modules/comercial/controle-entregas/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/controle-entregas.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/controle-entregas/controle-entregas.service.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrega/controle-entregas/controle-entregas.module.ts","webpack:///src/app/modules/comercial/controle-entregas/lista/lista.component.html","webpack:///src/app/modules/logistica/entrega/controle-entregas/controle-entregas-routing.module.ts","webpack:///src/app/modules/comercial/controle-entregas/controle-entregas-routing.module.ts","webpack:///src/app/shared/directives/directives.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["IsEllipsedDirective","elementRef","setTimeout","element","nativeElement","offsetWidth","scrollWidth","title","innerHTML","selector","ComercialControleEntregasModule","declarations","imports","forRoot","providers","ComercialVendedoresService","http","API","API_CADASTROS","get","pipe","id","params","codCliente","providedIn","ComercialControleEntregasListaComponent","localeService","router","location","activatedRoute","pnotifyService","formBuilder","atividadesService","controleEntregasService","dateService","titleService","modalService","routerService","perfilService","loaderNavbar","loaderFullScreen","loaderImage","breadCrumbTree","descricao","routerLink","tableConfig","isResponsive","subtitleBorder","isFixed","imageLoading","showAdvancedFilter","vendedores","pedidos","pedidosLoaded","pedidosEmpty","pedido","entrega","detalhes","detalhesRomaneio","detalhesRomaneioEmpty","detalhesRomaneioLoading","currentPage","maxSize","itemsPerPage","pedidosPagination","orderBy","orderType","subtitles","text","color","situacoes","filiais","columns","nomeEmpresa","name","active","romaneio","dataPrev","dataEntrega","nomeCliente","sequencia","notaFiscal","dataEmissao","nomeSituacao","keepOriginalOrder","a","b","key","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","setFormFilter","registrarAcesso","getFiliais","getFiltros","getSituacoes","setTitle","subscribe","response","responseCode","result","unshift","nome","onActivatedRoute","error","back","CD_FILI","NM_FILI","queryParams","_response","getBase64UrlParams","keys","length","form","patchValue","getPedidos","getParams","_params","_obj","value","prop","Date","convertToUrlDate","vendedorSelecionado","filter","vendedor","group","DT_INIC","getFirstDayMonth","required","DT_FINA","getLastDayMonth","NM_CLIE","NOTA_FISC","CD_PEDI","SG_PEDI","CD_ROMA","CD_VEND","NM_VEND","DS_CLIE","ENTR_SG_STAT","TT_REGI_PAGI","ORDE_BY","ORDE_TYPE","PAGI","TIME","getDate","getMatriculaVendedorLogado","column","setValue","onFilter","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","$serviceSubscription","unsubscribe","getLista","next","body","totalItems","message","template","getDetalhesPedido","modalRef","show","animated","ignoreBackdropClick","getDetalhesRomaneio","getTime","navigate","relativeTo","setBase64UrlParams","item","ID_LOGI_FUSI_PEDI","ID","getDetalhesEntrega","reset","event","page","notice","currentUser","JSON","parse","localStorage","getItem","info","idVendedor","service","pnotify","filiaisService","desmembramentoService","loadingFiliais","tipoOperacao","getVendedores","setBreadCrumb","getTipoOperacao","submoduloId","snapshot","idSubModulo","TP_OPER","split","Array","isArray","toString","ID_EVEN","loading","pacthEvento","success","ComercialControleEntregasService","comercialService","vendedoresService","tidSoftwareService","observe","patch","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","empresas","getEmpresas","ComercialService","httpParams","param","append","routes","path","component","ComercialControleEntregasRoutingModule","forChild","exports","DirectivesModule","ngModule","ComercialTidSoftwareService","linhas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","data","post"],"mappings":"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","file":"controle-entregas-controle-entregas-module-es5.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[isEllipsed]'\r\n})\r\nexport class IsEllipsedDirective implements AfterViewInit {\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      const element = this.elementRef.nativeElement;\r\n      if (element.offsetWidth < element.scrollWidth) {\r\n        element.title = element.innerHTML;\r\n      }\r\n    }, 500);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialControleEntregasListaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialControleEntregasRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    DirectivesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialControleEntregasModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `http://23.254.204.187/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number){\r\n    return this.http\r\n    .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientesCotizacion(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes-cotizacion`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xyXG4gIGNvbWVyY2lhbC1jb250cm9sZS1lbnRyZWdhcyB7XHJcbiAgICAjc2Nyb2xsRGV0YWxoZXMge1xyXG4gICAgICBoZWlnaHQ6IDM0MHB4O1xyXG4gICAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */\";","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\r\n\r\ninterface ITipoEmpresa {\r\n  id: number;\r\n  nome: string;\r\n  sigla: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'comercial-controle-entregas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialControleEntregasListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n  modalRef: BsModalRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = false;\r\n  loaderImage = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home',\r\n    },\r\n    {\r\n      descricao: 'Controle de entregas',\r\n    },\r\n  ];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    isResponsive: true,\r\n    subtitleBorder: true,\r\n    isFixed: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n  $serviceSubscription: Subscription;\r\n\r\n  imageLoading = false;\r\n\r\n  showAdvancedFilter = true;\r\n  form: FormGroup;\r\n  vendedores: any = [];\r\n\r\n  pedidos: any = [];\r\n  pedidosLoaded = false;\r\n  pedidosEmpty = true;\r\n\r\n  pedido: any = {};\r\n  entrega = [];\r\n\r\n  detalhes: any = [];\r\n  empresa: number;\r\n\r\n  detalhesRomaneio: any = [];\r\n  detalhesRomaneioEmpty: boolean = false;\r\n  detalhesRomaneioLoading: boolean = false;\r\n\r\n  currentPage = 1;\r\n  maxSize: number = 10;\r\n  totalItems: number;\r\n  itemsPerPage: number = 300;\r\n  pedidosPagination: any = [];\r\n\r\n  orderBy = 'dataPrev';\r\n  orderType = 'DESC';\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Entregue',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Não entregue',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  situacoes: any = [];\r\n\r\n  filiais: Array<any> = [];\r\n\r\n  columns = {\r\n    nomeEmpresa: {\r\n      name: 'Empresa',\r\n      active: true,\r\n    },\r\n    romaneio: {\r\n      name: 'Romaneio',\r\n      active: true,\r\n    },\r\n    dataPrev: {\r\n      name: 'Data Prevista de Entrega',\r\n      active: true,\r\n    },\r\n    dataEntrega: {\r\n      name: 'Data de Entrega',\r\n      active: false,\r\n    },\r\n    nomeCliente: {\r\n      name: 'Cliente',\r\n      active: true,\r\n    },\r\n    sequencia: {\r\n      name: 'Sequência',\r\n      active: false,\r\n    },\r\n    pedido: {\r\n      name: 'Pedido',\r\n      active: true,\r\n    },\r\n    notaFiscal: {\r\n      name: 'Nota Fiscal',\r\n      active: true,\r\n    },\r\n    dataEmissao: {\r\n      name: 'Data de emissão',\r\n      active: false,\r\n    },\r\n    nomeSituacao: {\r\n      name: 'Situação',\r\n      active: true,\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pnotifyService: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private atividadesService: AtividadesService,\r\n    private controleEntregasService: ComercialControleEntregasService,\r\n    private dateService: DateService,\r\n    private titleService: TitleService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService,\r\n    private perfilService: AdminPerfisService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setFormFilter();\r\n    this.registrarAcesso();\r\n    this.getFiliais();\r\n    this.getFiltros();\r\n    this.getSituacoes();\r\n    this.titleService.setTitle('Controle de entregas');\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFiltros() {\r\n    this.controleEntregasService\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].result;\r\n\r\n            this.vendedores.unshift({\r\n              id: 0,\r\n              nome: 'EXIBIR TODOS',\r\n            });\r\n          }\r\n\r\n          this.onActivatedRoute();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      );\r\n  }\r\n\r\n  async getFiliais() {\r\n    this.filiais = [\r\n      {\r\n        CD_FILI: 46,\r\n        NM_FILI: 'Corte & Dobra - Cajamar',\r\n      },\r\n      {\r\n        CD_FILI: 72,\r\n        NM_FILI: 'Corte & Dobra - Praia Grande',\r\n      },\r\n      {\r\n        CD_FILI: 3,\r\n        NM_FILI: 'Corte & Dobra - Rio das Pedras',\r\n      },\r\n      {\r\n        CD_FILI: 41,\r\n        NM_FILI: 'Distribuição Duque de Caxias',\r\n      },\r\n      {\r\n        CD_FILI: 6,\r\n        NM_FILI: 'Distribuição Osasco',\r\n      },\r\n      {\r\n        CD_FILI: 18,\r\n        NM_FILI: 'Distribuição Tietê',\r\n      },\r\n      {\r\n        CD_FILI: 79,\r\n        NM_FILI: 'Distribuição Taipas',\r\n      },\r\n      {\r\n        CD_FILI: 77,\r\n        NM_FILI: 'Distribuição Camanducaia',\r\n      },\r\n      {\r\n        CD_FILI: 83,\r\n        NM_FILI: 'Distribuição Guarulhos',\r\n      },\r\n      {\r\n        CD_FILI: 9661,\r\n        NM_FILI: 'Dba Aços Especiais',\r\n      },\r\n      {\r\n        CD_FILI: 9639,\r\n        NM_FILI: 'Dba Jacareí',\r\n      },\r\n      {\r\n        CD_FILI: 9636,\r\n        NM_FILI: 'Dba Praia Grande',\r\n      },\r\n      {\r\n        CD_FILI: 9645,\r\n        NM_FILI: 'Dba Piracicaba',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.activatedRoute.queryParams.subscribe((response) => {\r\n      let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n      if (Object.keys(_response).length > 0) {\r\n        this.form.patchValue(_response);\r\n        this.getPedidos(this.getParams());\r\n      } else {\r\n        this.loaderNavbar = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    const vendedorSelecionado = this.vendedores.filter(\r\n      (vendedor) => vendedor?.id == _params['CD_VEND']\r\n    );\r\n\r\n    _params['NM_VEND'] = '';\r\n\r\n    if (vendedorSelecionado.length == 1) {\r\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  setFormFilter() {\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\r\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\r\n      NM_CLIE: [null],\r\n      NOTA_FISC: [null],\r\n      CD_PEDI: [null],\r\n      SG_PEDI: [null],\r\n      CD_ROMA: [null],\r\n      CD_VEND: [null],\r\n      NM_VEND: [null],\r\n      DS_CLIE: [null],\r\n      CD_FILI: [null],\r\n      ENTR_SG_STAT: [null],\r\n      TT_REGI_PAGI: [300],\r\n      ORDE_BY: ['dataPrev'],\r\n      ORDE_TYPE: ['DESC'],\r\n      PAGI: [1],\r\n      TIME: new Date().getDate(),\r\n    });\r\n\r\n    this.getMatriculaVendedorLogado();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.get('ORDE_BY').setValue(this.orderBy);\r\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getPedidos(params) {\r\n    this.$serviceSubscription?.unsubscribe();\r\n\r\n    this.loaderNavbar = true;\r\n    this.pedidosLoaded = false;\r\n\r\n    this.controleEntregasService\r\n      .getLista(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.pedidosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.status !== 200) {\r\n            this.pedidos = [];\r\n            this.pedidosEmpty = true;\r\n            return;\r\n          }\r\n\r\n          this.pedidos = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n          this.pedidosEmpty = false;\r\n        },\r\n        error: (error) => {\r\n          this.pedidos = [];\r\n          this.pedidosEmpty = true;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  getDetalhesEntrega(params, template) {\r\n    this.loaderNavbar = true;\r\n    this.imageLoading = true;\r\n\r\n    this.controleEntregasService\r\n      .getDetalhesPedido(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status !== 200) {\r\n            return;\r\n          }\r\n\r\n          this.entrega = response.body['data'];\r\n\r\n          if (!this.entrega['ENTR_COMP_FOTO']) {\r\n            setTimeout(() => {\r\n              this.imageLoading = false;\r\n            }, 200);\r\n          }\r\n\r\n          this.modalRef = this.modalService.show(template, {\r\n            animated: false,\r\n            ignoreBackdropClick: true,\r\n            class: 'modal-xxl',\r\n          });\r\n        },\r\n        (error) => {\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDetalhesRomaneio(params) {\r\n    this.detalhesRomaneioLoading = true;\r\n    this.controleEntregasService\r\n      .getDetalhesRomaneio(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.detalhesRomaneioLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status !== 200) {\r\n            this.detalhesRomaneioEmpty = true;\r\n            return;\r\n          }\r\n          this.detalhesRomaneioEmpty = false;\r\n          this.detalhesRomaneio = response.body['data'];\r\n        },\r\n        (error) => {\r\n          this.detalhesRomaneioEmpty = false;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(1);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  viewDetails(item: any, template: TemplateRef<any>) {\r\n    this.pedido = item;\r\n\r\n    const params = {\r\n      CD_ROMA: item?.CD_ROMA,\r\n      CD_PEDI: item?.CD_PEDI,\r\n      CD_FILI: item?.CD_FILI,\r\n      ID_LOGI_FUSI_PEDI: item?.ID,\r\n    };\r\n\r\n    this.getDetalhesEntrega(params, template);\r\n    this.getDetalhesRomaneio(params);\r\n  }\r\n\r\n  classStatusBorder(item): string {\r\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\r\n      return 'border-success';\r\n    }\r\n\r\n    return 'border-danger';\r\n  }\r\n\r\n  getSelectedStyle(item) {\r\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\r\n      return { 'font-weight': 600, color: 'blue' };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  onResetForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n  /* Paginação */\r\n\r\n  getSituacoes() {\r\n    this.controleEntregasService.getSituacoes().subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.situacoes = response.body['data'];\r\n        } else {\r\n          this.pnotifyService.notice('Nenhuma situação encontrada.');\r\n        }\r\n      },\r\n      (error) => {\r\n        this.pnotifyService.error('Erro ao carregar situações.');\r\n      }\r\n    );\r\n  }\r\n\r\n  keepOriginalOrder = (a, b) => a.key;\r\n\r\n  getMatriculaVendedorLogado() {\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor);\r\n  }\r\n\r\n  onImageLoad() {\r\n    setTimeout(() => {\r\n      this.imageLoading = false;\r\n    }, 200);\r\n  }\r\n}\r\n","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\r\nimport { LogisticaEntregaFusionService } from '../../services/fusion.service';\r\nimport { LogisticaEntregaDesmembramentoService } from '../../desmembramento/services/desmembramento.service';\r\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\ninterface ITipoEmpresa {\r\n  id: number;\r\n  nome: string;\r\n  sigla: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'comercial-controle-entregas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialControleEntregasListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n  modalRef: BsModalRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = false;\r\n  loadingFiliais = false;\r\n  loaderImage = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    isResponsive: true,\r\n    subtitleBorder: true,\r\n    isFixed: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n  $serviceSubscription: Subscription;\r\n\r\n  imageLoading = false;\r\n\r\n  showAdvancedFilter = true;\r\n  form: FormGroup;\r\n  vendedores: any = [];\r\n\r\n  pedidos: any = [];\r\n  pedidosLoaded = false;\r\n  pedidosEmpty = true;\r\n\r\n  pedido: any = {};\r\n  entrega = [];\r\n\r\n  detalhes: any = [];\r\n  empresa: number;\r\n\r\n  detalhesRomaneio: any = [];\r\n  detalhesRomaneioEmpty: boolean = false;\r\n  detalhesRomaneioLoading: boolean = false;\r\n\r\n  currentPage = 1;\r\n  maxSize: number = 10;\r\n  totalItems: number;\r\n  itemsPerPage: number = 300;\r\n  pedidosPagination: any = [];\r\n\r\n  orderBy = 'dataPrev';\r\n  orderType = 'DESC';\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Entregado',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'No entregado',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  situacoes: any = [];\r\n\r\n  filiais: Array<any> = [];\r\n\r\n  columns = {\r\n    nomeEmpresa: {\r\n      name: 'Empresa',\r\n      active: true,\r\n    },\r\n    romaneio: {\r\n      name: 'Lista',\r\n      active: true,\r\n    },\r\n    dataPrev: {\r\n      name: 'Fecha estimada de entrega',\r\n      active: true,\r\n    },\r\n    dataEntrega: {\r\n      name: 'Fecha de entrega',\r\n      active: false,\r\n    },\r\n    nomeCliente: {\r\n      name: 'Cliente',\r\n      active: true,\r\n    },\r\n    sequencia: {\r\n      name: 'Secuencia',\r\n      active: false,\r\n    },\r\n    pedido: {\r\n      name: 'Pedido',\r\n      active: true,\r\n    },\r\n    notaFiscal: {\r\n      name: 'Nota Fiscal',\r\n      active: true,\r\n    },\r\n    dataEmissao: {\r\n      name: 'Fecha de emisión',\r\n      active: false,\r\n    },\r\n    nomeSituacao: {\r\n      name: 'Situación',\r\n      active: true,\r\n    },\r\n  };\r\n\r\n  tipoOperacao = [];\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private pnotifyService: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private atividadesService: AtividadesService,\r\n    private service: ComercialControleEntregasService,\r\n    private dateService: DateService,\r\n    private titleService: TitleService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService,\r\n    private pnotify: PNotifyService,\r\n    private filiaisService: LogisticaFiliaisService,\r\n    private desmembramentoService: LogisticaEntregaDesmembramentoService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setFormFilter();\r\n    this.registrarAcesso();\r\n    this.getFiliais();\r\n    //this.getFiltros();\r\n    this.getSituacoes();\r\n    this.titleService.setTitle('Control de entrega');\r\n    this.getVendedores();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n    this.getTipoOperacao();\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const submoduloId = this.activatedRoute.snapshot.params?.idSubModulo;\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica',\r\n      },\r\n      {\r\n        descricao: 'GESTIÓN DE ENTREGAS',\r\n        routerLink: `/logistica/entrega/${submoduloId}`,\r\n      },\r\n      {\r\n        descricao: 'Control de entrega',\r\n      },\r\n    ];\r\n  }\r\n\r\n  getFiltros() {\r\n    /* this.service\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response[0].responseCode === 200) {\r\n            this.vendedores = response[0].result;\r\n\r\n            this.vendedores.unshift({\r\n              id: 0,\r\n              nome: 'EXIBIR TODOS',\r\n            });\r\n          }\r\n\r\n          this.onActivatedRoute();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      ); */\r\n  }\r\n\r\n  getVendedores() {\r\n    this.service.getVendedores().subscribe((response) => {\r\n      if (response.status !== 200) {\r\n        return;\r\n      }\r\n\r\n      this.vendedores = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getFiliais() {\r\n      this.loadingFiliais = true;\r\n      this.filiaisService.getFiliais({ status: '1' })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loadingFiliais = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: response => {\r\n            this.filiais = response.body['data'];\r\n          },\r\n          error: () => {\r\n            this.pnotify.error();\r\n          }\r\n        })\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.activatedRoute.queryParams.subscribe((response) => {\r\n      let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n      if (Object.keys(_response).length == 0) {\r\n        this.loaderNavbar = false;\r\n        return;\r\n      }\r\n\r\n      _response['TP_OPER'] = _response?.TP_OPER\r\n        ? _response?.TP_OPER?.split(',')\r\n        : [];\r\n\r\n      this.form.patchValue(_response);\r\n      this.getPedidos(this.getParams());\r\n\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else if(Array.isArray(_obj[prop]))\r\n          _params[prop] = _obj[prop].toString()\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    /* const vendedorSelecionado = this.vendedores.filter((vendedor) => vendedor?.id == _params[\"CD_VEND\"] )\r\n\r\n    _params['NM_VEND'] = '';\r\n\r\n    if(vendedorSelecionado.length == 1){\r\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\r\n    } */\r\n\r\n    return _params;\r\n  }\r\n\r\n  setFormFilter() {\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\r\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\r\n      NM_CLIE: [null],\r\n      NOTA_FISC: [null],\r\n      CD_PEDI: [null],\r\n      SG_PEDI: [null],\r\n      CD_ROMA: [null],\r\n      CD_VEND: [null],\r\n      NM_VEND: [null],\r\n      TP_OPER: [['DEMEMBRAMENTO', 'FACTURA']],\r\n      DS_CLIE: [null],\r\n      CD_FILI: [null],\r\n      ENTR_SG_STAT: [null],\r\n      TT_REGI_PAGI: [300],\r\n      ORDE_BY: ['dataPrev'],\r\n      ORDE_TYPE: ['DESC'],\r\n      PAGI: [1],\r\n      TIME: new Date().getDate(),\r\n    });\r\n\r\n    this.getMatriculaVendedorLogado();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.get('ORDE_BY').setValue(this.orderBy);\r\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getPedidos(params) {\r\n    this.$serviceSubscription?.unsubscribe();\r\n\r\n    this.loaderNavbar = true;\r\n    this.pedidosLoaded = false;\r\n\r\n    this.$serviceSubscription = this.service\r\n      .getLista(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.pedidosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            this.pedidos = [];\r\n            this.pedidosEmpty = true;\r\n            return;\r\n          }\r\n\r\n          this.pedidos = response.body['data'];\r\n          this.totalItems = response.body['total'];\r\n          this.pedidosEmpty = false;\r\n        },\r\n        (error) => {\r\n          this.pedidos = [];\r\n          this.pedidosEmpty = true;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDetalhesEntrega(params, template) {\r\n    this.loaderNavbar = true;\r\n    this.imageLoading = true;\r\n\r\n    this.service\r\n      .getDetalhesPedido(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            return;\r\n          }\r\n\r\n          this.entrega = response.body['data'];\r\n\r\n          if (!this.entrega['ENTR_COMP_FOTO']) {\r\n            setTimeout(() => {\r\n              this.imageLoading = false;\r\n            }, 200);\r\n          }\r\n\r\n          this.modalRef = this.modalService.show(template, {\r\n            animated: false,\r\n            ignoreBackdropClick: true,\r\n            class: 'modal-xxl',\r\n          });\r\n        },\r\n        (error) => {\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDetalhesRomaneio(params) {\r\n    this.detalhesRomaneioLoading = true;\r\n    this.service\r\n      .getDetalhesRomaneio(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.detalhesRomaneioLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status !== 200) {\r\n            this.detalhesRomaneioEmpty = true;\r\n            return;\r\n          }\r\n          this.detalhesRomaneioEmpty = false;\r\n          this.detalhesRomaneio = response.body['data'];\r\n        },\r\n        (error) => {\r\n          this.detalhesRomaneioEmpty = false;\r\n          const message = error?.error?.message;\r\n          message\r\n            ? this.pnotifyService.error(message)\r\n            : this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(1);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  viewDetails(item: any, template: TemplateRef<any>) {\r\n    this.pedido = item;\r\n\r\n    const params = {\r\n      CD_ROMA: item?.CD_ROMA,\r\n      CD_PEDI: item?.CD_PEDI,\r\n      CD_FILI: item?.CD_FILI,\r\n      ID_LOGI_FUSI_PEDI: item?.ID_LOGI_FUSI_PEDI,\r\n    };\r\n\r\n    this.getDetalhesEntrega(params, template);\r\n    this.getDetalhesRomaneio(params);\r\n  }\r\n\r\n  classStatusBorder(item): string {\r\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\r\n      return 'border-success';\r\n    }\r\n\r\n    return 'border-danger';\r\n  }\r\n\r\n  getSelectedStyle(item) {\r\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\r\n      return { 'font-weight': 600, color: 'blue' };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  onResetForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n  /* Paginação */\r\n\r\n  getSituacoes() {\r\n    this.service.getSituacoes().subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.situacoes = response.body['data'];\r\n        } else {\r\n          this.pnotifyService.notice('No se encontró ninguna situación.');\r\n        }\r\n      },\r\n      (error) => {\r\n        this.pnotifyService.error('Error al cargar situaciones.');\r\n      }\r\n    );\r\n  }\r\n\r\n  keepOriginalOrder = (a, b) => a.key;\r\n\r\n  getMatriculaVendedorLogado() {\r\n    /* const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor); */\r\n  }\r\n\r\n  onImageLoad() {\r\n    setTimeout(() => {\r\n      this.imageLoading = false;\r\n    }, 200);\r\n  }\r\n\r\n  getTipoOperacao(params?) {\r\n\r\n    this.desmembramentoService\r\n      .getTipoOperacao(params)\r\n      .subscribe(\r\n        (response) => {\r\n          if(response.status !== 200){\r\n            return\r\n          }\r\n\r\n          this.tipoOperacao = response.body['data'];\r\n        },\r\n        (error) => {\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  removerDataConsulta(item: any){\r\n\r\n    const params = {'idEvento': item?.ID_EVEN};\r\n    item.loading = true;\r\n\r\n    this.service\r\n      .pacthEvento(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          item.loading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: HttpResponse<any>) => {\r\n          if(response.status != 200){\r\n            this.pnotify.error();\r\n            return;\r\n          }\r\n          this.pnotify.success();\r\n        },\r\n        error: (error: any) => {\r\n          const message = error?.error?.message ?? '';\r\n          this.pnotify.error(message);\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\r\nimport { ComercialTidSoftwareService } from 'src/app/modules/comercial/tid-software/tid-software.service';\r\n\r\n// Services\r\n/* import { ComercialService } from '../comercial.service';\r\nimport { ComercialVendedoresService } from '../services/vendedores.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service'; */\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialControleEntregasService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros() {\r\n    /* const vendedores = this.vendedoresService.getVendedores(); */\r\n    /* const empresas = this.tidSoftwareService.getEmpresas('entregas'); */\r\n\r\n    /* return forkJoin([vendedores, empresas]).pipe(take(1)); */\r\n  }\r\n\r\n  getLista(params: any) {\r\n\r\n    return this.http\r\n      .get(`${this.API}/comercial/controle-entregas/lista`, { params: params, observe: \"response\" })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getVendedores(params?){\r\n    return this.http\r\n      .get(`${this.API}/logistica/controle-entregas/vendedores`, { params: params, observe: \"response\" })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesPedido(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/comercial/controle-entregas/detalhes-pedido`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesRomaneio(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/comercial/controle-entregas/detalhes-romaneio`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getSituacoes(){\r\n    return this.http.get(`${this.API}/comercial/controle-entregas/situacoes`, {\r\n      observe: \"response\"\r\n    }).pipe(take(1));\r\n  }\r\n\r\n  pacthEvento(params){\r\n    return this.http.patch(`${this.API}/logistica/controle-entregas/eventos`, params, {\r\n      observe: 'response'\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { ComercialVendedoresService } from '../services/vendedores.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialControleEntregasService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/controle-entregas`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros() {\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n    const empresas = this.tidSoftwareService.getEmpresas('entregas');\r\n\r\n    return forkJoin([vendedores, empresas]).pipe(take(1));\r\n  }\r\n\r\n  getLista(params: any) {\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: params, observe: \"response\" })\r\n      .pipe(take(1));\r\n  }\r\n\r\n\r\n  getDetalhesPedido(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-pedido`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhesRomaneio(params: any) {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-romaneio`, {\r\n        params: params,\r\n        observe: \"response\"\r\n      })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getSituacoes(){\r\n    return this.http.get(`${this.API}/situacoes`, {\r\n      observe: \"response\"\r\n    }).pipe(take(1));\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Controle de entregas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onResetForm()\\\">\\r\\n    Limpiar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataInicial\\\">Comienzo</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataFinal\\\">Final</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"cliente\\\">Cliente</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cliente\\\"\\r\\n            formControlName=\\\"DS_CLIE\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"operacao\\\">Operación</label>\\r\\n          <select\\r\\n            name=\\\"operacao\\\"\\r\\n            id=\\\"operacao\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            formControlName=\\\"TP_OPER\\\"\\r\\n          >\\r\\n            <option value=\\\"ENTREGA_CLIENTE\\\">Entrega Cliente</option>\\r\\n            <option value=\\\"TRANSFERENCIA\\\">Transferência</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"notaFiscal\\\">Factura</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"notaFiscal\\\"\\r\\n            formControlName=\\\"NOTA_FISC\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"pedido\\\">Orden de venta</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"pedido\\\"\\r\\n            formControlName=\\\"CD_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <!-- <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"sigla\\\">Sigla</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"sigla\\\"\\r\\n            formControlName=\\\"SG_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"romaneio\\\">Ruta</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"romaneio\\\"\\r\\n            formControlName=\\\"CD_ROMA\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"situacao\\\">Situación\\r\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\r\\n          </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"situacoes\\\"\\r\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"situacao\\\"\\r\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\r\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n          <ng-template #tooltipAutoScrollTemplate>\\r\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO COMPOSICIÓN: Esperando composición de carga para la región del cliente.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>VEHÍCULO EN ESPERA: Carga formada, pendiente de definición del vehículo.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO SALIDA: Vehículo definido, esperando carga y salida para entrega.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>A LA IZQUIERDA PARA ENTREGA: Se inició el viaje.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>RETIRO: Retiros de Hecho.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA RETARDADA: Vuelva a reprogramación.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVUELTA: Devolución por cancelación.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega completada.</b></p>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"vendedores\\\"\\r\\n            formControlName=\\\"NM_VEND\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"vendedores\\\"\\r\\n            bindLabel=\\\"NM_VEND\\\"\\r\\n            bindValue=\\\"NM_VEND\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3 mb-2\\\">\\r\\n          <label for=\\\"empresa\\\">Empresa</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [loading]=\\\"loadingFiliais\\\"\\r\\n            [items]=\\\"filiais\\\"\\r\\n            formControlName=\\\"CD_FILI\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"empresa\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"idFilial\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3 pl-0\\\">\\r\\n          <label for=\\\"tipoOperacao\\\">Tipo de operación</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tipoOperacao\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoOperacao\\\"\\r\\n            bindLabel=\\\"TP_OPER\\\"\\r\\n            bindValue=\\\"TP_OPER\\\"\\r\\n            id=\\\"tipoOperacao\\\"\\r\\n            formControlName=\\\"TP_OPER\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            placeholder=\\\"SELECCIONE...\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"registros\\\"\\r\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n            <option>300</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\r\\n      <ul\\r\\n        class=\\\"d-flex justify-content-between p-0\\\"\\r\\n      >\\r\\n        <li\\r\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\r\\n          style=\\\"list-style: none;\\\"\\r\\n        >\\r\\n          <div class=\\\"custom-control custom-checkbox\\\">\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              class=\\\"custom-control-input\\\"\\r\\n              [id]=\\\"'column'+index\\\"\\r\\n              [name]=\\\"'column'+index\\\"\\r\\n              [checked]=\\\"column.value.active\\\"\\r\\n              [(ngModel)]=\\\"column.value.active\\\"\\r\\n              >\\r\\n            <label\\r\\n              class=\\\"custom-control-label\\\"\\r\\n              [for]=\\\"'column'+index\\\"\\r\\n            >\\r\\n              {{ column.value.name }}\\r\\n            </label>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"11%\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Empresa\\\"\\r\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Ruta\\\"\\r\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Fecha Entr Estimada\\\"\\r\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Fecha de Entrega\\\"\\r\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              width=\\\"28%\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Cliente\\\"\\r\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"5%\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n            >Seq.</th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Orden de vienda\\\"\\r\\n                [active]=\\\"orderBy == 'pedido'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('pedido')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Factura\\\"\\r\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Fecha de Emisión\\\"\\r\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"20%\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n            >\\r\\n              Situación\\r\\n            </th>\\r\\n            <th width=\\\"3%\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of pedidos\\\">\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.CD_ROMA }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.ROMA_DT_PREV_SAID | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              ({{ item?.CD_CLIE_ORIG }}) {{ item?.NM_CLIE }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item?.SEQU_ENTR }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.CD_PEDI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.NOTA_FISC }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DS_STAT }}\\r\\n            </td>\\r\\n            <td>\\r\\n              <span\\r\\n                [tooltip]=\\\"!item.ENTR_DT_ENTR ? 'No entregado' : (\\r\\n                  !item.ENTR_DT_CONS ? 'No integrado' : ''\\r\\n                )\\\"\\r\\n                container=\\\"body\\\"\\r\\n                placement=\\\"left\\\"\\r\\n              >\\r\\n                <button\\r\\n                  class=\\\"btn-icon-sm\\\"\\r\\n                  *ngIf=\\\"!item.loading\\\"\\r\\n                  (click)=\\\"removerDataConsulta(item)\\\"\\r\\n                  [disabled]=\\\"!item.ENTR_DT_ENTR || !item.ENTR_DT_CONS\\\"\\r\\n                >\\r\\n                  <i\\r\\n                    class=\\\"fas fa-paper-plane\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      'text-seconday': !item.ENTR_DT_ENTR,\\r\\n                      'text-warning': !item.ENTR_DT_CONS && item.ENTR_DT_ENTR,\\r\\n                      'text-success': item.ENTR_DT_CONS && item.ENTR_DT_ENTR\\r\\n                    }\\\"\\r\\n                  ></i>\\r\\n                </button>\\r\\n                <div\\r\\n                  class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                  role=\\\"status\\\"\\r\\n                  *ngIf=\\\"item.loading\\\"\\r\\n                >\\r\\n                  <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\r\\n        Demostración {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"No se encontró información\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n<ng-template #modalDetalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Detalles</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <tabset>\\r\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"p-3\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label>Cliente</label>\\r\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Conductor</label>\\r\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NO INFORMADO</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Placa de matrícula del vehículo</label>\\r\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NO INFORMADO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\r\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\r\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\r\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\r\\n                  </div>\\r\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\r\\n                    {{ detalhe?.descricao }}\\r\\n                  </strong>\\r\\n                </div>\\r\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\r\\n                  <div class=\\\"ml-1\\\">\\r\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\r\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-8 p-0 form-group\\\">\\r\\n              <label>Fotografía</label>\\r\\n              <div *ngIf=\\\"imageLoading\\\">Cargando...</div>\\r\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\r\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\r\\n              </div>\\r\\n              <empty-result message=\\\"No se encontró ninguna imagen\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Ruta\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Ruta</label>\\r\\n              <div>{{ pedido?.CD_ROMA }}</div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Região da entrega</label>\\r\\n              <div>{{ pedido }}</div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <subtitles\\r\\n                [data]=\\\"subtitles\\\"\\r\\n                [show]=\\\"!noResult\\\">\\r\\n              </subtitles>\\r\\n            </div>\\r\\n          </div>\\r\\n          <custom-table [config]=\\\"tableConfig\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th>Cliente</th>\\r\\n                <th class=\\\"text-center\\\">Seq.</th>\\r\\n                <th class=\\\"text-center\\\">Factura</th>\\r\\n                <th class=\\\"text-center\\\">Orden de vienda</th>\\r\\n                <th class=\\\"text-center\\\">Código</th>\\r\\n                <th>Producto</th>\\r\\n                <th class=\\\"text-center\\\">Peso</th>\\r\\n                <th>Dirección</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\r\\n                <td\\r\\n                  class=\\\"hover\\\"\\r\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\r\\n                <td>{{ item.NM_PROD }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\r\\n                <td>{{ item.DS_ENDE }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </div>\\r\\n        <empty-result message=\\\"No se encontró información\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\r\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmVnYS9jb250cm9sZS1lbnRyZWdhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGFBQUE7RUFDQSxjQUFBO0FBRE4iLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lbnRyZWdhL2NvbnRyb2xlLWVudHJlZ2FzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIHtcclxuICBjb21lcmNpYWwtY29udHJvbGUtZW50cmVnYXMge1xyXG4gICAgI3Njcm9sbERldGFsaGVzIHtcclxuICAgICAgaGVpZ2h0OiAzNDBweDtcclxuICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\n@NgModule({\r\n  declarations: [ComercialControleEntregasListaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialControleEntregasRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    DirectivesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialControleEntregasModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Controle de entregas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onResetForm()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataInicial\\\">Data inicial</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"dataFinal\\\">Data final</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"cliente\\\">Cliente</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cliente\\\"\\r\\n            formControlName=\\\"DS_CLIE\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"notaFiscal\\\">Nota fiscal</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"notaFiscal\\\"\\r\\n            formControlName=\\\"NOTA_FISC\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"pedido\\\">Pedido</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"pedido\\\"\\r\\n            formControlName=\\\"CD_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"sigla\\\">Sigla</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"sigla\\\"\\r\\n            formControlName=\\\"SG_PEDI\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"romaneio\\\">Romaneio</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"romaneio\\\"\\r\\n            formControlName=\\\"CD_ROMA\\\"\\r\\n            (keydown.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"situacao\\\">Situação\\r\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\r\\n          </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"situacoes\\\"\\r\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"situacao\\\"\\r\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\r\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n          <ng-template #tooltipAutoScrollTemplate>\\r\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO COMPOSIÇÃO: Aguardando composição de carga para região do cliente.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO VEíCULO: Carga formada, aguardando definição do veículo.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO SAÍDA: Veículo definido, aguardando carregamento e saída para entrega.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>SAIU PARA ENTREGA: Viagem Iniciada.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>RETIRADA: Retira Realizada.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA ADIADA: Retorno para reprogramação.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVOLVIDA: Retorno para cancelamento.</b></p>\\r\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\r\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega realizada.</b></p>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\r\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"vendedores\\\"\\r\\n            formControlName=\\\"CD_VEND\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"vendedores\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col mb-2\\\">\\r\\n          <label for=\\\"empresa\\\">Empresa</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"filiais\\\"\\r\\n            formControlName=\\\"CD_FILI\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"empresa\\\"\\r\\n            bindLabel=\\\"NM_FILI\\\"\\r\\n            bindValue=\\\"CD_FILI\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2 mb-2\\\">\\r\\n          <label for=\\\"registros\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"registros\\\"\\r\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n            (change)=\\\"onFilter()\\\"\\r\\n            >\\r\\n            <option>25</option>\\r\\n            <option>50</option>\\r\\n            <option>100</option>\\r\\n            <option>200</option>\\r\\n            <option>300</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\r\\n      <ul\\r\\n        class=\\\"d-flex justify-content-between p-0\\\"\\r\\n      >\\r\\n        <li\\r\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\r\\n          style=\\\"list-style: none;\\\"\\r\\n        >\\r\\n          <div class=\\\"custom-control custom-checkbox\\\">\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              class=\\\"custom-control-input\\\"\\r\\n              [id]=\\\"'column'+index\\\"\\r\\n              [name]=\\\"'column'+index\\\"\\r\\n              [checked]=\\\"column.value.active\\\"\\r\\n              [(ngModel)]=\\\"column.value.active\\\"\\r\\n              >\\r\\n            <label\\r\\n              class=\\\"custom-control-label\\\"\\r\\n              [for]=\\\"'column'+index\\\"\\r\\n            >\\r\\n              {{ column.value.name }}\\r\\n            </label>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"11%\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Empresa\\\"\\r\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Romaneio\\\"\\r\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Data Prev Entrega\\\"\\r\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"10%\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Data de Entrega\\\"\\r\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              width=\\\"28%\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Cliente\\\"\\r\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"5%\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n            >Seq.</th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Pedido\\\"\\r\\n                [active]=\\\"orderBy == 'pedido'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('pedido')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Nota fiscal\\\"\\r\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              width=\\\"9%\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n            >\\r\\n              <thead-sorter\\r\\n                value=\\\"Data de Emissão\\\"\\r\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th\\r\\n              class=\\\"text-center text-truncate\\\"\\r\\n              width=\\\"23%\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n            >\\r\\n              Situação</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of pedidos\\\" (click)=\\\"viewDetails(item, modalDetalhes)\\\">\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\r\\n            >\\r\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.romaneio.active\\\"\\r\\n            >\\r\\n              {{ item.CD_ROMA }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\r\\n            >\\r\\n              {{ item.DT_SAID_PREV | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\r\\n              isEllipsed\\r\\n            >\\r\\n              ({{ item?.CD_CLIE }}) {{ item?.NM_CLIE }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.sequencia.active\\\"\\r\\n            >\\r\\n              {{ item?.ENTR_NR_SQNC }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.pedido.active\\\"\\r\\n            >\\r\\n              {{ item.CD_PEDI }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\r\\n            >\\r\\n              {{ item.NR_NOTA_FISC }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\r\\n            >\\r\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center text-truncate hover\\\"\\r\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\r\\n            >\\r\\n              {{ item.ENTR_DS_STAT }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n<ng-template #modalDetalhes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Detalhes</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <tabset>\\r\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"p-3\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label>Cliente</label>\\r\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Motorista</label>\\r\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NÃO INFORMADO</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Placa do veículo</label>\\r\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\r\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NÃO INFORMADO</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\r\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\r\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\r\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\r\\n                  </div>\\r\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\r\\n                    {{ detalhe?.descricao }}\\r\\n                  </strong>\\r\\n                </div>\\r\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\r\\n                  <div class=\\\"ml-1\\\">\\r\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\r\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-8 p-0 form-group\\\">\\r\\n              <label>FOTO DO CANHOTO</label>\\r\\n              <div *ngIf=\\\"imageLoading\\\">Carregando foto do canhoto...</div>\\r\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\r\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\r\\n              </div>\\r\\n              <empty-result message=\\\"Nehuma imagem encontrada\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n      <tab heading=\\\"Romaneio\\\" class=\\\"border-right border-left border-bottom\\\">\\r\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Romaneio</label>\\r\\n              <div>{{ pedido?.CD_ROMA }}</div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label>Região da entrega</label>\\r\\n              <div>{{ pedido }}</div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <subtitles\\r\\n                [data]=\\\"subtitles\\\"\\r\\n                [show]=\\\"!noResult\\\">\\r\\n              </subtitles>\\r\\n            </div>\\r\\n          </div>\\r\\n          <custom-table [config]=\\\"tableConfig\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th>Cliente</th>\\r\\n                <th class=\\\"text-center\\\">Seq.</th>\\r\\n                <th class=\\\"text-center\\\">Nota fiscal</th>\\r\\n                <th class=\\\"text-center\\\">Pedido</th>\\r\\n                <th class=\\\"text-center\\\">Código</th>\\r\\n                <th>Material</th>\\r\\n                <th class=\\\"text-center\\\">Peso</th>\\r\\n                <th>Endereço</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\r\\n                <td\\r\\n                  class=\\\"hover\\\"\\r\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\r\\n                <td>{{ item.NM_PROD }}</td>\\r\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\r\\n                <td>{{ item.DS_ENDE }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </div>\\r\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\r\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\r\\n          <span class=\\\"sr-only\\\">Loading...</span>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialControleEntregasListaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialControleEntregasRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Components\r\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ComercialControleEntregasListaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialControleEntregasRoutingModule {}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Directives\r\nimport { IsEllipsedDirective } from './is-ellipsed.directive';\r\n\r\n@NgModule({\r\n  declarations: [IsEllipsedDirective],\r\n  imports: [CommonModule],\r\n  exports: [IsEllipsedDirective]\r\n})\r\nexport class DirectivesModule {\r\n  static forRoot(): ModuleWithProviders<DirectivesModule> {\r\n    return {\r\n        ngModule: DirectivesModule\r\n    };\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}