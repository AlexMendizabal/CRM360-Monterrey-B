{"version":3,"sources":["webpack:///src/app/shared/directives/is-ellipsed.directive.ts","webpack:///src/app/modules/comercial/controle-entregas/controle-entregas.module.ts","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/controle-entregas/lista/lista.component.scss","webpack:///src/app/modules/comercial/controle-entregas/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/controle-entregas.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/controle-entregas/controle-entregas.service.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/logistica/entrega/controle-entregas/lista/lista.component.scss","webpack:///src/app/modules/logistica/entrega/controle-entregas/controle-entregas.module.ts","webpack:///src/app/modules/comercial/controle-entregas/lista/lista.component.html","webpack:///src/app/modules/logistica/entrega/controle-entregas/controle-entregas-routing.module.ts","webpack:///src/app/modules/comercial/controle-entregas/controle-entregas-routing.module.ts","webpack:///src/app/shared/directives/directives.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["IsEllipsedDirective","elementRef","setTimeout","element","nativeElement","offsetWidth","scrollWidth","title","innerHTML","selector","ComercialControleEntregasModule","declarations","imports","forRoot","providers","ComercialVendedoresService","http","API","get","pipe","params","codCliente","providedIn","ComercialControleEntregasListaComponent","localeService","router","location","activatedRoute","pnotifyService","formBuilder","atividadesService","controleEntregasService","dateService","titleService","modalService","routerService","perfilService","loaderNavbar","loaderFullScreen","loaderImage","breadCrumbTree","descricao","routerLink","tableConfig","isResponsive","subtitleBorder","isFixed","imageLoading","showAdvancedFilter","vendedores","pedidos","pedidosLoaded","pedidosEmpty","pedido","entrega","detalhes","detalhesRomaneio","detalhesRomaneioEmpty","detalhesRomaneioLoading","currentPage","maxSize","itemsPerPage","pedidosPagination","orderBy","orderType","subtitles","id","text","color","situacoes","filiais","columns","nomeEmpresa","name","active","romaneio","dataPrev","dataEntrega","nomeCliente","sequencia","notaFiscal","dataEmissao","nomeSituacao","keepOriginalOrder","a","b","key","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","setFormFilter","registrarAcesso","getFiliais","getFiltros","getSituacoes","setTitle","subscribe","response","responseCode","result","unshift","nome","onActivatedRoute","error","back","CD_FILI","NM_FILI","queryParams","_response","getBase64UrlParams","keys","length","form","patchValue","getPedidos","getParams","_params","_obj","value","prop","Date","convertToUrlDate","vendedorSelecionado","filter","vendedor","group","DT_INIC","getFirstDayMonth","required","DT_FINA","getLastDayMonth","NM_CLIE","NOTA_FISC","CD_PEDI","SG_PEDI","CD_ROMA","CD_VEND","NM_VEND","DS_CLIE","ENTR_SG_STAT","TT_REGI_PAGI","ORDE_BY","ORDE_TYPE","PAGI","TIME","getDate","getMatriculaVendedorLogado","column","setValue","onFilter","field","onFieldInvalid","status","touched","formControl","controls","validator","validationResult","$serviceSubscription","unsubscribe","getLista","next","body","totalItems","message","template","getDetalhesPedido","modalRef","show","animated","ignoreBackdropClick","getDetalhesRomaneio","getTime","navigate","relativeTo","setBase64UrlParams","item","ID_LOGI_FUSI_PEDI","ID","getDetalhesEntrega","reset","event","page","notice","currentUser","JSON","parse","localStorage","getItem","info","idVendedor","service","pnotify","filiaisService","desmembramentoService","loadingFiliais","tipoOperacao","getVendedores","setBreadCrumb","getTipoOperacao","submoduloId","snapshot","idSubModulo","TP_OPER","split","Array","isArray","toString","ID_EVEN","loading","pacthEvento","success","ComercialControleEntregasService","comercialService","vendedoresService","tidSoftwareService","observe","patch","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","empresas","getEmpresas","ComercialService","httpParams","param","append","routes","path","component","ComercialControleEntregasRoutingModule","forChild","exports","DirectivesModule","ngModule","ComercialTidSoftwareService","linhas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","data","post"],"mappings":"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","file":"controle-entregas-controle-entregas-module-es5.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[isEllipsed]'\n})\nexport class IsEllipsedDirective implements AfterViewInit {\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      const element = this.elementRef.nativeElement;\n      if (element.offsetWidth < element.scrollWidth) {\n        element.title = element.innerHTML;\n      }\n    }, 500);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\n@NgModule({\n  declarations: [ComercialControleEntregasListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialControleEntregasRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    DirectivesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialControleEntregasModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY29udHJvbGUtZW50cmVnYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xuICBjb21lcmNpYWwtY29udHJvbGUtZW50cmVnYXMge1xuICAgICNzY3JvbGxEZXRhbGhlcyB7XG4gICAgICBoZWlnaHQ6IDM0MHB4O1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\n\ninterface ITipoEmpresa {\n  id: number;\n  nome: string;\n  sigla: string;\n}\n\n@Component({\n  selector: 'comercial-controle-entregas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialControleEntregasListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  modalRef: BsModalRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = false;\n  loaderImage = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home',\n    },\n    {\n      descricao: 'Controle de entregas',\n    },\n  ];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    isResponsive: true,\n    subtitleBorder: true,\n    isFixed: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n  $serviceSubscription: Subscription;\n\n  imageLoading = false;\n\n  showAdvancedFilter = true;\n  form: FormGroup;\n  vendedores: any = [];\n\n  pedidos: any = [];\n  pedidosLoaded = false;\n  pedidosEmpty = true;\n\n  pedido: any = {};\n  entrega = [];\n\n  detalhes: any = [];\n  empresa: number;\n\n  detalhesRomaneio: any = [];\n  detalhesRomaneioEmpty: boolean = false;\n  detalhesRomaneioLoading: boolean = false;\n\n  currentPage = 1;\n  maxSize: number = 10;\n  totalItems: number;\n  itemsPerPage: number = 300;\n  pedidosPagination: any = [];\n\n  orderBy = 'dataPrev';\n  orderType = 'DESC';\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Entregue',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Não entregue',\n      color: 'red',\n    },\n  ];\n\n  situacoes: any = [];\n\n  filiais: Array<any> = [];\n\n  columns = {\n    nomeEmpresa: {\n      name: 'Empresa',\n      active: true,\n    },\n    romaneio: {\n      name: 'Romaneio',\n      active: true,\n    },\n    dataPrev: {\n      name: 'Data Prevista de Entrega',\n      active: true,\n    },\n    dataEntrega: {\n      name: 'Data de Entrega',\n      active: false,\n    },\n    nomeCliente: {\n      name: 'Cliente',\n      active: true,\n    },\n    sequencia: {\n      name: 'Sequência',\n      active: false,\n    },\n    pedido: {\n      name: 'Pedido',\n      active: true,\n    },\n    notaFiscal: {\n      name: 'Nota Fiscal',\n      active: true,\n    },\n    dataEmissao: {\n      name: 'Data de emissão',\n      active: false,\n    },\n    nomeSituacao: {\n      name: 'Situação',\n      active: true,\n    },\n  };\n\n  constructor(\n    private localeService: BsLocaleService,\n    private router: Router,\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private pnotifyService: PNotifyService,\n    private formBuilder: FormBuilder,\n    private atividadesService: AtividadesService,\n    private controleEntregasService: ComercialControleEntregasService,\n    private dateService: DateService,\n    private titleService: TitleService,\n    private modalService: BsModalService,\n    private routerService: RouterService,\n    private perfilService: AdminPerfisService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.setFormFilter();\n    this.registrarAcesso();\n    this.getFiliais();\n    this.getFiltros();\n    this.getSituacoes();\n    this.titleService.setTitle('Controle de entregas');\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFiltros() {\n    this.controleEntregasService\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0].responseCode === 200) {\n            this.vendedores = response[0].result;\n\n            this.vendedores.unshift({\n              id: 0,\n              nome: 'EXIBIR TODOS',\n            });\n          }\n\n          this.onActivatedRoute();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      );\n  }\n\n  async getFiliais() {\n    this.filiais = [\n      {\n        CD_FILI: 46,\n        NM_FILI: 'Corte & Dobra - Cajamar',\n      },\n      {\n        CD_FILI: 72,\n        NM_FILI: 'Corte & Dobra - Praia Grande',\n      },\n      {\n        CD_FILI: 3,\n        NM_FILI: 'Corte & Dobra - Rio das Pedras',\n      },\n      {\n        CD_FILI: 41,\n        NM_FILI: 'Distribuição Duque de Caxias',\n      },\n      {\n        CD_FILI: 6,\n        NM_FILI: 'Distribuição Osasco',\n      },\n      {\n        CD_FILI: 18,\n        NM_FILI: 'Distribuição Tietê',\n      },\n      {\n        CD_FILI: 79,\n        NM_FILI: 'Distribuição Taipas',\n      },\n      {\n        CD_FILI: 77,\n        NM_FILI: 'Distribuição Camanducaia',\n      },\n      {\n        CD_FILI: 83,\n        NM_FILI: 'Distribuição Guarulhos',\n      },\n      {\n        CD_FILI: 9661,\n        NM_FILI: 'Dba Aços Especiais',\n      },\n      {\n        CD_FILI: 9639,\n        NM_FILI: 'Dba Jacareí',\n      },\n      {\n        CD_FILI: 9636,\n        NM_FILI: 'Dba Praia Grande',\n      },\n      {\n        CD_FILI: 9645,\n        NM_FILI: 'Dba Piracicaba',\n      },\n    ];\n  }\n\n  onActivatedRoute() {\n    this.activatedRoute.queryParams.subscribe((response) => {\n      let _response = this.routerService.getBase64UrlParams(response);\n\n      if (Object.keys(_response).length > 0) {\n        this.form.patchValue(_response);\n        this.getPedidos(this.getParams());\n      } else {\n        this.loaderNavbar = false;\n      }\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    const vendedorSelecionado = this.vendedores.filter(\n      (vendedor) => vendedor?.id == _params['CD_VEND']\n    );\n\n    _params['NM_VEND'] = '';\n\n    if (vendedorSelecionado.length == 1) {\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\n    }\n\n    return _params;\n  }\n\n  setFormFilter() {\n    this.form = this.formBuilder.group({\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\n      NM_CLIE: [null],\n      NOTA_FISC: [null],\n      CD_PEDI: [null],\n      SG_PEDI: [null],\n      CD_ROMA: [null],\n      CD_VEND: [null],\n      NM_VEND: [null],\n      DS_CLIE: [null],\n      CD_FILI: [null],\n      ENTR_SG_STAT: [null],\n      TT_REGI_PAGI: [300],\n      ORDE_BY: ['dataPrev'],\n      ORDE_TYPE: ['DESC'],\n      PAGI: [1],\n      TIME: new Date().getDate(),\n    });\n\n    this.getMatriculaVendedorLogado();\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.get('ORDE_BY').setValue(this.orderBy);\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\n\n    this.onFilter();\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getPedidos(params) {\n    this.$serviceSubscription?.unsubscribe();\n\n    this.loaderNavbar = true;\n    this.pedidosLoaded = false;\n\n    this.controleEntregasService\n      .getLista(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.pedidosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.status !== 200) {\n            this.pedidos = [];\n            this.pedidosEmpty = true;\n            return;\n          }\n\n          this.pedidos = response.body['data'];\n          this.totalItems = response.body['total'];\n          this.pedidosEmpty = false;\n        },\n        error: (error) => {\n          this.pedidos = [];\n          this.pedidosEmpty = true;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      });\n  }\n\n  getDetalhesEntrega(params, template) {\n    this.loaderNavbar = true;\n    this.imageLoading = true;\n\n    this.controleEntregasService\n      .getDetalhesPedido(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status !== 200) {\n            return;\n          }\n\n          this.entrega = response.body['data'];\n\n          if (!this.entrega['ENTR_COMP_FOTO']) {\n            setTimeout(() => {\n              this.imageLoading = false;\n            }, 200);\n          }\n\n          this.modalRef = this.modalService.show(template, {\n            animated: false,\n            ignoreBackdropClick: true,\n            class: 'modal-xxl',\n          });\n        },\n        (error) => {\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  getDetalhesRomaneio(params) {\n    this.detalhesRomaneioLoading = true;\n    this.controleEntregasService\n      .getDetalhesRomaneio(params)\n      .pipe(\n        finalize(() => {\n          this.detalhesRomaneioLoading = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status !== 200) {\n            this.detalhesRomaneioEmpty = true;\n            return;\n          }\n          this.detalhesRomaneioEmpty = false;\n          this.detalhesRomaneio = response.body['data'];\n        },\n        (error) => {\n          this.detalhesRomaneioEmpty = false;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(1);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  viewDetails(item: any, template: TemplateRef<any>) {\n    this.pedido = item;\n\n    const params = {\n      CD_ROMA: item?.CD_ROMA,\n      CD_PEDI: item?.CD_PEDI,\n      CD_FILI: item?.CD_FILI,\n      ID_LOGI_FUSI_PEDI: item?.ID,\n    };\n\n    this.getDetalhesEntrega(params, template);\n    this.getDetalhesRomaneio(params);\n  }\n\n  classStatusBorder(item): string {\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\n      return 'border-success';\n    }\n\n    return 'border-danger';\n  }\n\n  getSelectedStyle(item) {\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\n      return { 'font-weight': 600, color: 'blue' };\n    }\n\n    return {};\n  }\n\n  onResetForm() {\n    this.form.reset();\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(event.page);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n  /* Paginação */\n\n  getSituacoes() {\n    this.controleEntregasService.getSituacoes().subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.situacoes = response.body['data'];\n        } else {\n          this.pnotifyService.notice('Nenhuma situação encontrada.');\n        }\n      },\n      (error) => {\n        this.pnotifyService.error('Erro ao carregar situações.');\n      }\n    );\n  }\n\n  keepOriginalOrder = (a, b) => a.key;\n\n  getMatriculaVendedorLogado() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor);\n  }\n\n  onImageLoad() {\n    setTimeout(() => {\n      this.imageLoading = false;\n    }, 200);\n  }\n}\n","import { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialControleEntregasService } from '../controle-entregas.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { AdminPerfisService } from 'src/app/modules/admin/perfis/services/perfis.service';\nimport { LogisticaEntregaFusionService } from '../../services/fusion.service';\nimport { LogisticaEntregaDesmembramentoService } from '../../desmembramento/services/desmembramento.service';\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\nimport { HttpResponse } from '@angular/common/http';\n\ninterface ITipoEmpresa {\n  id: number;\n  nome: string;\n  sigla: string;\n}\n\n@Component({\n  selector: 'comercial-controle-entregas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialControleEntregasListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  modalRef: BsModalRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = false;\n  loadingFiliais = false;\n  loaderImage = true;\n\n  breadCrumbTree: Array<Breadcrumb>;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    isResponsive: true,\n    subtitleBorder: true,\n    isFixed: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n  $serviceSubscription: Subscription;\n\n  imageLoading = false;\n\n  showAdvancedFilter = true;\n  form: FormGroup;\n  vendedores: any = [];\n\n  pedidos: any = [];\n  pedidosLoaded = false;\n  pedidosEmpty = true;\n\n  pedido: any = {};\n  entrega = [];\n\n  detalhes: any = [];\n  empresa: number;\n\n  detalhesRomaneio: any = [];\n  detalhesRomaneioEmpty: boolean = false;\n  detalhesRomaneioLoading: boolean = false;\n\n  currentPage = 1;\n  maxSize: number = 10;\n  totalItems: number;\n  itemsPerPage: number = 300;\n  pedidosPagination: any = [];\n\n  orderBy = 'dataPrev';\n  orderType = 'DESC';\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Entregado',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'No entregado',\n      color: 'red',\n    },\n  ];\n\n  situacoes: any = [];\n\n  filiais: Array<any> = [];\n\n  columns = {\n    nomeEmpresa: {\n      name: 'Empresa',\n      active: true,\n    },\n    romaneio: {\n      name: 'Lista',\n      active: true,\n    },\n    dataPrev: {\n      name: 'Fecha estimada de entrega',\n      active: true,\n    },\n    dataEntrega: {\n      name: 'Fecha de entrega',\n      active: false,\n    },\n    nomeCliente: {\n      name: 'Cliente',\n      active: true,\n    },\n    sequencia: {\n      name: 'Secuencia',\n      active: false,\n    },\n    pedido: {\n      name: 'Pedido',\n      active: true,\n    },\n    notaFiscal: {\n      name: 'Nota Fiscal',\n      active: true,\n    },\n    dataEmissao: {\n      name: 'Fecha de emisión',\n      active: false,\n    },\n    nomeSituacao: {\n      name: 'Situación',\n      active: true,\n    },\n  };\n\n  tipoOperacao = [];\n\n  constructor(\n    private localeService: BsLocaleService,\n    private router: Router,\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private pnotifyService: PNotifyService,\n    private formBuilder: FormBuilder,\n    private atividadesService: AtividadesService,\n    private service: ComercialControleEntregasService,\n    private dateService: DateService,\n    private titleService: TitleService,\n    private modalService: BsModalService,\n    private routerService: RouterService,\n    private pnotify: PNotifyService,\n    private filiaisService: LogisticaFiliaisService,\n    private desmembramentoService: LogisticaEntregaDesmembramentoService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n    this.setFormFilter();\n    this.registrarAcesso();\n    this.getFiliais();\n    //this.getFiltros();\n    this.getSituacoes();\n    this.titleService.setTitle('Control de entrega');\n    this.getVendedores();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getTipoOperacao();\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    const submoduloId = this.activatedRoute.snapshot.params?.idSubModulo;\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica',\n      },\n      {\n        descricao: 'GESTIÓN DE ENTREGAS',\n        routerLink: `/logistica/entrega/${submoduloId}`,\n      },\n      {\n        descricao: 'Control de entrega',\n      },\n    ];\n  }\n\n  getFiltros() {\n    /* this.service\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response[0].responseCode === 200) {\n            this.vendedores = response[0].result;\n\n            this.vendedores.unshift({\n              id: 0,\n              nome: 'EXIBIR TODOS',\n            });\n          }\n\n          this.onActivatedRoute();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      ); */\n  }\n\n  getVendedores() {\n    this.service.getVendedores().subscribe((response) => {\n      if (response.status !== 200) {\n        return;\n      }\n\n      this.vendedores = response.body['data'];\n    });\n  }\n\n  getFiliais() {\n      this.loadingFiliais = true;\n      this.filiaisService.getFiliais({ status: '1' })\n        .pipe(\n          finalize(() => {\n            this.loadingFiliais = false;\n          })\n        )\n        .subscribe({\n          next: response => {\n            this.filiais = response.body['data'];\n          },\n          error: () => {\n            this.pnotify.error();\n          }\n        })\n  }\n\n  onActivatedRoute() {\n    this.activatedRoute.queryParams.subscribe((response) => {\n      let _response = this.routerService.getBase64UrlParams(response);\n\n      if (Object.keys(_response).length == 0) {\n        this.loaderNavbar = false;\n        return;\n      }\n\n      _response['TP_OPER'] = _response?.TP_OPER\n        ? _response?.TP_OPER?.split(',')\n        : [];\n\n      this.form.patchValue(_response);\n      this.getPedidos(this.getParams());\n\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else if(Array.isArray(_obj[prop]))\n          _params[prop] = _obj[prop].toString()\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    /* const vendedorSelecionado = this.vendedores.filter((vendedor) => vendedor?.id == _params[\"CD_VEND\"] )\n\n    _params['NM_VEND'] = '';\n\n    if(vendedorSelecionado.length == 1){\n      _params['NM_VEND'] = vendedorSelecionado[0]['nome'];\n    } */\n\n    return _params;\n  }\n\n  setFormFilter() {\n    this.form = this.formBuilder.group({\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\n      DT_FINA: [this.dateService.getLastDayMonth(), [Validators.required]],\n      NM_CLIE: [null],\n      NOTA_FISC: [null],\n      CD_PEDI: [null],\n      SG_PEDI: [null],\n      CD_ROMA: [null],\n      CD_VEND: [null],\n      NM_VEND: [null],\n      TP_OPER: [['DEMEMBRAMENTO', 'FACTURA']],\n      DS_CLIE: [null],\n      CD_FILI: [null],\n      ENTR_SG_STAT: [null],\n      TT_REGI_PAGI: [300],\n      ORDE_BY: ['dataPrev'],\n      ORDE_TYPE: ['DESC'],\n      PAGI: [1],\n      TIME: new Date().getDate(),\n    });\n\n    this.getMatriculaVendedorLogado();\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.get('ORDE_BY').setValue(this.orderBy);\n    this.form.get('ORDE_TYPE').setValue(this.orderType);\n\n    this.onFilter();\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getPedidos(params) {\n    this.$serviceSubscription?.unsubscribe();\n\n    this.loaderNavbar = true;\n    this.pedidosLoaded = false;\n\n    this.$serviceSubscription = this.service\n      .getLista(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.pedidosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status !== 200) {\n            this.pedidos = [];\n            this.pedidosEmpty = true;\n            return;\n          }\n\n          this.pedidos = response.body['data'];\n          this.totalItems = response.body['total'];\n          this.pedidosEmpty = false;\n        },\n        (error) => {\n          this.pedidos = [];\n          this.pedidosEmpty = true;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  getDetalhesEntrega(params, template) {\n    this.loaderNavbar = true;\n    this.imageLoading = true;\n\n    this.service\n      .getDetalhesPedido(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status !== 200) {\n            return;\n          }\n\n          this.entrega = response.body['data'];\n\n          if (!this.entrega['ENTR_COMP_FOTO']) {\n            setTimeout(() => {\n              this.imageLoading = false;\n            }, 200);\n          }\n\n          this.modalRef = this.modalService.show(template, {\n            animated: false,\n            ignoreBackdropClick: true,\n            class: 'modal-xxl',\n          });\n        },\n        (error) => {\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  getDetalhesRomaneio(params) {\n    this.detalhesRomaneioLoading = true;\n    this.service\n      .getDetalhesRomaneio(params)\n      .pipe(\n        finalize(() => {\n          this.detalhesRomaneioLoading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status !== 200) {\n            this.detalhesRomaneioEmpty = true;\n            return;\n          }\n          this.detalhesRomaneioEmpty = false;\n          this.detalhesRomaneio = response.body['data'];\n        },\n        (error) => {\n          this.detalhesRomaneioEmpty = false;\n          const message = error?.error?.message;\n          message\n            ? this.pnotifyService.error(message)\n            : this.pnotifyService.error();\n        }\n      );\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(1);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  viewDetails(item: any, template: TemplateRef<any>) {\n    this.pedido = item;\n\n    const params = {\n      CD_ROMA: item?.CD_ROMA,\n      CD_PEDI: item?.CD_PEDI,\n      CD_FILI: item?.CD_FILI,\n      ID_LOGI_FUSI_PEDI: item?.ID_LOGI_FUSI_PEDI,\n    };\n\n    this.getDetalhesEntrega(params, template);\n    this.getDetalhesRomaneio(params);\n  }\n\n  classStatusBorder(item): string {\n    if (item?.ENTR_SG_STAT == 'ENTREGA_REALIZADA') {\n      return 'border-success';\n    }\n\n    return 'border-danger';\n  }\n\n  getSelectedStyle(item) {\n    if (this.pedido?.CD_PEDI == item?.CD_PEDI) {\n      return { 'font-weight': 600, color: 'blue' };\n    }\n\n    return {};\n  }\n\n  onResetForm() {\n    this.form.reset();\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.form.get('PAGI').setValue(event.page);\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n  /* Paginação */\n\n  getSituacoes() {\n    this.service.getSituacoes().subscribe(\n      (response) => {\n        if (response.status === 200) {\n          this.situacoes = response.body['data'];\n        } else {\n          this.pnotifyService.notice('No se encontró ninguna situación.');\n        }\n      },\n      (error) => {\n        this.pnotifyService.error('Error al cargar situaciones.');\n      }\n    );\n  }\n\n  keepOriginalOrder = (a, b) => a.key;\n\n  getMatriculaVendedorLogado() {\n    /* const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.form.get('CD_VEND').setValue(currentUser?.info?.idVendedor); */\n  }\n\n  onImageLoad() {\n    setTimeout(() => {\n      this.imageLoading = false;\n    }, 200);\n  }\n\n  getTipoOperacao(params?) {\n\n    this.desmembramentoService\n      .getTipoOperacao(params)\n      .subscribe(\n        (response) => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.tipoOperacao = response.body['data'];\n        },\n        (error) => {\n\n        }\n      )\n  }\n\n  removerDataConsulta(item: any){\n\n    const params = {'idEvento': item?.ID_EVEN};\n    item.loading = true;\n\n    this.service\n      .pacthEvento(params)\n      .pipe(\n        finalize(() => {\n          item.loading = false;\n        })\n      )\n      .subscribe({\n        next: (response: HttpResponse<any>) => {\n          if(response.status != 200){\n            this.pnotify.error();\n            return;\n          }\n          this.pnotify.success();\n        },\n        error: (error: any) => {\n          const message = error?.error?.message ?? '';\n          this.pnotify.error(message);\n        }\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ComercialVendedoresService } from 'src/app/modules/comercial/services/vendedores.service';\nimport { ComercialTidSoftwareService } from 'src/app/modules/comercial/tid-software/tid-software.service';\n\n// Services\n/* import { ComercialService } from '../comercial.service';\nimport { ComercialVendedoresService } from '../services/vendedores.service';\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service'; */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialControleEntregasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) { }\n\n  getFiltros() {\n    /* const vendedores = this.vendedoresService.getVendedores(); */\n    /* const empresas = this.tidSoftwareService.getEmpresas('entregas'); */\n\n    /* return forkJoin([vendedores, empresas]).pipe(take(1)); */\n  }\n\n  getLista(params: any) {\n\n    return this.http\n      .get(`${this.API}/comercial/controle-entregas/lista`, { params: params, observe: \"response\" })\n      .pipe(take(1));\n  }\n\n  getVendedores(params?){\n    return this.http\n      .get(`${this.API}/logistica/controle-entregas/vendedores`, { params: params, observe: \"response\" })\n      .pipe(take(1));\n  }\n\n  getDetalhesPedido(params: any) {\n    return this.http\n      .get(`${this.API}/comercial/controle-entregas/detalhes-pedido`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getDetalhesRomaneio(params: any) {\n    return this.http\n      .get(`${this.API}/comercial/controle-entregas/detalhes-romaneio`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getSituacoes(){\n    return this.http.get(`${this.API}/comercial/controle-entregas/situacoes`, {\n      observe: \"response\"\n    }).pipe(take(1));\n  }\n\n  pacthEvento(params){\n    return this.http.patch(`${this.API}/logistica/controle-entregas/eventos`, params, {\n      observe: 'response'\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\nimport { ComercialVendedoresService } from '../services/vendedores.service';\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialControleEntregasService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/controle-entregas`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) { }\n\n  getFiltros() {\n    const vendedores = this.vendedoresService.getVendedores();\n    const empresas = this.tidSoftwareService.getEmpresas('entregas');\n\n    return forkJoin([vendedores, empresas]).pipe(take(1));\n  }\n\n  getLista(params: any) {\n\n    return this.http\n      .get(`${this.API}/lista`, { params: params, observe: \"response\" })\n      .pipe(take(1));\n  }\n\n\n  getDetalhesPedido(params: any) {\n    return this.http\n      .get(`${this.API}/detalhes-pedido`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getDetalhesRomaneio(params: any) {\n    return this.http\n      .get(`${this.API}/detalhes-romaneio`, {\n        params: params,\n        observe: \"response\"\n      })\n      .pipe(take(1));\n  }\n\n  getSituacoes(){\n    return this.http.get(`${this.API}/situacoes`, {\n      observe: \"response\"\n    }).pipe(take(1));\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Controle de entregas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpiar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter #scrollToFilter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataInicial\\\">Comienzo</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_INIC\\\"\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataFinal\\\">Final</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_FINA\\\"\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"cliente\\\">Cliente</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"cliente\\\"\\n            formControlName=\\\"DS_CLIE\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <!-- <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"operacao\\\">Operación</label>\\n          <select\\n            name=\\\"operacao\\\"\\n            id=\\\"operacao\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"TP_OPER\\\"\\n          >\\n            <option value=\\\"ENTREGA_CLIENTE\\\">Entrega Cliente</option>\\n            <option value=\\\"TRANSFERENCIA\\\">Transferência</option>\\n          </select>\\n        </div> -->\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"notaFiscal\\\">Factura</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"notaFiscal\\\"\\n            formControlName=\\\"NOTA_FISC\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"pedido\\\">Orden de venta</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"pedido\\\"\\n            formControlName=\\\"CD_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <!-- <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"sigla\\\">Sigla</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"sigla\\\"\\n            formControlName=\\\"SG_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div> -->\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"romaneio\\\">Ruta</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"romaneio\\\"\\n            formControlName=\\\"CD_ROMA\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"situacao\\\">Situación\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\n          </label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"situacoes\\\"\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"situacao\\\"\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\n            >\\n          </ng-select>\\n          <ng-template #tooltipAutoScrollTemplate>\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO COMPOSICIÓN: Esperando composición de carga para la región del cliente.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>VEHÍCULO EN ESPERA: Carga formada, pendiente de definición del vehículo.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ESPERANDO SALIDA: Vehículo definido, esperando carga y salida para entrega.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>A LA IZQUIERDA PARA ENTREGA: Se inició el viaje.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>RETIRO: Retiros de Hecho.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA RETARDADA: Vuelva a reprogramación.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVUELTA: Devolución por cancelación.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega completada.</b></p>\\n          </ng-template>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"vendedores\\\"\\n            formControlName=\\\"NM_VEND\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"vendedores\\\"\\n            bindLabel=\\\"NM_VEND\\\"\\n            bindValue=\\\"NM_VEND\\\"\\n            >\\n          </ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3 mb-2\\\">\\n          <label for=\\\"empresa\\\">Empresa</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [loading]=\\\"loadingFiliais\\\"\\n            [items]=\\\"filiais\\\"\\n            formControlName=\\\"CD_FILI\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"empresa\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"idFilial\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-3 pl-0\\\">\\n          <label for=\\\"tipoOperacao\\\">Tipo de operación</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"tipoOperacao\\\"\\n            [multiple]=\\\"true\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"tipoOperacao\\\"\\n            bindLabel=\\\"TP_OPER\\\"\\n            bindValue=\\\"TP_OPER\\\"\\n            id=\\\"tipoOperacao\\\"\\n            formControlName=\\\"TP_OPER\\\"\\n            (change)=\\\"onFilter()\\\"\\n            placeholder=\\\"SELECCIONE...\\\"\\n          >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n            <option>200</option>\\n            <option>300</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\n      <ul\\n        class=\\\"d-flex justify-content-between p-0\\\"\\n      >\\n        <li\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\n          style=\\\"list-style: none;\\\"\\n        >\\n          <div class=\\\"custom-control custom-checkbox\\\">\\n            <input\\n              type=\\\"checkbox\\\"\\n              class=\\\"custom-control-input\\\"\\n              [id]=\\\"'column'+index\\\"\\n              [name]=\\\"'column'+index\\\"\\n              [checked]=\\\"column.value.active\\\"\\n              [(ngModel)]=\\\"column.value.active\\\"\\n              >\\n            <label\\n              class=\\\"custom-control-label\\\"\\n              [for]=\\\"'column'+index\\\"\\n            >\\n              {{ column.value.name }}\\n            </label>\\n          </div>\\n        </li>\\n      </ul>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"11%\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Empresa\\\"\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Ruta\\\"\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Fecha Entr Estimada\\\"\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Fecha de Entrega\\\"\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-truncate hover\\\"\\n              width=\\\"28%\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Cliente\\\"\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"5%\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n            >Seq.</th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Orden de vienda\\\"\\n                [active]=\\\"orderBy == 'pedido'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('pedido')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Factura\\\"\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Fecha de Emisión\\\"\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"20%\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n            >\\n              Situación\\n            </th>\\n            <th width=\\\"3%\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of pedidos\\\">\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.CD_ROMA }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.ROMA_DT_PREV_SAID | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              ({{ item?.CD_CLIE_ORIG }}) {{ item?.NM_CLIE }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item?.SEQU_ENTR }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.CD_PEDI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.NOTA_FISC }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n              (click)=\\\"viewDetails(item, modalDetalhes)\\\"\\n            >\\n              {{ item.ENTR_DS_STAT }}\\n            </td>\\n            <td>\\n              <span\\n                [tooltip]=\\\"!item.ENTR_DT_ENTR ? 'No entregado' : (\\n                  !item.ENTR_DT_CONS ? 'No integrado' : ''\\n                )\\\"\\n                container=\\\"body\\\"\\n                placement=\\\"left\\\"\\n              >\\n                <button\\n                  class=\\\"btn-icon-sm\\\"\\n                  *ngIf=\\\"!item.loading\\\"\\n                  (click)=\\\"removerDataConsulta(item)\\\"\\n                  [disabled]=\\\"!item.ENTR_DT_ENTR || !item.ENTR_DT_CONS\\\"\\n                >\\n                  <i\\n                    class=\\\"fas fa-paper-plane\\\"\\n                    [ngClass]=\\\"{\\n                      'text-seconday': !item.ENTR_DT_ENTR,\\n                      'text-warning': !item.ENTR_DT_CONS && item.ENTR_DT_ENTR,\\n                      'text-success': item.ENTR_DT_CONS && item.ENTR_DT_ENTR\\n                    }\\\"\\n                  ></i>\\n                </button>\\n                <div\\n                  class=\\\"spinner-border spinner-border-sm\\\"\\n                  role=\\\"status\\\"\\n                  *ngIf=\\\"item.loading\\\"\\n                >\\n                  <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\n        Demostración {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n        [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"No se encontró información\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\n  </div>\\n</app-body>\\n<ng-template #modalDetalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Detalles</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <tabset>\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"p-3\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label>Cliente</label>\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Conductor</label>\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NO INFORMADO</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Placa de matrícula del vehículo</label>\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NO INFORMADO</div>\\n            </div>\\n          </div>\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\n            <div class=\\\"col-4\\\">\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\n                  </div>\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\n                    {{ detalhe?.descricao }}\\n                  </strong>\\n                </div>\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\n                  <div class=\\\"ml-1\\\">\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-8 p-0 form-group\\\">\\n              <label>Fotografía</label>\\n              <div *ngIf=\\\"imageLoading\\\">Cargando...</div>\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\n              </div>\\n              <empty-result message=\\\"No se encontró ninguna imagen\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Ruta\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Ruta</label>\\n              <div>{{ pedido?.CD_ROMA }}</div>\\n            </div>\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\n              <label>Região da entrega</label>\\n              <div>{{ pedido }}</div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <subtitles\\n                [data]=\\\"subtitles\\\"\\n                [show]=\\\"!noResult\\\">\\n              </subtitles>\\n            </div>\\n          </div>\\n          <custom-table [config]=\\\"tableConfig\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th>Cliente</th>\\n                <th class=\\\"text-center\\\">Seq.</th>\\n                <th class=\\\"text-center\\\">Factura</th>\\n                <th class=\\\"text-center\\\">Orden de vienda</th>\\n                <th class=\\\"text-center\\\">Código</th>\\n                <th>Producto</th>\\n                <th class=\\\"text-center\\\">Peso</th>\\n                <th>Dirección</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\n                <td\\n                  class=\\\"hover\\\"\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\n                </td>\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\n                <td>{{ item.NM_PROD }}</td>\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\n                <td>{{ item.DS_ENDE }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </div>\\n        <empty-result message=\\\"No se encontró información\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"::ng-deep comercial-controle-entregas #scrollDetalhes {\\n  height: 340px;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZW50cmVnYS9jb250cm9sZS1lbnRyZWdhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGFBQUE7RUFDQSxjQUFBO0FBRE4iLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lbnRyZWdhL2NvbnRyb2xlLWVudHJlZ2FzL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIHtcbiAgY29tZXJjaWFsLWNvbnRyb2xlLWVudHJlZ2FzIHtcbiAgICAjc2Nyb2xsRGV0YWxoZXMge1xuICAgICAgaGVpZ2h0OiAzNDBweDtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cbiAgfVxufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialControleEntregasRoutingModule } from './controle-entregas-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { DirectivesModule } from 'src/app/shared/directives/directives.module';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\n@NgModule({\n  declarations: [ComercialControleEntregasListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialControleEntregasRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    DirectivesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialControleEntregasModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Controle de entregas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <advanced-filter #scrollToFilter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataInicial\\\">Data inicial</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_INIC\\\"\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"dataFinal\\\">Data final</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"DT_FINA\\\"\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\">\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"cliente\\\">Cliente</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"cliente\\\"\\n            formControlName=\\\"DS_CLIE\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"notaFiscal\\\">Nota fiscal</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"notaFiscal\\\"\\n            formControlName=\\\"NOTA_FISC\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"pedido\\\">Pedido</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"pedido\\\"\\n            formControlName=\\\"CD_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"sigla\\\">Sigla</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"sigla\\\"\\n            formControlName=\\\"SG_PEDI\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"romaneio\\\">Romaneio</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"romaneio\\\"\\n            formControlName=\\\"CD_ROMA\\\"\\n            (keydown.enter)=\\\"onFilter()\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"situacao\\\">Situação\\n            <i class=\\\"far fa-question-circle ml-1\\\" [tooltip]=\\\"tooltipAutoScrollTemplate\\\"></i>\\n          </label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"situacoes\\\"\\n            formControlName=\\\"ENTR_SG_STAT\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"situacao\\\"\\n            bindLabel=\\\"ENTR_DS_STAT\\\"\\n            bindValue=\\\"ENTR_SG_STAT\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n          </ng-select>\\n          <ng-template #tooltipAutoScrollTemplate>\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO COMPOSIÇÃO: Aguardando composição de carga para região do cliente.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO VEíCULO: Carga formada, aguardando definição do veículo.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>AGUARDANDO SAÍDA: Veículo definido, aguardando carregamento e saída para entrega.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>SAIU PARA ENTREGA: Viagem Iniciada.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>RETIRADA: Retira Realizada.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA ADIADA: Retorno para reprogramação.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA DEVOLVIDA: Retorno para cancelamento.</b></p>\\n            <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n            <p class=\\\"mb-0\\\"><b>ENTREGA REALIZADA: Entrega realizada.</b></p>\\n          </ng-template>\\n        </div>\\n        <div class=\\\"form-group col-lg-3 mb-2\\\">\\n          <label for=\\\"vendedores\\\">Vendedor</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"vendedores\\\"\\n            formControlName=\\\"CD_VEND\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"vendedores\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"id\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col mb-2\\\">\\n          <label for=\\\"empresa\\\">Empresa</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"filiais\\\"\\n            formControlName=\\\"CD_FILI\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"empresa\\\"\\n            bindLabel=\\\"NM_FILI\\\"\\n            bindValue=\\\"CD_FILI\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n          </ng-select>\\n        </div>\\n        <div class=\\\"form-group col-lg-2 mb-2\\\">\\n          <label for=\\\"registros\\\">Registros</label>\\n          <select\\n            class=\\\"form-control\\\"\\n            id=\\\"registros\\\"\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\n            (change)=\\\"onFilter()\\\"\\n            >\\n            <option>25</option>\\n            <option>50</option>\\n            <option>100</option>\\n            <option>200</option>\\n            <option>300</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\" *ngIf=\\\"!pedidosEmpty\\\">\\n      <ul\\n        class=\\\"d-flex justify-content-between p-0\\\"\\n      >\\n        <li\\n          *ngFor=\\\"let column of columns | keyvalue : keepOriginalOrder; let index = index\\\"\\n          style=\\\"list-style: none;\\\"\\n        >\\n          <div class=\\\"custom-control custom-checkbox\\\">\\n            <input\\n              type=\\\"checkbox\\\"\\n              class=\\\"custom-control-input\\\"\\n              [id]=\\\"'column'+index\\\"\\n              [name]=\\\"'column'+index\\\"\\n              [checked]=\\\"column.value.active\\\"\\n              [(ngModel)]=\\\"column.value.active\\\"\\n              >\\n            <label\\n              class=\\\"custom-control-label\\\"\\n              [for]=\\\"'column'+index\\\"\\n            >\\n              {{ column.value.name }}\\n            </label>\\n          </div>\\n        </li>\\n      </ul>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"11%\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Empresa\\\"\\n                [active]=\\\"orderBy == 'nomeEmpresa'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeEmpresa')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Romaneio\\\"\\n                [active]=\\\"orderBy == 'romaneio'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('romaneio')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Data Prev Entrega\\\"\\n                [active]=\\\"orderBy == 'dataPrev'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataPrev')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"10%\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Data de Entrega\\\"\\n                [active]=\\\"orderBy == 'dataEntrega'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEntrega')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-truncate hover\\\"\\n              width=\\\"28%\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Cliente\\\"\\n                [active]=\\\"orderBy == 'nomeCliente'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeCliente')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"5%\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n            >Seq.</th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Pedido\\\"\\n                [active]=\\\"orderBy == 'pedido'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('pedido')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Nota fiscal\\\"\\n                [active]=\\\"orderBy == 'notaFiscal'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('notaFiscal')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate hover\\\"\\n              width=\\\"9%\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n            >\\n              <thead-sorter\\n                value=\\\"Data de Emissão\\\"\\n                [active]=\\\"orderBy == 'dataEmissao'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('dataEmissao')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th\\n              class=\\\"text-center text-truncate\\\"\\n              width=\\\"23%\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n            >\\n              Situação</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of pedidos\\\" (click)=\\\"viewDetails(item, modalDetalhes)\\\">\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeEmpresa.active\\\"\\n            >\\n              ({{ item.CD_FILI }})&nbsp;{{ item.NM_FILI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.romaneio.active\\\"\\n            >\\n              {{ item.CD_ROMA }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataPrev.active\\\"\\n            >\\n              {{ item.DT_SAID_PREV | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEntrega.active\\\"\\n            >\\n              {{ item.ENTR_DT_ENTR | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeCliente.active\\\"\\n              isEllipsed\\n            >\\n              ({{ item?.CD_CLIE }}) {{ item?.NM_CLIE }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.sequencia.active\\\"\\n            >\\n              {{ item?.ENTR_NR_SQNC }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.pedido.active\\\"\\n            >\\n              {{ item.CD_PEDI }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.notaFiscal.active\\\"\\n            >\\n              {{ item.NR_NOTA_FISC }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.dataEmissao.active\\\"\\n            >\\n              {{ item.DT_NOTA_FISC | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td\\n              class=\\\"text-center text-truncate hover\\\"\\n              *ngIf=\\\"columns.nomeSituacao.active\\\"\\n            >\\n              {{ item.ENTR_DS_STAT }}\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div *ngIf=\\\"!pedidosEmpty\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n        [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mx-auto mt-5\\\" *ngIf=\\\"pedidosLoaded && pedidosEmpty\\\"></empty-result>\\n  </div>\\n</app-body>\\n<ng-template #modalDetalhes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Detalhes</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <tabset>\\n      <tab heading=\\\"Entrega\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"p-3\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label>Cliente</label>\\n              <div>({{ pedido?.CD_CLIE }}) {{ pedido?.NM_FANT }}</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Motorista</label>\\n              <div *ngIf=\\\"pedido?.NM_MOTO\\\">{{ pedido?.NM_MOTO }}</div>\\n              <div *ngIf=\\\"!pedido?.NM_MOTO\\\">NÃO INFORMADO</div>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Placa do veículo</label>\\n              <div *ngIf=\\\"pedido?.PLAC\\\">{{ pedido?.PLAC }}</div>\\n              <div *ngIf=\\\"!pedido?.PLAC\\\">NÃO INFORMADO</div>\\n            </div>\\n          </div>\\n          <div id=\\\"scrollDetalhes\\\" class=\\\"mt-2 d-flex\\\">\\n            <div class=\\\"col-4\\\">\\n              <div *ngFor=\\\"let detalhe of entrega; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n                <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"detalhe?.desricao\\\" placement=\\\"left\\\">\\n                  <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"detalhe?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\n                    <i [class]=\\\"detalhe?.icone\\\"></i>\\n                  </div>\\n                  <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"detalhe?.check == 1 ? 'text-primary' : ''\\\" style=\\\"width: calc(100% - 40px)\\\">\\n                    {{ detalhe?.descricao }}\\n                  </strong>\\n                </div>\\n                <div class=\\\"my-2\\\" *ngIf=\\\"!last\\\">\\n                  <div class=\\\"ml-1\\\">\\n                    <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                      <div *ngIf=\\\"detalhe?.check === 1\\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-8 p-0 form-group\\\">\\n              <label>FOTO DO CANHOTO</label>\\n              <div *ngIf=\\\"imageLoading\\\">Carregando foto do canhoto...</div>\\n              <div *ngIf=\\\"pedido?.ENTR_COMP_FOTO\\\">\\n                <img [hidden]=\\\"imageLoading\\\" [src]=\\\"pedido?.ENTR_COMP_FOTO\\\" class=\\\"border rounded shadow-sm w-100\\\" (load)=\\\"onImageLoad()\\\">\\n              </div>\\n              <empty-result message=\\\"Nehuma imagem encontrada\\\" *ngIf=\\\"!pedido?.ENTR_COMP_FOTO && !imageLoading\\\"></empty-result>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Romaneio\\\" class=\\\"border-right border-left border-bottom\\\">\\n        <div class=\\\"px-3 pt-3\\\" *ngIf=\\\"!detalhesRomaneioLoading && !detalhesRomaneioEmpty\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label>Romaneio</label>\\n              <div>{{ pedido?.CD_ROMA }}</div>\\n            </div>\\n            <!-- <div class=\\\"form-group col-lg-3\\\">\\n              <label>Região da entrega</label>\\n              <div>{{ pedido }}</div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <subtitles\\n                [data]=\\\"subtitles\\\"\\n                [show]=\\\"!noResult\\\">\\n              </subtitles>\\n            </div>\\n          </div>\\n          <custom-table [config]=\\\"tableConfig\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th>Cliente</th>\\n                <th class=\\\"text-center\\\">Seq.</th>\\n                <th class=\\\"text-center\\\">Nota fiscal</th>\\n                <th class=\\\"text-center\\\">Pedido</th>\\n                <th class=\\\"text-center\\\">Código</th>\\n                <th>Material</th>\\n                <th class=\\\"text-center\\\">Peso</th>\\n                <th>Endereço</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let item of detalhesRomaneio\\\" [ngStyle]=\\\"getSelectedStyle(item)\\\">\\n                <td\\n                  class=\\\"hover\\\"\\n                  [ngClass]=\\\"classStatusBorder(item)\\\">\\n                  ({{ item.CD_CLIE }}) {{ item.NM_FANT }}\\n                </td>\\n                <td class=\\\"text-center\\\">{{ item.NR_SQNC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.NOTA_FISC }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PEDI }}</td>\\n                <td class=\\\"text-center\\\">{{ item.CD_PROD }}</td>\\n                <td>{{ item.NM_PROD }}</td>\\n                <td class=\\\"text-center\\\">{{ item.TT_PROD_PESO  | number: '0.3-3' }}</td>\\n                <td>{{ item.DS_ENDE }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </div>\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"detalhesRomaneioEmpty\\\"></empty-result>\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\" *ngIf=\\\"!detalhesRomaneioLoading && detalhesRomaneioEmpty\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialControleEntregasListaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialControleEntregasRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialControleEntregasListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  { path: '', component: ComercialControleEntregasListaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialControleEntregasRoutingModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Directives\nimport { IsEllipsedDirective } from './is-ellipsed.directive';\n\n@NgModule({\n  declarations: [IsEllipsedDirective],\n  imports: [CommonModule],\n  exports: [IsEllipsedDirective]\n})\nexport class DirectivesModule {\n  static forRoot(): ModuleWithProviders<DirectivesModule> {\n    return {\n        ngModule: DirectivesModule\n    };\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}