{"version":3,"sources":["./src/app/modules/logistica/yms/tipos-setor/lista/lista.component.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/logistica/yms/tipos-setor/cadastro/cadastro.component.html","./src/app/modules/logistica/yms/tipos-setor/tipos-setor-routing.module.ts","./src/app/modules/logistica/yms/tipos-setor/cadastro/cadastro.component.scss","./src/app/modules/logistica/yms/tipos-setor/lista/lista.component.scss","./src/app/modules/logistica/yms/tipos-setor/lista/lista.component.html","./src/app/modules/logistica/yms/tipos-setor/tipos-setor.module.ts","./src/app/modules/logistica/yms/tipos-setor/cadastro/cadastro.component.ts"],"names":[],"mappings":"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","file":"tipos-setor-tipos-setor-module-es2015.js","sourcesContent":["//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaYmsTiposSetorService } from '../services/tipos-setor.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaYmsTiposSetor } from './../models/tipos-setor';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-setor-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposSetorListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingTiposSetor: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  filterTiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\r\n  tipoSelecionado: ILogisticaYmsTiposSetor;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Tipos de Setores (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterTiposSetor();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getTiposSetor(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO_TIPO: [null],\r\n      NM_SETO_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Setor',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(tipos: ILogisticaYmsTiposSetor): void {\r\n    this.detailPanelService.show();\r\n    this.tipoSelecionado = tipos;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getTiposSetor(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tiposSetor = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tiposSetor = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getFilterTiposSetor() {\r\n    this.loadingTiposSetor = true;\r\n    this.tiposSetorService\r\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposSetor = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterTiposSetor = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(tipos: ILogisticaYmsTiposSetor): string {\r\n    let borderClass: string;\r\n\r\n    if (tipos.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (tipos.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaYmsTiposSetor) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.tiposSetorService.postTiposSetor(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.tiposSetor.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Tipos_Setor${dataExport}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Tipos de Setor\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postTiposSetor()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Setor</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_SETO_TIPO\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_SETO_TIPO\\\"\\r\\n              formControlName=\\\"NM_SETO_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_SETO_TIPO') + ' ' + onFieldRequired('NM_SETO_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_SETO_TIPO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaYmsTiposSetorCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaYmsTiposSetorListaComponent } from './lista/lista.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaYmsTiposSetorListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaYmsTiposSetorCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaYmsTiposSetorCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaYmsTiposSetorRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1zZXRvci9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1zZXRvci9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipos de Setor\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"filterTiposSetor\\\">Tipo de Setor</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterTiposSetor\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTiposSetor\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                bindLabel=\\\"NM_SETO_TIPO\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let tipos of tiposSetor\\\"  [class.table-active]=\\\"tipos?.UUID_LOGI_YMS_SETO_TIPO == tipoSelecionado?.ID_LOGI_ENMA_FHNC_OCPR && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"tipos.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{tipos.UUID_LOGI_YMS_SETO_TIPO }}\\r\\n              </td>\\r\\n              <td >{{ tipos.NM_SETO_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"tipos.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipos)\\\">\\r\\n                    <i [ngClass]=\\\"tipos.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', tipos.UUID_LOGI_YMS_SETO_TIPO]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(tipos)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr>\\r\\n              <td class=\\\"text-center\\\">{{(tipoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (tipoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</td>\\r\\n              <td>{{ tipoSelecionado?.NM_USUA | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaYmsTiposSetorListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsTiposSetorCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaYmsTiposSetorRoutingModule } from './tipos-setor-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaYmsTiposSetorListaComponent,\r\n    LogisticaYmsTiposSetorCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaYmsTiposSetorRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaYmsTiposSetorModule { }\r\n","//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaYmsTiposSetorService } from '../services/tipos-setor.service';\r\n//interfaces\r\nimport { ILogisticaYmsTiposSetor } from '../models/tipos-setor';\r\nimport { isNull } from 'util';\r\nimport { JSONParser } from '@amcharts/amcharts4/core';\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-setor-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposSetorCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private tiposSetorService: LogisticaYmsTiposSetorService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')){\r\n      this.getTipo(_params['id']);\r\n      return\r\n    }\r\n  }\r\n\r\n\r\n  getTipo(id?: string) {\r\n    this.loading = true;\r\n    this.tiposSetorService\r\n      .getTipo(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data'])\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Setor',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_SETO_TIPO: [null],\r\n      NM_SETO_TIPO: [null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postTiposSetor() {\r\n    this.loadingNavBar = true;\r\n    this.tiposSetorService\r\n      .postTiposSetor(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n"],"sourceRoot":"webpack:///"}