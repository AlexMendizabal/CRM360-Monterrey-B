{"version":3,"sources":["./src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.html","./src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.scss","./src/app/modules/logistica/yms/etapas/lista/lista.component.scss","./src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.scss","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.html","./src/app/modules/logistica/yms/etapas/lista/lista.component.html","./src/app/modules/logistica/yms/etapas/cadastro/cadastro.component.ts","./src/app/modules/logistica/yms/etapas/associacao-setores/associacao-setores.component.ts","./src/app/modules/logistica/yms/etapas/etapas.module.ts","./src/app/modules/logistica/yms/etapas/etapas-routing.module.ts","./src/app/modules/logistica/yms/etapas/lista/lista.component.ts"],"names":[],"mappings":"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","file":"etapas-etapas-module-es2015.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    [disabled]=\\\"loadingNavBar === true\\\"\\n    [routerLink]=\\\"['../../']\\\"\\n    >\\n    Finalizar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"mtc-title\\\">Dados da Etapa</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col pl-0\\\">\\n            <label for=\\\"etapas\\\">Etapa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"etapas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingEtapas\\\"\\n              labelForId=\\\"etapas\\\"\\n              bindLabel=\\\"NM_ETAP\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\n              id=\\\"etapas\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_ETAP\\\"\\n              >\\n            </ng-select>\\n          </div>\\n        </div>\\n      </form>\\n      <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col mb-3\\\">\\n          <hr>\\n        </div>\\n      </div>\\n      <div [hidden]=\\\"loadingSetores\\\">\\n        <div class=\\\"row mb-2 mt-4\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Setores associados a Etapa</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\n                (click)=\\\"onRemoverAssociacao()\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n                <span>Limpar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!setoresAssociadosLoading && setoresAssociados.length > 0\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigSetoresAssociados\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.setoresAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('setoresAssociados')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Seq.</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 10%\\\"></th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Setores</th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Tipo de setor</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of setoresAssociados\\\" >\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td \\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 10%\\\">\\n                    {{ item.NR_SQNC  }}\\n                  </td>\\n                  <td\\n                    class=\\\"hover text-center\\\"\\n                    style=\\\"width: 10%\\\">\\n                    <div [class]=\\\"item.DS_ICON\\\"></div>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 35%\\\">\\n                    {{ item.NM_SETO | uppercase }}\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 35%\\\">\\n                    {{ item.NM_SETO_TIPO | uppercase }}\\n                  </td>\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\" height=\\\"26px\\\">\\n                    <btn-icon\\n                      icon=\\\"fas fa-trash\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\n                      *ngIf=\\\"!item.loading\\\"  \\n                    >\\n                    </btn-icon>\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!loadingSetores && setoresAssociados.length === 0\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-exchange-alt\\\"\\n              text=\\\"Nenhuma associação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingSetores\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os setores para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <form [formGroup]=\\\"formSetores\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Pesquisa de Setores</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-secondary\\\"\\n                (click)=\\\"getSetores()\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n                <span \\n                container=\\\"body\\\"\\n                placement =\\\"left\\\">Pesquisar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <advanced-filter>\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\n                <label for=\\\"tiposSetor\\\">Tipo de Setor</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"tiposSetor\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  [loading]=\\\"loadingTiposSetor\\\"\\n                  labelForId=\\\"tiposSetor\\\"\\n                  (keydown.enter)=\\\"getSetores()\\\"\\n                  bindLabel=\\\"NM_SETO_TIPO\\\"\\n                  bindValue=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                  id=\\\"tiposSetor\\\"\\n                  formControlName=\\\"UUID_LOGI_YMS_SETO_TIPO\\\"\\n                  (change)=\\\"getFilterSetores({'UUID_LOGI_YMS_SETO_TIPO': $event?.UUID_LOGI_YMS_SETO_TIPO || ''})\\\">\\n                </ng-select>\\n              </div>\\n              <div class=\\\"form-group col-md-6 pl-0\\\">\\n                <label for=\\\"filterSetores\\\">Setor</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"filterSetores\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  [loading]=\\\"loadingFilterSetores\\\"\\n                  labelForId=\\\"filterSetores\\\"\\n                  (keydown.enter)=\\\"getSetores()\\\"\\n                  bindLabel=\\\"NM_SETO\\\"\\n                  bindValue=\\\"UUID_LOGI_YMS_SETO\\\"\\n                  id=\\\"filterSetores\\\"\\n                  formControlName=\\\"UUID_LOGI_YMS_SETO\\\">\\n                </ng-select>\\n              </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-12 pl-0\\\">\\n                <label for=\\\"filiais\\\">Filial</label>\\n                <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"true\\\"\\n                  [items]=\\\"filiais\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  (keydown.enter)=\\\"getSetores()\\\"\\n                  [loading]=\\\"loadingFiliais\\\"\\n                  labelForId=\\\"filiais\\\"\\n                  bindLabel=\\\"NM_FILI\\\"\\n                  bindValue=\\\"UUID_LOGI_FILI\\\"\\n                  id=\\\"filiais\\\"\\n                  formControlName=\\\"UUID_LOGI_FILI\\\"\\n                  >\\n                </ng-select>\\n              </div>\\n          </div>\\n        </advanced-filter>\\n        <div *ngIf=\\\"setores.length > 0 && !setoresLoading\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Seleção de Setor</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-primary\\\"\\n                  (click)=\\\"onAssociarSetores()\\\"\\n                  [disabled]=\\\"searching === true || formSetores.valid === false\\\">\\n                  <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                  <span\\n                    [tooltip]=\\\"form.valid == false ? 'Selecione uma Etapa':''\\\"\\n                    container=\\\"body\\\"\\n                    placement =\\\"left\\\">Associar\\n                  </span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigSetores\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th\\n                      scope=\\\"col\\\"\\n                      class=\\\"text-center\\\"\\n                      style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        [icon]=\\\"toggle?.setores ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onToggleAll('setores')\\\">\\n                      </btn-icon>\\n                    </th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\" class=\\\"text-center\\\">Seq.</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\"></th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Setores</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 35%\\\">Tipo de setor</th>\\n                    <th style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let item of setores\\\">\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        *ngIf = \\\"item.NR_SQNC > 0 \\\"\\n                        [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"item.checked = !item.checked;\\\">\\n                      </btn-icon>\\n                    </td>\\n                    <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 10%\\\"\\n                    >\\n                      <input\\n                      type=\\\"number\\\"\\n                      class=\\\"form-control\\\"\\n                      min = \\\"1\\\"\\n                      (change)=\\\"item.NR_SQNC = ($event.target.value);\\\"\\n                    />\\n                    </td>\\n                    <td \\n                      class=\\\"hover text-center\\\"\\n                      style=\\\"width: 10%\\\">\\n                      <div [class]=\\\"item.DS_ICON\\\"></div>\\n                    </td>\\n                    <td\\n                      class=\\\"hover\\\"\\n                      style=\\\"width: 35%\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                      {{ item.NM_SETO | uppercase }}\\n                    </td>\\n                    <td\\n                      class=\\\"hover\\\"\\n                      style=\\\"width: 35%\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                      {{ item.NM_SETO_TIPO | uppercase }}\\n                    </td>\\n                    <td style=\\\"width: 5%; height: 26px\\\">\\n                      <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                        <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"setoresLoading\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os setores para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div>\\n          <div class=\\\"row\\\" *ngIf=\\\"(setores.length == 0) && !setoresLoading\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-box-open\\\"\\n                text=\\\"Nenhuma informação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"row\\\" *ngIf=\\\"setoresLista.length === 0 && !firstSearch\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-search\\\"\\n                text=\\\"Preecha os campos acima para pesquisar setores\\\">\\n              </message>\\n            </div>\\n          </div> -->\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9ldGFwYXMvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9ldGFwYXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2V0YXBhcy9hc3NvY2lhY2FvLXNldG9yZXMvYXNzb2NpYWNhby1zZXRvcmVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2V0YXBhcy9hc3NvY2lhY2FvLXNldG9yZXMvYXNzb2NpYWNhby1zZXRvcmVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcbiAgY3Vyc29yOiBuby1kcm9wO1xufVxuIl19 */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Etapas\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postEtapas()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Dados da Etapa</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\n            <label for=\\\"NM_ETAP\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_ETAP\\\"\\n              formControlName=\\\"NM_ETAP\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_ETAP') + ' ' + onFieldRequired('NM_ETAP')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_ETAP')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"tiposEtapa\\\">Tipo de etapa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tiposEtapa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTiposEtapa\\\"\\n              labelForId=\\\"tiposEtapa\\\"\\n              bindLabel=\\\"NM_ETAP_TIPO\\\"\\n              bindValue=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\n              id=\\\"tiposEtapa\\\"\\n              formControlName=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\n              [ngClass]=\\\"onFieldError('UUID_LOGI_YMS_ETAP_TIPO') + ' ' + onFieldRequired('UUID_LOGI_YMS_ETAP_TIPO')\\\">\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('UUID_LOGI_YMS_ETAP_TIPO')\\\" message=\\\"Circuito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6 pl-0\\\">\\n            <label for=\\\"IN_STAT\\\">Sigla</label>\\n            <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"tipos\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            labelForId=\\\"tipo\\\"\\n            bindLabel=\\\"nome\\\"\\n            bindValue=\\\"cod\\\"\\n            id=\\\"tipo\\\"\\n            formControlName=\\\"SG_ETAP\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [ngClass]=\\\"onFieldError('SG_ETAP') + ' ' + onFieldRequired('SG_ETAP')\\\"\\n          >\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('SG_ETAP')\\\" message=\\\"Tipo de circuito é obrigatório.\\\"></invalid-form-control>\\n\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\n        <legend>Observação</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div>\\n        <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"ETAPAS\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"circuitos\\\">Circuito</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"circuitos\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingCircuitos\\\"\\n                labelForId=\\\"ID_LOGI_YMS_CIRC\\\"\\n                bindLabel=\\\"NM_CIRC\\\"\\n                bindValue=\\\"ID_LOGI_YMS_CIRC\\\"\\n                id=\\\"ID_LOGI_YMS_CIRC\\\"\\n                formControlName=\\\"ID_LOGI_YMS_CIRC\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"setores\\\">Setores</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"setores\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingSetores\\\"\\n                labelForId=\\\"ID_LOGI_YMS_SETO\\\"\\n                bindLabel=\\\"NM_SETO\\\"\\n                bindValue=\\\"ID_LOGI_YMS_SETO\\\"\\n                id=\\\"ID_LOGI_YMS_SETO\\\"\\n                formControlName=\\\"ID_LOGI_YMS_SETO\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"filterEtapas\\\">Etapa</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filterEtapas\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingEtapas\\\"\\n                labelForId=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                bindLabel=\\\"NM_ETAP\\\"\\n                bindValue=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                id=\\\"UUID_LOGI_YMS_ETAP\\\"\\n                formControlName=\\\"UUID_LOGI_YMS_ETAP\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >ID</th>\\n              <th scope=\\\"col\\\" >Descrição</th>\\n              <th scope=\\\"col\\\" >Tipo etapas</th>\\n              <th scope=\\\"col\\\" style=\\\"width:160px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let etapa of etapas\\\"  [class.table-active]=\\\"etapa?.UUID_LOGI_YMS_ETAP == etapaSelecionada?.UUID_LOGI_YMS_ETAP && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"etapa.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n              {{etapa.UUID_LOGI_YMS_ETAP }}\\n              </td>\\n              <td >{{ etapa.NM_ETAP | uppercase}}</td>\\n              <td >{{ etapa.NM_ETAP_TIPO | uppercase}}</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"etapa.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(etapa)\\\">\\n                    <i [ngClass]=\\\"etapa.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', etapa.UUID_LOGI_YMS_ETAP]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Associar Setores\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../setores/', etapa.UUID_LOGI_YMS_ETAP]\\\">\\n                    <i class=\\\"fas fa-warehouse\\\"></i>                  \\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(etapa)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Detalhes\\\">\\n        <tabset>\\n          <tab heading=\\\"Dados da Etapa\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>ID da Etapa</label>\\n                    <div>{{ etapaSelecionada?.UUID_LOGI_YMS_ETAP}}</div>\\n                  </div>\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Etapa</label>\\n                    <div>{{ etapaSelecionada?.NM_ETAP | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-lg-6\\\">\\n                    <label>Tipo de Etapa</label>\\n                    <div>{{ etapaSelecionada?.NM_ETAP_TIPO | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row \\\">\\n                  <div class=\\\"form-group col-lg-12\\\">\\n                    <label>Observação:</label>\\n                    <div>{{ etapaSelecionada?.DS_OBSE | uppercase}}</div>\\n                  </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!etapaSelecionada?.DT_ATUA == null\\\">Usuário Responsável Pelo Cadastro</label>\\n                    <label *ngIf=\\\"etapaSelecionada?.DT_ATUA == null\\\">Usuário Responsável Pela Atualização</label>\\n                    <div>{{ etapaSelecionada?.NM_USUA | uppercase }}</div>\\n                  </div>\\n                  <div class=\\\"form-group col\\\">\\n                    <label *ngIf=\\\"!etapaSelecionada?.DT_ATUA == null\\\">Data do Cadastro</label>\\n                    <label *ngIf=\\\"etapaSelecionada?.DT_ATUA == null\\\">Data da Atualização</label>\\n                    <div>{{(etapaSelecionada?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (etapaSelecionada?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab  heading=\\\"Setores Associados\\\">\\n            <div class=\\\"border-right border-left border-bottom px-3 pt-3\\\">\\n              <div class=\\\"mb-3\\\">\\n                <!-- <custom-table  [config]=\\\"tableConfigAssocSetores\\\"  class=\\\"text-center\\\" *ngIf=\\\"!loadingAssociacaoSetores && !noAssocSetores\\\">\\n                  <ng-template #thead let-thead>\\n                    <tr>\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Tipo de Setor</th>\\n                      <th scope=\\\"col\\\"  width=\\\"50%\\\">Setor</th>\\n                    </tr>\\n                  </ng-template>\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let setor of associacaoSetores\\\">\\n                      <td  width=\\\"50%\\\">{{ setor?.NM_SETO_TIPO | uppercase }}</td>\\n                      <td  width=\\\"50%\\\">{{ setor?.NM_SETO | uppercase }}</td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table> -->\\n                <div *ngFor=\\\"let setor of associacaoSetores; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n                  <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"setor?.NM_SETO\\\" placement=\\\"left\\\">\\n                    <div class=\\\"rounded-circle text-white icon-40 bg-secondary\\\">\\n                      <i [class]=\\\"setor?.DS_ICON\\\"></i>\\n                    </div>\\n                    <strong class=\\\"my-auto ml-3 text-truncate\\\">\\n                      {{ setor?.NM_SETO | uppercase}}\\n                    </strong>\\n                  </div>\\n                  <div class=\\\"my-1\\\" *ngIf=\\\"!last\\\">\\n                    <div class=\\\"ml-1\\\">\\n                      <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                        <div *ngIf=\\\"setor?.check === 1\\\"></div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <message\\n                  *ngIf=\\\"loadingAssociacaoSetores\\\"\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\n                  text=\\\"Estamos pesquisando os setores para você...\\\">\\n                </message>\\n                <div [hidden]=\\\"loadingAssociacaoSetores || !noAssocSetores\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n                  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n                </div>\\n              </div>\\n            </div>\\n          </tab>       \\n        </tabset> \\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","//Services\nimport { LogisticaYmsTiposEtapaService } from './../../tipos-etapa/services/tipos-etapa.service';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//rxjs\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\n//interfaces\nimport { ILogisticaYmsEtapas } from '../models/etapas';\nimport { isNull } from 'util';\nimport { ILogisticaYmsCircuitos } from '../../circuitos/models/circuitos';\nimport { ILogisticaYmsTiposEtapa } from '../../tipos-etapa/models/tipos-etapa';\n\n@Component({\n  selector: 'logistica-yms-etapas-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaYmsEtapasCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n  tiposEtapa: Array<ILogisticaYmsTiposEtapa>;\n  setores: Array<ILogisticaYmsSetores>;\n\n  //loading\n  disabledForm = false;\n  loading = false;\n  loadingNavBar = false;\n  loadingTiposEtapa:boolean;\n  loadingSetores:boolean;\n\n  tipos = [\n    {\n      cod: 'fixa',\n      nome: 'Fixa',\n    },\n    {\n      cod: 'variavel',\n      nome: 'Variável',\n    },\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private etapasService: LogisticaYmsEtapasService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private tiposEtapaService: LogisticaYmsTiposEtapaService,\n    private setoresService: LogisticaYmsSetoresService,\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTiposEtapa();\n    this.getSetores();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id'))\n    return this.getEtapa(_params['id']); \n  }\n\n  getTiposEtapa(params?: Partial<ILogisticaYmsCircuitos>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingTiposEtapa = true;\n    this.tiposEtapaService\n      .getTiposEtapa(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingTiposEtapa = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposEtapa = response.body['data'];\n        }else{\n          this.tiposEtapa = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n  getSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.setores = response.body['data'];\n        }else{\n          this.setores = []\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n\n  getEtapa(id: number) {\n    this.loading = true;\n    this.etapasService\n      .getEtapa(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const data : ILogisticaYmsEtapas = response.body['data'][0]\n            this.form.patchValue(data) \n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Etapas',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_ETAP: [null],\n      NM_ETAP: [null, [Validators.required]],\n      SG_ETAP: [null, [Validators.required]],\n      UUID_LOGI_YMS_ETAP_TIPO:[null, [Validators.required]],\n      NM_ETAP_TIPO:[null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postEtapas() {\n    this.loadingNavBar = true;\n    this.etapasService\n      .postEtapas(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          try {\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n  \n}\n","import { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { ILogisticaYmsTiposSetor } from './../../tipos-setor/models/tipos-setor';\nimport { LogisticaYmsTiposSetorService } from './../../tipos-setor/services/tipos-setor.service';\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { ILogisticaYmsEtapas } from './../models/etapas';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n// angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n// services\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { LogisticaFiliaisService } from '../../../cadastros/filiais/services/filiais.service';\n\n@Component({\n  selector: 'logistica-etapas-associacao-setores',\n  templateUrl: './associacao-setores.component.html',\n  styleUrls: ['./associacao-setores.component.scss']\n})\nexport class LogisticaYmsEtapasAssociacaoSetoresComponent implements OnInit {\n\n  appTitle = \"Associação Setores\";\n\n  form: FormGroup;\n  formSetores: FormGroup;\n\n  breadCrumbTree: any = [];\n  idSubModulo: number;\n  $subscription: Subscription;\n\n  /*loading*/\n  loading = false;\n  loadingNavBar = false;\n  noResult = true;\n  loadingEtapas: boolean;\n  loadingFiliais: boolean;\n  /*loading*/\n  filterSetores:Array<ILogisticaYmsSetores>;\n  setores= [];\n  filiais: Array<ILogisticaFiliais>;\n  tiposSetor: Array<ILogisticaYmsTiposSetor>;\n  setoresLoading = false;\n  loadingSetores = false;\n  loadingFilterSetores= false;\n  loadingTiposSetor= false;\n  etapas: Array<ILogisticaYmsEtapas>;\n\n  setoresAssociados = [];\n  setoresAssociadosLoading = false;\n\n  tableConfigSetoresAssociados: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n    hover: false,\n  };\n  \n  tableConfigSetores: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  toggle = {\n    setores: false,\n    setoresAssociados: false\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private etapasService: LogisticaYmsEtapasService,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private confirmModalService: ConfirmModalService,\n    private setoresService: LogisticaYmsSetoresService,\n    private tiposSetorService: LogisticaYmsTiposSetorService,\n    private filiaisService: LogisticaFiliaisService,\n  ) {\n    this.form = this.formBuilder.group({\n      \"UUID_LOGI_YMS_ETAP\": [{value:null, disabled:true}],\n      \"NM_ETAP\": [null],\n    });\n\n    this.formSetores = this.formBuilder.group({\n      UUID_LOGI_YMS_SETO:[null],\n      NM_SETO:[null],\n      UUID_LOGI_YMS_SETO_TIPO:[null],\n      NM_SETO_TIPO:[null],\n      UUID_LOGI_FILI:[null],\n      NM_FILI:[null]\n    });\n  }\n\n  ngOnInit() {\n\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getEtapas();\n    this.getTiposSetor();\n    this.getFilterSetores();\n    this.getFiliais();\n  }\n\n  getFilterSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingFilterSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingFilterSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterSetores = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getTiposSetor() {\n    this.loadingTiposSetor = true;\n    this.tiposSetorService\n      .getTiposSetor({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposSetor = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposSetor = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      },\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n    );\n  }\n\n  getFiliais() {\n    this.loadingFiliais = true;\n    this.filiaisService\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0', IN_YMS: 1 })\n      .pipe(\n        finalize(() => {\n          this.loadingFiliais = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data'];\n        }else{\n          this.filiais = [];\n          this.pnotify.notice('Nenhuma filial encontrada!')\n        }\n      }),\n      (error: any) => {\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n\n    if (!params?.id){\n      this.loading = false;\n      return\n    }\n    this.form.get('UUID_LOGI_YMS_ETAP').setValue(params['id'])\n    this.getSetoresAssociados({\"UUID_LOGI_YMS_ETAP\": params?.id})  \n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: `/logistica/cadastros/${id}`,\n      },\n      {\n        descricao: 'Etapas',\n        routerLink: `../../`,\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getEtapas() {\n    this.loadingEtapas = true;\n    this.etapasService\n      .getEtapas({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingEtapas = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.etapas = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      });\n  }\n\n  getSetores(){\n\n    let params = {} ?? this.formSetores.value;\n    params.IN_STAT = 1;\n    params.IN_PAGI = 0;\n\n\n    this.setoresLoading = true\n\n    this.etapasService\n      .getSetores(params)\n      .pipe(\n        finalize(() => {\n          this.setoresLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          let setores = response.body['data'];\n          console.log(setores)\n          this.setores = setores.filter(setor => {\n            return !this.setoresAssociados.some(item => item.UUID_LOGI_YMS_SETO == setor.ID)\n          })\n\n          this.tableConfigSetores.fixedHeader = this.setores.length > 9 ? true : false;\n         \n        }\n      )\n  }\n\n  getSetoresAssociados(params){\n    this.loadingSetores = true;\n    params.IN_STAT = '1';\n    params.IN_PAGI = '0';\n    params.ORDE_BY = 'ID_REFE_ERP'\n\n    this.etapasService\n      .getSetoresAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            return\n          }\n\n          this.setoresAssociados = response.body['data'];\n          this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\n        }\n      )\n  }\n\n  onAssociarSetores(){\n    let setores = this.setores.filter(setor => setor.checked && setor.NR_SQNC != null);\n\n    console.log(setores)\n    this.toggle.setores = false;\n    setores.map(item => {\n      \n      item.loading = true;\n\n      if(this.setoresAssociados.some(setor => setor?.UUID_LOGI_YMS_SETO === item.UUID_LOGI_YMS_SETO)){\n        return\n      }\n\n      let params = {\n        \"UUID_LOGI_YMS_ETAP\": this.form.get(\"UUID_LOGI_YMS_ETAP\").value ?? \"\",\n        \"UUID_LOGI_YMS_SETO\": item?.UUID_LOGI_YMS_SETO ?? \"\",\n        \"IN_STAT\": \"1\",\n        \"NR_SQNC\": item?.NR_SQNC ?? \"\",\n      }\n      this.etapasService\n        .postSetoresAssociados(params)\n        .subscribe(\n          response => {\n            if(response.status === 200){\n              \n              this.setoresAssociados = [...this.setoresAssociados,\n                {\n                  ...item,\n                  checked: false,\n                  NR_SQNC: item.NR_SQNC,\n                  NM_SETO: item.NM_SETO,\n                  NM_FILI: item.NM_FILI,\n                  NM_SETO_TIPO: item.NM_SETO_TIPO,\n                  loading: false,\n                  UUID_LOGI_YMS_SETO: item.UUID_LOGI_YMS_SETO,\n                  UUID_LOGI_YMS_ETAP: this.form.get('UUID_LOGI_YMS_ETAP').value\n                }\n              ];\n              console.log(this.setoresAssociados)\n              \n              this.setores = this.setores.filter(setor => !setor.checked)\n              this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\n\n            }\n          }\n        )\n    });\n\n  }\n\n  confirmDelete(): Observable<boolean> {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onRemoverAssociacao(setor?){\n    let setores = setor ? [setor] : this.setoresAssociados.filter(setor => setor.checked);\n    console.log(setores)\n    this.toggle.setoresAssociados = false;\n\n    if(setores.length == 0){\n      this.pnotify.notice(\"Nenhum setor selecionado.\");\n      return\n    }\n\n    this.confirmDelete()\n      .subscribe(\n        (response: boolean) => {\n          \n          if(!response){\n            return\n          }\n          setores.map(item => {\n            item.IN_STAT = '0';\n            item.loading = true;\n\n            this.etapasService\n              .deleteAssociacoes(item)\n              .pipe(finalize(() => {\n                item.loading = false;\n              }))\n              .subscribe(\n                response => {\n                  \n                  if(response.status !== 200){\n                    return\n                  }\n                  this.setoresAssociados = this.setoresAssociados\n                    .filter(setor => setor.UUID_LOGI_YMS_SETO != item.UUID_LOGI_YMS_SETO);\n                  \n                  this.tableConfigSetoresAssociados.fixedHeader = this.setoresAssociados.length > 9 ? true : false;\n                }\n              );\n              (error) => {\n                const message = error.error.message\n                message ? this.pnotify.error(message): this.pnotify.error();\n              }\n          \n          })\n          \n        }\n      )\n  }\n\n  onToggleAll(item: string){\n    console.log(item)\n    this.toggle[item] = !this.toggle[item];\n    this[item].map(setor => setor.checked = this.toggle[item]);\n\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.formSetores.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.formSetores.controls[field].validator) {\n      let validationResult = this.formSetores.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\nsetValidacao(event){\n  console.log(event)\n}\n \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaYmsEtapasListaComponent } from './lista/lista.component';\nimport { LogisticaYmsEtapasCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaYmsEtapasRoutingModule } from './etapas-routing.module';\nimport { LogisticaYmsEtapasAssociacaoSetoresComponent } from './associacao-setores/associacao-setores.component';\n\n@NgModule({\n  declarations: [\n    LogisticaYmsEtapasListaComponent,\n    LogisticaYmsEtapasCadastroComponent,\n    LogisticaYmsEtapasAssociacaoSetoresComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    LogisticaYmsEtapasRoutingModule\n  ]\n})\nexport class LogisticaYmsEtapasModule { }\n","import { LogisticaYmsEtapasAssociacaoSetoresComponent } from './associacao-setores/associacao-setores.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaYmsEtapasCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaYmsEtapasListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaYmsEtapasListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaYmsEtapasCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaYmsEtapasCadastroComponent,\n  },\n  {\n    path: 'setores/:id',\n    component: LogisticaYmsEtapasAssociacaoSetoresComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaYmsEtapasRoutingModule {}\n","import { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { ILogisticaYmsCircuitos } from './../../circuitos/models/circuitos';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { LogisticaYmsCircuitosService } from './../../circuitos/services/circuitos.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaYmsEtapasService } from '../services/etapas.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaYmsEtapas } from './../models/etapas';\n\n\n@Component({\n  selector: 'logistica-yms-etapas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaYmsEtapasListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingEtapas: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n  circuitos: Array<ILogisticaYmsCircuitos>;\n  setores: Array<ILogisticaYmsSetores>;\n  noAssocSetores: boolean\n  associacaoSetores: Array<ILogisticaYmsEtapas>;\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false; \n  loadingCircuitos:boolean;\n  loadingSetores:boolean;\n  loadingAssociacaoSetores: boolean;\n  //VARIAVEIS\n  totalItens: any = [];\n  filterEtapas: Array<ILogisticaYmsEtapas>;\n  etapas: Array<ILogisticaYmsEtapas>;\n  etapaSelecionada: ILogisticaYmsEtapas;\n\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigAssocSetores: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  // Tipos de Situação dos Etapas (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private etapasService: LogisticaYmsEtapasService,\n    private circuitosService: LogisticaYmsCircuitosService,\n    private setoresService: LogisticaYmsSetoresService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFilterEtapas();\n    this.getCircuitos();\n    this.getSetores();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getEtapas(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  getCircuitos(params?: Partial<ILogisticaYmsCircuitos>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingCircuitos = true;\n    this.circuitosService\n      .getCircuitos(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingCircuitos = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.circuitos = response.body['data'];\n        }else{\n          this.circuitos = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n  getSetores(params?: Partial<ILogisticaYmsSetores>) {\n    const _params = params ?? {};\n    _params.IN_STAT = 1;\n    _params.IN_PAGI = 0;\n    this.loadingSetores = true;\n    this.setoresService\n      .getSetores(_params)\n      .pipe(\n        finalize(() => {\n          this.loadingSetores = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.setores = response.body['data'];\n        }else{\n          this.setores = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      UUID_LOGI_YMS_ETAP: [null],\n      NM_ETAP: [null],\n      ID_LOGI_YMS_SETO:[null],\n      NM_SETO:[null],\n      ID_LOGI_YMS_CIRC:[null],\n      NM_CIRC:[null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Etapas',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(etapas: ILogisticaYmsEtapas): void {\n    this.getSetoresAssociados({UUID_LOGI_YMS_ETAP: etapas.UUID_LOGI_YMS_ETAP});\n    this.detailPanelService.show();\n    this.etapaSelecionada = etapas;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  getEtapas(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.etapasService\n      .getEtapas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.etapas = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.etapas = [];\n          }\n        },\n        (error: any) => {\n          try {\n            this.noResult = true;\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n    }\n\n\n    getSetoresAssociados(params){\n      this.loadingAssociacaoSetores = true;\n      params.IN_STAT = '1';\n      params.IN_PAGI = '0';\n      params.ORDE_BY = 'NR_SQNC'\n      params.ORDE_BY = 'asc'\n      console.log(params)\n      this.etapasService\n        .getSetoresAssociados(params)\n        .pipe(\n          finalize(() => {\n            this.loadingAssociacaoSetores = false;\n          })\n        )\n        .subscribe(\n          (response) => {\n            if (response.status === 200) {\n              this.associacaoSetores = response.body['data'];\n  \n              if (this.associacaoSetores.length > 9) {\n                this.tableConfigAssocSetores.fixedHeader = true;\n              }\n  \n              this.noAssocSetores = false\n            } else {\n              this.pnotify.notice('Nenhuma associação encontrada!');\n              this.noAssocSetores = true\n              this.associacaoSetores = [];\n            }\n          },\n          (error) => {\n            this.pnotify.error();\n          }\n        );\n    }\n\n  getFilterEtapas() {\n    this.loadingEtapas = true;\n    this.etapasService\n      .getEtapas({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingEtapas = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filterEtapas = response.body['data'];\n        }else{\n          this.filterEtapas = [];\n        }\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    );\n  }\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(etapas: ILogisticaYmsEtapas): string {\n    let borderClass: string;\n\n    if (etapas.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (etapas.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaYmsEtapas) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.etapasService.postEtapas(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.etapas.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Etapas${dataExport}`);\n  }\n}\n"],"sourceRoot":"webpack:///"}