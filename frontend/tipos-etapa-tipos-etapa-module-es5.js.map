{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/tipos-etapa/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/tipos-etapa/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/tipos-etapa/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/tipos-etapa/tipos-etapa.module.ts","webpack:///src/app/modules/logistica/yms/tipos-etapa/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/yms/tipos-etapa/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/tipos-etapa/tipos-etapa-routing.module.ts","webpack:///src/app/modules/logistica/yms/tipos-etapa/cadastro/cadastro.component.html"],"names":["LogisticaYmsTiposEtapaCadastroComponent","formBuilder","pnotify","activatedRoute","router","localeService","tiposEtapaService","titleService","atividadesService","breadCrumbTree","formData","disabledForm","loading","loadingNavBar","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","subscribe","_params","snapshot","params","hasOwnProperty","getTipo","id","pipe","response","status","form","patchValue","body","noResult","error","idSubModulo","appTitle","setTitle","descricao","routerLink","group","UUID_LOGI_YMS_ETAP_TIPO","NM_ETAP_TIPO","required","IN_STAT","DS_OBSE","field","onFieldInvalid","get","touched","formControl","controls","validator","validationResult","postTiposEtapa","value","success","navigate","relativeTo","message","selector","template","LogisticaYmsTiposEtapaModule","declarations","imports","forRoot","LogisticaYmsTiposEtapaListaComponent","route","xlsxService","dateService","routerService","detailPanelService","confirmModalService","showDetailPanel","totalItens","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","onDetailPanelEmitter","getFilterTiposEtapa","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","TT_REGI_PAGI","getTiposEtapa","getParams","showDetailPanelSubscription","config","event","showing","reset","PAGI","TIME","Date","getTime","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","hide","setValue","setBase64UrlParams","show","tipoSelecionado","loadedFinished","tiposEtapa","loadingTiposEtapa","IN_PAGI","filterTiposEtapa","notice","page","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","showConfirm","data","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","ConfirmModalService","modalService","type","title","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","LogisticaYmsTiposEtapaRoutingModule","forChild","exports"],"mappings":"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","file":"tipos-etapa-tipos-etapa-module-es5.js","sourcesContent":["//Services\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n//Bootstrap\r\nimport { utilsBr } from 'js-brasil';\r\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\r\n//Angular\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n//rxjs\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LogisticaYmsTiposEtapaService } from '../services/tipos-etapa.service';\r\n//interfaces\r\nimport { ILogisticaYmsTiposEtapa } from '../models/tipos-etapa';\r\nimport { isNull } from 'util';\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-etapa-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposEtapaCadastroComponent\r\n  implements OnInit {\r\n  noResult: boolean;\r\n  $activatedRouteSubscription: Subscription;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  modalRef: BsModalRef;\r\n  formData: Array<FormData> = [];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  //loading\r\n  disabledForm = false;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private localeService: BsLocaleService,\r\n    private tiposEtapaService: LogisticaYmsTiposEtapaService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const _params = this.activatedRoute.snapshot.params;\r\n    if (_params.hasOwnProperty('id')){\r\n      this.getTipo(_params['id']);\r\n      return\r\n    }\r\n  }\r\n\r\n\r\n  getTipo(id: string) {\r\n    this.loading = true;\r\n    this.tiposEtapaService\r\n      .getTipo(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data']) \r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/logistica/home',\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Etapa',\r\n        routerLink: `../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_ETAP_TIPO: [null],\r\n      NM_ETAP_TIPO: [null, [Validators.required]],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  postTiposEtapa() {\r\n    this.loadingNavBar = true;\r\n    this.tiposEtapaService\r\n      .postTiposEtapa(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1ldGFwYS9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipos de Etapa\\\">\\r\\n  <button\\r\\n  type=\\\"button\\\"\\r\\n  (click)=\\\"onExport()\\\"\\r\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\r\\n  Exportar\\r\\n</button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\r\\n              <label for=\\\"filterTiposEtapa\\\">Tipo de Etapa</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"filterTiposEtapa\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"loadingTiposEtapa\\\"\\r\\n                labelForId=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\r\\n                bindLabel=\\\"NM_ETAP_TIPO\\\"\\r\\n                bindValue=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\r\\n                id=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\"\\r\\n                formControlName=\\\"UUID_LOGI_YMS_ETAP_TIPO\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-1 p-0\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" >ID</th>\\r\\n              <th scope=\\\"col\\\" >Descrição</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let tipos of tiposEtapa\\\"  [class.table-active]=\\\"tipos?.UUID_LOGI_YMS_ETAP_TIPO == tipoSelecionado?.ID_LOGI_ENMA_FHNC_OCPR && showDetailPanel\\\">\\r\\n              <td  [ngClass]=\\\"tipos.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n              {{tipos.UUID_LOGI_YMS_ETAP_TIPO }}\\r\\n              </td>\\r\\n              <td >{{ tipos.NM_ETAP_TIPO | uppercase}}</td>\\r\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"tipos.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipos)\\\">\\r\\n                    <i [ngClass]=\\\"tipos.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', tipos.UUID_LOGI_YMS_ETAP_TIPO]\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(tipos)\\\">\\r\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\r\\n        <custom-table>\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr>\\r\\n              <td class=\\\"text-center\\\">{{(tipoSelecionado?.DT_ATUA | date: 'dd/MM/yyyy HH:mm') || (tipoSelecionado?.DT_INCL | date: 'dd/MM/yyyy HH:mm') }}</td>\\r\\n              <td>{{ tipoSelecionado?.NM_USUA | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n\r\nimport { LogisticaYmsTiposEtapaListaComponent } from './lista/lista.component';\r\nimport { LogisticaYmsTiposEtapaCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nimport { LogisticaYmsTiposEtapaRoutingModule } from './tipos-etapa-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaYmsTiposEtapaListaComponent,\r\n    LogisticaYmsTiposEtapaCadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    LogisticaYmsTiposEtapaRoutingModule\r\n  ]\r\n})\r\nexport class LogisticaYmsTiposEtapaModule { }\r\n","//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\r\nimport { LogisticaYmsTiposEtapaService } from '../services/tipos-etapa.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { BsModalRef } from 'ngx-bootstrap';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\n\r\n//Interfaces\r\nimport { ILogisticaYmsTiposEtapa } from './../models/tipos-etapa';\r\n\r\n\r\n@Component({\r\n  selector: 'logistica-yms-tipos-etapa-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaYmsTiposEtapaListaComponent\r\n  implements OnInit, OnDestroy {\r\n    \r\n  breadCrumbTree: Array<Breadcrumb>;\r\n  idSubModulo: number;\r\n  noResult: boolean;\r\n  loadingTiposEtapa: boolean;\r\n  modalRef: BsModalRef;\r\n  form: FormGroup;\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  //LOADINGS\r\n  loading = true; \r\n  loadingNavBar = false; \r\n\r\n  //VARIAVEIS\r\n  totalItens: any = [];\r\n  filterTiposEtapa: Array<ILogisticaYmsTiposEtapa>;\r\n  tiposEtapa: Array<ILogisticaYmsTiposEtapa>;\r\n  tipoSelecionado: ILogisticaYmsTiposEtapa;\r\n\r\n  // CUSTOM TABLE\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  // Tipos de Situação dos Tipos de Etapa (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '2',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  // Subtitles (Ativo/Inativo)\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private dateService: DateService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private detailPanelService: DetailPanelService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private tiposEtapaService: LogisticaYmsTiposEtapaService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.getFilterTiposEtapa();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n          this.getTiposEtapa(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.patchValue({\r\n      PAGI: 1,\r\n      TT_REGI_PAGI: 100,\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      UUID_LOGI_YMS_ETAP_TIPO: [null],\r\n      NM_ETAP_TIPO: [null],\r\n      IN_STAT: [null],\r\n      DS_OBSE: [null],\r\n      NR_MATR: [null],\r\n      NM_USUA: [null],\r\n      DT_INCL: [null],\r\n      DT_ATUA: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/logistica/home`,\r\n      },\r\n      {\r\n        descricao: 'YMS',\r\n        routerLink: `/logistica/yms/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipos de Etapa',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.detailPanelService.hide();\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onDetails(tipos: ILogisticaYmsTiposEtapa): void {\r\n    this.detailPanelService.show();\r\n    this.tipoSelecionado = tipos;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  getTiposEtapa(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n    this.tiposEtapaService\r\n      .getTiposEtapa(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tiposEtapa = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tiposEtapa = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getFilterTiposEtapa() {\r\n    this.loadingTiposEtapa = true;\r\n    this.tiposEtapaService\r\n      .getTiposEtapa({ IN_STAT: '1', IN_PAGI: '0' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingTiposEtapa = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.filterTiposEtapa = response.body['data'];\r\n        }else{\r\n          this.pnotify.notice('Nenhum registro encontrado!')\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  classStatusBorder(tipos: ILogisticaYmsTiposEtapa): string {\r\n    let borderClass: string;\r\n\r\n    if (tipos.IN_STAT == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (tipos.IN_STAT == 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  changeType(params: ILogisticaYmsTiposEtapa) {\r\n    const stat = params.IN_STAT == 1 ? 0 : 1;\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          params.IN_STAT = stat;\r\n          return this.tiposEtapaService.postTiposEtapa(params);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n        },\r\n        (error: any) => {\r\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == 1)\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n    listagemExport = this.tiposEtapa.concat(this.totalItens);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `Tipos_Etapa${dataExport}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy90aXBvcy1ldGFwYS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaYmsTiposEtapaCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaYmsTiposEtapaListaComponent } from './lista/lista.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaYmsTiposEtapaListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaYmsTiposEtapaCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaYmsTiposEtapaCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LogisticaYmsTiposEtapaRoutingModule {}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Tipos de Etapa\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\r\\n    (click)=\\\"postTiposEtapa()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Etapa</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-12 pl-0\\\">\\r\\n            <label for=\\\"NM_ETAP_TIPO\\\">Descrição</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_ETAP_TIPO\\\"\\r\\n              formControlName=\\\"NM_ETAP_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_ETAP_TIPO') + ' ' + onFieldRequired('NM_ETAP_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_ETAP_TIPO')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-8 pt-2 mx-auto\\\">\\r\\n        <legend>Observação</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";"]}