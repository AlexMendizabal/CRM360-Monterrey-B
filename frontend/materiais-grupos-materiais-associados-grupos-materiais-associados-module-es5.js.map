{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/grupos-materiais-associados.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/grupos-materiais-associados-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/grupos-materiais-associados.service.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisGrupoMateriaisAssociadosModule","declarations","imports","forRoot","providers","ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard","materiaisGruposService","route","params","id","getDetalhes","success","mensagem","data","codGrupo","nomeGrupo","precoGrupo","codSituacao","materiais","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialService","http","API","httpParams","param","append","get","pipe","routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule","forChild","exports","ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent","activatedRoute","router","location","formBuilder","materiaisGrupoService","pnotifyService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","tableConfigMateriais","codClasse","formChanged","showMateriais","materiaisAssociados","linhas","classes","filteredClasses","toggleAll","searching","firstSearch","adicionar","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","excluirGrupo","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","setFormMateriais","setTitle","subscribe","appTitle","descricao","routerLink","idSubModulo","response","responseCode","result","error","back","resolver","snapshot","form","group","required","inSituacao","assocMateriais","array","formMateriais","codLinha","codMaterial","checked","excluir","clear","confirmDeleteAll","onDeleteMaterial","confirmDelete","length","map","item","material","codAssociacao","filter","loaderNavbar","deleteAssociacao","showConfirm","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","value","idLinha","getMateriais","materiaisLoader","situacao","hasOwnProperty","unshift","codigoMaterial","codigoDescricaoMaterial","valid","tipoMaterial","Object","assign","el","o","forEach","some","push","nomeMaterial","markAsTouched","markAsDirty","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","submittingForm","save","navigateTo","navigate","relativeTo","confirm","selector","template","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setGrupoSelecionado","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","grupo","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","unsubscribe","grupoSelecionado","codUsuario","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaGrupos","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","setTimeout","loadedFinished","index","confirmActivate","asObservable","activateGrupo","refreshMainData","confirmInactive","inactivateGrupo","i","ComercialCadastrosMateriaisGrupoMateriaisAssociadosService","tidSoftwareService","record","post","put","updateGrupo","saveGrupo","getLinhas","getClasses","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-grupos-materiais-associados-grupos-materiais-associados-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule } from './grupos-materiais-associados-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from './grupos-materiais-associados.service';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent,\n    ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService, ComercialCadastrosMateriaisGrupoMateriaisAssociadosService],\n})\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zLW1hdGVyaWFpcy1hc3NvY2lhZG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from '../grupos-materiais-associados.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisGruposService: ComercialCadastrosMateriaisGrupoMateriaisAssociadosService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    \n    if (route.params && route.params.id) {\n      return this.materiaisGruposService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codGrupo: null,\n        nomeGrupo: null,\n        precoGrupo: null,\n        codSituacao: '',\n        materiais: [],\n      },\n    });\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"mtc-title\\\">Dados do grupo</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nomeGrupo\\\">Nome</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeGrupo\\\"\\n              formControlName=\\\"nomeGrupo\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('nomeGrupo') + ' ' + onFieldRequired(form.controls.nomeGrupo)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeGrupo')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n              <option value=\\\"1\\\">Ativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Materiais associados ao grupo</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparAssociacoes(materiaisAssociados, true)\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar lista</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && materiaisAssociados.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of materiaisAssociados; let i = index\\\">\\n                    <td style=\\\"width: 95%\\\">\\n                      {{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"material.checked = !material.checked; onLimparAssociacoes([material])\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && materiaisAssociados.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col mt-auto\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de materiais</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"onFilterMateriais()\\\"\\n              [disabled]=\\\"searching === true\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n              <span>Pesquisar</span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"codClasse\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                (change)=\\\"onChangeClasse($event.idClasse)\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"codMaterial\\\">Material</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"materiais\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codMaterial\\\"\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\n                bindValue=\\\"codigoMaterial\\\"\\n                [loading]=\\\"materiaisLoader\\\"\\n                loadingText=\\\"Carregando...\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div *ngIf=\\\"materiaisLista.length > 0\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarMateriais()\\\"\\n                [disabled]=\\\"searching === true\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span>Associar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll()\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [disabled]=\\\"material.inGrupoMaterialTabelaPreco == 1\\\"\\n                      [icon]=\\\"material.checked == 1 && material.inGrupoMaterialTabelaPreco == 0 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onCheckMaterial(material)\\\">                      \\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 90%\\\"\\n                    (click)=\\\"onCheckMaterial(material)\\\">\\n                    {{ material.codigoDescricaoMaterial | uppercase }}\\n                  </td>\\n                  <td *ngIf=\\\"material.inGrupoMaterialTabelaPreco == 1\\\" style=\\\"width: 5%;\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" style=\\\"color: #a10\\\">\\n                      <i class=\\\"fas fa-exclamation-triangle\\\" placement=\\\"left\\\" tooltip=\\\"Este item está associado ao grupo {{ material.nomeGrupoMaterialTabelaPreco }}\\\"></i>\\n                    </button>\\n                  </td>\\n                  <td *ngIf=\\\"material.inGrupoMaterialTabelaPreco == 0\\\" style=\\\"width: 5%; color:#a10;\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" style=\\\"color: #090\\\">\\n                      <i class=\\\"fas fa-check-circle\\\" placement=\\\"left\\\" tooltip=\\\"Este item não possui associações\\\"></i>\\n                    </button>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"searching === false\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"Nenhuma informação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-search\\\"\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zLW1hdGVyaWFpcy1hc3NvY2lhZG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from '../grupos-materiais-associados.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IGrupo } from '../models/grupo-materiais-associados';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-grupos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  codClasse: number = null;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  showMateriais = true;\n\n  formMateriais: FormGroup;\n\n  materiaisAssociados: Array<any> =[];\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  toggleAll = false;\n  searching = false;\n  firstSearch = false;\n  delete = false;\n  adicionar = false;\n\n  materiaisLista: Array<any> = [];\n  materiaisListaLoaded = false;\n  materiaisListaEmpty = false;\n  excluirGrupo = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoMateriaisAssociadosService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n    this.setFormMateriais();\n    this.titleService.setTitle('Cadastro de grupo de materiais');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar grupo de materiais';\n      } else {\n        this.appTitle = 'Novo grupo de materiais';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Grupos de materiais',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/grupos-materiais-associados/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.materiaisGrupoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: IGrupo = resolver.data;\n      this.form = this.formBuilder.group({\n        codGrupo: [detalhes.codGrupo],\n        nomeGrupo: [detalhes.nomeGrupo, [Validators.required]],\n        codSituacao: [detalhes.inSituacao, [Validators.required]],\n        assocMateriais: this.formBuilder.array([]),\n      });\n\n      this.materiaisAssociados = detalhes.materiais;\n\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  setFormMateriais(): void {\n    this.formMateriais = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n      checked: [false]\n    });\n  }\n\n  onLimparAssociacoes(materiais: Array<any>, excluir) {\n  const assocMateriais = this.form.get('assocMateriais') as FormArray;\n    assocMateriais.clear();\n    this.codClasse = null;\n\n    if (excluir == true) {\n\n      let params = {\n        codGrupo: materiais[0].codGrupo,\n        codMaterial: 0\n      }\n\n      this.confirmDeleteAll()\n      .subscribe((response: boolean) =>{\n\n        // materiais.removeAt()\n\n        this.onDeleteMaterial(params);\n\n        // if(!response){\n        //   if(materiais.length === 1){\n        //     this.materiaisAssociados\n        //       .map(item => {\n        //         if(item.codMaterial == materiais[0]['codMaterial']){\n        //           item.checked = false\n        //         }\n        //       })\n        //   }\n        //   return\n        // }\n\n        // materiais\n        //   .map(material => {\n\n        //     if(!material?.codAssociacao){\n        //       this.materiaisAssociados = this.materiaisAssociados\n        //         .filter(item => material.codMaterial != item.codMaterial)\n        //       return\n        //     }\n        //       this.onDeleteMaterial(params);\n\n        //   });\n      });\n\n    } else {\n\n      this.confirmDelete()\n      .subscribe((response: boolean) =>{\n\n        if(!response){\n          if(materiais.length === 1){\n            this.materiaisAssociados\n              .map(item => {\n                if(item.codMaterial == materiais[0]['codMaterial']){\n                  item.checked = false\n                }\n              })\n          }\n          return\n        }\n\n        materiais\n          .map(material => {\n\n            if(!material?.codAssociacao){\n              this.materiaisAssociados = this.materiaisAssociados\n                .filter(item => material.codMaterial != item.codMaterial)\n              return\n            }\n              this.onDeleteMaterial(material);\n           \n          });\n      });\n\n    }\n\n      this.delete = true;\n  }\n\n  onDeleteMaterial(item): void {\n\n    this.loaderNavbar = true;\n\n    const id = this.activatedRoute.snapshot.params.id;\n\n    this.materiaisGrupoService\n      .deleteAssociacao(id, item.codMaterial)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.loaderFullScreen = false;\n\n          if (item.codMaterial == 0) {\n            this.materiaisAssociados = this.materiaisAssociados.filter( material => material.codMaterial != item.codMaterial)\n          }\n\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.success) {\n            this.pnotifyService.success();\n          }\n\n          this.materiaisAssociados = this.materiaisAssociados.filter( material => material.codMaterial != item.codMaterial)\n\n          if (item.codMaterial == 0) {\n            this.materiaisAssociados = [];\n          }\n\n        },\n        (error: any) => {\n\n          const message = error?.error?.mensagem;\n\n          message ?\n          this.pnotifyService.error(message) :\n          this.pnotifyService.error()\n        }\n      );\n\n\n\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  confirmDeleteAll(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão de todos os registros?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onChangeLinha(codLinha: number) {\n    this.formMateriais.controls.codClasse.reset();\n    this.formMateriais.controls.codClasse.setValue(null);\n    this.formMateriais.controls.codClasse.enable();\n    this.formMateriais.controls.codClasse.setValidators([Validators.required]);\n    this.formMateriais.controls.codClasse.updateValueAndValidity();\n\n    this.formMateriais.controls.codMaterial.reset();\n    this.formMateriais.controls.codMaterial.disable();\n    this.formMateriais.controls.codMaterial.setValue(null);\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n  }\n\n  onChangeClasse(codClasse: number) {\n    this.formMateriais.controls.codMaterial.reset();\n    this.formMateriais.controls.codMaterial.enable();\n    this.formMateriais.controls.codMaterial.setValue(null);\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\n\n    this.getMateriais(codClasse);\n  }\n\n  getMateriais(codClasse: number): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      this.comercialService\n        .getMateriais({\n          codClasse: codClasse,\n          situacao: 'A'\n        })\n        .pipe(\n          finalize(() => {\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiais = response.data;\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n\n              this.formMateriais.controls.codMaterial.setValue(0);\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onFilterMateriais(): void {\n    if (this.formMateriais.valid) {\n      this.loaderNavbar = true;\n      this.searching = true;\n      this.materiaisLista = [];\n      this.materiaisListaLoaded = false;\n      this.materiaisListaEmpty = false;\n\n      let params = {\n        codClasse: this.formMateriais.value.codClasse,\n        situacao: 'A',\n        tipoMaterial: 'Distribuidora'\n      };\n\n      if (this.formMateriais.value.codMaterial !== 0) {\n        Object.assign(params, {\n          codMaterial: this.formMateriais.value.codMaterial,\n          \n        });\n      }\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            this.firstSearch = true;\n            this.searching = false;\n            this.loaderNavbar = false;\n            this.materiaisListaLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiaisLista = response.data.map(function (el: any) {\n                var o = Object.assign({}, el);\n                o.checked = 0;\n                return o;\n              });\n\n              if (this.materiaisLista.length > 9) {\n                this.tableConfigMateriais.fixedHeader = true;\n              } else {\n                this.tableConfigMateriais.fixedHeader = false;\n              }\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n              this.materiaisListaEmpty = true;\n            } else {\n              this.pnotifyService.error();\n              this.materiaisListaEmpty = true;\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n    this.materiaisLista.map(material => material.checked = this.toggleAll)\n  }\n\n  onCheckMaterial(material: any): void {\n    material.checked = !material.checked;\n  }\n\n  onAssociarMateriais() {\n    this.toggleAll = false;\n\n    this.materiaisLista\n      .filter(material => material.checked)\n      .forEach(material => {\n\n        if (this.codClasse === null) {\n          this.codClasse = material.codClasse;\n        }\n\n        if(this.materiaisAssociados.some(item => item.codMaterial == material.codigoMaterial)){\n          return\n        }\n\n        this.materiaisAssociados.push({\n          codMaterial: material.codigoMaterial,\n          nomeMaterial: material.descricao,\n          codClasse: material.codClasse,\n        });\n\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n\n      });\n\n    this.materiaisLista = this.materiaisLista.filter(material => !material.checked);\n\n    this.adicionar = true;\n\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n\n    if (this.form.pristine && this.delete === false && this.adicionar === false) {\n      this.location.back();\n      return\n    }\n\n    if (!this.form.valid) {\n      return\n    }\n\n    this.loaderNavbar = true;\n    this.submittingForm = true;\n\n    let params = this.form.value;\n    params['assocMateriais'] = this.materiaisAssociados;\n\n    this.materiaisGrupoService\n      .save(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.submittingForm = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.success === true) {\n            this.formChanged = false;\n            this.pnotifyService.success(response.mensagem);\n\n            this.activatedRoute.params.subscribe((params: any) => {\n              let navigateTo: string;\n\n              if (params.hasOwnProperty('id')) {\n                navigateTo = '../../lista';\n              } else {\n                navigateTo = '../lista';\n              }\n\n              this.router.navigate([navigateTo], {\n                relativeTo: this.activatedRoute,\n              });\n            });\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n        }\n      );\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from '../grupos-materiais-associados.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IGrupo } from '../models/grupo-materiais-associados';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-grupos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'nomeGrupo';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IGrupo> = [];\n  dadosPagination: Array<IGrupo> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  grupoSelecionado: IGrupo;\n  materiais: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoMateriaisAssociadosService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Grupos de materiais');\n    this.onDetailPanelEmitter();\n    this.setGrupoSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Grupos de materiais associados',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      grupo: [formValue.grupo],\n      material: [formValue.material],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      grupo: null,\n      material: null,\n      codSituacao: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setGrupoSelecionado(): void {\n    this.grupoSelecionado = {\n      codGrupo: null,\n      nomeGrupo: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      materiais: [],\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.grupo) {\n      params.grupo = this.form.value.grupo;\n    }\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.materiaisGrupoService\n      .getListaGrupos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(grupo: any): string {\n    let borderClass: string;\n\n    if (grupo.inSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (grupo.inSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(grupo: IGrupo): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados (${grupo.nomeGrupo})`;\n    this.setGrupoSelecionado();\n    this.grupoSelecionado = grupo;\n    this.materiais = [];\n\n    this.materiaisGrupoService\n      .getAssociacoesMateriais(grupo.codGrupo)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.materiais = response.data;\n          \n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(grupo: IGrupo): void {\n    this.router.navigate(['../editar', grupo.codGrupo], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, grupo: IGrupo): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n          this.onFilter();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateGrupo(index: number, grupo: IGrupo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.materiaisGrupoService.activateGrupo(grupo.codGrupo);\n  }\n\n  onInactivate(index: number, grupo: IGrupo): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n          this.onFilter();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateGrupo(index: number, grupo: IGrupo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.materiaisGrupoService.inactivateGrupo(grupo.codGrupo);\n  }\n\n  refreshMainData(grupo: IGrupo): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (grupo.codGrupo === this.dados[i].codGrupo) {\n        this.dados[i].inSituacao = grupo.inSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Grupos de materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"grupo\\\">\\n                <span class=\\\"mr-1\\\">Grupo</span>\\n                <ng-template #tooltipLabelGrupoTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do grupo</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelGrupoTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"grupo\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"material\\\">\\n                <span class=\\\"mr-1\\\">Material</span>\\n                <ng-template #tooltipLabelMaterialTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do material</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelMaterialTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"material\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codGrupo'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codGrupo')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome grupo\\\"\\n                [active]=\\\"orderBy == 'nomeGrupo'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeGrupo')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let grupo of dadosPagination; let i = index;\\\" [class.table-active]=\\\"grupo.codGrupo == grupoSelecionado.codGrupo && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(grupo)\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.codGrupo }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.nomeGrupo | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"grupo.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"grupo.nomeUsuario !== null\\\">\\n                {{ grupo.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"grupo.inSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, grupo)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"grupo.inSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, grupo)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(grupo)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiais\\\">\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n// Interfaces\nimport { IGrupo } from './models/grupo-materiais-associados';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/grupos-materiais-associados`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaGrupos(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesMateriais(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/associacoes/${codGrupo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codGrupo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveGrupo(record: IGrupo): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\n  }\n\n  private updateGrupo(record: IGrupo): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(record: IGrupo): Observable<Object | JsonResponse> {\n    if (record.codGrupo !== null) {\n      return this.updateGrupo(record);\n    }\n\n    return this.saveGrupo(record);\n  }\n\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codGrupo)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/inativar`, codGrupo)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n\n  deleteAssociacao(\n    codGrupo: number,\n    codMaterial: number\n    ): Observable<Object | JsonResponse> {\n    return this.http\n      .delete(`${this.API}/remover/${codGrupo}/${codMaterial}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}