{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/grupos-materiais-associados.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/grupos-materiais-associados-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/formulario/formulario.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/grupos-materiais-associados/grupos-materiais-associados.service.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisGrupoMateriaisAssociadosModule","declarations","imports","forRoot","providers","ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard","materiaisGruposService","route","params","id","getDetalhes","success","mensagem","data","codGrupo","nomeGrupo","precoGrupo","codSituacao","materiais","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialService","http","API","httpParams","param","append","get","pipe","codCliente","routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule","forChild","exports","ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent","activatedRoute","router","location","formBuilder","materiaisGrupoService","pnotifyService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","tableConfigMateriais","codClasse","formChanged","showMateriais","materiaisAssociados","linhas","classes","filteredClasses","toggleAll","searching","firstSearch","adicionar","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","excluirGrupo","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","setFormMateriais","setTitle","subscribe","appTitle","descricao","routerLink","idSubModulo","response","responseCode","result","error","back","resolver","snapshot","form","group","required","inSituacao","assocMateriais","array","formMateriais","codLinha","codMaterial","checked","excluir","clear","confirmDeleteAll","onDeleteMaterial","confirmDelete","length","map","item","material","codAssociacao","filter","loaderNavbar","deleteAssociacao","showConfirm","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","value","idLinha","getMateriais","materiaisLoader","situacao","hasOwnProperty","unshift","codigoMaterial","codigoDescricaoMaterial","valid","tipoMaterial","Object","assign","el","o","forEach","some","push","nomeMaterial","markAsTouched","markAsDirty","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","submittingForm","save","navigateTo","navigate","relativeTo","confirm","selector","template","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setGrupoSelecionado","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","grupo","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","unsubscribe","grupoSelecionado","codUsuario","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaGrupos","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","setTimeout","loadedFinished","index","confirmActivate","asObservable","activateGrupo","refreshMainData","confirmInactive","inactivateGrupo","i","ComercialCadastrosMateriaisGrupoMateriaisAssociadosService","tidSoftwareService","record","post","put","updateGrupo","saveGrupo","getLinhas","getClasses","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-grupos-materiais-associados-grupos-materiais-associados-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule } from './grupos-materiais-associados-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from './grupos-materiais-associados.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent,\r\n    ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisGrupoMateriaisAssociadosService],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zLW1hdGVyaWFpcy1hc3NvY2lhZG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from '../grupos-materiais-associados.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisGruposService: ComercialCadastrosMateriaisGrupoMateriaisAssociadosService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    \r\n    if (route.params && route.params.id) {\r\n      return this.materiaisGruposService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codGrupo: null,\r\n        nomeGrupo: null,\r\n        precoGrupo: null,\r\n        codSituacao: '',\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados do grupo</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeGrupo\\\">Nome</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeGrupo\\\"\\r\\n              formControlName=\\\"nomeGrupo\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeGrupo') + ' ' + onFieldRequired(form.controls.nomeGrupo)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeGrupo')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Materiais associados ao grupo</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparAssociacoes(materiaisAssociados, true)\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar lista</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && materiaisAssociados.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of materiaisAssociados; let i = index\\\">\\r\\n                    <td style=\\\"width: 95%\\\">\\r\\n                      {{ material.codMaterial }} - {{ material.nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"material.checked = !material.checked; onLimparAssociacoes([material])\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && materiaisAssociados.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de materiais</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"onFilterMateriais()\\\"\\r\\n              [disabled]=\\\"searching === true\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              <span>Pesquisar</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"codLinha\\\">Línea</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                (change)=\\\"onChangeLinha($event.id)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"codClasse\\\">Classe</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"filteredClasses\\\"\\r\\n                formControlName=\\\"codClasse\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codClasse\\\"\\r\\n                bindLabel=\\\"nomeClasse\\\"\\r\\n                bindValue=\\\"idClasse\\\"\\r\\n                (change)=\\\"onChangeClasse($event.idClasse)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"codMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"materiais\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codMaterial\\\"\\r\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n                bindValue=\\\"codigoMaterial\\\"\\r\\n                [loading]=\\\"materiaisLoader\\\"\\r\\n                loadingText=\\\"Carregando...\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"materiaisLista.length > 0\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarMateriais()\\\"\\r\\n                [disabled]=\\\"searching === true\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span>Associar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll()\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [disabled]=\\\"material.inGrupoMaterialTabelaPreco == 1\\\"\\r\\n                      [icon]=\\\"material.checked == 1 && material.inGrupoMaterialTabelaPreco == 0 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onCheckMaterial(material)\\\">                      \\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 90%\\\"\\r\\n                    (click)=\\\"onCheckMaterial(material)\\\">\\r\\n                    {{ material.codigoDescricaoMaterial | uppercase }}\\r\\n                  </td>\\r\\n                  <td *ngIf=\\\"material.inGrupoMaterialTabelaPreco == 1\\\" style=\\\"width: 5%;\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" style=\\\"color: #a10\\\">\\r\\n                      <i class=\\\"fas fa-exclamation-triangle\\\" placement=\\\"left\\\" tooltip=\\\"Este item está associado ao grupo {{ material.nomeGrupoMaterialTabelaPreco }}\\\"></i>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <td *ngIf=\\\"material.inGrupoMaterialTabelaPreco == 0\\\" style=\\\"width: 5%; color:#a10;\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" style=\\\"color: #090\\\">\\r\\n                      <i class=\\\"fas fa-check-circle\\\" placement=\\\"left\\\" tooltip=\\\"Este item não possui associações\\\"></i>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searching === false\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"Nenhuma informação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-search\\\"\\r\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zLW1hdGVyaWFpcy1hc3NvY2lhZG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from '../grupos-materiais-associados.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IGrupo } from '../models/grupo-materiais-associados';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-grupos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  codClasse: number = null;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  showMateriais = true;\r\n\r\n  formMateriais: FormGroup;\r\n\r\n  materiaisAssociados: Array<any> =[];\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n  delete = false;\r\n  adicionar = false;\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n  excluirGrupo = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoMateriaisAssociadosService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n    this.setFormMateriais();\r\n    this.titleService.setTitle('Cadastro de grupo de materiais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar grupo de materiais';\r\n      } else {\r\n        this.appTitle = 'Novo grupo de materiais';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Grupos de materiais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/grupos-materiais-associados/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisGrupoService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: IGrupo = resolver.data;\r\n      this.form = this.formBuilder.group({\r\n        codGrupo: [detalhes.codGrupo],\r\n        nomeGrupo: [detalhes.nomeGrupo, [Validators.required]],\r\n        codSituacao: [detalhes.inSituacao, [Validators.required]],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.materiaisAssociados = detalhes.materiais;\r\n\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setFormMateriais(): void {\r\n    this.formMateriais = this.formBuilder.group({\r\n      codLinha: [null, [Validators.required]],\r\n      codClasse: [null, [Validators.required]],\r\n      codMaterial: [null, [Validators.required]],\r\n      checked: [false]\r\n    });\r\n  }\r\n\r\n  onLimparAssociacoes(materiais: Array<any>, excluir) {\r\n  const assocMateriais = this.form.get('assocMateriais') as FormArray;\r\n    assocMateriais.clear();\r\n    this.codClasse = null;\r\n\r\n    if (excluir == true) {\r\n\r\n      let params = {\r\n        codGrupo: materiais[0].codGrupo,\r\n        codMaterial: 0\r\n      }\r\n\r\n      this.confirmDeleteAll()\r\n      .subscribe((response: boolean) =>{\r\n\r\n        // materiais.removeAt()\r\n\r\n        this.onDeleteMaterial(params);\r\n\r\n        // if(!response){\r\n        //   if(materiais.length === 1){\r\n        //     this.materiaisAssociados\r\n        //       .map(item => {\r\n        //         if(item.codMaterial == materiais[0]['codMaterial']){\r\n        //           item.checked = false\r\n        //         }\r\n        //       })\r\n        //   }\r\n        //   return\r\n        // }\r\n\r\n        // materiais\r\n        //   .map(material => {\r\n\r\n        //     if(!material?.codAssociacao){\r\n        //       this.materiaisAssociados = this.materiaisAssociados\r\n        //         .filter(item => material.codMaterial != item.codMaterial)\r\n        //       return\r\n        //     }\r\n        //       this.onDeleteMaterial(params);\r\n\r\n        //   });\r\n      });\r\n\r\n    } else {\r\n\r\n      this.confirmDelete()\r\n      .subscribe((response: boolean) =>{\r\n\r\n        if(!response){\r\n          if(materiais.length === 1){\r\n            this.materiaisAssociados\r\n              .map(item => {\r\n                if(item.codMaterial == materiais[0]['codMaterial']){\r\n                  item.checked = false\r\n                }\r\n              })\r\n          }\r\n          return\r\n        }\r\n\r\n        materiais\r\n          .map(material => {\r\n\r\n            if(!material?.codAssociacao){\r\n              this.materiaisAssociados = this.materiaisAssociados\r\n                .filter(item => material.codMaterial != item.codMaterial)\r\n              return\r\n            }\r\n              this.onDeleteMaterial(material);\r\n           \r\n          });\r\n      });\r\n\r\n    }\r\n\r\n      this.delete = true;\r\n  }\r\n\r\n  onDeleteMaterial(item): void {\r\n\r\n    this.loaderNavbar = true;\r\n\r\n    const id = this.activatedRoute.snapshot.params.id;\r\n\r\n    this.materiaisGrupoService\r\n      .deleteAssociacao(id, item.codMaterial)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.loaderFullScreen = false;\r\n\r\n          if (item.codMaterial == 0) {\r\n            this.materiaisAssociados = this.materiaisAssociados.filter( material => material.codMaterial != item.codMaterial)\r\n          }\r\n\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.success) {\r\n            this.pnotifyService.success();\r\n          }\r\n\r\n          this.materiaisAssociados = this.materiaisAssociados.filter( material => material.codMaterial != item.codMaterial)\r\n\r\n          if (item.codMaterial == 0) {\r\n            this.materiaisAssociados = [];\r\n          }\r\n\r\n        },\r\n        (error: any) => {\r\n\r\n          const message = error?.error?.mensagem;\r\n\r\n          message ?\r\n          this.pnotifyService.error(message) :\r\n          this.pnotifyService.error()\r\n        }\r\n      );\r\n\r\n\r\n\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmDeleteAll(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão de todos os registros?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onChangeLinha(codLinha: number) {\r\n    this.formMateriais.controls.codClasse.reset();\r\n    this.formMateriais.controls.codClasse.setValue(null);\r\n    this.formMateriais.controls.codClasse.enable();\r\n    this.formMateriais.controls.codClasse.setValidators([Validators.required]);\r\n    this.formMateriais.controls.codClasse.updateValueAndValidity();\r\n\r\n    this.formMateriais.controls.codMaterial.reset();\r\n    this.formMateriais.controls.codMaterial.disable();\r\n    this.formMateriais.controls.codMaterial.setValue(null);\r\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n  }\r\n\r\n  onChangeClasse(codClasse: number) {\r\n    this.formMateriais.controls.codMaterial.reset();\r\n    this.formMateriais.controls.codMaterial.enable();\r\n    this.formMateriais.controls.codMaterial.setValue(null);\r\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.getMateriais(codClasse);\r\n  }\r\n\r\n  getMateriais(codClasse: number): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      this.comercialService\r\n        .getMateriais({\r\n          codClasse: codClasse,\r\n          situacao: 'A'\r\n        })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiais = response.data;\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n\r\n              this.formMateriais.controls.codMaterial.setValue(0);\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onFilterMateriais(): void {\r\n    if (this.formMateriais.valid) {\r\n      this.loaderNavbar = true;\r\n      this.searching = true;\r\n      this.materiaisLista = [];\r\n      this.materiaisListaLoaded = false;\r\n      this.materiaisListaEmpty = false;\r\n\r\n      let params = {\r\n        codClasse: this.formMateriais.value.codClasse,\r\n        situacao: 'A',\r\n        tipoMaterial: 'Distribuidora'\r\n      };\r\n\r\n      if (this.formMateriais.value.codMaterial !== 0) {\r\n        Object.assign(params, {\r\n          codMaterial: this.formMateriais.value.codMaterial,\r\n          \r\n        });\r\n      }\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.firstSearch = true;\r\n            this.searching = false;\r\n            this.loaderNavbar = false;\r\n            this.materiaisListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiaisLista = response.data.map(function (el: any) {\r\n                var o = Object.assign({}, el);\r\n                o.checked = 0;\r\n                return o;\r\n              });\r\n\r\n              if (this.materiaisLista.length > 9) {\r\n                this.tableConfigMateriais.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigMateriais.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.materiaisListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.materiaisListaEmpty = true;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n    this.materiaisLista.map(material => material.checked = this.toggleAll)\r\n  }\r\n\r\n  onCheckMaterial(material: any): void {\r\n    material.checked = !material.checked;\r\n  }\r\n\r\n  onAssociarMateriais() {\r\n    this.toggleAll = false;\r\n\r\n    this.materiaisLista\r\n      .filter(material => material.checked)\r\n      .forEach(material => {\r\n\r\n        if (this.codClasse === null) {\r\n          this.codClasse = material.codClasse;\r\n        }\r\n\r\n        if(this.materiaisAssociados.some(item => item.codMaterial == material.codigoMaterial)){\r\n          return\r\n        }\r\n\r\n        this.materiaisAssociados.push({\r\n          codMaterial: material.codigoMaterial,\r\n          nomeMaterial: material.descricao,\r\n          codClasse: material.codClasse,\r\n        });\r\n\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n\r\n      });\r\n\r\n    this.materiaisLista = this.materiaisLista.filter(material => !material.checked);\r\n\r\n    this.adicionar = true;\r\n\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n\r\n    if (this.form.pristine && this.delete === false && this.adicionar === false) {\r\n      this.location.back();\r\n      return\r\n    }\r\n\r\n    if (!this.form.valid) {\r\n      return\r\n    }\r\n\r\n    this.loaderNavbar = true;\r\n    this.submittingForm = true;\r\n\r\n    let params = this.form.value;\r\n    params['assocMateriais'] = this.materiaisAssociados;\r\n\r\n    this.materiaisGrupoService\r\n      .save(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.submittingForm = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.success === true) {\r\n            this.formChanged = false;\r\n            this.pnotifyService.success(response.mensagem);\r\n\r\n            this.activatedRoute.params.subscribe((params: any) => {\r\n              let navigateTo: string;\r\n\r\n              if (params.hasOwnProperty('id')) {\r\n                navigateTo = '../../lista';\r\n              } else {\r\n                navigateTo = '../lista';\r\n              }\r\n\r\n              this.router.navigate([navigateTo], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            });\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoMateriaisAssociadosService } from '../grupos-materiais-associados.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { IGrupo } from '../models/grupo-materiais-associados';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-grupos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeGrupo';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<IGrupo> = [];\r\n  dadosPagination: Array<IGrupo> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  grupoSelecionado: IGrupo;\r\n  materiais: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoMateriaisAssociadosService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Grupos de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setGrupoSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Grupos de materiais associados',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      grupo: [formValue.grupo],\r\n      material: [formValue.material],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      grupo: null,\r\n      material: null,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setGrupoSelecionado(): void {\r\n    this.grupoSelecionado = {\r\n      codGrupo: null,\r\n      nomeGrupo: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      materiais: [],\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.grupo) {\r\n      params.grupo = this.form.value.grupo;\r\n    }\r\n\r\n    if (this.form.value.material) {\r\n      params.material = this.form.value.material;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisGrupoService\r\n      .getListaGrupos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(grupo: any): string {\r\n    let borderClass: string;\r\n\r\n    if (grupo.inSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (grupo.inSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(grupo: IGrupo): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados (${grupo.nomeGrupo})`;\r\n    this.setGrupoSelecionado();\r\n    this.grupoSelecionado = grupo;\r\n    this.materiais = [];\r\n\r\n    this.materiaisGrupoService\r\n      .getAssociacoesMateriais(grupo.codGrupo)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiais = response.data;\r\n          \r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(grupo: IGrupo): void {\r\n    this.router.navigate(['../editar', grupo.codGrupo], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, grupo: IGrupo): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n          this.onFilter();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateGrupo(index: number, grupo: IGrupo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.materiaisGrupoService.activateGrupo(grupo.codGrupo);\r\n  }\r\n\r\n  onInactivate(index: number, grupo: IGrupo): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n          this.onFilter();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateGrupo(index: number, grupo: IGrupo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.materiaisGrupoService.inactivateGrupo(grupo.codGrupo);\r\n  }\r\n\r\n  refreshMainData(grupo: IGrupo): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (grupo.codGrupo === this.dados[i].codGrupo) {\r\n        this.dados[i].inSituacao = grupo.inSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Grupos de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"grupo\\\">\\r\\n                <span class=\\\"mr-1\\\">Grupo</span>\\r\\n                <ng-template #tooltipLabelGrupoTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do grupo</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelGrupoTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"grupo\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"material\\\">\\r\\n                <span class=\\\"mr-1\\\">Material</span>\\r\\n                <ng-template #tooltipLabelMaterialTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do material</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelMaterialTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"material\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codGrupo'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codGrupo')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome grupo\\\"\\r\\n                [active]=\\\"orderBy == 'nomeGrupo'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeGrupo')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let grupo of dadosPagination; let i = index;\\\" [class.table-active]=\\\"grupo.codGrupo == grupoSelecionado.codGrupo && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(grupo)\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\">\\r\\n              {{ grupo.codGrupo }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\">\\r\\n              {{ grupo.nomeGrupo | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"grupo.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"grupo.nomeUsuario !== null\\\">\\r\\n                {{ grupo.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"grupo.inSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, grupo)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"grupo.inSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, grupo)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(grupo)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiais\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\r\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { IGrupo } from './models/grupo-materiais-associados';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoMateriaisAssociadosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/materiais/grupos-materiais-associados`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaGrupos(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesMateriais(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codGrupo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codGrupo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private saveGrupo(record: IGrupo): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private updateGrupo(record: IGrupo): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(record: IGrupo): Observable<Object | JsonResponse> {\r\n    if (record.codGrupo !== null) {\r\n      return this.updateGrupo(record);\r\n    }\r\n\r\n    return this.saveGrupo(record);\r\n  }\r\n\r\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codGrupo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/inativar`, codGrupo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n\r\n  deleteAssociacao(\r\n    codGrupo: number,\r\n    codMaterial: number\r\n    ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(`${this.API}/remover/${codGrupo}/${codMaterial}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}