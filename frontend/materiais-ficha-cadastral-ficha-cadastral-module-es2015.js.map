{"version":3,"sources":["./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.html","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.scss","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.ts","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral.module.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.html","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral.service.ts","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.ts","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral-routing.module.ts","./src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.scss","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"materiais-ficha-cadastral-ficha-cadastral-module-es2015.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      \\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\n        <comercial-cadastros-materiais-templates-material-principal\\n          [linhas]=\\\"linhas\\\"\\n          [classes]=\\\"classes\\\"\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\n        </comercial-cadastros-materiais-templates-material-principal>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <form [formGroup]=\\\"form\\\">\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Dados do Material</div>\\n            </div>\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null && form.getRawValue().codFichaCadastral == null\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codMaterial\\\">Cód. Mat</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeGrupo\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                disabled\\n                (click)=\\\"buscaMate()\\\"\\n                (blur)=\\\"buscaMate()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('codMaterial') + ' ' + onFieldRequired(form.controls.codMaterial)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-8\\\">\\n              <label for=\\\"nomeMaterial\\\">Material</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeGrupo\\\"\\n                formControlName=\\\"nomeMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                disabled\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('nomeMaterial') + ' ' + onFieldRequired(form.controls.nomeMaterial)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('nomeMaterial')\\\" message=\\\"Material é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"1\\\">Ativo</option>\\n                <option value=\\\"0\\\">Inativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>        \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"descMaterial\\\">Descrição</label>\\n              <textarea \\n                class=\\\"form-control\\\" \\n                rows=\\\"10\\\" \\n                id=\\\"descMaterial\\\"\\n                formControlName=\\\"descMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('descMaterial') + ' ' + onFieldRequired(form.controls.descMaterial)\\\"></textarea>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div formArrayName=\\\"anexos\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col d-flex align-items-start\\\">\\n                <div class=\\\"mtc-title mb-0\\\">Anexos</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <label for=\\\"novoAnexo\\\" class=\\\"d-flex justify-content-end align-items-center\\\" style=\\\"cursor: pointer;\\\">\\n                  <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\n                    <i class=\\\"fas fa-plus\\\"></i>\\n                    <span>Novo</span>\\n                  </p>\\n                </label>\\n                <input\\n                  id=\\\"novoAnexo\\\"\\n                  type=\\\"file\\\"\\n                  (change)=\\\"appendFile($event.target.files)\\\"\\n                  class=\\\"d-none\\\"\\n                  >\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length > 0\\\">\\n              <div class=\\\"col\\\">\\n                <custom-table [config]=\\\"tableConfigAnexos\\\">\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let anexo of anexos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                      <td style=\\\"width: 90%\\\">\\n                        {{ form.value.anexos[i].codAnexo }} - {{ form.value.anexos[i].nomeAnexo | uppercase }}\\n                      </td>\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <a\\n                          [href]=\\\"form.value.anexos[i].linkAnexo\\\"\\n                          *ngIf=\\\"form.value.anexos[i].linkAnexo != null\\\"\\n                          target=\\\"_blank\\\"\\n                          class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                          tooltip=\\\"visualizar\\\">\\n                          <i class=\\\"far fa-eye\\\"></i>\\n                        </a>\\n                      </td>\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <btn-icon\\n                          icon=\\\"fas fa-trash\\\"\\n                          size=\\\"small\\\"\\n                          tooltip=\\\"Excluir\\\"\\n                          (click)=\\\"onDeleteAnexo(form.value.anexos[i].codAnexo, i)\\\">\\n                        </btn-icon>\\n                      </td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length === 0\\\">\\n              <div class=\\\"col\\\">\\n                <message\\n                  icon=\\\"fas fa-exchange-alt\\\"\\n                  text=\\\"Nenhum documento encontrado\\\">\\n                </message>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZmljaGEtY2FkYXN0cmFsL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\n\n//rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { FichaCadastral } from '../models/ficha-cadastral';\nimport { IAnexo } from '../models/anexo';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n// Services\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n@Component({\n  selector: 'comercial-cadastros-setor-atividade-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  tableConfigAnexos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n  formData: Array<FormData> = [];\n\n  codMaterial: number;\n  showAnexos: boolean = false;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparMaterialPrincipal: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService,\n    private confirmModalService: ConfirmModalService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Ficha Cadastral';\n      } else {\n        this.appTitle = 'Nova Ficha Cadastral';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Ficha Cadastral',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/ficha-cadastral/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.fichaCadastralService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: FichaCadastral = this.activatedRoute.snapshot.data\n        .detalhes.data;\n\n      this.form = this.formBuilder.group({\n        codFichaCadastral: [detalhes.codFichaCadastral],\n        codMaterial: [detalhes.codMaterial, [Validators.required]],\n        nomeMaterial: [detalhes.nomeMaterial],\n        descMaterial: [detalhes.descMaterial, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        anexos: this.formBuilder.array([]),\n      });\n\n      if (detalhes.codMaterial != null && detalhes.codFichaCadastral != null) {\n        this.getAnexos(detalhes.codMaterial);\n      }\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n    this.loaderFullScreen = false;\n  }\n\n  getAnexos(codMaterial) {\n    this.loaderNavbar = true;\n    this.showAnexos = false;\n    this.fichaCadastralService\n      .getAnexos(codMaterial)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.setAnexos(response.data);\n            this.showAnexos = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false &&\n            response.hasOwnProperty('mensagem')\n          ) {\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        (error: any) => {\n          if (error['error'].hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setAnexos(anexos: any): void {\n    if (anexos.length > 0) {\n      for (let i = 0; i < anexos.length; i++) {\n        this.onAddAnexos(anexos[i], true);\n      }\n    }\n  }\n\n  get anexos(): FormArray {\n    return this.form.get('anexos') as FormArray;\n  }\n\n  onAddAnexos(anexo: any, manipulateForm?: boolean): void {\n    if (this.checkAnexoExists(anexo) === false) {\n      this.anexos.push(\n        this.formBuilder.group({\n          codAnexo: [anexo.codAnexo],\n          nomeAnexo: [anexo.nomeAnexo],\n          linkAnexo: [anexo.linkAnexo],\n        })\n      );\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  appendFile(files: FileList) {\n    if (files.length === 0) return;\n    const fd = new FormData();\n    fd.append('file', files[0]);\n    this.formData.push(fd);\n\n    this.anexos.push(\n      this.formBuilder.group({\n        nomeAnexo: [files[0]['name']],\n      })\n    );\n    if (this.showAnexos === false) {\n      this.showAnexos = true;\n    }\n  }\n\n  /* onLimparAnexos(): void {\n    const anexos = this.form.get('anexos') as FormArray;\n    anexos.clear();\n  } */\n\n  checkAnexoExists(anexo: any): boolean {\n    return this.form.value.anexos.some((el: any) => {\n      return el.codAnexo === anexo.codAnexo;\n    });\n  }\n\n  onDeleteAnexo(codAnexo: number, index: number): void {\n    this.confirmDelete().subscribe((r: boolean) => {\n      if (codAnexo) {\n        this.loaderNavbar = true;\n        this.fichaCadastralService\n          .deleteAnexo(codAnexo)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe(\n            (response: JsonResponse) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                r ? this.deleteDocumento(index) : null;\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false &&\n                response.hasOwnProperty('mensagem')\n              ) {\n                this.pnotifyService.error(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              if (error['error'].hasOwnProperty('mensagem')) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          );\n      } else {\n        r ? this.deleteDocumento(index) : null;\n        this.formData.splice(index, 1);\n      }\n    });\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteDocumento(index: number) {\n    this.anexos.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  buscaMate(): void {\n    let codMaterial = this.form.getRawValue().codMaterial;\n\n    if (typeof codMaterial !== 'undefined' && codMaterial !== null) {\n      this.loaderNavbar = true;\n\n      this.comercialService\n        .getMateriais({\n          codMaterial: codMaterial,\n        })\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.form.controls.nomeMaterial.setValue(\n                response.data[0].descricao\n              );\n              this.form.controls.nomeMaterial.setValidators([\n                Validators.required,\n              ]);\n              this.form.controls.nomeMaterial.updateValueAndValidity();\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onSubmit(): void {\n    this.codMaterial = null;\n\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n        this.codMaterial = this.form.value.codMaterial;\n\n        this.fichaCadastralService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe(\n            (response: JsonResponse) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                if (\n                  this.formData.length > 0 &&\n                  response.data.codFichaCadastral\n                ) {\n                  this.onPostAnexos(response.data.codFichaCadastral);\n                }\n\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false &&\n                response.hasOwnProperty('mensagem')\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              if (error['error'].hasOwnProperty('mensagem')) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          );\n      }\n    }\n  }\n\n  onPostAnexos(codFichaCadastral: number): void {\n    if (this.formData.length === 0) {\n      this.pnotifyService.notice('Erro');\n      return;\n    }\n\n    const id = this.form.value.codMaterial;\n\n    this.formData.forEach((element, index) => {\n      this.fichaCadastralService\n        .postAnexos(element, id, codFichaCadastral)\n        .subscribe();\n    });\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onLoaderNavbar(event: boolean): void {\n    this.loaderNavbar = event;\n  }\n\n  onLimparMaterialPrincipal(): void {\n    if (this.form.value.codFichaCadastral == null) {\n      this.limparMaterialPrincipal = true;\n      this.onInput();\n\n      this.form.controls.codMaterial.setValue(null);\n      this.form.controls.nomeMaterial.setValue(null);\n\n      setTimeout(() => {\n        this.limparMaterialPrincipal = false;\n      }, 100);\n    } else\n      this.pnotifyService.notice(\n        'Não é possivel alterar um material já cadastrado'\n      );\n  }\n\n  materialPrincipal(material: any): void {\n    this.onInput();\n\n    /* this.form.controls.codLinha.setValue(material.codLinha);\n    this.form.controls.codClasse.setValue(material.codClasse); */\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\n    this.form.controls.nomeMaterial.setValue(material.descricao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosSetorAtividadeFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.fichaCadastralService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codFichaCadastral: null,\n        codMaterial: null,\n        nomeMaterial: null,\n        descMaterial: null,\n        codSituacao: 1,\n        situacao: null,\n        anexos: [],\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule } from './ficha-cadastral-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisFichaCadastralListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisFichaCadastralFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisFichaCadastralListaComponent,\n    ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralModule {}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Ficha cadastral de materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-7\\\">\\n                <label for=\\\"material\\\">Material</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"material\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"codSituacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"codSituacao\\\"\\n                  formControlName=\\\"codSituacao\\\">\\n                  <option value=\\\"\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"0\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-2\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Cód. Material</th>\\n              <th scope=\\\"col\\\">Nome Material</th>\\n              <!-- <th scope=\\\"col\\\">Usuario</th> -->\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let fichaCadastral of dadosPagination; let i = index\\\" [class.table-active]=\\\"fichaCadastral.codFichaCadastral == fichaCadastralSelecionada.codFichaCadastral\\\">\\n              <td\\n                class=\\\"hover\\\"\\n                [ngClass]=\\\"classStatusBorder(fichaCadastral)\\\"\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\n                {{ fichaCadastral.codMaterial }}\\n              </td>\\n              <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\n                {{ fichaCadastral.nomeMaterial }}\\n              </td>\\n              <!-- <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\n                {{ fichaCadastral.nomeUsuario }}\\n              </td> -->\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"fichaCadastral.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, fichaCadastral)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"fichaCadastral.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, fichaCadastral)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(fichaCadastral)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Anexos\\\">\\n          <custom-table *ngIf=\\\"anexos.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. Anexo</th>\\n                <th scope=\\\"col\\\">Nome Arquivo</th>\\n                <th scope=\\\"col\\\"></th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let anexo of anexos\\\">\\n                <td class=\\\"text-center\\\">{{ anexo.codAnexo }}</td>\\n                <td>{{ anexo.nomeAnexo | uppercase }}</td>\\n                <td class=\\\"text-center\\\">\\n                  <a\\n                    [href]=\\\"anexo.linkAnexo\\\"\\n                    target=\\\"_blank\\\"\\n                    class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                    tooltip=\\\"visualizar\\\">\\n                    <i class=\\\"far fa-eye\\\"></i>\\n                  </a>\\n                </td>\\n                <!-- <td>{{ anex.mensagem | uppercase }}</td> -->\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { FichaCadastral } from './models/ficha-cadastral';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisFichaCadastralService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/ficha-cadastral`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaFichaCadastral(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codFichaCadastral: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codFichaCadastral}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codMaterial: number): Observable<any> {\n    return this.http.get(`${this.API}/detalhes/${codMaterial}`).pipe(take(1));\n  }\n\n  private saveFichaCadastral(fichaCadastral: FichaCadastral) {\n    return this.http.post(`${this.API}/salvar`, fichaCadastral).pipe(take(1));\n  }\n\n  private updateFichaCadastral(fichaCadastral: FichaCadastral) {\n    return this.http.put(`${this.API}/atualizar`, fichaCadastral).pipe(take(1));\n  }\n\n  save(fichaCadastral: FichaCadastral): Observable<any> {\n    if (fichaCadastral.codFichaCadastral !== null) {\n      return this.updateFichaCadastral(fichaCadastral);\n    }\n\n    return this.saveFichaCadastral(fichaCadastral);\n  }\n\n  activateFichaCadastral(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateFichaCadastral(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n\n  getAnexos(codMaterial: number): Observable<any> {\n    return this.http.get(`${this.API}/documentos/${codMaterial}`).pipe(take(1));\n  }\n\n  postAnexos(\n    params,\n    codMaterial: number,\n    codFichaCadastral: number\n  ): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexos/salvar?codMaterial=${codMaterial}&codFichaCadastral=${codFichaCadastral}`,\n      params\n    );\n  }\n\n  deleteAnexo(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http.put(`${this.API}/anexos/excluir`, params).pipe(take(1));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { FichaCadastral } from '../models/ficha-cadastral';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-ficha-cadastral-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codFichaCadastral';\n  orderType = 'ASC';\n\n  /* motivosAssociacao: Array<any> = []; */\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<FichaCadastral> = [];\n  dadosPagination: Array<FichaCadastral> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  fichaCadastralSelecionada: FichaCadastral;\n  anexos: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Ficha Cadastral');\n    this.onDetailPanelEmitter();\n    this.setFichaCadastralSelecionada();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Ficha Cadastral',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      material: [formValue.material],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      material: null,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setFichaCadastralSelecionada(): void {\n    this.fichaCadastralSelecionada = {\n      codFichaCadastral: 0,\n      codMaterial: null,\n      nomeMaterial: null,\n      descMaterial: null,\n      codSituacao: 1,\n      situacao: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.fichaCadastralService\n      .getListaFichaCadastral(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(fichaCadastral: FichaCadastral): string {\n    let borderClass: string;\n\n    if (fichaCadastral.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (fichaCadastral.codSituacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(fichaCadastral: FichaCadastral): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setFichaCadastralSelecionada();\n    this.fichaCadastralSelecionada = fichaCadastral;\n    this.anexos = [];\n\n    this.fichaCadastralService\n      .getAnexos(fichaCadastral.codMaterial)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.anexos = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(fichaCadastral: FichaCadastral): void {\n    this.router.navigate(['../editar', fichaCadastral.codFichaCadastral], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, fichaCadastral: FichaCadastral): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateFichaCadastral(index, fichaCadastral) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(fichaCadastral);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateFichaCadastral(\n    index: number,\n    fichaCadastral: FichaCadastral\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.fichaCadastralService.activateFichaCadastral(\n      fichaCadastral.codFichaCadastral\n    );\n  }\n\n  onInactivate(index: number, fichaCadastral: FichaCadastral): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateFichaCadastral(index, fichaCadastral) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(fichaCadastral);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateFichaCadastral(\n    index: number,\n    fichaCadastral: FichaCadastral\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.fichaCadastralService.inactivateFichaCadastral(\n      fichaCadastral.codFichaCadastral\n    );\n  }\n\n  refreshMainData(fichaCadastral: FichaCadastral): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (\n        fichaCadastral.codFichaCadastral === this.dados[i].codFichaCadastral\n      ) {\n        this.dados[i].codSituacao = fichaCadastral.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosSetorAtividadeFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisFichaCadastralListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisFichaCadastralFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosMateriaisFichaCadastralListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosSetorAtividadeFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosSetorAtividadeFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZmljaGEtY2FkYXN0cmFsL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"],"sourceRoot":"webpack:///"}