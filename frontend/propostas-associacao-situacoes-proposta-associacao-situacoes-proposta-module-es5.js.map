{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/situacao-proposta/situacao-proposta.service.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/associacao-situacoes-proposta.module.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/lista/lista.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/associacao-situacoes-proposta.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/associacao-situacoes-proposta-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/propostas/associacao-situacoes-proposta/lista/lista.component.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent","activatedRoute","router","location","formBuilder","associacaoSituacoesPropostaService","situacoesPropostaService","pnotifyService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocSituacoes","fixedHeader","bodyHeight","hover","tableConfigSituacoes","colors","hex","descricao","codClasse","formChanged","showSituacoes","linhas","classes","filteredClasses","materiais","toggleAll","searching","firstSearch","situacoesLista","situacoesListaLoaded","situacoesListaEmpty","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","setTitle","subscribe","params","id","appTitle","routerLink","idSubModulo","situacoes","getListaSituacaoProposta","pipe","next","response","hasOwnProperty","success","data","map","el","o","Object","assign","checked","error","mensagem","resolver","snapshot","detalhes","form","group","codAssociacao","descLegenda","required","ordemExibicao","cor","codSituacao","assocSituacoes","array","setSituacoes","situacoesAssociadas","back","color","controls","setValue","length","i","onAddSituacao","situacaoProposta","manipulateForm","checkSituacaoExists","push","codSituacaoProposta","descSituacaoProposta","value","setTimeout","markAsTouched","markAsDirty","some","get","clear","index","confirmDelete","deleteSituacao","showConfirm","removeAt","situacao","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","valid","loaderNavbar","submittingForm","save","reset","navigateTo","navigate","relativeTo","notice","confirm","selector","template","ComercialCadastrosSituacaoPropostaService","http","API","httpParams","param","append","post","put","updateSituacaoProposta","saveSituacaoProposta","codigo","providedIn","ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioResolverGuard","materiaisSimilaridadeService","route","getDetalhes","ComercialCadastrosPropostasAssociacaoSituacoesPropostaModule","declarations","imports","forRoot","providers","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosPropostasAssociacaoSituacoesPropostaService","tidSoftwareService","record","updateAssociacao","saveAssociacao","ComercialService","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosPropostasAssociacaoSituacoesPropostaRoutingModule","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosPropostasAssociacaoSituacoesPropostaListaComponent","detailPanelService","subtitles","text","tableConfig","subtitleBorder","tableConfigMateriais","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setAssociacaoSelecionada","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","associacaoSelecionada","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaAssociacoes","slice","associacao","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesSituacoesProposta","loadedFinished","confirmActivate","asObservable","result","activateAssociacao","refreshMainData","confirmInactive","inactivateAssociacao","ComercialTidSoftwareService","empresas","getEmpresas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"propostas-associacao-situacoes-proposta-associacao-situacoes-proposta-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaService } from '../associacao-situacoes-proposta.service';\nimport { ComercialCadastrosSituacaoPropostaService } from '../../../situacao-proposta/situacao-proposta.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IAssociacao } from '../models/associacao-situacoes-proposta';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector:\n    'comercial-cadastros-propostas-associacao-situacoes-proposta-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocSituacoes: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigSituacoes: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  colors = [\n    {\n      hex: '#FFFF01',\n      descricao: 'Amarillo',\n    },\n    {\n      hex: '#0033FF',\n      descricao: 'Azul',\n    },\n    {\n      hex: '#FB6602',\n      descricao: 'Naranja',\n    },\n    {\n      hex: '#FF0087',\n      descricao: 'Rosado',\n    },\n    {\n      hex: '#610069',\n      descricao: 'Morado',\n    },\n    {\n      hex: '#FA1100',\n      descricao: 'Rojo',\n    },\n  ];\n\n  codClasse: number = null;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  showSituacoes = true;\n\n  /* formSituacoes: FormGroup; */\n\n  situacoes: Array<any>;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  toggleAll = false;\n  searching = false;\n  firstSearch = false;\n\n  situacoesLista: Array<any> = [];\n  situacoesListaLoaded = false;\n  situacoesListaEmpty = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private associacaoSituacoesPropostaService: ComercialCadastrosPropostasAssociacaoSituacoesPropostaService,\n    private situacoesPropostaService: ComercialCadastrosSituacaoPropostaService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n    /* this.setFormMateriais(); */\n    this.titleService.setTitle('Associação de Situações das propostas');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar associação';\n      } else {\n        this.appTitle = 'Nova associação';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Associação de situações',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/propostas/associacao-situacoes-proposta/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.searching = true;\n    this.situacoesListaEmpty = false;\n    this.situacoes = [];\n    this.situacoesLista = [];\n\n    this.situacoesPropostaService\n      .getListaSituacaoProposta()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n          this.searching = false;\n          this.situacoesListaLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.situacoes = response.data;\n            /* this.situacoesLista = response.data; */\n            this.situacoesLista = response.data.map(function (el: any) {\n              var o = Object.assign({}, el);\n              o.checked = 0;\n              return o;\n            });\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false &&\n            response.hasOwnProperty('mensagem')\n          ) {\n            this.pnotifyService.error(response.mensagem);\n            this.situacoesListaEmpty = true;\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          if (error['error'].hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: IAssociacao = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codAssociacao: [detalhes.codAssociacao],\n        descLegenda: [detalhes.descLegenda, [Validators.required]],\n        ordemExibicao: [detalhes.ordemExibicao, [Validators.required]],\n        cor: [detalhes.cor],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        assocSituacoes: this.formBuilder.array([]),\n      });\n\n      this.setSituacoes(detalhes.situacoesAssociadas);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  onColorChange(color: any): void {\n    this.form.controls.cor.setValue(color.hex);\n  }\n\n  /* buscaMate(): void {\n    let codMaterial = this.form.getRawValue().codMaterial;\n\n    if (typeof codMaterial !== 'undefined' && codMaterial !== null) {\n      this.loaderNavbar = true;\n\n      this.comercialService\n        .getMateriais({\n          codMaterial: codMaterial,\n        })\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.form.controls.nomeMaterial.setValue(\n                response.data[0].descricao\n              );\n              this.form.controls.nomeMaterial.setValidators([\n                Validators.required,\n              ]);\n              this.form.controls.nomeMaterial.updateValueAndValidity();\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  } */\n\n  setSituacoes(situacoes: any): void {\n    if (situacoes.length > 0) {\n      for (let i = 0; i < situacoes.length; i++) {\n        this.onAddSituacao(situacoes[i]);\n      }\n    }\n  }\n\n  get assocSituacoes(): FormArray {\n    return this.form.get('assocSituacoes') as FormArray;\n  }\n\n  onAddSituacao(situacaoProposta: any, manipulateForm?: boolean): void {\n    if (this.checkSituacaoExists(situacaoProposta) === false) {\n      this.assocSituacoes.push(\n        this.formBuilder.group({\n          codSituacaoProposta: [situacaoProposta.codSituacaoProposta],\n          descSituacaoProposta: [situacaoProposta.descSituacaoProposta],\n        })\n      );\n\n      if (this.form.value.assocSituacoes.length > 9) {\n        if (this.tableConfigAssocSituacoes.fixedHeader === false) {\n          this.showSituacoes = false;\n          this.tableConfigAssocSituacoes.fixedHeader = true;\n\n          setTimeout(() => {\n            this.showSituacoes = true;\n          }, 1);\n        }\n      }\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkSituacaoExists(situacaoProposta: any): boolean {\n    return this.form.value.assocSituacoes.some((el: any) => {\n      return el.codSituacaoProposta === situacaoProposta.codSituacaoProposta;\n    });\n  }\n\n  onLimparAssociacoes(): void {\n    const assocSituacoes = this.form.get('assocSituacoes') as FormArray;\n    assocSituacoes.clear();\n  }\n\n  onDeleteSituacao(index: number): void {\n    this.confirmDelete().subscribe((response: boolean) =>\n      response ? this.deleteSituacao(index) : null\n    );\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteSituacao(index: number) {\n    this.assocSituacoes.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n\n    for (let index = 0; index < this.situacoesLista.length; index++) {\n      this.situacoesLista[index].checked = this.toggleAll === true ? 1 : 0;\n    }\n  }\n\n  onCheckSituacao(index: number, situacao: any): void {\n    this.situacoesLista[index].checked = situacao.checked == 0 ? 1 : 0;\n  }\n\n  onAssociarSituacoes(): void {\n    this.toggleAll = false;\n\n    for (let index = 0; index < this.situacoesLista.length; index++) {\n      if (this.situacoesLista[index].checked === 1) {\n        const situacao = {\n          codSituacaoProposta: this.situacoesLista[index].codSituacaoProposta,\n          descSituacaoProposta: this.situacoesLista[index].situacaoProposta,\n        };\n\n        this.onAddSituacao(situacao, true);\n        this.situacoesLista[index].checked = 0;\n      }\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        if (this.form.value.assocSituacoes.length > 0) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.associacaoSituacoesPropostaService\n            .save(this.form.value)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n              })\n            )\n            .subscribe({\n              next: (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success(response.mensagem);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              error: (error: any) => {\n                this.pnotifyService.error();\n              }\n            });\n        } else {\n          this.pnotifyService.notice('Associe pelo menos uma situação.');\n        }\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"mtc-title\\\">Associação de Situações das Propostas</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-8\\\">\\n            <label for=\\\"descLegenda\\\">Legenda</label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <div class=\\\"btn-group\\\" dropdown>\\n                    <button dropdownToggle type=\\\"button\\\" class=\\\"color-dropdown dropdown-toggle\\\" aria-controls=\\\"color-dropdown\\\">\\n                      <div [ngStyle]=\\\"{'backgroundColor': form.value.cor}\\\"></div>\\n                    </button>\\n                    <ul id=\\\"color-dropdown\\\" *dropdownMenu class=\\\"dropdown-menu\\\">\\n                      <li role=\\\"menuitem\\\">\\n                        <a\\n                          class=\\\"dropdown-item\\\"\\n                          href=\\\"javascript:void(0)\\\"\\n                          *ngFor=\\\"let color of colors\\\"\\n                          (click)=\\\"onColorChange(color)\\\">\\n                          <div class=\\\"color-hex\\\" [ngStyle]=\\\"{'backgroundColor': color.hex}\\\"></div>\\n                          <div>{{ color.descricao }}</div>\\n                        </a>\\n                      </li>\\n                    </ul>\\n                  </div>\\n                </span>\\n              </div>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"descLegenda\\\"\\n                formControlName=\\\"descLegenda\\\"\\n                (input)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('descLegenda') + ' ' + onFieldRequired(form.controls.descLegenda)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descLegenda')\\\" message=\\\"Legenda é obrigatória.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"ordemExibicao\\\">Ord. exibição</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"ordemExibicao\\\"\\n              formControlName=\\\"ordemExibicao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('ordemExibicao') + ' ' + onFieldRequired(form.controls.ordemExibicao)\\\">\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n              <option value=\\\"1\\\">Primeira</option>\\n              <option value=\\\"2\\\">Segunda</option>\\n              <option value=\\\"3\\\">Terceira</option>\\n              <option value=\\\"4\\\">Quarta</option>\\n              <option value=\\\"5\\\">Quinta</option>\\n              <option value=\\\"6\\\">Sexta</option>\\n              <option value=\\\"7\\\">Sétima</option>\\n              <option value=\\\"8\\\">Oitava</option>\\n              <option value=\\\"9\\\">Nona</option>\\n              <option value=\\\"10\\\">Décima</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-lg-2\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n              <option value=\\\"1\\\">Ativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"assocSituacoes\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Situações Similares</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparAssociacoes()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showSituacoes && form.value.assocSituacoes.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigAssocSituacoes\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Situação</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let situacao of assocSituacoes.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 95%\\\">\\n                      {{ form.value.assocSituacoes[i].codSituacaoProposta }} - {{ form.value.assocSituacoes[i].descSituacaoProposta | uppercase }}\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteSituacao(i)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showSituacoes && form.value.assocSituacoes.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div *ngIf=\\\"situacoesLista.length > 0\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de situações</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarSituacoes()\\\"\\n                [disabled]=\\\"searching === true\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span>Associar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigSituacoes\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll()\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Situação</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let situacao of situacoesLista; let i = index;\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"situacao.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onCheckSituacao(i, situacao)\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 95%\\\"\\n                    (click)=\\\"onCheckSituacao(i, situacao)\\\">\\n                    {{ situacao.situacaoProposta | uppercase}}\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos pesquisando as situações para você...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"searching === false\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"situacoesListaEmpty && situacoesListaLoaded\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"Nenhuma informação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { SituacaoProposta } from './models/situacao-proposta';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosSituacaoPropostaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/situacao-proposta`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaSituacaoProposta(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getListaSituacaoPropostaTid(): Observable<any> {\n    return this.http.get(`${this.API}/tid/lista`).pipe(take(1));\n  }\n\n  getAlteracoes(codSituacaoProposta: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codSituacaoProposta}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codSituacaoProposta: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codSituacaoProposta}`)\n      .pipe(take(1));\n  }\n\n  private saveSituacaoProposta(situacaoProposta: SituacaoProposta) {\n    return this.http.post(`${this.API}/salvar`, situacaoProposta).pipe(take(1));\n  }\n\n  private updateSituacaoProposta(situacaoProposta: SituacaoProposta) {\n    return this.http\n      .put(`${this.API}/atualizar`, situacaoProposta)\n      .pipe(take(1));\n  }\n\n  save(situacaoProposta: SituacaoProposta): Observable<any> {\n    if (situacaoProposta.codSituacaoProposta !== null) {\n      return this.updateSituacaoProposta(situacaoProposta);\n    }\n\n    return this.saveSituacaoProposta(situacaoProposta);\n  }\n\n  activateSituacaoProposta(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateSituacaoProposta(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaService } from '../associacao-situacoes-proposta.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisSimilaridadeService: ComercialCadastrosPropostasAssociacaoSituacoesPropostaService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.materiaisSimilaridadeService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codAssociacao: null,\n        descLegenda: null,\n        cor: '#0033FF',\n        ordemExibicao: '',\n        codSituacao: 1,\n        situacoesAssociadas: [],\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaRoutingModule } from './associacao-situacoes-proposta-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaService } from './associacao-situacoes-proposta.service';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosPropostasAssociacaoSituacoesPropostaListaComponent,\n    ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent,\n  ],\n  imports: [\n    BsDropdownModule.forRoot(),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosPropostasAssociacaoSituacoesPropostaRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [\n    PNotifyService,\n    ComercialCadastrosPropostasAssociacaoSituacoesPropostaService,\n  ],\n})\nexport class ComercialCadastrosPropostasAssociacaoSituacoesPropostaModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9wcm9wb3N0YXMvYXNzb2NpYWNhby1zaXR1YWNvZXMtcHJvcG9zdGEvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"::ng-deep .input-group .custom-select:not(:last-child),\\n::ng-deep .input-group .form-control:not(:last-child) {\\n  border-top-right-radius: 0.25rem;\\n  border-bottom-right-radius: 0.25rem;\\n}\\n::ng-deep .color-dropdown {\\n  background-color: transparent;\\n  border: unset;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 0px;\\n}\\n::ng-deep .color-dropdown div {\\n  border-radius: 50%;\\n  content: \\\"\\\";\\n  height: 15px;\\n  width: 15px;\\n}\\n::ng-deep .color-dropdown::after {\\n  margin-top: 4px;\\n  margin-left: 5px !important;\\n}\\n::ng-deep .color-dropdown:focus {\\n  outline: unset;\\n}\\n::ng-deep ul#color-dropdown li a.dropdown-item {\\n  display: -ms-flexbox;\\n  display: flex;\\n}\\n::ng-deep ul#color-dropdown li a.dropdown-item .color-hex {\\n  border-radius: 50%;\\n  content: \\\"\\\";\\n  height: 15px;\\n  margin-right: 8px;\\n  margin-top: 4px;\\n  width: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2FkYXN0cm9zL3Byb3Bvc3Rhcy9hc3NvY2lhY2FvLXNpdHVhY29lcy1wcm9wb3N0YS9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSU07O0VBQ0UsZ0NBQUE7RUFDQSxtQ0FBQTtBQUZSO0FBTUU7RUFDRSw2QkFBQTtFQUNBLGFBQUE7RUFDQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSxZQUFBO0FBSko7QUFLSTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FBSE47QUFLSTtFQUNFLGVBQUE7RUFDQSwyQkFBQTtBQUhOO0FBS0k7RUFDRSxjQUFBO0FBSE47QUFRTTtFQUNFLG9CQUFBO0VBQUEsYUFBQTtBQU5SO0FBT1E7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtBQUxWIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvY2FkYXN0cm9zL3Byb3Bvc3Rhcy9hc3NvY2lhY2FvLXNpdHVhY29lcy1wcm9wb3N0YS9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xuICAuaW5wdXQtZ3JvdXAge1xuICAgIC5jdXN0b20tc2VsZWN0LFxuICAgIC5mb3JtLWNvbnRyb2wge1xuICAgICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMjVyZW07XG4gICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1cmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAuY29sb3ItZHJvcGRvd24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogdW5zZXQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgZGl2IHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgd2lkdGg6IDE1cHg7XG4gICAgfVxuICAgICY6OmFmdGVyIHtcbiAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1cHggIWltcG9ydGFudDtcbiAgICB9XG4gICAgJjpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiB1bnNldDtcbiAgICB9XG4gIH1cbiAgdWwjY29sb3ItZHJvcGRvd24ge1xuICAgIGxpIHtcbiAgICAgIGEuZHJvcGRvd24taXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIC5jb2xvci1oZXgge1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICBoZWlnaHQ6IDE1cHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgICAgICAgbWFyZ2luLXRvcDogNHB4O1xuICAgICAgICAgIHdpZHRoOiAxNXB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n// Interfaces\nimport { IAssociacao } from './models/associacao-situacoes-proposta';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosPropostasAssociacaoSituacoesPropostaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/propostas/associacao-situacoes-proposta`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaAssociacoes(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesSituacoesProposta(\n    codAssociacao: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/associacoes/${codAssociacao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codAssociacao: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codAssociacao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveAssociacao(\n    record: IAssociacao\n  ): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\n  }\n\n  private updateAssociacao(\n    record: IAssociacao\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(record: IAssociacao): Observable<Object | JsonResponse> {\n    if (record.codAssociacao !== null) {\n      return this.updateAssociacao(record);\n    }\n\n    return this.saveAssociacao(record);\n  }\n\n  activateAssociacao(codAssociacao: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codAssociacao)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateAssociacao(\n    codAssociacao: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/inativar`, codAssociacao)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Associação de Situações das propostas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"situacaoProposta\\\">\\n                <span class=\\\"mr-1\\\">Situação da Proposta</span>\\n                <ng-template #tooltipLabelSituacaoPropostaTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou Descrição </p>\\n                  <p class=\\\"text-nowrap mb-0\\\">da Situação da Proposta</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelSituacaoPropostaTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"situacaoProposta\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codAssociacao'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codAssociacao')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Legenda\\\"\\n                [active]=\\\"orderBy == 'descLegenda'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('descLegenda')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Ord. de exibição</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Dt. Cadastro</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let associacao of dadosPagination; let i = index;\\\" [class.table-active]=\\\"associacao.codAssociacao == associacaoSelecionada.codAssociacao && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(associacao)\\\"\\n              (click)=\\\"onDetails(associacao)\\\">\\n              {{ associacao.codAssociacao }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(associacao)\\\">\\n              {{ associacao.descLegenda | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(associacao)\\\">\\n              {{ associacao.ordemExibicao }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(associacao)\\\">\\n              {{ associacao.dataCadastro | date: 'dd/MM/yyyy HH:mm' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(associacao)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"associacao.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"associacao.nomeUsuario !== null\\\">\\n                {{ associacao.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"associacao.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, associacao)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"associacao.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, associacao)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(associacao)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"situacoesAssociadas.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let situacao of situacoesAssociadas\\\">\\n              <td class=\\\"text-center\\\">{{ situacao.codSituacaoProposta }}</td>\\n              <td>{{ situacao.descSituacaoProposta | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosPropostasAssociacaoSituacoesPropostaListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosPropostasAssociacaoSituacoesPropostaFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosPropostasAssociacaoSituacoesPropostaRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosPropostasAssociacaoSituacoesPropostaService } from '../associacao-situacoes-proposta.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IAssociacao } from '../models/associacao-situacoes-proposta';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-similaridade-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosPropostasAssociacaoSituacoesPropostaListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'codSituacaoProposta';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IAssociacao> = [];\n  dadosPagination: Array<IAssociacao> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  associacaoSelecionada: IAssociacao;\n  situacoesAssociadas: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private associacaoSituacoesPropostaService: ComercialCadastrosPropostasAssociacaoSituacoesPropostaService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Associação de situações da proposta');\n    this.onDetailPanelEmitter();\n    this.setAssociacaoSelecionada();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Associação de situações da proposta',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      situacaoProposta: [formValue.situacaoProposta],\n      codSituacao: [formValue.codSituacao ? formValue.codSituacao : 1],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      situacaoProposta: null,\n      codSituacao: null,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setAssociacaoSelecionada(): void {\n    this.associacaoSelecionada = {\n      codAssociacao: null,\n      ordemExibicao: null,\n      descLegenda: null,\n      cor: null,\n      codSituacao: null,\n      situacoesAssociadas: [],\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.situacaoProposta) {\n      params.situacaoProposta = this.form.value.situacaoProposta;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.associacaoSituacoesPropostaService\n      .getListaAssociacoes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(associacao: IAssociacao): string {\n    let borderClass: string;\n\n    if (associacao.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (associacao.codSituacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(associacao: IAssociacao): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Associações (${associacao.descLegenda})`;\n    this.setAssociacaoSelecionada();\n    this.associacaoSelecionada = associacao;\n    this.situacoesAssociadas = [];\n\n    this.associacaoSituacoesPropostaService\n      .getAssociacoesSituacoesProposta(associacao.codAssociacao)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.situacoesAssociadas = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(associacao: IAssociacao): void {\n    this.router.navigate(['../editar', associacao.codAssociacao], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, associacao: IAssociacao): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateAssociacao(index, associacao) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(associacao);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateAssociacao(index: number, associacao: IAssociacao): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.associacaoSituacoesPropostaService.activateAssociacao(\n      associacao.codAssociacao\n    );\n  }\n\n  onInactivate(index: number, associacao: IAssociacao): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateAssociacao(index, associacao) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(associacao);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateAssociacao(\n    index: number,\n    associacao: IAssociacao\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.associacaoSituacoesPropostaService.inactivateAssociacao(\n      associacao.codAssociacao\n    );\n  }\n\n  refreshMainData(associacao: IAssociacao): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (associacao.codAssociacao === this.dados[i].codAssociacao) {\n        this.dados[i].codSituacao = associacao.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}