{"version":3,"sources":["./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.html","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario-resolver.guard.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores.service.ts","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores.module.ts","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.ts","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.ts","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/vendedores-routing.module.ts","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.scss","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/formulario/formulario.component.scss","./src/app/modules/comercial/integracoes/arcelor-mittal/vendedores/lista/lista.component.html"],"names":[],"mappings":"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","file":"vendedores-vendedores-module-es2015.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Vendedor\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    *ngIf=\\\"form\\\"\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSave()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"dsArcelorMittal\\\">Vendedor (Arcelor Mittal)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"dsArcelorMittal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"vendManetoni\\\">Vendedor (Manetoni)</label>\\r\\n            <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"vendedores\\\"\\r\\n                formControlName=\\\"vendManetoni\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"vendManetoni\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"id\\\">\\r\\n              </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"escritorio\\\">Escritórios</label>\\r\\n            <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"escritorios\\\"\\r\\n                formControlName=\\\"escritorio\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"escritorio\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"id\\\">\\r\\n              </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from '../vendedores.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    // console.log(route);\r\n    // if (route.params && route.params['id']) {\r\n    //   return this.vendedoresService.getAssociacoes(route.params['id']);\r\n    // }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      responseCode: 200,\r\n      result: [],\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IVendedor } from './models/vendedor';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/integracoes/arcelor-mittal/vendedores`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  /* getLista() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1));\r\n  } */\r\n\r\n  getLista(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoes(idArcelorMittal: string) {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${idArcelorMittal}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/vendedores`).pipe(take(1));\r\n  }\r\n\r\n  updateAssociacao(data: any) {\r\n    return this.http.put(`${this.API}/salvar`, data).pipe(take(1));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialIntegracoesArcelorMittalVendedoresRoutingModule } from './vendedores-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialIntegracoesArcelorMittalVendedoresListaComponent } from './lista/lista.component';\r\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from './vendedores.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialIntegracoesArcelorMittalVendedoresListaComponent,\r\n    ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialIntegracoesArcelorMittalVendedoresRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [\r\n    PNotifyService,\r\n    ComercialIntegracoesArcelorMittalVendedoresService,\r\n  ],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from './../vendedores.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ComercialService } from '../../../../comercial.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-integracoes-arcelor-mittal-vendedores-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderFullScreen = true;\r\n  loadingNavBar = false;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  vendedores: any = [];\r\n  escritorios: Array<any> = [];\r\n\r\n  constructor(\r\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getFormFields();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Integração com Arcelor Mittal',\r\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Vendedores',\r\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}/vendedores`,\r\n        },\r\n        {\r\n          descricao: 'Cadastro',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.vendedoresService\r\n      .getVendedores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.vendedores = response.data;\r\n          } else {\r\n            this.handleGetFormFields();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.handleGetFormFields();\r\n          }\r\n        }\r\n      });\r\n\r\n    this.comercialService\r\n      .getEscritorios()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.escritorios = response['result'];\r\n          } else {\r\n            this.handleGetFormFields();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleGetFormFields();\r\n        }\r\n      });\r\n  }\r\n\r\n  handleGetFormFields(): void {\r\n    this.pnotifyService.error();\r\n    //this.location.back();\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      const detalhes = this.activatedRoute.snapshot.data;\r\n      \r\n      this.form = this.formBuilder.group({\r\n        idArcelorMittal: [detalhes.idArcelorMittal, Validators.required],\r\n        dsArcelorMittal: [\r\n          {\r\n            value: detalhes.nomeArcelorMittal,\r\n            disabled: true,\r\n          },\r\n        ],\r\n        vendManetoni: [detalhes.idManetoni],\r\n        escritorio: [detalhes.idEscritorio],\r\n      });\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    this.loadingNavBar = true;\r\n\r\n    this.vendedoresService\r\n      .updateAssociacao(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.form.reset();\r\n            this.formChanged = false;\r\n            this.pnotifyService.success(response.mensagem);\r\n\r\n            this.activatedRoute.params.subscribe((params: any) => {\r\n              let navigateTo: string;\r\n\r\n              if (params.hasOwnProperty('id')) {\r\n                navigateTo = '../../lista';\r\n              } else {\r\n                navigateTo = '../lista';\r\n              }\r\n\r\n              this.router.navigate([navigateTo], {\r\n                relativeTo: this.activatedRoute,\r\n              });\r\n            });\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialIntegracoesArcelorMittalVendedoresService } from '../vendedores.service';\r\nimport { ComercialService } from '../../../../comercial.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { IVendedor } from '../models/vendedor';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-cross-sell-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresListaComponent\r\n  implements OnInit\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Associado',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Não Associado',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigVendedores: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'idArcelorMittal';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<IVendedor> = [];\r\n  dadosPagination: Array<IVendedor> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  vendedorSelecionado: IVendedor;\r\n  vendedores: Array<any> = [];\r\n  escritorios: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private vendedoresService: ComercialIntegracoesArcelorMittalVendedoresService,\r\n    private comercialService: ComercialService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Vendedores');\r\n    this.getEscritorios();\r\n    this.onDetailPanelEmitter();\r\n    this.setVendedorSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Integração com Arcelor Mittal',\r\n          routerLink: `/comercial/integracoes/arcelor-mittal/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Vendedores',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getEscritorios(): void {\r\n    this.loaderNavbar = true;\r\n    this.comercialService\r\n      .getEscritorios()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['responseCode'] == 200) {\r\n            this.escritorios = response['result'];\r\n            this.escritorios.unshift({\r\n              id: 0,\r\n              nome: 'EXIBIR TODOS',\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      vendManetoni: [formValue.vendManetoni],\r\n      codVendArcelor: [formValue.codVendArcelor],\r\n      escritorio: [formValue.escritorio],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      vendManetoni: null,\r\n      codVendArcelor: null,\r\n      escritorio: 0,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setVendedorSelecionado(): void {\r\n    this.vendedorSelecionado = {\r\n      idArcelorMittal: null,\r\n      nomeArcelorMittal: null,\r\n      idManetoni: null,\r\n      nomeManetoni: null,\r\n      associado: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.vendManetoni) {\r\n      params.vendManetoni = this.form.value.vendManetoni;\r\n    }\r\n\r\n    if (this.form.value.codVendArcelor) {\r\n      params.codVendArcelor = this.form.value.codVendArcelor;\r\n    }\r\n\r\n    if (this.form.value.escritorio) {\r\n      params.escritorio = this.form.value.escritorio;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n    params.registros = this.form.value.registros;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.vendedoresService\r\n      .getLista(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(vendedor: IVendedor): string {\r\n    let borderClass: string;\r\n\r\n    if (vendedor.associado === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (vendedor.associado === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(vendedor: IVendedor): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Associação (${vendedor.nomeArcelorMittal})`;\r\n    this.vendedorSelecionado = vendedor;\r\n\r\n    if (vendedor.idManetoni != null) {\r\n      this.setVendedorSelecionado;\r\n      this.vendedores[0] = this.vendedorSelecionado;\r\n\r\n      setTimeout(() => {\r\n        this.loaderNavbar = false;\r\n        this.detailPanelService.loadedFinished(false);\r\n      }, 700);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.loaderNavbar = false;\r\n        this.detailPanelService.loadedFinished(true);\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  onEdit(vendedor: IVendedor): void {\r\n    this.router.navigate(['../editar', vendedor.nomeArcelorMittal], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  /* onActivate(index: number, crossSell: ICrossSell): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateGrupo(index, crossSell) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(crossSell);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  } */\r\n\r\n  /* confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateGrupo(index: number, crossSell: ICrossSell): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.materiaisCrossSellService.ac(\r\n      crossSell.codSimilaridade\r\n    );\r\n  } */\r\n\r\n  /* onInactivate(index: number, crossSell: ICrossSell): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateGrupo(index, similaridade) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(similaridade);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  } */\r\n\r\n  /* confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  } */\r\n\r\n  /* inactivateGrupo(index: number, similaridade: ISimilaridade): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.materiaisSimilaridadeService.inactivateGrupo(\r\n      similaridade.codSimilaridade\r\n    );\r\n  } */\r\n\r\n  /* refreshMainData(similaridade: ICrossSell): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (similaridade.codSimilaridade === this.dados[i].codSimilaridade) {\r\n        this.dados[i].codSituacao = similaridade.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  } */\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialIntegracoesArcelorMittalVendedoresListaComponent } from './lista/lista.component';\r\nimport { ComercialIntegracoesArcelorMittalVendedoresFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialIntegracoesArcelorMittalVendedoresListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialIntegracoesArcelorMittalVendedoresFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialIntegracoesArcelorMittalVendedoresFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialIntegracoesArcelorMittalVendedoresRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL3ZlbmRlZG9yZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2FyY2Vsb3ItbWl0dGFsL3ZlbmRlZG9yZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Vendedores\\\">\\r\\n  <!-- <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button> -->\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label for=\\\"vendManetoni\\\">\\r\\n                <span class=\\\"mr-1\\\">Vendedor Manetoni</span>\\r\\n                <ng-template #tooltipLabelVendManetoniTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou Nome</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">do Vendedor</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Manetoni</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVendManetoniTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"vendManetoni\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label for=\\\"codVendArcelor\\\">\\r\\n                <span class=\\\"mr-1\\\">Vendedor Arcelor</span>\\r\\n                <ng-template #tooltipLabelVendArcelorTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código do</p>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Vendedor Arcelor</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelVendArcelorTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"codVendArcelor\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3 mb-2 mb-md-0\\\">\\r\\n              <label for=\\\"escritorio\\\">Escritórios</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"escritorios\\\"\\r\\n                formControlName=\\\"escritorio\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"escritorio\\\"\\r\\n                bindLabel=\\\"nome\\\"\\r\\n                bindValue=\\\"id\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Vendedor (Arcelor Mittal) \\\"\\r\\n                [active]=\\\"orderBy == 'idArcelorMittal'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('idArcelorMittal')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Vendedor Manetoni\\\"\\r\\n                [active]=\\\"orderBy == 'idManetoni'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('idManetoni')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Escritório</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let vendedor of dadosPagination; let i = index;\\\" [class.table-active]=\\\"vendedor.idArcelorMittal == vendedorSelecionado.idArcelorMittal && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(vendedor)\\\"\\r\\n              (click)=\\\"onDetails(vendedor)\\\">\\r\\n              {{ vendedor.nomeArcelorMittal }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(vendedor)\\\">\\r\\n              <span *ngIf=\\\"vendedor.nomeManetoni === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"vendedor.nomeManetoni !== null\\\">\\r\\n                {{ vendedor.nomeManetoni | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(vendedor)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"vendedor.nomeEscritorio === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"vendedor.nomeEscritorio !== null\\\">\\r\\n                {{ vendedor.nomeEscritorio | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(vendedor)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && !dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigVendedores\\\" *ngIf=\\\"vendedores.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Vendedor</th>\\r\\n              <th scope=\\\"col\\\">Escritório</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let vendedor of vendedores\\\">\\r\\n              <td class=\\\"text-center\\\">{{ vendedor.idManetoni }}</td>\\r\\n              <td>{{ vendedor.nomeManetoni | uppercase }}</td>\\r\\n              <td>\\r\\n                <span *ngIf=\\\"vendedor.nomeEscritorio === null\\\">NÃO INFORMADO</span>\\r\\n                <span *ngIf=\\\"vendedor.nomeEscritorio != null\\\">\\r\\n                  {{ vendedor.nomeEscritorio | uppercase }}\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"],"sourceRoot":"webpack:///"}