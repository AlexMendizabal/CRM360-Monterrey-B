{"version":3,"sources":["./src/app/modules/controladoria/fluxo-caixa/listas/bancos/bancos.component.ts","./src/app/modules/controladoria/fluxo-caixa/modals/logs/logs.component.scss","./src/app/modules/controladoria/fluxo-caixa/cadastros/fluxo-caixa/fluxo-caixa.component.scss","./src/app/modules/controladoria/fluxo-caixa/cadastros/bancos/bancos.component.scss","./src/app/modules/controladoria/fluxo-caixa/listas/fluxo-caixa/fluxo-caixa.component.html","./src/app/modules/controladoria/fluxo-caixa/services/tipos-fluxo-caixa.service.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/fluxo-caixa/fluxo-caixa.component.html","./src/app/modules/controladoria/fluxo-caixa/listas/fluxo-caixa/fluxo-caixa.component.scss","./src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.module.ts","./src/app/modules/controladoria/fluxo-caixa/listas/empresas/empresas.component.html","./src/app/modules/controladoria/fluxo-caixa/fluxo-caixa-routing.module.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/fluxo-caixa/fluxo-caixa.component.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component.html","./src/app/modules/controladoria/fluxo-caixa/listas/bancos/bancos.component.scss","./src/app/modules/controladoria/fluxo-caixa/listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component.ts","./src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.component.ts","./src/app/modules/controladoria/fluxo-caixa/services/bancos.service.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/bancos/bancos.component.html","./src/app/shared/services/core/date.service.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/empresas/empresas.component.ts","./src/app/modules/controladoria/fluxo-caixa/services/fluxo-caixa.service.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/empresas/empresas.component.html","./src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.component.html","./src/app/modules/controladoria/fluxo-caixa/listas/empresas/empresas.component.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component.scss","./src/app/modules/controladoria/fluxo-caixa/modals/logs/logs.component.html","./src/app/modules/controladoria/fluxo-caixa/services/empresas.service.ts","./src/app/modules/controladoria/fluxo-caixa/listas/empresas/empresas.component.scss","./src/app/modules/controladoria/fluxo-caixa/listas/fluxo-caixa/fluxo-caixa.component.ts","./src/app/modules/controladoria/fluxo-caixa/modals/logs/logs.component.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/bancos/bancos.component.ts","./src/app/modules/controladoria/fluxo-caixa/cadastros/empresas/empresas.component.scss","./src/app/modules/controladoria/fluxo-caixa/fluxo-caixa.component.scss","./src/app/modules/controladoria/fluxo-caixa/listas/bancos/bancos.component.html","./src/app/modules/controladoria/fluxo-caixa/listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component.scss","./src/app/modules/controladoria/fluxo-caixa/listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component.html"],"names":[],"mappings":"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","file":"fluxo-caixa-fluxo-caixa-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ControladoriaBancosService } from '../../services/bancos.service';\r\n\r\n@Component({\r\n  selector: 'lista-bancos',\r\n  templateUrl: './bancos.component.html',\r\n  styleUrls: ['./bancos.component.scss']\r\n})\r\nexport class ControladoriaListaBancosComponent implements OnInit {\r\n  appTitle = 'Bancos/Fundos';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  noResult = false;\r\n  bancos = [];\r\n  dadosEmpty = false;\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private bancosService: ControladoriaBancosService,\r\n    private route: Router,\r\n    private notice: PNotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getBancos();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getBancos() {\r\n    let idLancBanc = 0;\r\n    this.spinnerFullScreen = true;\r\n    this.bancosService.getBancos(idLancBanc).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe bancos cadastrados.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.bancos = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.spinnerFullScreen = false;\r\n        this.noResult = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9tb2RhbHMvbG9ncy9sb2dzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvZmx1eG8tY2FpeGEvZmx1eG8tY2FpeGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvYmFuY29zL2JhbmNvcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"exportarExcel()\\\"\\r\\n    [disabled]=\\\"!noResult\\\"\\r\\n    >\\r\\n    Exportar\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../bancos']\\\"\\r\\n    >\\r\\n    Cadastrar Bancos/Fundo\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../empresas']\\\"\\r\\n    >\\r\\n    Cadastrar Empresas\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../tipos-fluxo-caixa']\\\"\\r\\n    >\\r\\n    Cadastrar Tipos Lançamentos\\r\\n  </button>\\r\\n  <button\\r\\n    [routerLink]=\\\"['../novo']\\\"\\r\\n    >\\r\\n    Inserir\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipo\\\"> Tipo </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tipos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"DESC_TIPO\\\"\\r\\n            bindValue=\\\"COD_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO\\\"\\r\\n            (change) =\\\"getTiposFluxoCaixa($event)\\\"\\r\\n            [ngClass]=\\\"onFieldError('COD_TIPO') + ' ' + onFieldRequired('COD_TIPO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('COD_TIPO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"tipoLancamentos\\\"> Tipo de lançamentos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposLancamentos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoLancamentos\\\"\\r\\n            bindLabel=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n            bindValue=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n            [ngClass]=\\\"onFieldError('COD_TIPO_LANCAMENTO') + ' ' + onFieldRequired('COD_TIPO_LANCAMENTO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('COD_TIPO_LANCAMENTO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"empresa\\\"> Empresa de lançamento </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"empresas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoDocumento\\\"\\r\\n            bindLabel=\\\"DESC_EMPR\\\"\\r\\n            bindValue=\\\"COD_EMPR\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_EMPR_LANCAMENTO\\\"\\r\\n            [ngClass]=\\\"onFieldError('COD_EMPR_LANCAMENTO') + ' ' + onFieldRequired('COD_EMPR_LANCAMENTO')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('COD_EMPR_LANCAMENTO')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dataInicio\\\"> Data inicial </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"inicioData\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_INIC') + ' ' + onFieldRequired('DT_INIC')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_INIC')\\\"\\r\\n            message=\\\"Data inicial é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"dataInicio\\\"> Data final </label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"fimData\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n            [ngClass]=\\\"onFieldError('DT_FINA') + ' ' + onFieldRequired('DT_FINA')\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('DT_FINA')\\\"\\r\\n            message=\\\"Data final é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"status\\\"> Status </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"status\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"NOME\\\"\\r\\n            bindValue=\\\"COD\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"IN_STAT\\\"\\r\\n            [ngClass]=\\\"onFieldError('IN_STAT') + ' ' + onFieldRequired('IN_STAT')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('IN_STAT')\\\"\\r\\n            message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Início da Lista -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:10px\\\"></th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:10px\\\"></th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Descrição Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa de lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Data de execução </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\" [hidden]=\\\"showDetailPanel\\\"> Valor </th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Status</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">Log</th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            <th class=\\\"text-center\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody >\\r\\n          <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\"\\r\\n              [ngClass]=\\\"{'item-selected':lista.selected}\\\" class=\\\"hover text-center\\\">\\r\\n              <td [ngClass]=\\\"{\\r\\n                'border-success'    : lista.IN_STAT == '1',\\r\\n                'border-danger'     : lista.IN_STAT == '0'\\r\\n              }\\\" (click)=\\\"openTab(lista)\\\"\\r\\n              ></td>\\r\\n              <td class=\\\"p-0\\\" (click)=\\\"openTab(lista)\\\">\\r\\n                <span class=\\\"\\\" [tooltip]=\\\"lista.DESC_TIPO == 'RECEBIMENTO' ? 'Recebimento' : 'Pagamento'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                  <i [ngClass]=\\\"lista.DESC_TIPO == 'RECEBIMENTO' ? 'fas fa-hand-holding-usd' : 'far fa-credit-card'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista)\\\">{{ lista.COD_LANCAMENTO }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DESC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DESC_EMPR_LANCAMENTO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista)\\\">{{ lista.DATA_EXECUCAO }}</td>\\r\\n            <td class=\\\"text-end\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"openTab(lista)\\\">{{ lista.VALOR | currency:'BRL' }}</td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"\\\" [tooltip]=\\\"lista.IN_STAT == '1' ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openJustificativa(template, lista)\\\">\\r\\n                  <i [ngClass]=\\\"lista.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Histórico\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\"  (click)=\\\"openLog(lista)\\\">\\r\\n                  <i class=\\\"fas fa-list-ul\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(lista)\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle px-0\\\" style=\\\"width:30px\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span tooltip=\\\"Duplicar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" (click)=\\\"onDuplicate(lista)\\\">\\r\\n                  <i class=\\\"fas fa-copy\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n    <!-- Início da tabela de informações -->\\r\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <div class=\\\"col-6 pl-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Empresa de lançamento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DESC_EMPR_LANCAMENTO | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de lançamento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DATA_INCLUSAO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de vencimento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DATA_VENCIMENTO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Data de execução </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DATA_EXECUCAO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>  \\r\\n          <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Empresa de recebimento </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DESC_EMPR_RECEBIMENTO | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Valor </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.VALOR | currency:'BRL' }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Banco/Fundo </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.DESC_BANCO | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Observação </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ item.OBSERVACAO }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeType(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <controladoria-fluxo-caixa-logs></controladoria-fluxo-caixa-logs>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaTiposFluxoCaixaService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTiposFluxoCaixa(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipos-fluxo-caixa`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putTiposFluxoCaixa(params) {\r\n    if (params.COD_TIPO_LANCAMENTO != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipos-fluxo-caixa`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipos-fluxo-caixa`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"validaSalvar(template)\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"row col-6\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"tipo\\\"> Tipo </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tipos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tipo\\\"\\r\\n                bindLabel=\\\"DESC_TIPO\\\"\\r\\n                bindValue=\\\"COD_TIPO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_TIPO\\\"\\r\\n                (change) =\\\"getTiposFluxoCaixa($event)\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_TIPO') + ' ' + onFieldRequired('COD_TIPO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_TIPO')\\\"\\r\\n                message=\\\"Tipo é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"tipoLancamentos\\\"> Tipo de lançamentos </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"tiposLancamentos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                labelForId=\\\"tipoLancamentos\\\"\\r\\n                bindLabel=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n                bindValue=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_TIPO_LANCAMENTO') + ' ' + onFieldRequired('COD_TIPO_LANCAMENTO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_TIPO_LANCAMENTO')\\\"\\r\\n                message=\\\"Tipo de lançamento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"datavenc\\\"> Data vencimento </label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"datavenc\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DATA_VENCIMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DATA_VENCIMENTO') + ' ' + onFieldRequired('DATA_VENCIMENTO')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DATA_VENCIMENTO')\\\"\\r\\n                message=\\\"Data inicial é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label *ngIf=\\\"tipo == 1\\\" for=\\\"dataFlux\\\"> Data recebimento </label>\\r\\n              <label *ngIf=\\\"tipo != 1\\\" for=\\\"dataFlux\\\"> Data pagamento </label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFlux\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"DATA_EXECUCAO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DATA_EXECUCAO') + ' ' + onFieldRequired('DATA_EXECUCAO')\\\"\\r\\n                >\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('DATA_EXECUCAO')\\\"\\r\\n                message=\\\"Data final é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"empresaPagamento\\\"> Empresa de lançamento </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"empresaPagamento\\\"\\r\\n                bindLabel=\\\"DESC_EMPR\\\"\\r\\n                bindValue=\\\"COD_EMPR\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_EMPR_LANCAMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_EMPR_LANCAMENTO') + ' ' + onFieldRequired('COD_EMPR_LANCAMENTO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_EMPR_LANCAMENTO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"validaPagamento\\\" class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"empresaRecebimento\\\"> Empresa de recebimento </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"empresas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"empresaRecebimento\\\"\\r\\n                bindLabel=\\\"DESC_EMPR\\\"\\r\\n                bindValue=\\\"COD_EMPR\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_EMPR_RECEBIMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_EMPR_RECEBIMENTO') + ' ' + onFieldRequired('COD_EMPR_RECEBIMENTO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_EMPR_RECEBIMENTO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"valor\\\"> Valor </label>\\r\\n              <input\\r\\n                currencyMask\\r\\n                [options] = \\\" {align: 'left', prefix: 'R$', thousands: '.', decimal: ','} \\\"\\r\\n                id=\\\"valor\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"VALOR\\\"\\r\\n                [ngClass]=\\\"onFieldError('VALOR') + ' ' + onFieldRequired('VALOR')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('VALOR')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"banco\\\"> Banco/Fundo </label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"bancos\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"banco\\\"\\r\\n                bindLabel=\\\"DESC_BANCO\\\"\\r\\n                bindValue=\\\"COD_BANCO\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                formControlName=\\\"COD_BANCO\\\"\\r\\n                [ngClass]=\\\"onFieldError('COD_BANCO') + ' ' + onFieldRequired('COD_BANCO')\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('COD_BANCO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              <label for=\\\"valor\\\"> Observação </label>\\r\\n              <input\\r\\n                id=\\\"observacao\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"OBSERVACAO\\\"\\r\\n                [ngClass]=\\\"onFieldError('OBSERVACAO') + ' ' + onFieldRequired('OBSERVACAO')\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"onFieldInvalid('OBSERVACAO')\\\"\\r\\n                message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h6 for=\\\"JUSTIFICATIVA\\\"> Justifique sua alteração! </h6>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"75\\\" rows=\\\"10\\\" formControlName=\\\"JUSTIFICATIVA\\\" #JUSTIFICATIVA minlength=\\\"10\\\"></textarea>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n            >\\r\\n            Cancelar \\r\\n          </button>\\r\\n          <button  \\r\\n            type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postCadastrar(); modalRef.hide()\\\"\\r\\n            [disabled]=\\\"form.get('JUSTIFICATIVA').status == 'INVALID' || !form.get('JUSTIFICATIVA').value\\\"\\r\\n            >\\r\\n            Salvar \\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</app-body>\\r\\n\";","export default \"tr.item-selected td {\\n  background-color: #8fb9ef !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb250cm9sYWRvcmlhL2ZsdXhvLWNhaXhhL2xpc3Rhcy9mbHV4by1jYWl4YS9mbHV4by1jYWl4YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9DQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbnRyb2xhZG9yaWEvZmx1eG8tY2FpeGEvbGlzdGFzL2ZsdXhvLWNhaXhhL2ZsdXhvLWNhaXhhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidHIuaXRlbS1zZWxlY3RlZCB0ZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGZiOWVmICFpbXBvcnRhbnQ7XHJcbiAgfSJdfQ== */\";","import { SharedModule } from './../../../shared/modules/shared.module';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\n\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { \r\n  TooltipModule, \r\n  TimepickerModule,\r\n  ptBrLocale,\r\n  BsDatepickerModule,\r\n  PaginationModule,\r\n  TabsModule, \r\n  defineLocale } from 'ngx-bootstrap';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport ptBr from '@angular/common/locales/pt';\r\n\r\nimport { ControladoriaFluxoCaixaRoutingModule } from './fluxo-caixa-routing.module';\r\nimport { ControladoriaFluxoCaixaComponent } from './fluxo-caixa.component';\r\nimport { ControladoriaListaFluxoCaixaComponent } from './listas/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaCadastrosFluxoCaixaComponent } from './cadastros/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaFluxoCaixaLogsComponent } from './modals/logs/logs.component';\r\nimport { ControladoriaTiposFluxoCaixaComponent } from './listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaCadastroTiposFluxoCaixaComponent } from './cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaListaEmpresasComponent } from './listas/empresas/empresas.component';\r\nimport { ControladoriaCadastroEmpresasComponent } from './cadastros/empresas/empresas.component';\r\nimport { ControladoriaListaBancosComponent } from './listas/bancos/bancos.component';\r\nimport { ControladoriaCadastroBancosComponent } from './cadastros/bancos/bancos.component';\r\n\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ControladoriaFluxoCaixaComponent,\r\n    ControladoriaListaFluxoCaixaComponent,\r\n    ControladoriaCadastrosFluxoCaixaComponent,\r\n    ControladoriaTiposFluxoCaixaComponent,\r\n    ControladoriaCadastroTiposFluxoCaixaComponent,\r\n    ControladoriaListaEmpresasComponent, \r\n    ControladoriaCadastroEmpresasComponent,\r\n    ControladoriaListaBancosComponent, \r\n    ControladoriaCadastroBancosComponent,\r\n    ControladoriaFluxoCaixaLogsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ControladoriaFluxoCaixaRoutingModule,\r\n    ModuleWrapperModule,\r\n    TemplatesModule.forRoot(),\r\n    FormsModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n    TooltipModule,\r\n    NotFoundModule,\r\n    PipesModule,\r\n    CurrencyMaskModule,\r\n    ReactiveFormsModule,\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }],\r\n})\r\nexport class ControladoriaFluxoCaixaModule { }\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n    >\\r\\n    Cadastrar Empresa\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- <advanced-filter #scrollToFilter></advanced-filter> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Código Empresa </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Nome </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let empresa of empresas | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n            <td class=\\\"text-center\\\">{{ empresa.COD_EMPR }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ empresa.DESC_EMPR | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', empresa.COD_EMPR]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { ControladoriaListaFluxoCaixaComponent } from './listas/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaCadastrosFluxoCaixaComponent } from './cadastros/fluxo-caixa/fluxo-caixa.component';\r\nimport { ControladoriaTiposFluxoCaixaComponent } from './listas/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaCadastroTiposFluxoCaixaComponent } from './cadastros/tipos-fluxo-caixa/tipos-fluxo-caixa.component';\r\nimport { ControladoriaListaEmpresasComponent } from './listas/empresas/empresas.component';\r\nimport { ControladoriaCadastroEmpresasComponent } from './cadastros/empresas/empresas.component';\r\nimport { ControladoriaListaBancosComponent } from './listas/bancos/bancos.component';\r\nimport { ControladoriaCadastroBancosComponent } from './cadastros/bancos/bancos.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'tipos-fluxo-caixa',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaTiposFluxoCaixaComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroTiposFluxoCaixaComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroTiposFluxoCaixaComponent,\r\n      }      \r\n    ]\r\n  },\r\n  {\r\n  path: 'empresas',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaListaEmpresasComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroEmpresasComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroEmpresasComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n  path: 'bancos',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ControladoriaListaBancosComponent,\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: ControladoriaCadastroBancosComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: ControladoriaCadastroBancosComponent,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: ControladoriaListaFluxoCaixaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ControladoriaCadastrosFluxoCaixaComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ControladoriaCadastrosFluxoCaixaComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ControladoriaFluxoCaixaRoutingModule { }\r\n","import { finalize } from 'rxjs/operators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\nimport { Location } from '@angular/common';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\nimport { ControladoriaBancosService } from '../../services/bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-fluxo-caixa',\r\n  templateUrl: './fluxo-caixa.component.html',\r\n  styleUrls: ['./fluxo-caixa.component.scss'],\r\n})\r\nexport class ControladoriaCadastrosFluxoCaixaComponent\r\n  implements OnInit {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  tipos = [];\r\n  tipo = 0;\r\n  tiposLancamentos = [];\r\n  empresas = [];\r\n  bancos = [];\r\n  validaPagamento = false;\r\n\r\n  inativaBotao: boolean = true;\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  appTitle = 'Cadastro de Lançamentos';\r\n\r\n  constructor(\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private tiposFluxoCaixaService: ControladoriaTiposFluxoCaixaService,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private bancoService: ControladoriaBancosService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private routerService: RouterService,\r\n    private route: Router,\r\n    private notice: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private modalService: BsModalService,\r\n    private dateService: DateService,\r\n    private location: Location\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      COD_LANCAMENTO: [null],\r\n      DATA_VENCIMENTO: [null, Validators.required],\r\n      DATA_EXECUCAO: [null, Validators.required],\r\n      COD_TIPO: [null, Validators.required],\r\n      COD_TIPO_LANCAMENTO: [null, Validators.required],\r\n      COD_EMPR_LANCAMENTO: [null, Validators.required],\r\n      COD_EMPR_RECEBIMENTO: [null],\r\n      COD_BANCO: [null],\r\n      VALOR: [null, Validators.required],\r\n      OBSERVACAO: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.getEmpresas();\r\n    this.getBancos();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    const queryParams = this.activatedRoute.snapshot.queryParams;\r\n\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getFluxoCaixa({ COD_LANCAMENTO: params.id });\r\n    } else if (queryParams.hasOwnProperty('q')) {\r\n      const decoded = this.routerService.getBase64UrlParams(queryParams);\r\n\r\n      this.getTiposFluxoCaixa({ COD_TIPO: decoded['COD_TIPO'] });\r\n\r\n      this.form.patchValue(decoded);\r\n      this.form.get('COD_LANCAMENTO').setValue(undefined);\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTipos() {\r\n    this.tipo;\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(params?) {\r\n    this.spinnerFullScreen = true;\r\n    this.tipo = this.form.value.COD_TIPO;\r\n    this.tiposFluxoCaixaService\r\n      .getTiposFluxoCaixa(params)\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n          this.spinnerFullScreen = false;\r\n          this.tiposLancamentos = [];\r\n        } else {\r\n          this.tiposLancamentos = response.body['data'];\r\n          this.spinnerFullScreen = false;\r\n          this.mostraCampos();\r\n        }\r\n      });\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.empresaService\r\n      .getEmpresas(this.getParams())\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe empresas cadastradas.');\r\n        } else this.empresas = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getBancos() {\r\n    this.bancoService.getBancos(this.getParams()).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe bancos cadastradas.');\r\n      } else this.bancos = response.body['data'];\r\n    });\r\n  }\r\n\r\n  mostraCampos(): boolean {\r\n    if (this.form.value['COD_TIPO'] == 2) {\r\n      this.validaPagamento = true;\r\n      this.form.controls['COD_EMPR_RECEBIMENTO'].enable();\r\n      this.form.controls['COD_BANCO'].enable();\r\n      return true;\r\n    } else if (this.form.value['COD_EMPR_RECEBIMENTO']) {\r\n      this.validaPagamento = false;\r\n      this.form.controls['COD_EMPR_RECEBIMENTO'].enable();\r\n      this.form.controls['COD_BANCO'].enable();\r\n      return true;\r\n    }\r\n    this.validaPagamento = true;\r\n    this.form.controls['COD_EMPR_RECEBIMENTO'].enable();\r\n    this.form.controls['COD_BANCO'].enable();\r\n    return false;\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  validaSalvar(template) {\r\n    if (!this.form.get('COD_LANCAMENTO').value) {\r\n      this.postCadastrar();\r\n    } else {\r\n      this.modalRef = this.modalService.show(template, this.config);\r\n    }\r\n  }\r\n\r\n  postCadastrar() {\r\n    this.spinnerFullScreen = true;\r\n    this.fluxoCaixaService.postCadastrar(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  retorna() {\r\n    this.route.navigate([`./../`], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  getFluxoCaixa(params) {\r\n    this.spinnerFullScreen = true;\r\n\r\n    this.fluxoCaixaService\r\n      .getFluxoCaixa(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        this.form.patchValue(response.body['data'][0]);\r\n        this.getTiposFluxoCaixa(this.getParams());\r\n      });\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putTiposFluxoCaixa()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"tipo\\\"> Tipo </label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"DESC_TIPO\\\"\\r\\n              bindValue=\\\"COD_TIPO\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n              formControlName=\\\"COD_TIPO\\\"\\r\\n              [ngClass]=\\\"onFieldError('COD_TIPO') + ' ' + onFieldRequired('COD_TIPO')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('COD_TIPO')\\\"\\r\\n              message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              <label for=\\\"lancamento\\\"> Descrição do lançamento </label>\\r\\n              <input\\r\\n                id=\\\"lancamento\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DESC_TIPO_LANCAMENTO') + ' ' + onFieldRequired('DESC_TIPO_LANCAMENTO')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DESC_TIPO_LANCAMENTO')\\\"\\r\\n              message=\\\"Tipo de documento é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9saXN0YXMvYmFuY29zL2JhbmNvcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'lista-tipos-fluxo-caixa',\r\n  templateUrl: './tipos-fluxo-caixa.component.html',\r\n  styleUrls: ['./tipos-fluxo-caixa.component.scss']\r\n})\r\nexport class ControladoriaTiposFluxoCaixaComponent implements OnInit {\r\n  appTitle = 'Tipos de Lançamentos';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  tipos = [];\r\n  tiposLancamentos = [];\r\n  form: FormGroup;\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private tiposFluxoCaixaService: ControladoriaTiposFluxoCaixaService,\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private formBuilder: FormBuilder,\r\n    private route: Router,\r\n    private routerService: RouterService,\r\n    private notice: PNotifyService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      COD_TIPO: [null],\r\n      DESC_TIPO: [null],\r\n      COD_TIPO_LANCAMENTO: [null],\r\n      DESC_TIPO_LANCAMENTO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.getTiposFluxoCaixa(this.getParams());\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getTipos() {\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.tiposFluxoCaixaService\r\n      .getTiposFluxoCaixa(param)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n          this.noResult = true;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n          this.tiposLancamentos = [];\r\n        } else {\r\n          this.tiposLancamentos = response.body['data'];\r\n          this.totalItems = response.body['data'].length;\r\n        }\r\n      });\r\n  }\r\n\r\n  onFilter() {\r\n    this.getTiposFluxoCaixa(this.getParams());\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'fluxo-caixa',\r\n  templateUrl: './fluxo-caixa.component.html',\r\n  styleUrls: ['./fluxo-caixa.component.scss']\r\n})\r\nexport class ControladoriaFluxoCaixaComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.navigate(['/controladoria/fluxo-caixa']);\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaBancosService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getBancos(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putBancos(params) {\r\n    if (params.COD_BANCO != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/bancos`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putBancos()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12 p-0\\\">\\r\\n              <label for=\\\"banco\\\"> Nome Banco/Fundo </label>\\r\\n              <input\\r\\n                id=\\\"banco\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DESC_BANCO\\\"\\r\\n                [ngClass]=\\\"onFieldError('DESC_BANCO') + ' ' + onFieldRequired('DESC_BANCO')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DESC_BANCO')\\\"\\r\\n              message=\\\"Informar banco é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-empresas',\r\n  templateUrl: './empresas.component.html',\r\n  styleUrls: ['./empresas.component.scss']\r\n})\r\nexport class ControladoriaCadastroEmpresasComponent implements OnInit {\r\n  idLancEmpr: number = this.activatedRoute.snapshot.params['id'];\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de Empresas';\r\n  form: FormGroup;\r\n  empresas = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private notice: PNotifyService,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      DESC_EMPR: [null, Validators.required],\r\n      COD_EMPR: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: 'Empresas',\r\n        routerLink: '/controladoria/fluxo-caixa/empresas',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getEmpresas(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.empresaService.getEmpresas(param).subscribe((response) => {\r\n      this.empresas = response.body['data'];\r\n      this.spinnerFullScreen = false;\r\n      this.form.patchValue(response.body['data'][0]);\r\n    });\r\n  }\r\n\r\n  putEmpresas() {\r\n    this.spinnerFullScreen = true;\r\n    this.empresaService.putEmpresas(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getEmpresas({ COD_EMPR: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaFluxoCaixaService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  private modalEmitter: EventEmitter<any> = new EventEmitter();\r\n  private detailPanelEmitter: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTipos() {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/tipo`\r\n    );\r\n  }\r\n\r\n  getFluxoCaixa(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/fluxo-caixa`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  getLog(params) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/logs`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  setStateModal(params = { state: true, template: undefined, data: [] }): void {\r\n    return this.modalEmitter.emit(params);\r\n  }\r\n\r\n  getStateModal() {\r\n    return this.modalEmitter;\r\n  }\r\n\r\n  setDetailPanel(value: string) {\r\n    return this.detailPanelEmitter.emit(value);\r\n  }\r\n\r\n  getDetailPanel() {\r\n    return this.detailPanelEmitter;\r\n  }\r\n\r\n  postCadastrar(param) {\r\n    if (!param.COD_LANCAMENTO) {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/fluxo-caixa`,\r\n        param,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n    return this.http.put(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/fluxo-caixa`,\r\n      param,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-tipos-fluxo-caixa',\r\n  templateUrl: './tipos-fluxo-caixa.component.html',\r\n  styleUrls: ['./tipos-fluxo-caixa.component.scss']\r\n})\r\nexport class ControladoriaCadastroTiposFluxoCaixaComponent implements OnInit {\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de Lançamentos';\r\n  form: FormGroup;\r\n  tipos = [];\r\n  tiposLancamentos = [];\r\n  idLancLanc: number;\r\n\r\n  constructor(\r\n    private cadastroTiposService: ControladoriaTiposFluxoCaixaService,\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notice: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      COD_TIPO: [null, Validators.required],\r\n      DESC_TIPO_LANCAMENTO: [null, Validators.required],\r\n      COD_TIPO_LANCAMENTO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: 'Tipos de Lançamentos',\r\n        routerLink: '/controladoria/fluxo-caixa/tipos-fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTipos() {\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(params) {\r\n    this.spinnerFullScreen = true;\r\n    this.cadastroTiposService.getTiposFluxoCaixa(params).subscribe((response) => {\r\n      this.form.patchValue(response.body['data'][0]);\r\n      this.spinnerFullScreen = false;\r\n    });\r\n  }\r\n\r\n  getTiposLancamentosAtualizado() {\r\n    let lista = this.tiposLancamentos[0];\r\n    this.form.controls['cadastroTipo'].setValue(lista.COD_TIPO);\r\n    this.form.controls['cadastroLancamento'].setValue(\r\n      lista.DESC_TIPO_LANCAMENTO\r\n    );\r\n  }\r\n\r\n  putTiposFluxoCaixa() {\r\n    this.spinnerFullScreen = true;\r\n    this.cadastroTiposService.putTiposFluxoCaixa(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          this.notice.success(response.body['mensagem']);\r\n          this.location.back();\r\n        }\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getTiposFluxoCaixa({ COD_TIPO_LANCAMENTO: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    (click)=\\\"putEmpresas()\\\"\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-4\\\">\\r\\n            <div class=\\\"form-group col-md-12 p-0\\\">\\r\\n              <label for=\\\"lancamento\\\"> Nome Empresa </label>\\r\\n              <input\\r\\n                id=\\\"empresa\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"DIGITE...\\\"\\r\\n                formControlName=\\\"DESC_EMPR\\\"\\r\\n                [ngClass]=\\\"onFieldError('DESC_EMPR') + ' ' + onFieldRequired('DESC_EMPR')\\\">\\r\\n            </div>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('DESC_EMPR')\\\"\\r\\n              message=\\\"Informar empresa é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"<p>fluxo-caixa works!</p>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\n\r\n@Component({\r\n  selector: 'lista-empresas',\r\n  templateUrl: './empresas.component.html',\r\n  styleUrls: ['./empresas.component.scss']\r\n})\r\nexport class ControladoriaListaEmpresasComponent implements OnInit {\r\n  appTitle = 'Empresas';\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  noResult = false;\r\n  empresas = [];\r\n  dadosEmpty = false;\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: false,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private route: Router,\r\n    private notice: PNotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getEmpresas();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getEmpresas() {\r\n    let idLancEmpr = 0;\r\n    this.spinnerFullScreen = true;\r\n    this.empresaService.getEmpresas(idLancEmpr).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe empresas cadastradas.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.empresas = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.spinnerFullScreen = false;\r\n        this.noResult = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvdGlwb3MtZmx1eG8tY2FpeGEvdGlwb3MtZmx1eG8tY2FpeGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h5>Log de lançamentos e alterações de fluxo de caixa</h5>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col-12': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableLogConfig\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Descrição Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa de Lançamento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Empresa de Recebimento </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Cod. Usuário de Alteração </th>\\r\\n              <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 80px;\\\" [hidden]=\\\"showDetailPanel\\\"> Nome Usuário de Alteração </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody >\\r\\n            <tr class=\\\"text-center text-white\\\" (click)=\\\"openTab(dados)\\\">\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ dados?.COD_LANCAMENTO }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ dados?.DESC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\">{{ dados?.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.DESC_EMPR_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.DESC_EMPR_RECEBIMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center bg-primary\\\" [hidden]=\\\"showDetailPanel\\\">{{ dados?.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n            <tr class=\\\"text-center\\\" *ngFor=\\\"let item of items | slice : begin : end; let i = index\\\" (click)=\\\"openTab(item)\\\">\\r\\n              <td class=\\\"text-center\\\">{{ item?.COD_LANCAMENTO }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DESC_TIPO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item?.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.DESC_EMPR_LANCAMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.DESC_EMPR_RECEBIMENTO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.COD_USUARIO }}</td>\\r\\n              <td class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">{{ item?.NM_USUARIO }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <div class=\\\"mt-3\\\">\\r\\n          Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n          <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"ml-3\\\">\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"totalItems\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n            <div class=\\\"mr-2 pr-1\\\">\\r\\n              <button  \\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary mr-1\\\" (click)=\\\"modalRef.hide()\\\"\\r\\n                >\\r\\n                Fechar \\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n      </div>\\r\\n      <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel [panelTitle]=\\\"appTitle\\\">\\r\\n          <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"col-6 pl-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Cod. Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.COD_USUARIO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Empresa de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DESC_EMPR_LANCAMENTO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de lançamento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_INCLUSAO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de vencimento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_VENCIMENTO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Data de execução </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DATA_EXECUCAO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>  \\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Nome Usuário de Alteração </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.NM_USUARIO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Empresa de recebimento </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DESC_EMPR_RECEBIMENTO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Valor </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.VALOR | currency:'BRL' }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Banco/Fundo </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.DESC_BANCO | uppercase }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label> Observação </label>\\r\\n                  <div class=\\\"text-nowrap\\\">{{ log.OBSERVACAO }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col p-0\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label> Justificativa da alteração </label>\\r\\n                <div class=\\\"text-nowrap\\\">{{ log.JUSTIFICATIVA | uppercase }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ControladoriaEmpresasService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmpresas(param) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n      {\r\n        params: param,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n\r\n  putEmpresas(params) {\r\n    if (params.COD_EMPR != undefined) {\r\n      return this.http.put(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    } else {\r\n      return this.http.post(\r\n        `${this.BASE_URL}/controladoria/lancamentos-fluxo-caixa/empresas`,\r\n        params,\r\n        { observe: 'response' }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9saXN0YXMvZW1wcmVzYXMvZW1wcmVzYXMuY29tcG9uZW50LnNjc3MifQ== */\";","// ANGULAR\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// BOOTSTRAP\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\n\r\n// SERVICES\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// INTERFACES\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\nimport { ControladoriaEmpresasService } from '../../services/empresas.service';\r\nimport { ControladoriaTiposFluxoCaixaService } from '../../services/tipos-fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'lista-fluxo-caixa',\r\n  templateUrl: './fluxo-caixa.component.html',\r\n  styleUrls: ['./fluxo-caixa.component.scss'],\r\n})\r\nexport class ControladoriaListaFluxoCaixaComponent\r\n  implements OnInit, OnDestroy {\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [];\r\n  data: Date = new Date();\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  form: FormGroup;\r\n  tipos = [];\r\n  tiposLancamentos = [];\r\n  empresas = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  $activateRoutedSubscription: Subscription;\r\n  $lancamentoServiceSubscription: Subscription;\r\n  listas: any = [];\r\n  item: any = {};\r\n  showAdvancedFilter: boolean;\r\n  listaSelecionada: any = [];\r\n  listaLog: any = [];\r\n  editParam: any = [];\r\n\r\n  appTitle = 'Lançamento Fluxo de Caixa';\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = 'principal';\r\n\r\n  /* Config Table */\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  status = [\r\n    {\r\n      COD: '1',\r\n      NOME: 'Ativos',\r\n    },\r\n    {\r\n      COD: '0',\r\n      NOME: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private route: Router,\r\n    private routerService: RouterService,\r\n    private fluxoCaixaService: ControladoriaFluxoCaixaService,\r\n    private tiposFluxoCaixaService: ControladoriaTiposFluxoCaixaService,\r\n    private empresaService: ControladoriaEmpresasService,\r\n    private notice: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private xlsxService: XlsxService,\r\n    private detailPanelService: DetailPanelService,\r\n    private modalService: BsModalService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n\r\n    this.form = this.formBuilder.group({\r\n      DT_INIC: [this.dateService.getFirstDayMonth(), Validators.required],\r\n      DT_FINA: [this.data, Validators.required],\r\n      COD_TIPO: [null],\r\n      COD_TIPO_LANCAMENTO: [null],\r\n      COD_EMPR_LANCAMENTO: [null],\r\n      IN_STAT: [null],\r\n      JUSTIFICATIVA: [null, Validators.minLength(10)],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTipos();\r\n    this.getEmpresas();\r\n    this.getActiveRoute();\r\n    this.onDetailPanel();\r\n    this.getTiposFluxoCaixa(this.getParams());\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  exportarExcel() {\r\n    this.xlsxService.exportFile(this.listas, 'lançamentos');\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$showDetailPanelSubscription.unsubscribe();\r\n    this.$activateRoutedSubscription.unsubscribe();\r\n    this.$lancamentoServiceSubscription.unsubscribe();\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('time').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onShowFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  getTipos() {\r\n    this.fluxoCaixaService.getTipos().subscribe((response) => {\r\n      this.tipos = response['data'];\r\n    });\r\n  }\r\n\r\n  getTiposFluxoCaixa(param) {\r\n    this.tiposFluxoCaixaService\r\n      .getTiposFluxoCaixa(param['COD_TIPO'])\r\n      .subscribe((response) => {\r\n        if (response.status === 204) {\r\n          this.notice.notice('Não existe tipos de lançamentos cadastrados.');\r\n        } else this.tiposLancamentos = response.body['data'];\r\n      });\r\n  }\r\n\r\n  getEmpresas() {\r\n    this.empresaService.getEmpresas(this.getParams()).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe empresas cadastradas.');\r\n      } else this.empresas = response.body['data'];\r\n    });\r\n  }\r\n\r\n  getActiveRoute() {\r\n    this.$activateRoutedSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        if (Object.keys(response).length > 0) {\r\n          const _response = this.routerService.getBase64UrlParams(response);\r\n          this.form.patchValue(_response);\r\n        }\r\n        this.getFluxoCaixa(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  getFluxoCaixa(params) {\r\n    this.spinnerFullScreen = true;\r\n\r\n    if (this.form.status === 'VALID') {\r\n      this.fluxoCaixaService\r\n        .getFluxoCaixa(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.spinnerFullScreen = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response) => {\r\n            if (response.status === 204) {\r\n              this.notice.notice('Não há informações para esse período.');\r\n              this.dadosEmpty = true;\r\n              this.noResult = false;\r\n            } else {\r\n              this.listas = response.body['data'];\r\n              this.listas.forEach((element, i) => {\r\n                element.INDICE = i + 1;\r\n              });\r\n              this.totalItems = response.body['data'].length;\r\n              this.dadosEmpty = false;\r\n              this.noResult = true;\r\n              this.showAdvancedFilter = true;\r\n            }\r\n          },\r\n          (error) => this.notice.error()\r\n        );\r\n    }\r\n  }\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'principal') return;\r\n\r\n        this.showDetailPanel = event.showing;\r\n\r\n        if (!this.showDetailPanel)\r\n          this.listas.map((lista) => (lista.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$lancamentoServiceSubscription = this.fluxoCaixaService\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(item) {\r\n    this.listas.map((lista) => (lista.selected = false));\r\n    this.item = item;\r\n    this.item.selected = true;\r\n    this.fluxoCaixaService.setDetailPanel('principal');\r\n  }\r\n\r\n  openJustificativa(template, data) {\r\n    this.form.get('JUSTIFICATIVA').reset();\r\n    this.listaSelecionada = [];\r\n    this.listaSelecionada = data;\r\n    this.modalRef = this.modalService.show(template, this.config);\r\n  }\r\n\r\n  changeType() {\r\n    this.spinnerFullScreen = true;\r\n    let _saldo = JSON.parse(JSON.stringify(this.listaSelecionada));\r\n\r\n    _saldo.IN_STAT = _saldo['IN_STAT'] == '1' ? '0' : '1';\r\n    _saldo.JUSTIFICATIVA = this.form.value['JUSTIFICATIVA'];\r\n\r\n    this.fluxoCaixaService\r\n      .postCadastrar(_saldo)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200)\r\n            this.notice.success(response.body['mensagem']);\r\n          this.listaSelecionada.IN_STAT = _saldo.IN_STAT;\r\n        },\r\n        (error) => this.notice.error()\r\n      );\r\n  }\r\n\r\n  openLog(data) {\r\n    this.fluxoCaixaService.setStateModal(data);\r\n  }\r\n\r\n  onDuplicate(item) {\r\n    this.route.navigate(['./novo'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(item),\r\n    });\r\n  }\r\n\r\n  onEdit(item) {\r\n    this.route.navigate(['./', item.COD_LANCAMENTO], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(item),\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit,ViewChild,\r\n  ElementRef,\r\n  OnDestroy, } from '@angular/core';\r\n\r\n  import { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\n  import { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n  import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n  import { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n  import { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n  import { Subscription } from 'rxjs';  \r\nimport { ControladoriaFluxoCaixaService } from '../../services/fluxo-caixa.service';\r\n\r\n@Component({\r\n  selector: 'controladoria-fluxo-caixa-logs',\r\n  templateUrl: './logs.component.html',\r\n  styleUrls: ['./logs.component.scss']\r\n})\r\nexport class ControladoriaFluxoCaixaLogsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('template', { static: false }) template: ElementRef;\r\n  spinnerFullScreen: boolean = false;\r\n  dados: any = [];\r\n  items = [];\r\n  noResult = false;\r\n  dadosEmpty = false;\r\n  log: any = {};\r\n  $serviceSubscription: Subscription;\r\n  $serviceModalSubscription: Subscription;\r\n\r\n  appTitle = 'Detalhes';\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: false,\r\n    ignoreBackdropClick: true,\r\n    class: 'modal-xxl',\r\n  };\r\n\r\n  /* Painel de detalhes */\r\n  $showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanel = 'modal';\r\n\r\n  tableLogConfig: Partial<CustomTableConfig> = {\r\n    hover: true,\r\n  };\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n\r\n  constructor(\r\n    private modalService: BsModalService,\r\n    private service: ControladoriaFluxoCaixaService,\r\n    private notice: PNotifyService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.openModal();\r\n    this.onDetailPanel();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$serviceSubscription.unsubscribe();\r\n    this.$serviceModalSubscription.unsubscribe();\r\n  }\r\n\r\n  openModal(): void {\r\n    this.$serviceModalSubscription = this.service\r\n      .getStateModal()\r\n      .subscribe((response) => {\r\n        console.log(response)\r\n        this.dados = response;\r\n        this.modalRef = this.modalService.show(this.template, this.config);\r\n        this.showDetailPanel = false;\r\n        this.getLog();\r\n      });\r\n  }\r\n\r\n  getLog() {\r\n    this.items = [];\r\n    this.spinnerFullScreen = true;\r\n    let param = {\r\n      COD_LANCAMENTO: this.dados['COD_LANCAMENTO'],\r\n    };\r\n    this.service.getLog(param).subscribe((response) => {\r\n      if (response.status === 204) {\r\n        this.notice.notice('Não existe log registrado.');\r\n        this.spinnerFullScreen = false;\r\n      } else {\r\n        this.items = response.body['data'];\r\n        this.totalItems = response.body['data'].length;\r\n        this.dadosEmpty = false;\r\n        this.noResult = true;\r\n        this.spinnerFullScreen = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  onDetailPanel(): void {\r\n    this.$showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        if (this.detailPanel !== 'modal') return;\r\n\r\n        this.showDetailPanel = event.showing;\r\n        if (!this.showDetailPanel)\r\n          this.items.map((item) => (item.selected = false));\r\n      }\r\n    );\r\n\r\n    this.$serviceSubscription = this.service\r\n      .getDetailPanel()\r\n      .subscribe((event) => {\r\n        this.detailPanel = event;\r\n        this.detailPanelService.loadedFinished(false);\r\n      });\r\n  }\r\n\r\n  openTab(log) {\r\n    console.log(log);\r\n    this.items.map((item) => (item.selected = false));\r\n    this.log = log;\r\n    this.log.selected = true;\r\n    this.service.setDetailPanel('modal');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { Location } from '@angular/common';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ControladoriaBancosService } from '../../services/bancos.service';\r\n\r\n@Component({\r\n  selector: 'cadastro-bancos',\r\n  templateUrl: './bancos.component.html',\r\n  styleUrls: ['./bancos.component.scss']\r\n})\r\nexport class ControladoriaCadastroBancosComponent implements OnInit {\r\n  breadCrumbTree: any = [];\r\n  spinnerFullScreen: boolean = false;\r\n  loaderNavbar: boolean = false;\r\n  appTitle = 'Cadastro de Bancos/Fundos';\r\n  form: FormGroup;\r\n  bancos = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private notice: PNotifyService,\r\n    private bancosService: ControladoriaBancosService,\r\n    private route: Router,\r\n    private location: Location,\r\n    private dateService: DateService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      DESC_BANCO: [null, Validators.required],\r\n      COD_BANCO: [null],\r\n      time: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/controladoria/home',\r\n      },\r\n      {\r\n        descricao: 'Lançamento fluxo de caixa',\r\n        routerLink: '/controladoria/fluxo-caixa',\r\n      },\r\n      {\r\n        descricao: 'Bancos',\r\n        routerLink: '/controladoria/fluxo-caixa/bancos',\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getBancos(param) {\r\n    this.spinnerFullScreen = true;\r\n    this.bancosService.getBancos(param).subscribe((response) => {\r\n      this.bancos = response.body['data'];\r\n      this.spinnerFullScreen = false;\r\n      this.form.patchValue(response.body['data'][0]);\r\n    });\r\n  }\r\n\r\n  putBancos() {\r\n    this.spinnerFullScreen = true;\r\n    this.bancosService.putBancos(this.getParams()).subscribe(\r\n      (response) => {\r\n        if (response.status === 200)\r\n          this.notice.success(response.body['mensagem']);\r\n        this.location.back();\r\n      },\r\n      (error) => this.notice.error()\r\n    );\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    if (params.hasOwnProperty('id')) {\r\n      this.getBancos({ COD_BANCO: params.id });\r\n    }\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService\r\n            .convertToBrazilianDate(_obj[prop])\r\n            .substring(0, 10);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9jYWRhc3Ryb3MvZW1wcmVzYXMvZW1wcmVzYXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9mbHV4by1jYWl4YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\"\\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- <advanced-filter #scrollToFilter></advanced-filter> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Código Banco/Fundo </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Nome </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let banco of bancos | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n            <td class=\\\"text-center\\\">{{ banco.COD_BANCO }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ banco.DESC_BANCO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', banco.COD_BANCO]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29udHJvbGFkb3JpYS9mbHV4by1jYWl4YS9saXN0YXMvdGlwb3MtZmx1eG8tY2FpeGEvdGlwb3MtZmx1eG8tY2FpeGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [routerLink]=\\\"['./novo']\\\" \\r\\n    >\\r\\n    Cadastrar\\r\\n  </button>\\r\\n  <button\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    >\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <!-- Início dos Filtros -->\\r\\n  <advanced-filter #scrollToFilter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row justify-content-center\\\">\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n          <label for=\\\"tipo\\\"> Tipo de lançamento</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tipos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipo\\\"\\r\\n            bindLabel=\\\"DESC_TIPO\\\"\\r\\n            bindValue=\\\"COD_TIPO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO\\\"\\r\\n            (change) =\\\"getTiposFluxoCaixa($event)\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n          <label for=\\\"tipoLancamentos\\\"> Tipo de lançamentos </label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposLancamentos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"tipoLancamentos\\\"\\r\\n            bindLabel=\\\"DESC_TIPO_LANCAMENTO\\\"\\r\\n            bindValue=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"COD_TIPO_LANCAMENTO\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 60px;\\\"> Nr. Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Descrição Lançamento </th>\\r\\n            <th class=\\\"text-center\\\" scope=\\\"col\\\" style=\\\"width: 100px;\\\"> Tipo Lançamento </th>\\r\\n            <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let lancamento of tiposLancamentos | slice : begin : end; let i = index\\\" class=\\\"text-center\\\">\\r\\n              <td [ngClass]=\\\"{\\r\\n                'border-success'    : lancamento.DESC_TIPO == 'Recebimento',\\r\\n                'border-danger'     : lancamento.DESC_TIPO == 'Pagamento'\\r\\n              }\\\"\\r\\n              >{{ lancamento.COD_TIPO_LANCAMENTO }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ lancamento.DESC_TIPO_LANCAMENTO | uppercase }}</td>\\r\\n            <td class=\\\"text-center\\\">{{ lancamento.DESC_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', lancamento.COD_TIPO_LANCAMENTO]\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\r\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";"],"sourceRoot":"webpack:///"}