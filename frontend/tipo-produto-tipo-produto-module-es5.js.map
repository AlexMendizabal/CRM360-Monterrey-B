{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/cadastro/cadastro.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/tipo-produto-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/lista/lista.component.scss","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/cadastro/cadastro.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/services/tipo-produto.service.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/tipo-produto.module.ts","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/estoque/tipo-produto/lista/lista.component.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","TecnologiaInformacaoEstoqueTipoProdutosModuleRoutingModule","imports","forChild","exports","TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent","formBuilder","pnotify","activatedRoute","router","routerService","titleService","atividadesService","tipoProdutoService","loading","loadingNavBar","breadCrumbTree","registrarAcesso","setBreadCrumb","setFormBuilder","onActivatedRoute","subscribe","id","snapshot","params","idSubModulo","appTitle","setTitle","descricao","routerLink","$activatedRouteSubscription","unsubscribe","response","hasOwnProperty","getTipoProduto","form","group","ID_TEIN_ESTO_PRTP","NM_TIPO","required","IN_STAT","DS_OBSE","field","onFieldInvalid","get","status","touched","formControl","controls","validator","validationResult","pipe","error","tipoProduto","body","patchValue","postTipoProduto","value","reset","success","navigate","relativeTo","selector","template","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","TecnologiaInformacaoEstoqueTipoProdutosService","http","API","observe","post","TecnologiaInformacaoEstoqueTipoProdutosModule","declarations","forRoot","providers","provide","useValue","TecnologiaInformacaoEstoqueTipoProdutosListaComponent","route","confirmModalService","dateService","tipoProdutos","tableConfig","subtitleBorder","border","tipos","cod","nome","subtitles","text","color","itemsPerPage","totalItems","currentPage","buildForm","queryParams","_response","getBase64UrlParams","TT_REGI_PAGI","getTiposProduto","getParams","onFilter","PAGI","TIME","getTime","setValue","setBase64UrlParams","noResult","stat","confirmChange","asObservable","result","showConfirm","event","page","_params","_obj","prop","convertToUrlDate"],"mappings":"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","file":"tipo-produto-tipo-produto-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvdGlwby1wcm9kdXRvL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//components\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TecnologiaInformacaoEstoqueTipoProdutosListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TecnologiaInformacaoEstoqueTipoProdutosModuleRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2VzdG9xdWUvdGlwby1wcm9kdXRvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ITecnologiaInformacaoTipoProduto } from './../models/tipoProduto';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../services/tipo-produto.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  AbstractControl,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//interfaces\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { TryCatchStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque-tipo-produto-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent\r\n  implements OnInit, OnDestroy {\r\n  noResult: boolean;\r\n  loading = false;\r\n  loadingNavBar = false;\r\n  breadCrumbTree: Array<any> = [];\r\n  form: FormGroup;\r\n  appTitle: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  tipoProdutos: Array<ITecnologiaInformacaoTipoProduto>;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private atividadesService: AtividadesService,\r\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n\r\n    this.appTitle = 'Cadastro';\r\n    this.titleService.setTitle(this.appTitle);\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/tecnologia-informacao/home',\r\n      },\r\n      {\r\n        descricao: 'Estoque',\r\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipo de Produto',\r\n        routerLink: `./../`,\r\n      },\r\n      {\r\n        descricao: this.appTitle,\r\n      },\r\n    ];\r\n  }\r\n\r\n  //Consumir informações que estão na rota para editar\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.params\r\n      .subscribe(\r\n        response => {\r\n          if(response.hasOwnProperty('id')){\r\n            this.getTipoProduto(response.id);\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  //formulario\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      ID_TEIN_ESTO_PRTP: [null],\r\n      NM_TIPO: [null, [Validators.required]],\r\n      IN_STAT: ['1'],\r\n      DS_OBSE: [null],\r\n    });\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  getTipoProduto(id: number){\r\n    this.loading = true;\r\n    this.tipoProdutoService\r\n      .getTipoProduto(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n\r\n          if (response.status != 200){\r\n            this.pnotify.error();\r\n            return\r\n          }\r\n          let tipoProduto = response.body[\"data\"];\r\n          this.form.patchValue(tipoProduto);\r\n\r\n        },\r\n        error => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  postTipoProduto() {\r\n    this.loadingNavBar = true;\r\n    this.tipoProdutoService\r\n      .postTipoProduto(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status === 200) {\r\n            this.form.reset();\r\n            this.pnotify.success();\r\n            this.router.navigate(['../'], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          try {\r\n            this.pnotify.error(error.error.message);\r\n          } catch (error) {\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","//angular\r\nimport { Injectable } from '@angular/core';\r\n\r\n// services\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ITecnologiaInformacaoTipoProduto } from '../models/tipoProduto';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TecnologiaInformacaoEstoqueTipoProdutosService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTiposProduto(params?) {\r\n    return this.http.get(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos/tipos`,\r\n      {\r\n        params: params,\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n  getTipoProduto(id: number) {\r\n    return this.http.get(`${this.API}/tecnologia-informacao/estoque/produtos/tipos/${id}`, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n\r\n  postTipoProduto(tipoProduto: ITecnologiaInformacaoTipoProduto) {\r\n    return this.http.post(\r\n      `${this.API}/tecnologia-informacao/estoque/produtos/tipos`,\r\n      tipoProduto,\r\n      {\r\n        observe: 'response',\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Cadastro de Tipo de Produto\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"form.valid === false\\\"\\r\\n    (click)=\\\"postTipoProduto()\\\"\\r\\n    >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <fieldset  class=\\\"col-12\\\">\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n        <legend>Dados do Tipo de Produto</legend>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-8 pl-0\\\">\\r\\n            <label for=\\\"NM_TIPO\\\">Tipo de Produto</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_TIPO\\\"\\r\\n              formControlName=\\\"NM_TIPO\\\"\\r\\n              placeholder=\\\"Digite...\\\"\\r\\n              [ngClass]=\\\"onFieldError('NM_TIPO') + ' ' + onFieldRequired('NM_TIPO')\\\"\\r\\n            />\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_TIPO')\\\" message=\\\"Tipo de Produto é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-4 pl-0\\\">\\r\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"IN_STAT\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <br>\\r\\n      <br>\\r\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\r\\n            <legend>Observação</legend>\\r\\n            <div class=\\\"form-row justify-content-center\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\r\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n      </fieldset>\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</app-body>\";","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosModuleRoutingModule } from './tipo-produto-routing.module';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TecnologiaInformacaoEstoqueTipoProdutosListaComponent,\r\n    TecnologiaInformacaoEstoqueTipoProdutosCadastroComponent,\r\n  ],\r\n  imports: [\r\n    TecnologiaInformacaoEstoqueTipoProdutosModuleRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\r\n})\r\nexport class TecnologiaInformacaoEstoqueTipoProdutosModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tipo de Produto\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"ID_TEIN_ESTO_PRTP\\\">ID</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                formControlName=\\\"ID_TEIN_ESTO_PRTP\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-7\\\">\\r\\n              <label for=\\\"NM_TIPO\\\">Tipo de Produto</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"NM_TIPO\\\"\\r\\n                formControlName=\\\"NM_TIPO\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\"\\r\\n                placeholder=\\\"Digite...\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2 \\\">\\r\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\r\\n              <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"tipos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"tipo\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"cod\\\"\\r\\n              id=\\\"tipo\\\"\\r\\n              (change)=\\\"onFilter()\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Selecione...\\\"\\r\\n            >\\r\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\r\\n              </ng-template>\\r\\n            </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label>Registros</label>\\r\\n              <select \\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\r\\n              >\\r\\n                <option value=\\\"10\\\">10</option>\\r\\n                <option value=\\\"25\\\">25</option>\\r\\n                <option value=\\\"50\\\">50</option>\\r\\n                <option value=\\\"100\\\">100</option>\\r\\n                <option value=\\\"250\\\">250</option>\\r\\n                <option value=\\\"500\\\">500</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">ID </th>\\r\\n            <th scope=\\\"col\\\">Tipo de Produto</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let tipoProduto of tipoProdutos; let i = index\\\">\\r\\n            <td [ngClass]=\\\"tipoProduto.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\r\\n            {{tipoProduto.ID_TEIN_ESTO_PRTP}}\\r\\n            </td>\\r\\n            <td>{{ tipoProduto.NM_TIPO | uppercase }}</td>\\r\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"tipoProduto.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipoProduto)\\\">\\r\\n                  <i [ngClass]=\\\"tipoProduto.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./', tipoProduto.ID_TEIN_ESTO_PRTP]\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table><br>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\n//angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n//servicos\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { TecnologiaInformacaoEstoqueTipoProdutosService } from '../services/tipo-produto.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n// rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n//modelos\r\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\nimport { ITecnologiaInformacaoTipoProduto } from './../models/tipoProduto';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\n@Component({\r\n  selector: 'tecnologia-informacao-estoque-tipo-produto-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoEstoqueTipoProdutosListaComponent\r\n  implements OnInit, OnDestroy {\r\n  breadCrumbTree: Array<Breadcrumb>;\r\n\r\n  idSubModulo: number;\r\n  tipoProdutos: ITecnologiaInformacaoTipoProduto[] = [];\r\n  noResult: boolean;\r\n  loading = true; //Loading FullPage\r\n  loadingNavBar = false; //Loading do NAVBAR\r\n  \r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n    border: true,\r\n  };\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n\r\n  // Tipos de Situação dos Tipos de Produtos (Ativo/Inativo)\r\n  tipos = [\r\n    {\r\n      cod: '1',\r\n      nome: 'Ativos',\r\n    },\r\n    {\r\n      cod: '0',\r\n      nome: 'Inativos',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 100;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private pnotify: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private tipoProdutoService: TecnologiaInformacaoEstoqueTipoProdutosService,\r\n    private formBuilder: FormBuilder,\r\n    private confirmModalService: ConfirmModalService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        this.getTiposProduto(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  setPageRegistros(itemsPerPage) {\r\n    this.itemsPerPage = itemsPerPage;\r\n    this.onFilter();\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_TEIN_ESTO_PRTP: [null],\r\n      NM_TIPO: [null],\r\n      IN_STAT: [null],\r\n      PAGI: [1],\r\n      TT_REGI_PAGI: [this.itemsPerPage],\r\n      TIME: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\r\n\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: `/tecnologia-informacao/home`,\r\n      },\r\n      {\r\n        descricao: 'Estoque',\r\n        routerLink: `/tecnologia-informacao/estoque/${id}`,\r\n      },\r\n      {\r\n        descricao: 'Tipo de Produto',\r\n      },\r\n    ];\r\n  }\r\n\r\n  onFilter() {\r\n    this.form.get('PAGI').setValue(1);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getTiposProduto(params?) {\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.tipoProdutoService\r\n      .getTiposProduto(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.tipoProdutos = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.noResult = true;\r\n            this.tipoProdutos = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  changeType(tipoProduto: ITecnologiaInformacaoTipoProduto) {\r\n    const stat = tipoProduto.IN_STAT == '1' ? '0' : '1';\r\n\r\n    this.confirmChange(stat)\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) => {\r\n          if (!result) return EMPTY;\r\n\r\n          this.loadingNavBar = true;\r\n          tipoProduto.IN_STAT = stat;\r\n          return this.tipoProdutoService.postTipoProduto(tipoProduto);\r\n        }),\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotify.success();\r\n          //tipoContrato.IN_STAT = stat;\r\n        },\r\n        (error: any) => {\r\n          tipoProduto.IN_STAT = tipoProduto.IN_STAT == '1' ? '0' : '1';\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmChange(stat): any {\r\n    if (stat == '1')\r\n      return this.confirmModalService.showConfirm(\r\n        null,\r\n        null,\r\n        'Deseja realmente prosseguir com a ativação do registro?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n"]}