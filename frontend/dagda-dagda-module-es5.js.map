{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/dagda/dagda.component.scss","webpack:///src/app/modules/comercial/integracoes/dagda/dagda.component.html","webpack:///src/app/modules/comercial/integracoes/dagda/dagda.module.ts","webpack:///src/app/modules/comercial/integracoes/dagda/dagda.component.ts","webpack:///src/app/modules/comercial/integracoes/dagda/dagda-routing.module.ts"],"names":["ComercialIntegracoesDagdaModule","declarations","imports","forRoot","ComercialIntegracoesDagdaComponent","activatedRoute","router","subModulosService","atividadesService","_atividadesService","pnotifyService","titleCasePipe","loaderFullScreen","breadCrumbTree","atividades","getPNotify","params","subscribe","registrarAcesso","getSubmodulo","getAtividadesInternas","idSubModulo","getSubModulo","response","appName","transform","setBreadCrumb","matricula","JSON","parse","localStorage","getItem","info","submoduloId","exibeSidebar","getAtividades","status","handleAtividadesInternasError","body","error","nomeSubModulo","descricao","routerLink","selector","template","routes","path","component","loadChildren","then","m","ComercialIntegracoesDagdaIntegracaoMateriaisModule","ComercialIntegracoesDagdaIntegracaoPedidosModule","ComercialIntegracoesDagdaIntegracaoCondicoesPagamentoModule","ComercialIntegracoesDagdaRoutingModule","forChild","exports"],"mappings":"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","file":"dagda-dagda-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2RhZ2RhL2RhZ2RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Integrações Dagda\\\"></app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <card-group text=\\\"Selecione uma atividade\\\" [list]=\\\"atividades\\\"></card-group>\\r\\n</app-body>\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\n\r\nimport { ComercialIntegracoesDagdaRoutingModule } from './dagda-routing.module';\r\nimport { ComercialIntegracoesDagdaComponent } from './dagda.component';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n@NgModule({\r\n  declarations: [ComercialIntegracoesDagdaComponent],\r\n  imports: [\r\n    ComercialIntegracoesDagdaRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ModuleWrapperModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ],\r\n})\r\nexport class ComercialIntegracoesDagdaModule {}\r\n","import { TitleCasePipe } from 'src/app/shared/pipes/title-case.pipe';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { SubModulosService } from 'src/app/shared/services/requests/submodulos.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AdminAtividadesService } from 'src/app/modules/admin/atividades/services/atividades.service';\r\n\r\n@Component({\r\n  selector: 'comercial-integracoes-dagda',\r\n  templateUrl: './dagda.component.html',\r\n  styleUrls: ['./dagda.component.scss'],\r\n})\r\nexport class ComercialIntegracoesDagdaComponent implements OnInit {\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: any = [];\r\n\r\n  appName: string;\r\n  atividades: any = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private subModulosService: SubModulosService,\r\n    private atividadesService: AtividadesService,\r\n    private _atividadesService: AdminAtividadesService,\r\n    private pnotifyService: PNotifyService,\r\n    private titleCasePipe: TitleCasePipe\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.registrarAcesso();\r\n      this.getSubmodulo(params['idSubModulo']);\r\n      this.getAtividadesInternas(params['idSubModulo']);\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getSubmodulo(idSubModulo: number) {\r\n    this.subModulosService\r\n      .getSubModulo(idSubModulo)\r\n      .subscribe((response: any) => {\r\n        if (response['status'] === 200) {\r\n          this.appName = this.titleCasePipe.transform(response['body']['nome']);\r\n          this.setBreadCrumb(this.appName);\r\n        }\r\n      });\r\n  }\r\n\r\n  getAtividadesInternas(idSubModulo: number) {\r\n\r\n    let matricula = (JSON.parse(localStorage.getItem('currentUser')))?.info?.matricula;\r\n\r\n    let params = {\r\n      submoduloId: idSubModulo,\r\n      matricula: matricula,\r\n      exibeSidebar: 0\r\n    }\r\n\r\n    this._atividadesService\r\n      .getAtividades(params)\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            this.handleAtividadesInternasError();\r\n            return\r\n          }\r\n\r\n          this.atividades = response.body[\"data\"];\r\n          this.loaderFullScreen = false;\r\n\r\n        },\r\n        (error: any) => {\r\n          this.handleAtividadesInternasError();\r\n        }\r\n      )\r\n  }\r\n\r\n  // getAtividadesInternas(idSubModulo: number) {\r\n  //   this.atividadesService.getAtividadesInternas(idSubModulo).subscribe({\r\n  //     next: (response: any) => {\r\n  //       if (response['responseCode'] === 200) {\r\n  //         this.atividades = response['result'];\r\n  //         this.loaderFullScreen = false;\r\n  //       } else {\r\n  //         this.handleAtividadesInternasError();\r\n  //       }\r\n  //     },\r\n  //     error: (error: any) => {\r\n  //       this.handleAtividadesInternasError();\r\n  //     },\r\n  //   });\r\n  // }\r\n\r\n  setBreadCrumb(nomeSubModulo: string) {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Comercial',\r\n        routerLink: '/comercial/home',\r\n      },\r\n      {\r\n        descricao: nomeSubModulo,\r\n      },\r\n    ];\r\n  }\r\n\r\n  handleAtividadesInternasError() {\r\n    this.pnotifyService.error();\r\n    this.loaderFullScreen = false;\r\n  }\r\n}\r\n","import { ComercialIntegracoesDagdaComponent } from './dagda.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ComercialIntegracoesDagdaComponent,\r\n  },\r\n  {\r\n    path: 'integracao-materiais',\r\n    loadChildren: () =>\r\n      import('./integracao-materiais/integracao-materiais.module').then(\r\n        (m) => m.ComercialIntegracoesDagdaIntegracaoMateriaisModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'integracao-pedidos',\r\n    loadChildren: () =>\r\n      import('./integracao-pedidos/integracao-pedidos.module').then(\r\n        (m) => m.ComercialIntegracoesDagdaIntegracaoPedidosModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'integracao-condicao-pagamento',\r\n    loadChildren: () =>\r\n      import(\r\n        './integracao-condicoes-pagamento/integracao-condicoes-pagamento.module'\r\n      ).then(\r\n        (m) => m.ComercialIntegracoesDagdaIntegracaoCondicoesPagamentoModule\r\n      ),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialIntegracoesDagdaRoutingModule {}\r\n"]}