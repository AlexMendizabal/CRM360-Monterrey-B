{"version":3,"sources":["./node_modules/js-brasil/dist/mask.js","./node_modules/js-brasil/dist/utils.js","./node_modules/js-brasil/dist/validate.js","./node_modules/js-brasil/dist/iptu_mask.js","./node_modules/js-brasil/dist/create.js","./node_modules/js-brasil/dist/iptu_create.js","./node_modules/js-brasil/dist/estados.js","./node_modules/ng-brazil/fesm2015/ng-brazil.js","./node_modules/js-brasil/dist/placa.js","./node_modules/text-mask-addons/dist/createNumberMask.js","./node_modules/js-brasil/dist/inscricaoestadual.js","./node_modules/js-brasil/dist/iptu_validate.js","./node_modules/js-brasil/dist/iptu.js","./node_modules/js-brasil/dist/index.js","./node_modules/js-brasil/dist/rg.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,qBAAS;AAC/B,0BAA0B,mBAAO,CAAC,iCAAqB;AACvD,2CAA2C,qCAAqC,oCAAoC,EAAE,EAAE;AACxH,yBAAyB,mBAAO,CAAC,oDAAwC;AACzE,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,0BAA0B,mBAAO,CAAC,iCAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAiE,gBAAgB,qCAAqC;AACtH,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAiE,gBAAgB,cAAc;AAC/F,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe;AACvE,KAAK;AACL;AACA,wCAAwC,oBAAoB;AAC5D;AACA,KAAK;AACL;AACA,wCAAwC,oBAAoB;AAC5D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D,0BAA0B,mBAAmB;AAC7C,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU,sEAAsE,EAAE,EAAE;AACrH;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC,uCAAuC;AAC3F;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C,qCAAqC,0CAA0C;AAC/E;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACxkBa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,uBAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD,0BAA0B,aAAa;AACvC;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA;AACA;AACA,iDAAiD,2BAA2B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,iBAAiB;AACjB,sBAAsB;AACtB,4DAA4D;AAC5D;AACA,2CAA2C;AAC3C,kEAAkE;AAClE,sCAAsC;AACtC;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AChVa;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,qBAAS;AAC/B,0BAA0B,mBAAO,CAAC,iCAAqB;AACvD,cAAc,mBAAO,CAAC,qBAAS;AAC/B,eAAe,mBAAO,CAAC,sBAAU;AACjC,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,gBAAgB,mBAAO,CAAC,uBAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE,WAAW,EAAE,OAAO,EAAE;AAC9C,0BAA0B,EAAE,MAAM,EAAE;AACpC,wBAAwB,EAAE,MAAM,EAAE;AAClC,qBAAqB,EAAE,MAAM,EAAE;AAC/B,2BAA2B,EAAE,MAAM,EAAE;AACrC,mBAAmB,EAAE,MAAM,EAAE,MAAM,EAAE;AACrC,wBAAwB,EAAE,MAAM,EAAE;AAClC,6BAA6B,EAAE,MAAM,EAAE;AACvC,4BAA4B,EAAE,MAAM,EAAE;AACtC,0BAA0B,EAAE,MAAM,EAAE;AACpC,0BAA0B,EAAE,MAAM,EAAE;AACpC,+BAA+B,EAAE,MAAM,EAAE;AACzC,wBAAwB,EAAE,MAAM,EAAE;AAClC,+BAA+B,EAAE,MAAM,EAAE;AACzC,wBAAwB,EAAE,MAAM,EAAE;AAClC,+BAA+B,EAAE,MAAM,EAAE;AACzC,wBAAwB,EAAE,MAAM,EAAE;AAClC,0BAA0B,EAAE,MAAM,EAAE;AACpC,wBAAwB,EAAE,MAAM,EAAE;AAClC,0BAA0B,EAAE,MAAM,EAAE;AACpC,wBAAwB,EAAE,MAAM,EAAE;AAClC,2BAA2B,EAAE,MAAM,EAAE;AACrC,2BAA2B,EAAE,MAAM,EAAE;AACrC,qBAAqB,EAAE,MAAM,EAAE;AAC/B,yBAAyB,EAAE,MAAM,EAAE;AACnC,wBAAwB,EAAE,MAAM,EAAE;AAClC,wBAAwB,EAAE,MAAM,EAAE;AAClC;AACA;AACA;AACA,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,oCAAoC,GAAG,aAAa,GAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrkCAAkC,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,GAAG,cAAc;AAClD,iCAAiC,GAAG,EAAE;AACtC;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU,sBAAsB;AAChC;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU,sBAAsB;AAChC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,qBAAqB,GAAG,OAAO,GAAG;AAClC,sBAAsB,GAAG;AACzB,2BAA2B,GAAG,WAAW,GAAG;AAC5C,2BAA2B,GAAG,WAAW,GAAG;AAC5C,qBAAqB,GAAG;AACxB,sBAAsB,GAAG,kBAAkB,GAAG;AAC9C,6BAA6B,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,gDAAgD,IAAI,SAAS,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC,wBAAwB,KAAK,IAAI,IAAI,MAAM,IAAI;AAC/C,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AACrD,4BAA4B,GAAG,GAAG,EAAE,GAAG,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAC5C,0BAA0B,EAAE,GAAG,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA,8DAA8D,MAAM,QAAQ,IAAI;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE;AAClC,uBAAuB,EAAE,GAAG,EAAE,GAAG,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACtpBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACxCa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,uBAAW;AACnC,cAAc,mBAAO,CAAC,qyBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oHAAoH;AACpeAAe,QAAQ;AACvkC;;;;;;;;;;;;ACzda;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,qBAAS;AAC/B,kBAAkB,mBAAO,CAAC,yBAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AChEa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,8CAA8C;AACnD,KAAK,oDAAoD;AACzD,KAAK,gDAAgD;AACrD,KAAK,sDAAsD;AAC3D,KAAK,gDAAgD;AACrD,KAAK,gDAAgD;AACrD,KAAK,sEAAsE;AAC3E,KAAK,kEAAkE;AACvE,KAAK,gDAAgD;AACrD,KAAK,sDAAsD;AAC3D,KAAK,4DAA4D;AACjE,KAAK,0EAA0E;AAC/E,KAAK,8DAA8D;AACnE,KAAK,8CAA8C;AACnD,KAAK,oDAAoD;AACzD,KAAK,kDAAkD;AACvD,KAAK,0DAA0D;AAC/D,KAAK,gDAAgD;AACrD,KAAK,kEAAkE;AACvE,KAAK,4EAA4E;AACjF,KAAK,wEAAwE;AAC7E,KAAK,sDAAsD;AAC3D,KAAK,oDAAoD;AACzD,KAAK,kEAAkE;AACvE,KAAK,wDAAwD;AAC7D,KAAK,oDAAoD;AACzD,KAAK;AACL;AACA,mC;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACY;AACW;AACd;;AAExD;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,kBAAkB;AACvC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,mBAAmB;AACxC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,uBAAuB;AAC5C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,sBAAsB;AAC3C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB;AACA,YAAY,iDAAO,WAAW,yDAAU;AACxC;AACA;AACA,yBAAyB,EAAE;AAC3B,eAAe,oDAAU,wCAAwC;AACjE;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,kBAAkB;AACvC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,uBAAuB;AAC5C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,qBAAqB;AAC1C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,oBAAoB;AACzC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,0BAA0B;AAC/C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,sBAAsB;AAC3C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,uBAAuB;AAC5C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,iBAAiB;AACtC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,mBAAmB;AACxC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,QAAQ,iDAAO,WAAW,yDAAU;AACpC;AACA;AACA,qBAAqB,EAAE;AACvB,WAAW,oDAAU,qBAAqB;AAC1C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB,aAAa,4DAAa;AAC1B;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,gDAAM;AACrB;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE,YAAY,iDAAO;AACtC,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEs7B;;AAEt7B,qC;;;;;;;;;;;;ACriCa;AACb,8CAA8C,cAAcoCAAoC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,MAAM,EAAE;AACpC,4BAA4B,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AACtD,4BAA4B,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;AACzE,4BAA4B,EAAE,MAAM,EAAE;AACtC,4BAA4B,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;AACzD,4BAA4B,EAAE,MAAM,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;ACrKA,eAAe,KAAiD,oBAAoB,SAA+H,CAAC,iBAAiB,mBAAmB,cAAc,4BAA4B,YAAY,UAAU,iBAAiB,gEAAgE,SAAS,+BAA+B,kBAAkB,eAAe,gBAAgB,aAAa,aAAa,aAAa,0EAA0E,8EAA8E,mEAAmE,kBAAkB,8BAA8B,2DAA2D,8MAA8M,mEAAmE,mBAAmB,wWAAwW,+DAA+D,+bAA+b,yCAAyC,cAAc,kCAAkC,qBAAqB,EAAE,gBAAgB,2BAA2B,EAAE,eAAe,sCAAsC,SAAS,EAAE,8EAA8E,gBAAgB,aAAa,qGAAqG,YAAY,yEAAyE,GAAG,E;;;;;;;;;;;;ACAj9E;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,qBAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,aAAa;AACvC,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;ACrsBa;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,qBAAS;AAC/B,oBAAoB,mBAAO,CAAC,2BAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,+BAA+B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAC/C,6BAA6B,EAAE,GAAG,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACxEa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,6BAAiB;AAC/C,kBAAkB,mBAAO,CAAC,yBAAa;AACvC,cAAc,mBAAO,CAAC,qBAAS;AAC/B,oBAAoB,mBAAO,CAAC,2BAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,qBAAS;AAC/B,iBAAiB,mBAAO,CAAC,wBAAY;AACrC,8CAA8C,qCAAqC,8BAA8B,EAAE,EAAE;AACrH,WAAW,mBAAO,CAAC,oBAAQ;AAC3B,aAAa,mBAAO,CAAC,oBAAQ;AAC7B,cAAc,mBAAO,CAAC,qBAAS;AAC/B,gBAAgB,mBAAO,CAAC,uBAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B","file":"default~akna-akna-module~associacoes-associacoes-module~auditoria-auditoria-module~cadastros-cadastr~fbbac6a4-es2015.js","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertMaskToPlaceholder = exports.conformToMask = exports.strFunction = exports.placeholderChar = exports.maskBr = exports.MASKS = void 0;\nvar utils_1 = require(\"./utils\");\nvar inscricaoestadual_1 = require(\"./inscricaoestadual\");\nObject.defineProperty(exports, \"MASKSIE\", { enumerable: true, get: function () { return inscricaoestadual_1.MASKSIE; } });\nvar createNumberMask_1 = require(\"text-mask-addons/dist/createNumberMask\");\nvar iptu_1 = require(\"./iptu\");\nvar inscricaoestadual_2 = require(\"./inscricaoestadual\");\nvar maskNumber = {\n    decimalLimit: 2,\n    thousandsSeparatorSymbol: '.',\n    decimalSymbol: ',',\n    allowDecimal: true,\n    integerLimit: 17,\n    prefix: '',\n    suffix: ''\n};\nexports.MASKS = {\n    aih: {\n        text: '000000000000-0',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    cartaocredito: {\n        text: '0000 0000 0000 0000 00/00 000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, '0', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, '/', /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/]\n    },\n    celular: {\n        text: '(00) 00000-0000',\n        textMask: ['(', /[1-9]/, /\\d/, ')', ' ', /[5-9]/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    },\n    cep: {\n        text: '00.000-000',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]\n    },\n    // certidao Certidões de Nascimento, Casamento ou Óbito \n    certidao: {\n        text: '000000.00.00.0000.0.00000.000.0000000-00',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, '.', /\\d/, /\\d/, '.',\n            /\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '.',\n            /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    chassi: {\n        text: 'AAA AAAAAA AA AA0000',\n        textMask: [/[1-9]/, /\\w/, /\\w/, ' ', /\\w/, /\\w/, /\\w/, /\\w/, /\\w/, /\\w/, ' ', /\\w/, /\\w/, ' ', /\\w/, /\\w/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    cid: {\n        textMask: false\n    },\n    cnae: {\n        text: '0000-0/00',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, '/', /\\d/, /\\d/]\n    },\n    cnh: {\n        text: '000000000-00',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    renachseguranca: {\n        text: '00000000000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    renachestadual: {\n        text: 'AA000000000',\n        textMask: [/[A-S]/, /[A-Z]/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    cnhespelho: {\n        text: '0000000000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    cnpj: {\n        text: '00.000.000/0000-00',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    cns: {\n        text: '000 0000 0000 00-00',\n        textMask: [/[1|2|7|8|9]/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    contabanco: {\n        text: '000 00000-0 00000-0',\n        textMask: [/\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-',\n            /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    cpf: {\n        text: '000.000.000-00',\n        textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    cpfcnpj: {\n        text: '0000.0000.0000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, '.', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    currency: {\n        text: '0.000,00',\n        textMask: createNumberMask_1.default(__assign(__assign({}, maskNumber), { prefix: 'R$ ', allowNegative: true }))\n    },\n    data: {\n        text: '00/00/0000',\n        textMask: [/[0-3]/, /[0-9]/, '/', /[0-1]/, /[0-9]/, '/', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    date: {\n        text: '00/00/0000',\n        textMask: [/[0-1]/, /[0-9]/, '/', /[0-3]/, /[0-9]/, '/', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    datetime: {\n        text: '00/00/0000 00:00',\n        textMask: [/[0-1]/, /[0-9]/, '/', /[0-3]/, /[0-9]/, '/', /[0-2]/, /[0-9]/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, ':', /[0-5]/, /\\d/]\n    },\n    datahora: {\n        text: '00/00/0000 00:00',\n        textMask: [/[0-3]/, /[0-9]/, '/', /[0-1]/, /[0-9]/, '/', /[0-2]/, /[0-9]/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, ':', /[0-5]/, /\\d/]\n    },\n    ect: {\n        text: '00000000-0',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    endereco: {\n        text: '0000.0000.0000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, '.', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    iptu: {\n        text: '0000.0000.0000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, '.', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    number: {\n        text: '0.000,00',\n        textMask: createNumberMask_1.default(maskNumber)\n    },\n    porcentagem: {\n        text: '00,00%',\n        textMask: createNumberMask_1.default(__assign(__assign({}, maskNumber), { suffix: '%' }))\n    },\n    pispasep: {\n        text: '000.00000.00-0',\n        textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, '-', /\\d/]\n    },\n    placa: {\n        text: 'AAA-0000',\n        textMask: [/[A-S]/, /[A-Z]/, /[A-Z]/, '-', /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    processo: {\n        text: '0000000-00.0000.AAA.0000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, '.', /[A-Za-z]/, /[A-Za-z]/, /[A-Za-z]/, '.', /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    renavam: {\n        text: '0000000000-00',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/],\n        textMaskFunction: function mask(userInput) {\n            var numbers = userInput.match(/\\d/g);\n            var numberLength = 0;\n            if (numbers) {\n                numberLength = numbers.join('').length;\n            }\n            if (!userInput || numberLength < 9) {\n                return [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/];\n            }\n            else {\n                return [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/];\n            }\n        }\n    },\n    rg: {\n        text: 'AA-00.000.000',\n        textMask: [/[A-Za-z]/, /[A-Za-z]/, '-', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/]\n    },\n    sped: {\n        text: '0000.0000.0000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, '.', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    telefone: {\n        text: '(00) 00000-0000',\n        textMask: ['(', /[1-9]/, /\\d/, ')', ' ', /[1-9]/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n        textMaskFunction: function mask(userInput) {\n            var numbers = userInput.match(/\\d/g);\n            var numberLength = 0;\n            if (numbers) {\n                numberLength = numbers.join('').length;\n            }\n            if (!userInput || numberLength > 10) {\n                return ['(', /[1-9]/, /\\d/, ')', ' ', /[1-9]/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n            }\n            else {\n                return ['(', /[1-9]/, /\\d/, ')', ' ', /[1-9]/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n            }\n        }\n    },\n    time: {\n        text: '00:00',\n        textMask: [/\\d/, /\\d/, ':', /[0-5]/, /\\d/]\n    },\n    titulo: {\n        text: '0000.0000.0000',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, '.', /[0-2]/, /[0-9]/, /\\d/, /\\d/]\n    },\n    utils: {\n        numberToString: function (n) {\n            if (!n || typeof n === 'string') {\n                return n;\n            }\n            return (n.toString()).replace('.', ',');\n        },\n        textMask: false\n    }\n};\nvar makeGeneric = function (key) {\n    return function (value) {\n        if (!value) {\n            return '';\n        }\n        var mask = exports.MASKS[key].textMask;\n        var textMaskFunction = exports.MASKS[key].textMaskFunction;\n        if (typeof textMaskFunction === 'function') {\n            mask = textMaskFunction(value);\n        }\n        return conformToMask(value, mask, { guide: false }).conformedValue;\n    };\n};\nexports.maskBr = {\n    aih: makeGeneric('aih'),\n    celular: makeGeneric('celular'),\n    cep: makeGeneric('cep'),\n    certidao: makeGeneric('certidao'),\n    chassi: makeGeneric('chassi'),\n    cnae: makeGeneric('cnae'),\n    cnh: makeGeneric('cnh'),\n    renachseguranca: makeGeneric('renachseguranca'),\n    renachestadual: makeGeneric('renachestadual'),\n    cnhespelho: makeGeneric('cnhespelho'),\n    cnpj: makeGeneric('cnpj'),\n    cns: makeGeneric('cns'),\n    contabanco: makeGeneric('contabanco'),\n    cpf: makeGeneric('cpf'),\n    cpfcnpj: makeGeneric('cpfcnpj'),\n    cartaocredito: makeGeneric('cartaocredito'),\n    currency: function (currencyValueInput, decimalsFormat) {\n        if (decimalsFormat === void 0) { decimalsFormat = 2; }\n        return formatNumber(exports.MASKS['currency'], currencyValueInput, decimalsFormat);\n    },\n    data: makeGeneric('data'),\n    date: makeGeneric('date'),\n    datetime: makeGeneric('datetime'),\n    datahora: makeGeneric('datahora'),\n    ect: makeGeneric('ect'),\n    endereco: makeGeneric('endereco'),\n    inscricaoestadual: function (inscricaoestadualValue, estado) {\n        var ie = inscricaoestadual_2.MASKSIE;\n        var ieState = ie[estado];\n        if (!inscricaoestadualValue || !estado || !ieState ||\n            !ieState.textMask) {\n            return '';\n        }\n        var mask = ieState.textMask;\n        var textMaskFunction = ieState.textMaskFunction;\n        if (typeof textMaskFunction === 'function') {\n            mask = textMaskFunction(inscricaoestadualValue);\n        }\n        return conformToMask(inscricaoestadualValue, mask, { guide: false }).conformedValue;\n    },\n    iptu: function (iptuValue, estado, cidade) {\n        var mask = iptu_1.mask_iptu(iptuValue, estado, cidade);\n        if (!mask || typeof mask === 'string') {\n            return '';\n        }\n        return conformToMask(iptuValue, mask.textMask, { guide: false }).conformedValue;\n    },\n    number: function (numberValue, decimalsFormat) {\n        if (decimalsFormat === void 0) { decimalsFormat = 2; }\n        return formatNumber(exports.MASKS['number'], numberValue, decimalsFormat);\n    },\n    porcentagem: function (porcentagemValue, decimalsFormat) {\n        if (decimalsFormat === void 0) { decimalsFormat = 2; }\n        return formatNumber(exports.MASKS['porcentagem'], porcentagemValue, decimalsFormat);\n    },\n    pispasep: makeGeneric('pispasep'),\n    placa: makeGeneric('placa'),\n    processo: makeGeneric('processo'),\n    renavam: makeGeneric('renavam'),\n    rg: makeGeneric('rg'),\n    sped: makeGeneric('sped'),\n    telefone: makeGeneric('telefone'),\n    time: function (value) {\n        if (value instanceof Date) {\n            value = value.toTimeString().split(' ')[0];\n        }\n        return makeGeneric('time')(value);\n    },\n    titulo: makeGeneric('titulo')\n};\n/**\n * FROM TEXT-MASK\n */\nexports.placeholderChar = '_';\nexports.strFunction = 'function';\nvar defaultPlaceholderChar = exports.placeholderChar;\nvar emptyArray = [];\nvar emptyString = '';\nfunction conformToMask(inputValue, mask, config) {\n    if (inputValue === void 0) { inputValue = emptyString; }\n    if (mask === void 0) { mask = emptyArray; }\n    if (config === void 0) { config = {}; }\n    var rawValue = inputValue.toString();\n    if (typeof inputValue === 'number') {\n        rawValue = inputValue.toString();\n    }\n    if (inputValue instanceof Date) {\n        rawValue = inputValue.toLocaleString(\"pt-br\");\n    }\n    if (!utils_1.isArray(mask)) {\n        // If someone passes a function as the mask property, we should call the\n        // function to get the mask array - Normally this is handled by the\n        // `createTextMaskInputElement:update` function - this allows mask functions\n        // to be used directly with `conformToMask`\n        if (typeof mask === exports.strFunction) {\n            // call the mask function to get the mask array\n            mask = mask(inputValue, config);\n            // mask functions can setup caret traps to have some control over how the caret moves. We need to process\n            // the mask for any caret traps. `processCaretTraps` will remove the caret traps from the mask\n            mask = utils_1.processCaretTraps(mask).maskWithoutCaretTraps;\n        }\n        else {\n            throw new Error('Text-mask:conformToMask; The mask property must be an array.');\n        }\n    }\n    // These configurations tell us how to conform the mask\n    var guide = config.guide || true;\n    var previousConformedValue = config.previousConformedValue || emptyString;\n    var placeholder = convertMaskToPlaceholder(mask, exports.placeholderChar);\n    var currentCaretPosition = config.currentCaretPosition;\n    var keepCharPositions = config.keepCharPositions;\n    // The configs below indicate that the user wants the algorithm to work in *no guide* mode\n    var suppressGuide = guide === false && previousConformedValue !== undefined;\n    // Calculate lengths once for performance\n    var rawValueLength = rawValue.length;\n    var previousConformedValueLength = previousConformedValue.length;\n    var placeholderLength = placeholder.length;\n    var maskLength = mask.length;\n    // This tells us the number of edited characters and the direction in which they were edited (+/-)\n    var editDistance = rawValueLength - previousConformedValueLength;\n    // In *no guide* mode, we need to know if the user is trying to add a character or not\n    var isAddition = editDistance > 0;\n    // Tells us the index of the first change. For (438) 394-4938 to (38) 394-4938, that would be 1\n    var indexOfFirstChange = currentCaretPosition + (isAddition ? -editDistance : 0);\n    // We're also gonna need the index of last change, which we can derive as follows...\n    var indexOfLastChange = indexOfFirstChange + Math.abs(editDistance);\n    // If `conformToMask` is configured to keep character positions, that is, for mask 111, previous value\n    // _2_ and raw value 3_2_, the new conformed value should be 32_, not 3_2 (default behavior). That's in the case of\n    // addition. And in the case of deletion, previous value _23, raw value _3, the new conformed string should be\n    // __3, not _3_ (default behavior)\n    //\n    // The next block of logic handles keeping character positions for the case of deletion. (Keeping\n    // character positions for the case of addition is further down since it is handled differently.)\n    // To do this, we want to compensate for all characters that were deleted\n    if (keepCharPositions === true && !isAddition) {\n        // We will be storing the new placeholder characters in this variable.\n        var compensatingPlaceholderChars = emptyString;\n        // For every character that was deleted from a placeholder position, we add a placeholder char\n        for (var i = indexOfFirstChange; i < indexOfLastChange; i++) {\n            if (placeholder[i] === exports.placeholderChar) {\n                compensatingPlaceholderChars += exports.placeholderChar;\n            }\n        }\n        // Now we trick our algorithm by modifying the raw value to make it contain additional placeholder characters\n        // That way when the we start laying the characters again on the mask, it will keep the non-deleted characters\n        // in their positions.\n        rawValue = (rawValue.slice(0, indexOfFirstChange) +\n            compensatingPlaceholderChars +\n            rawValue.slice(indexOfFirstChange, rawValueLength));\n    }\n    // Convert `rawValue` string to an array, and mark characters based on whether they are newly added or have\n    // existed in the previous conformed value. Identifying new and old characters is needed for `conformToMask`\n    // to work if it is configured to keep character positions.\n    var rawValueArr = rawValue\n        .split(emptyString)\n        .map(function (char, i) { return ({ char: char, isNew: i >= indexOfFirstChange && i < indexOfLastChange }); });\n    // The loop below removes masking characters from user input. For example, for mask\n    // `00 (111)`, the placeholder would be `00 (___)`. If user input is `00 (234)`, the loop below\n    // would remove all characters but `234` from the `rawValueArr`. The rest of the algorithm\n    // then would lay `234` on top of the available placeholder positions in the mask.\n    for (var i = rawValueLength - 1; i >= 0; i--) {\n        var char = rawValueArr[i].char;\n        if (char !== exports.placeholderChar) {\n            var shouldOffset = i >= indexOfFirstChange && previousConformedValueLength === maskLength;\n            if (char === placeholder[(shouldOffset) ? i - editDistance : i]) {\n                rawValueArr.splice(i, 1);\n            }\n        }\n    }\n    // This is the variable that we will be filling with characters as we figure them out\n    // in the algorithm below\n    var conformedValue = emptyString;\n    var someCharsRejected = false;\n    // Ok, so first we loop through the placeholder looking for placeholder characters to fill up.\n    placeholderLoop: for (var i = 0; i < placeholderLength; i++) {\n        var charInPlaceholder = placeholder[i];\n        // We see one. Let's find out what we can put in it.\n        if (charInPlaceholder === exports.placeholderChar) {\n            // But before that, do we actually have any user characters that need a place?\n            if (rawValueArr.length > 0) {\n                // We will keep chipping away at user input until either we run out of characters\n                // or we find at least one character that we can map.\n                while (rawValueArr.length > 0) {\n                    // Let's retrieve the first user character in the queue of characters we have left\n                    var shift = rawValueArr.shift();\n                    var rawValueChar = '', isNew = false;\n                    if (shift) {\n                        rawValueChar = shift.char;\n                        isNew = shift.isNew;\n                    }\n                    // If the character we got from the user input is a placeholder character (which happens\n                    // regularly because user input could be something like (540) 90_-____, which includes\n                    // a bunch of `_` which are placeholder characters) and we are not in *no guide* mode,\n                    // then we map this placeholder character to the current spot in the placeholder\n                    if (rawValueChar === exports.placeholderChar && suppressGuide !== true) {\n                        conformedValue += exports.placeholderChar;\n                        // And we go to find the next placeholder character that needs filling\n                        continue placeholderLoop;\n                        // Else if, the character we got from the user input is not a placeholder, let's see\n                        // if the current position in the mask can accept it.\n                    }\n                    else if (mask[i].test(rawValueChar)) {\n                        // we map the character differently based on whether we are keeping character positions or not.\n                        // If any of the conditions below are met, we simply map the raw value character to the\n                        // placeholder position.\n                        if (keepCharPositions !== true ||\n                            isNew === false ||\n                            previousConformedValue === emptyString ||\n                            guide === false ||\n                            !isAddition) {\n                            conformedValue += rawValueChar;\n                        }\n                        else {\n                            // We enter this block of code if we are trying to keep character positions and none of the conditions\n                            // above is met. In this case, we need to see if there's an available spot for the raw value character\n                            // to be mapped to. If we couldn't find a spot, we will discard the character.\n                            //\n                            // For example, for mask `1111`, previous conformed value `_2__`, raw value `942_2__`. We can map the\n                            // `9`, to the first available placeholder position, but then, there are no more spots available for the\n                            // `4` and `2`. So, we discard them and end up with a conformed value of `92__`.\n                            var rawValueArrLength = rawValueArr.length;\n                            var indexOfNextAvailablePlaceholderChar = null;\n                            // Let's loop through the remaining raw value characters. We are looking for either a suitable spot, ie,\n                            // a placeholder character or a non-suitable spot, ie, a non-placeholder character that is not new.\n                            // If we see a suitable spot first, we store its position and exit the loop. If we see a non-suitable\n                            // spot first, we exit the loop and our `indexOfNextAvailablePlaceholderChar` will stay as `null`.\n                            for (var i_1 = 0; i_1 < rawValueArrLength; i_1++) {\n                                var charData = rawValueArr[i_1];\n                                if (charData.char !== exports.placeholderChar && charData.isNew === false) {\n                                    break;\n                                }\n                                if (charData.char === exports.placeholderChar) {\n                                    indexOfNextAvailablePlaceholderChar = i_1;\n                                    break;\n                                }\n                            }\n                            // If `indexOfNextAvailablePlaceholderChar` is not `null`, that means the character is not blocked.\n                            // We can map it. And to keep the character positions, we remove the placeholder character\n                            // from the remaining characters\n                            if (indexOfNextAvailablePlaceholderChar !== null) {\n                                conformedValue += rawValueChar;\n                                rawValueArr.splice(indexOfNextAvailablePlaceholderChar, 1);\n                                // If `indexOfNextAvailablePlaceholderChar` is `null`, that means the character is blocked. We have to\n                                // discard it.\n                            }\n                            else {\n                                i--;\n                            }\n                        }\n                        // Since we've mapped this placeholder position. We move on to the next one.\n                        continue placeholderLoop;\n                    }\n                    else {\n                        someCharsRejected = true;\n                    }\n                }\n            }\n            // We reach this point when we've mapped all the user input characters to placeholder\n            // positions in the mask. In *guide* mode, we append the left over characters in the\n            // placeholder to the `conformedString`, but in *no guide* mode, we don't wanna do that.\n            //\n            // That is, for mask `(111)` and user input `2`, we want to return `(2`, not `(2__)`.\n            if (suppressGuide === false) {\n                conformedValue += placeholder.substr(i, placeholderLength);\n            }\n            // And we break\n            break;\n            // Else, the charInPlaceholder is not a placeholderChar. That is, we cannot fill it\n            // with user input. So we just map it to the final output\n        }\n        else {\n            conformedValue += charInPlaceholder;\n        }\n    }\n    // The following logic is needed to deal with the case of deletion in *no guide* mode.\n    //\n    // Consider the silly mask `(111) /// 1`. What if user tries to delete the last placeholder\n    // position? Something like `(589) /// `. We want to conform that to `(589`. Not `(589) /// `.\n    // That's why the logic below finds the last filled placeholder character, and removes everything\n    // from that point on.\n    if (suppressGuide && isAddition === false) {\n        var indexOfLastFilledPlaceholderChar = null;\n        // Find the last filled placeholder position and substring from there\n        for (var i = 0; i < conformedValue.length; i++) {\n            if (placeholder[i] === exports.placeholderChar) {\n                indexOfLastFilledPlaceholderChar = i;\n            }\n        }\n        if (indexOfLastFilledPlaceholderChar !== null) {\n            // We substring from the beginning until the position after the last filled placeholder char.\n            conformedValue = conformedValue.substr(0, indexOfLastFilledPlaceholderChar + 1);\n        }\n        else {\n            // If we couldn't find `indexOfLastFilledPlaceholderChar` that means the user deleted\n            // the first character in the mask. So we return an empty string.\n            conformedValue = emptyString;\n        }\n    }\n    return { conformedValue: conformedValue, meta: { someCharsRejected: someCharsRejected } };\n}\nexports.conformToMask = conformToMask;\nfunction convertMaskToPlaceholder(mask, placeholderChar) {\n    if (mask === void 0) { mask = emptyArray; }\n    if (placeholderChar === void 0) { placeholderChar = defaultPlaceholderChar; }\n    if (!utils_1.isArray(mask)) {\n        throw new Error('Text-mask:convertMaskToPlaceholder; The mask property must be an array.');\n    }\n    if (mask.indexOf(placeholderChar) !== -1) {\n        throw new Error('Placeholder character must not be used as part of the mask. Please specify a character ' +\n            'that is not present in your mask as your placeholder character.\\n\\n' +\n            (\"The placeholder character that was received is: \" + JSON.stringify(placeholderChar) + \"\\n\\n\") +\n            (\"The mask that was received is: \" + JSON.stringify(mask)));\n    }\n    return mask.map(function (char) {\n        return (char instanceof RegExp) ? placeholderChar : char;\n    }).join('');\n}\nexports.convertMaskToPlaceholder = convertMaskToPlaceholder;\n/**\n * Due to a bug on textmask, the requireDecimal its not working, so this function solves this problem\n * @param maskType\n * @param numberValue\n * @param decimalsFormat\n * @returns\n */\nfunction formatNumber(maskType, numberValue, decimalsFormat) {\n    if (decimalsFormat === void 0) { decimalsFormat = 2; }\n    if (!numberValue && numberValue !== 0) {\n        return '';\n    }\n    if (!numberValue.split) {\n        numberValue += '';\n        numberValue = numberValue.replace('.', ',');\n    }\n    var vals = numberValue.split(',');\n    if (!maskType.textMask || typeof maskType.textMask !== 'function') {\n        return '';\n    }\n    var mask = maskType.textMask(vals[0]);\n    var decimals = '';\n    if (decimalsFormat == undefined) {\n        decimals = vals.length > 1 ? ',' + vals[1] : '';\n    }\n    else {\n        decimals = vals.length > 1 ? (vals[1] < 10 ? vals[1].toString() + '0' : vals[1].toString()) : '00';\n        if (decimals.length > decimalsFormat) {\n            decimals = decimals.substring(0, decimalsFormat);\n        }\n    }\n    var conformedValue = conformToMask(numberValue, mask, { guide: false }).conformedValue;\n    var suffix = '';\n    if (conformedValue.indexOf('%') >= 0) {\n        conformedValue = conformedValue.replace('%', '');\n        suffix = '%';\n    }\n    return conformedValue + (decimalsFormat > 0 ? ',' + decimals : '') + suffix;\n}\n//# sourceMappingURL=mask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeGenericFaker = exports.getSpecialProperty = exports.CORES = exports.randomEstadoSigla = exports.randomLetterOrNumber = exports.randomLetter = exports.randomNumber = exports.rand = exports.randArray = exports.fillString = exports.slugify = exports.numberToCurrency = exports.currencyToNumber = exports.getAllWords = exports.getAllDigits = exports.allNumbersAreSame = exports.modulo11a = exports.modulo11Custom = exports.modulo11 = exports.processCaretTraps = exports.isNil = exports.isNumber = exports.isString = exports.isArray = exports.isPresent = void 0;\nvar estados_1 = require(\"./estados\");\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexports.isPresent = isPresent;\nfunction isArray(value) {\n    return (Array.isArray && Array.isArray(value)) || value instanceof Array;\n}\nexports.isArray = isArray;\nfunction isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.isString = isString;\nfunction isNumber(value) {\n    return typeof value === 'number' && !isNaN(value); // && value.length === undefined\n}\nexports.isNumber = isNumber;\nfunction isNil(value) {\n    return typeof value === 'undefined' || value === null;\n}\nexports.isNil = isNil;\nvar strCaretTrap = '[]';\nfunction processCaretTraps(mask) {\n    var indexes = [];\n    var indexOfCaretTrap;\n    while (indexOfCaretTrap = mask.indexOf(strCaretTrap), indexOfCaretTrap !== -1) { // eslint-disable-line\n        indexes.push(indexOfCaretTrap);\n        mask.splice(indexOfCaretTrap, 1);\n    }\n    return { maskWithoutCaretTraps: mask, indexes: indexes };\n}\nexports.processCaretTraps = processCaretTraps;\nexports.modulo11 = function (value) {\n    var mults = [];\n    var weightVal = 2;\n    for (var i = 0; i < value.length; i++) {\n        // mults = [weightVal, ...mults]\n        mults.push(weightVal);\n        weightVal++;\n        if (weightVal > 9)\n            weightVal = 2;\n    }\n    mults = mults.reverse();\n    var sum = 0;\n    for (var i = 0; i < value.length; i++) {\n        sum += parseInt(value[i]) * mults[i];\n    }\n    var digit = (sum * 10) % 11;\n    return digit;\n};\nexports.modulo11Custom = function (string, size, maxMult, by10) {\n    if (maxMult === void 0) { maxMult = string.length; }\n    if (by10 === void 0) { by10 = true; }\n    if (!by10)\n        size = 1;\n    for (var n = 1; n <= size; n++) {\n        var soma = 0;\n        var mult = 2;\n        for (var i = string.length - 1; i >= 0; i--) {\n            soma += (mult * parseInt(string.charAt(i)));\n            mult++;\n            if (mult > maxMult)\n                mult = 2;\n        }\n        var dig = void 0;\n        if (by10) {\n            dig = ((soma * 10) % 11) % 10;\n        }\n        else {\n            dig = soma % 11;\n            if (dig == 10)\n                dig = 0;\n        }\n        string += dig;\n    }\n    return string.substr(string.length - size, size);\n};\nexports.modulo11a = function (string, size, mod) {\n    var soma = 0;\n    for (var i = 1; i <= size; i++) {\n        // tslint:disable-next-line:radix\n        soma = soma + parseInt(string.substring(i - 1, i)) * (mod - i);\n    }\n    var resto = (soma * 10) % 11;\n    if ((resto === 10) || (resto === 11)) {\n        resto = 0;\n    }\n    return resto;\n};\n/**\n *\n * @param input\n * ^ - Match line start\n  (\\d) - match first digit and capture it in back reference #1 i.e. \\1\n  (?!..) is a negative lookahead\n  (?!\\1+$) means disallow the match if first digit is followed by same digit (captured group) till end.\n  \\d{11}$ match next 11 digit followed by line end\n */\nfunction allNumbersAreSame(inputValue) {\n    var input = getAllDigits(inputValue);\n    if (typeof input === 'string') {\n        var reg = new RegExp('^(\\\\d)(?!\\\\1+$)\\\\d{' + (input.length - 1) + '}$');\n        return reg.test(input);\n    }\n    return false;\n}\nexports.allNumbersAreSame = allNumbersAreSame;\nfunction getAllDigits(input) {\n    if (!input.match) {\n        input = input.toString();\n    }\n    var match = input.match(/\\d/g);\n    if (match) {\n        return match.join(\"\");\n    }\n    return '';\n}\nexports.getAllDigits = getAllDigits;\nfunction getAllWords(input) {\n    var match = input.match(/\\w/g);\n    if (match) {\n        return match.join(\"\");\n    }\n    return '';\n}\nexports.getAllWords = getAllWords;\nfunction currencyToNumber(input) {\n    if (typeof input === 'number') {\n        return input;\n    }\n    input = input.replace(/ /g, '');\n    if (input.indexOf('$') !== -1) {\n        var vals = input.split('$');\n        input = vals[1];\n    }\n    // Keeping just numbers . and ,\n    input = input.replace(/[^0-9.,]+/, '');\n    // eua format\n    if (input.indexOf('.') === (input.length - 1) - 2) {\n        input = input.replace(/\\,/g, '');\n    }\n    // br format\n    else {\n        input = input.replace(/\\./g, '').replace(',', '.');\n    }\n    return parseFloat(input);\n}\nexports.currencyToNumber = currencyToNumber;\nfunction numberToCurrency(value) {\n    return ' R$ ' + value.toFixed(2).replace('.', ',') + ' ';\n}\nexports.numberToCurrency = numberToCurrency;\n;\nfunction slugify(value) {\n    return value.toString().toLowerCase()\n        .replace(/[àÀáÁâÂãäÄÅåª]+/g, 'a') // Special Characters #1\n        .replace(/[èÈéÉêÊëË]+/g, 'e') // Special Characters #2\n        .replace(/[ìÌíÍîÎïÏ]+/g, 'i') // Special Characters #3\n        .replace(/[òÒóÓôÔõÕöÖº]+/g, 'o') // Special Characters #4\n        .replace(/[ùÙúÚûÛüÜ]+/g, 'u') // Special Characters #5\n        .replace(/[ýÝÿŸ]+/g, 'y') // Special Characters #6\n        .replace(/[ñÑ]+/g, 'n') // Special Characters #7\n        .replace(/[çÇ]+/g, 'c') // Special Characters #8\n        .replace(/[ß]+/g, 'ss') // Special Characters #9\n        .replace(/[Ææ]+/g, 'ae') // Special Characters #10\n        .replace(/[Øøœ]+/g, 'oe') // Special Characters #11\n        .replace(/[%]+/g, 'pct') // Special Characters #12\n        .replace(/\\s+/g, '-') // Replace spaces with -\n        .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n        .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, ''); // Trim - from end of text\n}\nexports.slugify = slugify;\n;\n/**\n *\n * @param string  ex. 12345\n * @param size   11\n * @param fill   0\n *\n * Returns: 00000012345\n */\nfunction fillString(string, size, fill) {\n    if (string.length < size) {\n        var dif = size - string.length;\n        for (var i = 0; i < dif; i++) {\n            string = fill + string;\n        }\n    }\n    return string;\n}\nexports.fillString = fillString;\nfunction randArray(array) {\n    var index = randomNumber(0, array.length);\n    return array[index];\n}\nexports.randArray = randArray;\nfunction rand(length) {\n    var ranges = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        ranges[_i - 1] = arguments[_i];\n    }\n    var str = \"\"; // the string (initialized to \"\")\n    while (length--) { // repeat this length of times\n        var ind = Math.floor(Math.random() * ranges.length); // get a random range from the ranges object\n        var min = ranges[ind][0].charCodeAt(0), // get the minimum char code allowed for this range\n        max = ranges[ind][1].charCodeAt(0); // get the maximum char code allowed for this range\n        var c = Math.floor(Math.random() * (max - min + 1)) + min; // get a random char code between min and max\n        str += String.fromCharCode(c); // convert it back into a character and append it to the string str\n    }\n    return str; // return str\n}\nexports.rand = rand;\nfunction randomNumber(begin, end) {\n    var dif = end - begin;\n    var number = Math.floor(Math.random() * dif) + begin;\n    return number;\n}\nexports.randomNumber = randomNumber;\nfunction randomLetter(size, onlyCapitals) {\n    if (size === void 0) { size = 1; }\n    if (onlyCapitals === void 0) { onlyCapitals = false; }\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (onlyCapitals == false) {\n        possible += \"abcdefghijklmnopqrstuvwxyz\";\n    }\n    possible = possible.split('');\n    for (var i = 0; i < size; i++) {\n        var pos = Math.floor(Math.random() * possible.length);\n        text += possible[pos];\n    }\n    return text;\n}\nexports.randomLetter = randomLetter;\nfunction randomLetterOrNumber(size, onlyCapitals) {\n    if (size === void 0) { size = 1; }\n    if (onlyCapitals === void 0) { onlyCapitals = false; }\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    if (onlyCapitals == false) {\n        possible += \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    }\n    possible = possible.split('');\n    for (var i = 0; i < size; i++) {\n        var pos = Math.floor(Math.random() * possible.length);\n        text += possible[pos];\n    }\n    return text;\n}\nexports.randomLetterOrNumber = randomLetterOrNumber;\nexports.randomEstadoSigla = function () {\n    var total = estados_1.ESTADOS_SIGLA.length;\n    return estados_1.ESTADOS_SIGLA[Math.floor(Math.random() * total)];\n};\nexports.CORES = [\"AMARELO\", \"AZUL\", \"BEGE\", \"BRANCA\", \"CINZA\", \"DOURADA\", \"GRENA\", \"LARANJA\", \"MARROM\", \"PRATA\",\n    \"PRETA\", \"ROSA\", \"ROXA\", \"VERDE\", \"VERMELHA\", \"FANTASIA\"];\nfunction getSpecialProperty(model, key) {\n    return model[key];\n}\nexports.getSpecialProperty = getSpecialProperty;\n/**\n *\n */\nexports.makeGenericFaker = function (val, options) {\n    if (options === void 0) { options = null; }\n    return function () {\n        if (!val.textMask || !val.textMask.map) {\n            return '';\n        }\n        var newData = val.textMask.map(function (c, index) {\n            if (options && options[index]) {\n                return options[index]();\n            }\n            c = c.toString();\n            if (c === /\\d/.toString()) {\n                return Math.floor(Math.random() * 10).toString();\n            }\n            else if (c === /[A-Za-z]/.toString()) {\n                return randomLetter(1).toString();\n            }\n            else if (c === /\\w/.toString()) {\n                return randomLetterOrNumber(1).toString();\n            }\n            else if (c.indexOf('/[') === 0) { // /[1-9]/ ou /[5-9]/\n                c = c.replace('/[', '').replace(']/', '');\n                if (c.indexOf('-') > 0) {\n                    c = c.split('-');\n                    if (parseInt(c[1])) {\n                        var mult = c[1] - c[0];\n                        var plus = parseInt(c[0]);\n                        return (Math.floor(Math.random() * mult) + plus).toString();\n                    }\n                    else {\n                        return rand(1, [c[0], c[1]]);\n                    }\n                }\n                else if (c.indexOf('|') > 0) {\n                    c = c.split('|');\n                    var index_1 = Math.floor(Math.random() * c.length);\n                    return c[index_1];\n                }\n            }\n            else {\n                return c;\n            }\n        });\n        return newData.join('');\n    };\n};\nvar utilsBr = {\n    isPresent: isPresent,\n    isArray: isArray,\n    isString: isString,\n    isNumber: isNumber,\n    isNil: isNil,\n    processCaretTraps: processCaretTraps,\n    allNumbersAreSame: allNumbersAreSame,\n    getAllDigits: getAllDigits,\n    getAllWords: getAllWords,\n    currencyToNumber: currencyToNumber,\n    numberToCurrency: numberToCurrency,\n    slugify: slugify,\n    fillString: fillString,\n    randArray: randArray,\n    rand: rand,\n    randomNumber: randomNumber,\n    randomLetter: randomLetter,\n    randomLetterOrNumber: randomLetterOrNumber,\n    getSpecialProperty: getSpecialProperty\n};\nexports.default = utilsBr;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateBr = exports.validate_titulo = exports.validate_time = exports.validate_telefone = exports.validate_sped = exports.validate_rg = exports.validate_renavam = exports.validate_pispasep = exports.validate_processo = exports.validate_porcentagem = exports.validate_number = exports.validate_ect = exports.validate_datahora = exports.validate_datetime = exports.validate_currency = exports.creditCardValidator = exports.validate_cartaocredito = exports.validate_cns = exports.validate_cpf = exports.validate_cnpj = exports.validate_cnh = exports.validate_renachseguranca = exports.validate_renachestadual = exports.validate_cnhespelho = exports.validate_chassi = exports.validate_certidao = exports.cep_ranges = exports.validate_cep = exports.CEPRange = exports.validate_celular = exports.validate_aih = void 0;\nvar utils_1 = require(\"./utils\");\nvar inscricaoestadual_1 = require(\"./inscricaoestadual\");\nvar placa_1 = require(\"./placa\");\nvar create_1 = require(\"./create\");\nvar rg_1 = require(\"./rg\");\nvar iptu_1 = require(\"./iptu\");\nvar estados_1 = require(\"./estados\");\nfunction validate_aih(aih) {\n    var aihClean = aih.replace(/[^\\d]+/g, '');\n    var dvOriginal = aihClean.substr(-1);\n    var dv = create_1.create_aih(aihClean);\n    return dvOriginal === dv;\n}\nexports.validate_aih = validate_aih;\nfunction validate_celular(cel) {\n    var celClean = cel.replace(/[^\\d]+/g, '');\n    celClean = celClean.replace(/_/g, '');\n    if (celClean.length !== 11) {\n        return false;\n    }\n    if (celClean[0] == 0 || celClean[2] < 5) {\n        return false;\n    }\n    return true;\n}\nexports.validate_celular = validate_celular;\nexports.CEPRange = {\n    'SP': /^([1][0-9]{3}|[01][0-9]{4})[0-9]{3}$/g,\n    'RJ': /^[2][0-8][0-9]{3}[0-9]{3}$/g,\n    'MS': /^[7][9][0-9]{3}[0-9]{3}$/g,\n    'MG': /^[3][0-9]{4}[0-9]{3}$/g,\n    'MT': /^[7][8][8][0-9]{2}[0-9]{3}$/g,\n    'AC': /^[6][9]{2}[0-9]{2}[0-9]{3}$/g,\n    'AL': /^[5][7][0-9]{3}[0-9]{3}$/g,\n    'AM': /^[6][9][0-8][0-9]{2}[0-9]{3}$/g,\n    'AP': /^[6][89][9][0-9]{2}[0-9]{3}$/g,\n    'BA': /^[4][0-8][0-9]{3}[0-9]{3}$/g,\n    'CE': /^[6][0-3][0-9]{3}[0-9]{3}$/g,\n    'DF': /^[7][0-3][0-6][0-9]{2}[0-9]{3}$/g,\n    'ES': /^[2][9][0-9]{3}[0-9]{3}$/g,\n    'GO': /^[7][3-6][7-9][0-9]{2}[0-9]{3}$/g,\n    'MA': /^[6][5][0-9]{3}[0-9]{3}$/g,\n    'PA': /^[6][6-8][0-8][0-9]{2}[0-9]{3}$/g,\n    'PB': /^[5][8][0-9]{3}[0-9]{3}$/g,\n    'PE': /^[5][0-6][0-9]{2}[0-9]{3}$/g,\n    'PI': /^[6][4][0-9]{3}[0-9]{3}$/g,\n    'PR': /^[8][0-7][0-9]{3}[0-9]{3}$/g,\n    'RN': /^[5][9][0-9]{3}[0-9]{3}$/g,\n    'RO': /^[7][8][9][0-9]{2}[0-9]{3}$/g,\n    'RR': /^[6][9][3][0-9]{2}[0-9]{3}$/g,\n    'RS': /^[9][0-9]{4}[0-9]{3}$/g,\n    'SC': /^[8][89][0-9]{3}[0-9]{3}$/g,\n    'SE': /^[4][9][0-9]{3}[0-9]{3}$/g,\n    'TO': /^[7][7][0-9]{3}[0-9]{3}$/g,\n};\nfunction validate_cep(cep) {\n    var cepClean = cep.replace(/[^\\d]+/g, '');\n    var exp = /\\d{2}\\.\\d{3}\\-\\d{3}/;\n    if (!exp.test(cep) && cepClean.length !== 8) {\n        return false;\n    }\n    return true;\n}\nexports.validate_cep = validate_cep;\nfunction cep_ranges(cep) {\n    cep = (cep.toString()).replace(/[^\\d]+/g, '');\n    cep = parseInt(cep, 10);\n    var cepString = cep.toString();\n    var found;\n    for (var estado in exports.CEPRange) {\n        var v = exports.CEPRange[estado];\n        var r = new RegExp(v).test(cepString);\n        if (r) {\n            found = r;\n            return true;\n        }\n    }\n    if (!found) {\n        return false;\n    }\n    return true;\n}\nexports.cep_ranges = cep_ranges;\nfunction validate_certidao(value) {\n    var certidao = utils_1.getAllDigits(value);\n    var format = /[0-9]{32}/;\n    if (!format.test(certidao)) {\n        return false;\n    }\n    var dvOriginal = certidao.substr(-2);\n    var dv = create_1.create_certidao(certidao);\n    return dv === dvOriginal;\n}\nexports.validate_certidao = validate_certidao;\n/**\n *\n * @param chassi\n */\nfunction validate_chassi(chassi) {\n    // 1 - Possuir o número \"0\" (ZERO) como 1º dígito.\n    var zeroNoPrimeiroDigito = /^0/;\n    if (zeroNoPrimeiroDigito.test(chassi)) {\n        return false;\n    }\n    // 2 - Possuir espaço no chassi\n    chassi = utils_1.getAllWords(chassi); // espacoNoChassi\n    // 3 - Se, a partir do 4º dígito, houver uma repetição consecutiva, por mais de seis vezes, do mesmo dígito \n    // (alfabético ou numérico). Exemplos: 9BW11111119452687 e 9BWZZZ5268AAAAAAA.\n    var repeticaoMaisDe6Vezes = /^.{4,}([0-9A-Z])\\1{5,}/;\n    if (repeticaoMaisDe6Vezes.test(chassi)) {\n        return false;\n    }\n    // 4 - Apresente os caracteres \"i\", \"I\", \"o\", \"O\", \"q\", \"Q\".\n    var caracteresiIoOqQ = /[iIoOqQ]/;\n    if (caracteresiIoOqQ.test(chassi)) {\n        return false;\n    }\n    // 5 - Os quatro últimos caracteres devem ser obrigatoriamente numéricos\n    var ultimos4Numericos = /[0-9]{4}$/;\n    if (!ultimos4Numericos.test(chassi)) {\n        return false;\n    }\n    // 6 - Se possuir número de dígitos diferente de 17 (alfanuméricos). \n    if (chassi.length > 17) {\n        return false;\n    }\n    return true;\n}\nexports.validate_chassi = validate_chassi;\nfunction validate_cnae(number) {\n    if (!number)\n        return true;\n    return false;\n}\n/**\n *\n * II - Número do Espelho da CNH - segundo número de identificação nacional,\n * que será formado por 9 (nove) caracteres mais 1 (um) dígito verificador de segurança,\n * autorizado e controlado pelo DENATRAN, e identificará cada espelho de CNH expedida.\n * https://www.gov.br/infraestrutura/pt-br/assuntos/transito/conteudo-denatran/resolucoes-contran\n * https://www.gov.br/infraestrutura/pt-br/assuntos/transito/conteudo-contran/resolucoes/resolucao5112014.pdf\n * 598: https://www.gov.br/infraestrutura/pt-br/assuntos/transito/conteudo-contran/resolucoes/resolucao59820162.pdf\n * @param value\n */\nfunction validate_cnhespelho(value) {\n    value = value.replace(/[^\\d]/g, '');\n    if (value.length !== 10) {\n        return false;\n    }\n    var check = create_1.create_cnhespelho(value);\n    if (check === '0' || check === '1')\n        check = '0';\n    return value.substr(-1) == check;\n}\nexports.validate_cnhespelho = validate_cnhespelho;\n/**\n *\n * III – Número do formulário RENACH - número de identificação\n* estadual, documento de coleta de dados do candidato/condutor gerado a cada serviço,\n* composto, obrigatoriamente, por 11 (onze) caracteres, sendo as duas primeiras\n* posições formadas pela sigla da Unidade de Federação expedidora, facultada a\n* utilização da última posição como dígito verificador de segurança.\n*  a) O número do formulário RENACH identificará a Unidade da\n* Federação onde o condutor foi habilitado ou realizou alterações de dados no seu\n* cadastro pela última vez.\n*  b) O Formulário RENACH que dá origem às informações na\n* BINCO e autorização para a impressão da CNH deverá ficar arquivado em seg\n* 598 - https://www.gov.br/infraestrutura/pt-br/assuntos/transito/conteudo-contran/resolucoes/resolucao59820162.pdf\n* 718 - https://www.gov.br/infraestrutura/pt-br/assuntos/transito/conteudo-contran/resolucoes/resolucao7182017.pdf\n* @param value\n */\nfunction validate_renachestadual(value) {\n    var state = value.substr(0, 2).toLowerCase();\n    if (!estados_1.ESTADOS_SIGLA.includes(state)) {\n        return false;\n    }\n    var digits = value.substr(2);\n    digits = digits.replace(/[^\\d]/g, '');\n    if (digits.length !== 9) {\n        return false;\n    }\n    var check = create_1.create_renachestadual(value);\n    if (check === '0' || check === '1')\n        check = '0';\n    return value.substr(-1) == check;\n}\nexports.validate_renachestadual = validate_renachestadual;\nfunction validate_renachseguranca(value) {\n    value = value.replace(/[^\\d]/g, '');\n    if (value.length !== 11) {\n        return false;\n    }\n    var check = create_1.create_renachseguranca(value);\n    return value.substr(-1) == check;\n}\nexports.validate_renachseguranca = validate_renachseguranca;\n/**\n * BINCO\n * I – o primeiro número de identificação nacional – Registro Nacional,\n * será gerado pelo sistema informatizado da Base Índice Nacional de Condutores –\n * BINCO, composto de 9 (nove) caracteres mais 2 (dois) dígitos verificadores de\n * segurança, sendo único para cada condutor e o acompanhará durante toda a\n * sua existência como condutor, não sendo permitida a sua reutilização para\n * outro condutor.\n * @param value\n * @returns\n */\nfunction validate_cnh(value) {\n    value = value.toString().replace(/[^\\d]/g, '');\n    if (value.length !== 11) {\n        return false;\n    }\n    var check = create_1.create_cnh(value);\n    return value.substr(-2) == check;\n}\nexports.validate_cnh = validate_cnh;\nfunction validate_cnpj(cnpj) {\n    // Valida se tem apenas número, - ou .\n    var precisaFicarVazio = cnpj.replace(/^[0-9./-]*$/gm, '');\n    if (precisaFicarVazio != '')\n        return false;\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\n    var tamanho = cnpj.length - 2;\n    var digitos = cnpj.substring(tamanho);\n    var resultados = create_1.create_cnpj(cnpj);\n    if (!resultados ||\n        resultados[0] !== parseInt(digitos.charAt(0), 10) ||\n        resultados[1] !== parseInt(digitos.charAt(1), 10)) {\n        return false;\n    }\n    return true;\n}\nexports.validate_cnpj = validate_cnpj;\nfunction validate_contabanco(number) {\n    if (!number)\n        return false;\n    return true;\n}\n/**\n * Referencia: http://www.receita.fazenda.gov.br/aplicacoes/atcta/funcoes.js\n * @param strCPF\n * @returns\n */\nfunction validate_cpf(strCPF) {\n    // Valida se tem apenas número, - ou .\n    var precisaFicarVazio = strCPF.replace(/^[0-9.-]*$/gm, '');\n    if (precisaFicarVazio != '')\n        return false;\n    strCPF = strCPF.replace(/[^\\d]+/g, '');\n    if (strCPF.length !== 11) {\n        return false;\n    }\n    //verifica se todos os numeros sao iguais\n    var expIguais = /^(?!.*(\\d)\\1{10}).*$/;\n    if (!strCPF.match(expIguais)) {\n        return false;\n    }\n    // valida digito verificados\n    var restos = create_1.create_cpf(strCPF);\n    if (!restos || restos != strCPF.substr(-2)) {\n        return false;\n    }\n    return true;\n}\nexports.validate_cpf = validate_cpf;\nfunction validate_cpfcnpj(number) {\n    return validate_cpf(number) || validate_cnpj(number);\n}\nfunction validate_cns(value) {\n    var cns = utils_1.getAllDigits(value);\n    var definitivo = /[1-2][0-9]{10}00[0-1][0-9]/; // começam com 1 ou 2\n    var provisorio = /[7-9][0-9]{14}/; // começam com 7,8 ou 9\n    if (!definitivo.test(cns) && !provisorio.test(cns)) {\n        return false;\n    }\n    var soma = 0;\n    for (var i = 0; i < cns.length; i++) {\n        soma += parseInt(cns[i]) * (15 - i);\n    }\n    return soma % 11 == 0;\n}\nexports.validate_cns = validate_cns;\nfunction validate_cartaocredito(input) {\n    var value;\n    if (typeof input == 'string') {\n        value = utils_1.getAllDigits(input);\n    }\n    else {\n        value = input.toString();\n    }\n    var number = value.slice(0, 16);\n    var mes = parseInt(value.slice(16, 18));\n    var ano = parseInt(value.slice(18, 20));\n    var cvv = value.slice(20, 23);\n    var d = new Date();\n    var anoAtual = (d.getFullYear() - 2000);\n    if (ano && ano < anoAtual) {\n        return false;\n    }\n    if (mes && mes < d.getMonth() + 1 && ano === anoAtual) {\n        return false;\n    }\n    if (cvv) {\n        var validcvv = validate_cvv(cvv);\n        if (validcvv.isValid === false) {\n            return false;\n        }\n    }\n    var found;\n    Object.keys(exports.creditCardValidator).forEach(function (key) {\n        if (exports.creditCardValidator[key].test(number)) {\n            found = key;\n        }\n    });\n    return !!found;\n}\nexports.validate_cartaocredito = validate_cartaocredito;\nfunction validate_cvv(value, maxLength) {\n    if (maxLength === void 0) { maxLength = 3; }\n    maxLength = maxLength instanceof Array ? maxLength : [maxLength];\n    if (typeof value !== 'string') {\n        return { isValid: false, isPotentiallyValid: false };\n    }\n    if (!/^\\d*$/.test(value)) {\n        return { isValid: false, isPotentiallyValid: false };\n    }\n    var i = 0;\n    var max = value.length;\n    for (; i < maxLength.length; i++) {\n        if (max === maxLength[i]) {\n            return { isValid: true, isPotentiallyValid: true };\n        }\n    }\n    if (value.length < Math.min.apply(null, maxLength)) {\n        return { isValid: false, isPotentiallyValid: true };\n    }\n    var maximum = maxLength;\n    var i = 0;\n    for (; i < maxLength.length; i++) {\n        maximum = maxLength[i] > maximum ? maxLength[i] : maximum;\n    }\n    if (value.length > maximum) {\n        return { isValid: false, isPotentiallyValid: false };\n    }\n    return { isValid: true, isPotentiallyValid: true };\n}\n/**\n *     A hash of valid CC abbreviations and regular expressions\n    mc: Mastercard\n    ec: Eurocard\n    vi: Visa\n    ax: American Express\n    dc: Diners Club\n    bl: Carte Blanch\n    di: Discover\n    jcb: JCB\n    er: Enroute\n*/\nexports.creditCardValidator = {\n    'mc': /5[1-5][0-9]{14}/,\n    'ec': /5[1-5][0-9]{14}/,\n    'vi': /4(?:[0-9]{12}|[0-9]{15})/,\n    'ax': /3[47][0-9]{13}/,\n    'dc': /3(?:0[0-5][0-9]{11}|[68][0-9]{12})/,\n    'bl': /3(?:0[0-5][0-9]{11}|[68][0-9]{12})/,\n    'di': /6011[0-9]{12}/,\n    'jcb': /(?:3[0-9]{15}|(2131|1800)[0-9]{11})/,\n    'er': /2(?:014|149)[0-9]{11}/\n};\nfunction validate_currency(currency) {\n    if (typeof currency === 'number') {\n        return true;\n    }\n    var regex = /^(R\\$|R\\$ )?(-)?(?!0(\\.)?00)\\d{1,3}((\\.)?\\d{3})*(,\\d\\d)?$/g;\n    return regex.test(currency);\n}\nexports.validate_currency = validate_currency;\nfunction validate_data(value) {\n    if (!value) {\n        return false;\n    }\n    var values = value.split('/');\n    if (values.length !== 3) {\n        return false;\n    }\n    var testData = new Date(values[1] + '/' + values[0] + '/' + values[2]);\n    if (!testData.getTime()) {\n        return false;\n    }\n    // if (parseInt(values[0]) > 31 || parseInt(values[1]) > 12 || parseInt(values[2]) < 1000) return false;\n    return true;\n}\nfunction validate_date(value) {\n    if (!value || value.length < 10) {\n        return false;\n    }\n    var testData = new Date(value);\n    if (!testData.getTime()) {\n        return false;\n    }\n    return true;\n}\nfunction validate_datetime(time, options) {\n    if (options === void 0) { options = {}; }\n    if (!time) {\n        return false;\n    }\n    time = time.toString();\n    var values = time.split(' ');\n    if (validate_date(values[0]) && validate_time(values[1], options)) {\n        return true;\n    }\n    return false;\n}\nexports.validate_datetime = validate_datetime;\nfunction validate_datahora(time, options) {\n    if (options === void 0) { options = {}; }\n    if (!time) {\n        return false;\n    }\n    time = time.toString();\n    var values = time.split(' ');\n    if (validate_data(values[0]) && validate_time(values[1], options)) {\n        return true;\n    }\n    return false;\n}\nexports.validate_datahora = validate_datahora;\nfunction validate_ect(number) {\n    number = utils_1.getAllDigits(number);\n    if (number.length > 9) {\n        return false;\n    }\n    var nodigit = number.substr(0, number.length - 1);\n    var dg = create_1.create_ect(nodigit);\n    if (parseInt(number[number.length - 1]) === dg) {\n        return true;\n    }\n    return false;\n}\nexports.validate_ect = validate_ect;\nfunction validate_email(email) {\n    var re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n}\nfunction validate_endereco(number) {\n    if (!number)\n        return false;\n    return true;\n}\nfunction validate_number(number) {\n    if (number.split(',').length > 2) {\n        return false;\n    }\n    var regexDecimal = /^\\d+(?:\\.\\d{0,2})$/;\n    var regex = /^[0-9]{0,10}[,]{1,1}[0-9]{0,4}/;\n    var regexNumero = /^[0-9]{0,10}/;\n    return regexDecimal.test(number) || regex.test(number) || regexNumero.test(number);\n}\nexports.validate_number = validate_number;\nfunction validate_porcentagem(porcentagem) {\n    porcentagem = porcentagem.split('%')[0];\n    return validate_number(porcentagem);\n}\nexports.validate_porcentagem = validate_porcentagem;\nfunction validate_processo(processo) {\n    var processoClean = processo.replace(/\\./g, '');\n    processoClean = processoClean.replace(/\\-/g, '');\n    // const exp = /\\d{7}\\-\\d{2}\\.\\d{4}\\.\\w{3}\\.\\d{4}/;\n    // const expClean = /\\d{13}\\w{3}\\d{4}/;\n    // if (!exp.test(processo) && !expClean.test(processoClean)) {\n    //   return false;\n    // }\n    var processoValidado = create_1.create_processo(processo);\n    if (parseInt(processoClean) !== parseInt(utils_1.getAllDigits(processoValidado))) {\n        return false;\n    }\n    return true;\n}\nexports.validate_processo = validate_processo;\nfunction validate_pispasep(number) {\n    number = utils_1.getAllDigits(number);\n    var nis = utils_1.fillString(number, 11, '0');\n    var regex = /\\d{11}/; // /^\\d{3}\\.\\d{5}\\.\\d{2}\\-\\d{1}$/;\n    if (!regex.test(nis)) {\n        return false;\n    }\n    var digit = create_1.create_pispasep(number);\n    return nis[10].toString() == digit.toString();\n}\nexports.validate_pispasep = validate_pispasep;\nfunction validate_renavam(renavam) {\n    var renavamClean = renavam.replace(/\\./g, '');\n    renavamClean = renavamClean.replace(/\\-/g, '');\n    var dv = create_1.create_renavam(renavam);\n    var tam = renavam.length;\n    var digitos = renavam.substr(tam - 1, 1);\n    if (digitos.charCodeAt(0) - 48 === dv) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.validate_renavam = validate_renavam;\nfunction validate_rg(rg) {\n    var rgClean = rg.replace(/\\./g, '');\n    rgClean = rgClean.replace(/-/g, '');\n    var exp = /[a-z]{2}\\-\\d{2}\\.\\d{3}\\.\\d{3}/;\n    var expClean = /[a-z]{2}\\d{8}/;\n    var state = rg.substr(0, 2).toUpperCase();\n    if (!exp.test(rg) && !expClean.test(rgClean) && !(state in exports.CEPRange)) {\n        return false;\n    }\n    var validateState = rg_1.default[state];\n    if (validateState) {\n        return validateState(rg);\n    }\n    return true;\n}\nexports.validate_rg = validate_rg;\nfunction validate_senha(value, options) {\n    if (options === void 0) { options = {}; }\n    var finalregex = '^';\n    //   ^\tThe password string will start this way\n    // (?=.*[a-z])\tThe string must contain at least 1 lowercase alphabetical character\n    if (options.lowercase !== false) {\n        finalregex = finalregex + '(?=.*[a-z])';\n    }\n    // (?=.*[A-Z])\tThe string must contain at least 1 uppercase alphabetical character\n    if (options.uppercase !== false) {\n        finalregex = finalregex + '(?=.*[A-Z])';\n    }\n    // (?=.*[0-9])\tThe string must contain at least 1 numeric character\n    if (options.numeric !== false) {\n        finalregex = finalregex + '(?=.*[0-9])';\n    }\n    // (?=.*[!@#\\$%\\^&\\*])\tThe string must contain at least one special character, but we are escaping reserved RegEx characters to avoid conflict\n    if (options.numeric !== false) {\n        finalregex = finalregex + '(?=.*[!@#\\\\$%\\\\^&\\\\*])';\n    }\n    // (?=.{8,})\tThe string must be eight characters or longer\n    if (!options.size) {\n        options.size = 8;\n    }\n    finalregex = finalregex + (\"(?=.{\" + options.size + \",})\");\n    var regex = new RegExp(finalregex);\n    return regex.test(value);\n}\nfunction validate_site(value) {\n    var re = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&=]*)/g;\n    return re.test(String(value).toLowerCase());\n}\nfunction validate_sped(sped) {\n    if (!sped)\n        return false;\n    return true;\n}\nexports.validate_sped = validate_sped;\nfunction validate_telefone(tel) {\n    var telClean = tel.replace(/[^\\d]+/g, '');\n    tel = tel.replace(/_/g, '');\n    if (!(telClean.length === 10 || telClean.length === 11)) {\n        return false;\n    }\n    if (telClean[0] == 0 || telClean[2] == 0) {\n        return false;\n    }\n    return true;\n}\nexports.validate_telefone = validate_telefone;\nfunction validate_time(time, options) {\n    if (options === void 0) { options = {}; }\n    var value = time.toString();\n    if (options.diario) {\n        var expression = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/;\n        return expression.test(value);\n    }\n    else {\n        var expression = /^([0-9]?[0-9]):([0-5][0-9])(:[0-5][0-9])?$/;\n        return expression.test(value);\n    }\n}\nexports.validate_time = validate_time;\nfunction validate_titulo(titulo) {\n    if (!titulo) {\n        return false;\n    }\n    var tituloClean = titulo.replace(/\\./g, '');\n    var exp = /\\d{4}\\.\\d{4}\\.\\d{4}/;\n    var expClean = /\\d{4}\\d{4}\\d{4}/;\n    if (!exp.test(tituloClean) && !expClean.test(tituloClean)) {\n        return false;\n    }\n    var tam = tituloClean.length;\n    var dig;\n    try {\n        dig = create_1.create_titulo_atual(tituloClean);\n        // const noDv = tituloClean.substr(0, tam - 2);\n        // dig = create_titulo(noDv);\n    }\n    catch (e) {\n        return false;\n    }\n    var digitos = tituloClean.substr(tam - 2, 2);\n    if (digitos === dig) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.validate_titulo = validate_titulo;\nfunction validate_username(value) {\n    var re = /^[a-z0-9_-]{3,16}$/igm;\n    return re.test(String(value).toLowerCase());\n}\nexports.validateBr = {\n    aih: validate_aih,\n    cartaocredito: validate_cartaocredito,\n    celular: validate_celular,\n    cep: validate_cep,\n    certidao: validate_certidao,\n    chassi: validate_chassi,\n    cnae: validate_cnae,\n    cnh: validate_cnh,\n    cnhespelho: validate_cnhespelho,\n    renachestadual: validate_renachestadual,\n    renachseguranca: validate_renachseguranca,\n    cnpj: validate_cnpj,\n    cns: validate_cns,\n    contabanco: validate_contabanco,\n    cpf: validate_cpf,\n    cpfcnpj: validate_cpfcnpj,\n    currency: validate_currency,\n    data: validate_data,\n    date: validate_date,\n    datetime: validate_datetime,\n    datahora: validate_datahora,\n    ect: validate_ect,\n    email: validate_email,\n    endereco: validate_endereco,\n    inscricaoestadual: inscricaoestadual_1.validate_inscricaoestadual,\n    iptu: iptu_1.validate_iptu,\n    number: validate_number,\n    porcentagem: validate_porcentagem,\n    pispasep: validate_pispasep,\n    placa: placa_1.validate_placa,\n    processo: validate_processo,\n    renavam: validate_renavam,\n    rg: validate_rg,\n    senha: validate_senha,\n    site: validate_site,\n    sped: validate_sped,\n    telefone: validate_telefone,\n    time: validate_time,\n    titulo: validate_titulo,\n    username: validate_username\n};\n//# sourceMappingURL=validate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IPTUMASKS = void 0;\nexports.IPTUMASKS = {\n    'minas-gerais': {\n        'belo-horizonte': {\n            text: '000.000.000.000.0',\n            textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/]\n        },\n        'contagem': {\n            text: '20.040.040-1',\n            textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/],\n            textMaskFunction: function mask(userInput) {\n                var numbers = userInput.match(/\\d/g);\n                var numberLength = 0;\n                if (numbers) {\n                    numberLength = numbers.join('').length;\n                }\n                if (!userInput || numberLength > 9) {\n                    return [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n                }\n                else {\n                    return [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/];\n                }\n            }\n        }\n    },\n    'sao-paulo': {\n        'sao-paulo': {\n            text: '00000000000-0',\n            textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n        }\n    },\n    'parana': {\n        'curitiba': {\n            text: '00000000000-0',\n            textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n        }\n    }\n};\n//# sourceMappingURL=iptu_mask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.create_titulo = exports.create_titulo_atual = exports.create_processo = exports.create_renavam = exports.create_pispasep = exports.create_ect = exports.create_cartaocredito = exports.create_cpf = exports.create_cns = exports.create_cnpj = exports.create_cnh = exports.create_renachseguranca = exports.create_renachestadual = exports.create_cnhespelho = exports.create_certidao = exports.create_aih = void 0;\nvar estados_1 = require(\"./estados\");\nvar utils_1 = require(\"./utils\");\n/**\n *\n * @param uf - UF do número da guia. Ex: 35(SP), 81(PE)\n * @param ano - ANO do número da guia. Ex: 2018, 2019\n * @param tipo - TIPO da guia. Aih = 1, APAC = 2\n */\nfunction create_aih(value) {\n    value = utils_1.getAllDigits(value.toString());\n    if (value.length > 12) {\n        value = value.toString().substr(0, value.length - 1);\n    }\n    var cod = parseInt(value);\n    var calc = Math.ceil(cod - (cod / 11));\n    var digito = calc.toString().substr(-1);\n    return digito;\n}\nexports.create_aih = create_aih;\nfunction create_certidao(value) {\n    if (value.length > 30) {\n        value = value.substring(0, value.length - 2);\n    }\n    var b1 = parseInt(value.slice(29));\n    var b2 = parseInt(value.slice(28, 29));\n    var b3 = parseInt(value.slice(27, 28));\n    var b4 = parseInt(value.slice(26, 27));\n    var b5 = parseInt(value.slice(25, 26));\n    var b6 = parseInt(value.slice(24, 25));\n    var b7 = parseInt(value.slice(23, 24));\n    var b8 = parseInt(value.slice(22, 23));\n    var b9 = parseInt(value.slice(21, 22));\n    var b10 = parseInt(value.slice(20, 21));\n    var b11 = parseInt(value.slice(19, 20));\n    var b12 = parseInt(value.slice(18, 19));\n    var b13 = parseInt(value.slice(17, 18));\n    var b14 = parseInt(value.slice(16, 17));\n    var b15 = parseInt(value.slice(15, 16));\n    var b16 = parseInt(value.slice(14, 15));\n    var b17 = parseInt(value.slice(13, 14));\n    var b18 = parseInt(value.slice(12, 13));\n    var b19 = parseInt(value.slice(11, 12));\n    var b20 = parseInt(value.slice(10, 11));\n    var b21 = parseInt(value.slice(9, 10));\n    var b22 = parseInt(value.slice(8, 9));\n    var b23 = parseInt(value.slice(7, 8));\n    var b24 = parseInt(value.slice(6, 7));\n    var b25 = parseInt(value.slice(5, 6));\n    var b26 = parseInt(value.slice(4, 5));\n    var b27 = parseInt(value.slice(3, 4));\n    var b28 = parseInt(value.slice(2, 3));\n    var b29 = parseInt(value.slice(1, 2));\n    var b30 = parseInt(value.slice(0, 1));\n    var certPriDig = (b1 * 9 + b2 * 8 + b3 * 7 + b4 * 6 + b5 * 5 + b6 * 4 + b7 * 3 + b8 * 2 + b9 * 1 + b10 * 0 + b11 * 10 + b12 * 9 + b13 * 8 + b14 * 7 + b15 * 6 + b16 * 5 + b17 * 4 + b18 * 3 + b19 * 2 + b20 * 1 + b21 * 0 + b22 * 10 + b23 * 9 + b24 * 8 + b25 * 7 + b26 * 6 + b27 * 5 + b28 * 4 + b29 * 3 + b30 * 2) % 11;\n    if (certPriDig == 10) {\n        certPriDig = 1;\n    }\n    var certSegDig = (certPriDig * 9 + b1 * 8 + b2 * 7 + b3 * 6 + b4 * 5 + b5 * 4 + b6 * 3 + b7 * 2 + b8 * 1 + b9 * 0 + b10 * 10 + b11 * 9 + b12 * 8 + b13 * 7 + b14 * 6 + b15 * 5 + b16 * 4 + b17 * 3 + b18 * 2 + b19 * 1 + b20 * 0 + b21 * 10 + b22 * 9 + b23 * 8 + b24 * 7 + b25 * 6 + b26 * 5 + b27 * 4 + b28 * 3 + b29 * 2 + b30 * 1) % 11;\n    if (certSegDig == 10) {\n        certSegDig = 1;\n    }\n    var certDV = certPriDig * 10 + certSegDig;\n    if (certDV == 0) {\n        certDV = \"00\";\n    }\n    if (certDV > 0 && certDV < 10) {\n        certDV = \"0\" + certDV;\n    }\n    return certDV.toString();\n}\nexports.create_certidao = create_certidao;\nfunction create_cnhespelho(value) {\n    var v1 = utils_1.modulo11Custom(value.substr(0, value.length - 1), 1, 8, false);\n    return v1;\n}\nexports.create_cnhespelho = create_cnhespelho;\nfunction create_renachestadual(value) {\n    var state = value.substr(0, 2).toLowerCase();\n    if (!estados_1.ESTADOS_SIGLA.includes(state)) {\n        return false;\n    }\n    var digits = value.substr(2);\n    digits = digits.replace(/[^\\d]/g, '');\n    if (digits.length !== 9) {\n        return false;\n    }\n    var v1 = utils_1.modulo11Custom(digits.substr(0, digits.length - 1), 1, 11);\n    return '' + v1;\n}\nexports.create_renachestadual = create_renachestadual;\n/**\n *\n * @param value\n * @returns\n */\nfunction create_renachseguranca(value) {\n    value = value.replace(/[^\\d]+/g, '');\n    if (value.length !== 11) {\n        return false;\n    }\n    var v1 = utils_1.modulo11Custom(value.substr(0, value.length - 1), 1, 11);\n    return \"\" + v1;\n}\nexports.create_renachseguranca = create_renachseguranca;\n/**\n * Dígito verificador da CNH não é mais o módulo 11 conforme últimas resoluções\n * @param value\n * @returns\n */\nfunction create_cnh(value) {\n    value = value.replace(/[^\\d]+/g, '');\n    if (value.length != 11 || value === '0') {\n        return false;\n    }\n    // let v1 = modulo11Custom(value.substr(0, value.length - 2), 2);\n    // if (v1 === '10') v1 = '00'\n    var v1 = value.substr(-2);\n    return v1;\n}\nexports.create_cnh = create_cnh;\nfunction create_cnpj(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\n    if (cnpj === '') {\n        return false;\n    }\n    if (cnpj.length !== 14) {\n        return false;\n    }\n    // Elimina CNPJs invalidos conhecidos\n    if (cnpj === '00000000000000' ||\n        cnpj === '11111111111111' ||\n        cnpj === '22222222222222' ||\n        cnpj === '33333333333333' ||\n        cnpj === '44444444444444' ||\n        cnpj === '55555555555555' ||\n        cnpj === '66666666666666' ||\n        cnpj === '77777777777777' ||\n        cnpj === '88888888888888' ||\n        cnpj === '99999999999999') {\n        return false;\n    }\n    // Valida DVs\n    var tamanho = cnpj.length - 2;\n    var numeros = cnpj.substring(0, tamanho);\n    var soma = 0;\n    var pos = tamanho - 7;\n    for (var i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) {\n            pos = 9;\n        }\n    }\n    var resultados = [0, 0];\n    resultados[0] = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n    for (var i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) {\n            pos = 9;\n        }\n    }\n    resultados[1] = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    return resultados;\n}\nexports.create_cnpj = create_cnpj;\nfunction create_cns(number) {\n    number = utils_1.getAllDigits(number);\n    var somaInicial = 0;\n    for (var i = 0; i < number.length - 1; i++) {\n        somaInicial += parseInt(number[i]) * (15 - i);\n    }\n    var soma = somaInicial;\n    var rest = 0;\n    while (soma % 11 !== 0) {\n        rest++;\n        soma = somaInicial + (rest * 1);\n    }\n    return number.substr(-2, 1) + rest;\n}\nexports.create_cns = create_cns;\nfunction create_cpf(strCPF) {\n    strCPF = strCPF.replace(/[^\\d]+/g, '');\n    if (strCPF === '00000000000') {\n        return false;\n    }\n    // const r1 = modulo11(strCPF.substr(0, strCPF.length - 2))\n    // const r2 = modulo11(strCPF.substr(0, strCPF.length - 2) + '' + r1)\n    // const restos = [\n    //   r1, r2\n    // ];\n    var restoscustom = utils_1.modulo11Custom(strCPF.substr(0, strCPF.length - 2), 2, 12);\n    return restoscustom;\n}\nexports.create_cpf = create_cpf;\nfunction create_cartaocredito(number) {\n    // if (number.length > 18) { alert(\"Erro. A rotina não abrange cartões\\ncom mais de 18 dígitos (fora o DV).\\nIntroduza 18 dígitos, no máximo.\"); }\n    number = \"00000000000000000\" + number;\n    number = number.slice(number.length - 18);\n    var b1 = parseInt(number.slice(17));\n    var b2 = parseInt(number.slice(16, 17));\n    var b3 = parseInt(number.slice(15, 16));\n    var b4 = parseInt(number.slice(14, 15));\n    var b5 = parseInt(number.slice(13, 14));\n    var b6 = parseInt(number.slice(12, 13));\n    var b7 = parseInt(number.slice(11, 12));\n    var b8 = parseInt(number.slice(10, 11));\n    var b9 = parseInt(number.slice(9, 10));\n    var b10 = parseInt(number.slice(8, 9));\n    var b11 = parseInt(number.slice(7, 8));\n    var b12 = parseInt(number.slice(6, 7));\n    var b13 = parseInt(number.slice(5, 6));\n    var b14 = parseInt(number.slice(4, 5));\n    var b15 = parseInt(number.slice(3, 4));\n    var b16 = parseInt(number.slice(2, 3));\n    var b17 = parseInt(number.slice(1, 2));\n    var b18 = parseInt(number.slice(0, 1));\n    var ci17 = b1 * 2;\n    if (ci17 > 9) {\n        ci17 = ci17 - 9;\n    }\n    var ci1516 = b3 * 2;\n    if (ci1516 > 9) {\n        ci1516 = ci1516 - 9;\n    }\n    var ci1314 = b5 * 2;\n    if (ci1314 > 9) {\n        ci1314 = ci1314 - 9;\n    }\n    var ci1112 = b7 * 2;\n    if (ci1112 > 9) {\n        ci1112 = ci1112 - 9;\n    }\n    var ci910 = b9 * 2;\n    if (ci910 > 9) {\n        ci910 = ci910 - 9;\n    }\n    var ci78 = b11 * 2;\n    if (ci78 > 9) {\n        ci78 = ci78 - 9;\n    }\n    var ci56 = b13 * 2;\n    if (ci56 > 9) {\n        ci56 = ci56 - 9;\n    }\n    var ci34 = b15 * 2;\n    if (ci34 > 9) {\n        ci34 = ci34 - 9;\n    }\n    var ci12 = b17 * 2;\n    if (ci12 > 9) {\n        ci12 = ci12 - 9;\n    }\n    var ci1617 = b2;\n    var ci1415 = b4;\n    var ci1213 = b6;\n    var ci1011 = b8;\n    var ci89 = b10;\n    var ci67 = b12;\n    var ci45 = b14;\n    var ci23 = b16;\n    var ci01 = b18;\n    var ccredDig = (ci1617 + ci1415 + ci1213 + ci1011 + ci89 + ci67 + ci45 + ci23 + ci01 + ci17 + ci1516 + ci1314 + ci1112 + ci910 + ci78 + ci56 + ci34 + ci12) % 10;\n    ccredDig = 10 - ccredDig;\n    if (ccredDig == 10) {\n        ccredDig = 0;\n    }\n    return ccredDig;\n}\nexports.create_cartaocredito = create_cartaocredito;\nfunction create_ect(number) {\n    number = utils_1.getAllDigits(number);\n    number = \"0000000\" + number;\n    number = number.slice(number.length - 8);\n    var b1 = parseInt(number.slice(7));\n    var b2 = parseInt(number.slice(6, 7));\n    var b3 = parseInt(number.slice(5, 6));\n    var b4 = parseInt(number.slice(4, 5));\n    var b5 = parseInt(number.slice(3, 4));\n    var b6 = parseInt(number.slice(2, 3));\n    var b7 = parseInt(number.slice(1, 2));\n    var b8 = parseInt(number.slice(0, 1));\n    var regEctDig = (b1 * 7 + b2 * 9 + b3 * 5 + b4 * 3 + b5 * 2 + b6 * 4 + b7 * 6 + b8 * 8) % 11;\n    regEctDig = 11 - regEctDig;\n    if (regEctDig == 11) {\n        regEctDig = 5;\n    }\n    if (regEctDig == 10) {\n        regEctDig = 0;\n    }\n    return regEctDig;\n}\nexports.create_ect = create_ect;\nfunction create_pispasep(number) {\n    number = utils_1.getAllDigits(number);\n    var nis = utils_1.fillString(number, 11, '0');\n    var d;\n    var p = 2, c = 9;\n    for (d = 0; c >= 0; c--, (p < 9) ? p++ : p = 2) {\n        d += parseInt(nis[c]) * p;\n    }\n    var digit = (((10 * d) % 11) % 10);\n    return digit;\n}\nexports.create_pispasep = create_pispasep;\nfunction create_renavam(renavam) {\n    var dig1 = 0;\n    while (renavam.length < 11) {\n        renavam = '0' + renavam;\n    }\n    dig1 = (renavam.charCodeAt(0) - 48) * 3 + (renavam.charCodeAt(1) - 48) * 2 + (renavam.charCodeAt(2) - 48) * 9 + (renavam.charCodeAt(3) - 48) * 8 +\n        (renavam.charCodeAt(4) - 48) * 7 + (renavam.charCodeAt(5) - 48) * 6 + (renavam.charCodeAt(6) - 48) * 5 +\n        (renavam.charCodeAt(7) - 48) * 4 + (renavam.charCodeAt(8) - 48) * 3 + (renavam.charCodeAt(9) - 48) * 2;\n    dig1 = dig1 * 10;\n    var resto = (dig1 % 11);\n    if (resto === 10) {\n        return 0;\n    }\n    else {\n        return resto;\n    }\n}\nexports.create_renavam = create_renavam;\n/**\n *\n * Font: http://ghiorzi.org/index.htm\n * @param number\n */\nfunction create_processo(number) {\n    number = utils_1.getAllDigits(number);\n    number = \"00000000000000000\" + number;\n    number = number.slice(number.length - 18);\n    var b1 = parseInt(number.slice(0, 1)) * 10000000000;\n    var b2 = parseInt(number.slice(1, 2)) * 1000000000;\n    var b3 = parseInt(number.slice(2, 3)) * 100000000;\n    var b4 = parseInt(number.slice(3, 4)) * 10000000;\n    var b5 = parseInt(number.slice(4, 5)) * 1000000;\n    var b6 = parseInt(number.slice(5, 6)) * 100000;\n    var b7 = parseInt(number.slice(6, 7)) * 10000;\n    var b8 = parseInt(number.slice(7, 8)) * 1000;\n    var b9 = parseInt(number.slice(8, 9)) * 100;\n    var b10 = parseInt(number.slice(9, 10)) * 10;\n    var b11 = parseInt(number.slice(10, 11));\n    var proc1a11 = b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9 + b10 + b11;\n    var resto1 = proc1a11 % 97;\n    var b12 = parseInt(number.slice(11, 12)) * 1000000;\n    var b13 = parseInt(number.slice(12, 13)) * 100000;\n    var b14 = parseInt(number.slice(13, 14)) * 10000;\n    var b15 = parseInt(number.slice(14, 15)) * 1000;\n    var b16 = parseInt(number.slice(15, 16)) * 100;\n    var b17 = parseInt(number.slice(16, 17)) * 10;\n    var b18 = parseInt(number.slice(17));\n    var proc12a18 = b12 + b13 + b14 + b15 + b16 + b17 + b18;\n    var resto2 = (resto1 * 10000000 * 100 + proc12a18 * 100) % 97;\n    var procJudDV = 98 - resto2;\n    if (procJudDV < 10) {\n        procJudDV = \"0\" + procJudDV;\n    }\n    var procJudCompl = b1 / 10000 + b2 / 10000 + b3 / 10000 + b4 / 10000 + b5 / 10000 + b6 / 10000 + b7 / 10000 + \"-\" + procJudDV + \".\" + b8 / 1000 + b9 / 100 + b10 / 10 + b11 + \".\" + b12 / 1000000 + \".\" + b13 / 100000 + b14 / 10000 + \".\" + b15 / 1000 + b16 / 100 + b17 / 10 + b18;\n    procJudCompl = \"000000\" + procJudCompl;\n    var result = procJudCompl.slice(procJudCompl.length - 25);\n    return result;\n}\nexports.create_processo = create_processo;\nfunction create_titulo_atual(titulo) {\n    var tit = titulo;\n    var dig1 = 0;\n    var dig2 = 0;\n    var tam = tit.length;\n    var estado = tit.substr(tam - 4, 2);\n    titulo = tit.substr(0, tam - 2);\n    titulo = '000000000000' + titulo;\n    titulo = titulo.substr(titulo.length - 11, titulo.length - 1);\n    var exce = (estado === '01') || (estado === '02');\n    dig1 = (titulo.charCodeAt(0) - 48) * 2 + (titulo.charCodeAt(1) - 48) * 9 + (titulo.charCodeAt(2) - 48) * 8 +\n        (titulo.charCodeAt(3) - 48) * 7 + (titulo.charCodeAt(4) - 48) * 6 + (titulo.charCodeAt(5) - 48) * 5 +\n        (titulo.charCodeAt(6) - 48) * 4 + (titulo.charCodeAt(7) - 48) * 3 + (titulo.charCodeAt(8) - 48) * 2;\n    var resto = (dig1 % 11);\n    if (resto === 0) {\n        if (exce) {\n            dig1 = 1;\n        }\n        else {\n            dig1 = 0;\n        }\n    }\n    else {\n        if (resto === 1) {\n            dig1 = 0;\n        }\n        else {\n            dig1 = 11 - resto;\n        }\n    }\n    dig2 = (titulo.charCodeAt(9) - 48) * 4 + (titulo.charCodeAt(10) - 48) * 3 + dig1 * 2;\n    resto = (dig2 % 11);\n    if (resto === 0) {\n        if (exce) {\n            dig2 = 1;\n        }\n        else {\n            dig2 = 0;\n        }\n    }\n    else {\n        if (resto === 1) {\n            dig2 = 0;\n        }\n        else {\n            dig2 = 11 - resto;\n        }\n    }\n    return dig1.toString() + dig2.toString();\n}\nexports.create_titulo_atual = create_titulo_atual;\nfunction create_titulo(titNum) {\n    titNum = utils_1.getAllDigits(titNum);\n    if (titNum.length > 11) {\n        titNum = titNum.substr(0, 11);\n    }\n    titNum = \"00000000\" + titNum;\n    titNum = titNum.slice(titNum.length - 11);\n    var a1 = parseInt(titNum.slice(10));\n    var a2 = parseInt(titNum.slice(9, 10));\n    var a3 = parseInt(titNum.slice(8, 9));\n    var a4 = parseInt(titNum.slice(7, 8));\n    var a5 = parseInt(titNum.slice(6, 7));\n    var a6 = parseInt(titNum.slice(5, 6));\n    var a7 = parseInt(titNum.slice(4, 5));\n    var a8 = parseInt(titNum.slice(3, 4));\n    var a9 = parseInt(titNum.slice(2, 3));\n    var a10 = parseInt(titNum.slice(1, 2));\n    var a11 = parseInt(titNum.slice(0, 1));\n    if (a2 * 10 + a1 == 0 || a2 * 10 + a1 > 28) {\n        throw new Error(\"Esse nº é suspeito, porque a identificação da \\nUF (últimos 2 dígitos) deve estar entre 01 e 28.\");\n    }\n    var titExcecao1 = 0;\n    var titExcecao2 = 0;\n    var titPriDig = (a3 * 9 + a4 * 8 + a5 * 7 + a6 * 6 + a7 * 5 + a8 * 4 + a9 * 3 + a10 * 2 + a11 * 9) % 11;\n    if (titPriDig == 0) {\n        titExcecao1 = 1;\n    }\n    if (titPriDig == 10) {\n        titPriDig = 0;\n    }\n    if ((a2 * 10 + a1 == 1 || a2 * 10 + a1 == 2) && (titExcecao1 == 1)) {\n        titPriDig = 1;\n    }\n    var titSegDig = (titPriDig * 9 + a1 * 8 + a2 * 7) % 11;\n    if (titSegDig == 0) {\n        titExcecao2 = 1;\n    }\n    if (titSegDig == 10) {\n        titSegDig = 0;\n    }\n    if ((a2 * 10 + a1 == 1 || a2 * 10 + a1 == 2) && (titExcecao2 == 1)) {\n        titSegDig = 1;\n    }\n    var titDV = titPriDig * 10 + titSegDig;\n    if (titDV == 0) {\n        titDV = \"00\";\n    }\n    if (titDV > 0 && titDV < 10) {\n        titDV = \"0\" + titDV;\n    }\n    return titDV.toString();\n}\nexports.create_titulo = create_titulo;\n//# sourceMappingURL=create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IPTUCREATE = exports.faker_iptu = exports.create_iptu_sp = exports.create_iptu_ctba = void 0;\nvar utils_1 = require(\"./utils\");\nvar iptu_mask_1 = require(\"./iptu_mask\");\nfunction create_iptu_ctba(number) {\n    number = utils_1.getAllDigits(number);\n    var a1 = parseInt(number.slice(10));\n    var a2 = parseInt(number.slice(9, 10));\n    var a3 = parseInt(number.slice(8, 9));\n    var a4 = parseInt(number.slice(7, 8));\n    var a5 = parseInt(number.slice(6, 7));\n    var a6 = parseInt(number.slice(5, 6));\n    var a7 = parseInt(number.slice(4, 5));\n    var a8 = parseInt(number.slice(3, 4));\n    var a9 = parseInt(number.slice(2, 3));\n    var a10 = parseInt(number.slice(1, 2));\n    var a11 = parseInt(number.slice(0, 1));\n    var iptuctbaDV = 10 - ((a1 * 2 + a2 * 3 + a3 * 4 + a4 * 7 + a5 * 8 + a6 * 9 + a7 * 2 + a8 * 3 + a9 * 4 + a10 * 7 + a11 * 8) % 10);\n    if (iptuctbaDV == 10) {\n        iptuctbaDV = 0;\n    }\n    return iptuctbaDV;\n}\nexports.create_iptu_ctba = create_iptu_ctba;\nfunction create_iptu_sp(number) {\n    var a1 = parseInt(number.slice(9));\n    var a2 = parseInt(number.slice(8, 9));\n    var a3 = parseInt(number.slice(7, 8));\n    var a4 = parseInt(number.slice(6, 7));\n    var a5 = parseInt(number.slice(5, 6));\n    var a6 = parseInt(number.slice(4, 5));\n    var a7 = parseInt(number.slice(3, 4));\n    var a8 = parseInt(number.slice(2, 3));\n    var a9 = parseInt(number.slice(1, 2));\n    var a10 = parseInt(number.slice(0, 1));\n    var iptuspDV = (a1 * 9 + a2 * 8 + a3 * 7 + a4 * 6 + a5 * 5 + a6 * 4 + a7 * 3 + a8 * 2 + a9 + a10 * 10) % 11;\n    if (iptuspDV == 10) {\n        iptuspDV = 1;\n    }\n    return iptuspDV;\n}\nexports.create_iptu_sp = create_iptu_sp;\nexports.faker_iptu = function (estado, cidade) {\n    if (!iptu_mask_1.IPTUMASKS[estado] || !iptu_mask_1.IPTUMASKS[estado][cidade]) {\n        return;\n    }\n    var iptu = utils_1.makeGenericFaker(iptu_mask_1.IPTUMASKS[estado][cidade])();\n    if (exports.IPTUCREATE[estado] && exports.IPTUCREATE[estado][cidade]) {\n        var dv = exports.IPTUCREATE[estado][cidade](iptu);\n        var values = iptu.split('');\n        values[values.length - 1] = dv;\n        iptu = values.join('');\n    }\n    return iptu;\n};\nexports.IPTUCREATE = {\n    'sao-paulo': {\n        'sao-paulo': create_iptu_sp,\n    },\n    'parana': {\n        'curitiba': create_iptu_ctba\n    }\n};\n//# sourceMappingURL=iptu_create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ESTADOS = exports.ESTADOS_SIGLA = void 0;\nexports.ESTADOS_SIGLA = ['ac', 'al', 'am', 'ap', 'ba', 'ce', 'df', 'es', 'go', 'ma',\n    'mg', 'ms', 'mt', 'pa', 'pb', 'pe', 'pi', 'pr', 'rj', 'rn', 'ro', 'rr', 'rs',\n    'sc', 'se', 'sp', 'to'\n];\nexports.ESTADOS = [\n    { name: 'Acre', shortname: 'AC', slug: 'acre' },\n    { name: 'Alagoas', shortname: 'AL', slug: 'alagoas' },\n    { name: 'Amapá', shortname: 'AP', slug: 'amapa' },\n    { name: 'Amazonas', shortname: 'AM', slug: 'amazonas' },\n    { name: 'Bahia', shortname: 'BA', slug: 'bahia' },\n    { name: 'Ceará', shortname: 'CE', slug: 'ceara' },\n    { name: 'Distrito Federal', shortname: 'DF', slug: 'distrito-federal' },\n    { name: 'Espírito Santo', shortname: 'ES', slug: 'espirito-santo' },\n    { name: 'Goiás', shortname: 'GO', slug: 'goias' },\n    { name: 'Maranhão', shortname: 'MA', slug: 'maranhao' },\n    { name: 'Mato Grosso', shortname: 'MT', slug: 'mato-grosso' },\n    { name: 'Mato Grosso do Sul', shortname: 'MS', slug: 'mato-grosso-do-sul' },\n    { name: 'Minas Gerais', shortname: 'MG', slug: 'minas-gerais' },\n    { name: 'Pará', shortname: 'PA', slug: 'para' },\n    { name: 'Paraíba', shortname: 'PB', slug: 'paraiba' },\n    { name: 'Paraná', shortname: 'PR', slug: 'parana' },\n    { name: 'Pernambuco', shortname: 'PE', slug: 'pernambuco' },\n    { name: 'Piauí', shortname: 'PI', slug: 'piaui' },\n    { name: 'Rio de Janeiro', shortname: 'RJ', slug: 'rio-de-janeiro' },\n    { name: 'Rio Grande do Norte', shortname: 'RN', slug: 'rio-grande-do-norte' },\n    { name: 'Rio Grande do Sul', shortname: 'RS', slug: 'rio-grande-do-sul' },\n    { name: 'Rondônia', shortname: 'RO', slug: 'rondonia' },\n    { name: 'Roraima', shortname: 'RR', slug: 'roraima' },\n    { name: 'Santa Catarina', shortname: 'SC', slug: 'santa-catarina' },\n    { name: 'São Paulo', shortname: 'SP', slug: 'sao-paulo' },\n    { name: 'Sergipe', shortname: 'SE', slug: 'sergipe' },\n    { name: 'Tocantins', shortname: 'TO', slug: 'tocantins' }\n];\n//# sourceMappingURL=estados.js.map","import { CommonModule } from '@angular/common';\nimport { Validators, NG_VALIDATORS } from '@angular/forms';\nimport { Directive, forwardRef, Pipe, NgModule } from '@angular/core';\nimport { utilsBr, validateBr, maskBr } from 'js-brasil';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ cpf = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.cpf(v) ? null : { cpf: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ CPF_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => CPFValidator),\n    multi: true\n};\nclass CPFValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return cpf(c);\n    }\n}\nCPFValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[cpf][formControlName],[cpf][formControl],[cpf][ngModel]',\n                providers: [CPF_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nCPFValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass CPFPipe {\n    /**\n     * @param {?} cpfValue\n     * @return {?}\n     */\n    transform(cpfValue) {\n        return maskBr.cpf(cpfValue);\n    }\n}\nCPFPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'cpf',\n            },] }\n];\n/** @nocollapse */\nCPFPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ cnpj = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.cnpj(v) ? null : { cnpj: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ CNPJ_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => CNPJValidator),\n    multi: true\n};\nclass CNPJValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return cnpj(c);\n    }\n}\nCNPJValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[cnpj][formControlName],[cnpj][formControl],[cnpj][ngModel]',\n                providers: [CNPJ_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nCNPJValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass CNPJPipe {\n    /**\n     * @param {?} cnpjValue\n     * @return {?}\n     */\n    transform(cnpjValue) {\n        return maskBr.cnpj(cnpjValue);\n    }\n}\nCNPJPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'cnpj',\n            },] }\n];\n/** @nocollapse */\nCNPJPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ telefone = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.telefone(v) ? null : { telefone: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ TELEFONE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => TelefoneValidator),\n    multi: true\n};\nclass TelefoneValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return telefone(c);\n    }\n}\nTelefoneValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[telefone][formControlName],[telefone][formControl],[telefone][ngModel]',\n                providers: [TELEFONE_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nTelefoneValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass TelefonePipe {\n    /**\n     * @param {?} telefoneValue\n     * @return {?}\n     */\n    transform(telefoneValue) {\n        return maskBr.telefone(telefoneValue);\n    }\n}\nTelefonePipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'telefone',\n            },] }\n];\n/** @nocollapse */\nTelefonePipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ celular = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.celular(v) ? null : { celular: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ CELULAR_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => CelularValidator),\n    multi: true\n};\nclass CelularValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return celular(c);\n    }\n}\nCelularValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[celular][formControlName],[celular][formControl],[celular][ngModel]',\n                providers: [CELULAR_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nCelularValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass CelularPipe {\n    /**\n     * @param {?} celularValue\n     * @return {?}\n     */\n    transform(celularValue) {\n        return maskBr.celular(celularValue);\n    }\n}\nCelularPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'celular',\n            },] }\n];\n/** @nocollapse */\nCelularPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ inscricaoestadual = (estado) => {\n    return (control) => {\n        if (utilsBr.isPresent(Validators.required(control))) {\n            return null;\n        }\n        const /** @type {?} */ v = control.value;\n        return validateBr.inscricaoestadual(v, estado) ? null : { inscricaoestadual: true };\n    };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ INSCRICAOESTADUAL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => InscricaoEstadualValidator),\n    multi: true\n};\nclass InscricaoEstadualValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return inscricaoestadual('mg')(c);\n    }\n}\nInscricaoEstadualValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[inscricaoestadual][formControlName],[inscricaoestadual][formControl],[inscricaoestadual][ngModel]',\n                providers: [INSCRICAOESTADUAL_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nInscricaoEstadualValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass InscricaoEstadualPipe {\n    /**\n     * @param {?} inscricaoestadualValue\n     * @param {?} estado\n     * @return {?}\n     */\n    transform(inscricaoestadualValue, estado) {\n        return maskBr.inscricaoestadual(inscricaoestadualValue, estado);\n    }\n}\nInscricaoEstadualPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'inscricaoestadual',\n            },] }\n];\n/** @nocollapse */\nInscricaoEstadualPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ cep = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.cep(v) ? null : { cep: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ CEP_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => CEPValidator),\n    multi: true\n};\nclass CEPValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return cep(c);\n    }\n}\nCEPValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[cep][formControlName],[cep][formControl],[cep][ngModel]',\n                providers: [CEP_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nCEPValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass CEPPipe {\n    /**\n     * @param {?} cepValue\n     * @return {?}\n     */\n    transform(cepValue) {\n        return maskBr.cep(cepValue);\n    }\n}\nCEPPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'cep',\n            },] }\n];\n/** @nocollapse */\nCEPPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ currency = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.currency(v) ? null : { currency: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ CURRENCY_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => CURRENCYValidator),\n    multi: true\n};\nclass CURRENCYValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return currency(c);\n    }\n}\nCURRENCYValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[currency][formControlName],[currency][formControl],[currency][ngModel]',\n                providers: [CURRENCY_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nCURRENCYValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass CURRENCYPipe {\n    /**\n     * @param {?} currencyValue\n     * @return {?}\n     */\n    transform(currencyValue) {\n        return maskBr.currency(currencyValue);\n    }\n}\nCURRENCYPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'currencyBrazil',\n            },] }\n];\n/** @nocollapse */\nCURRENCYPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ number = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.number(v) ? null : { number: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ NUMBER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => NUMBERValidator),\n    multi: true\n};\nclass NUMBERValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return number(c);\n    }\n}\nNUMBERValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n                providers: [NUMBER_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nNUMBERValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass NUMBERPipe {\n    /**\n     * @param {?} numberValue\n     * @return {?}\n     */\n    transform(numberValue) {\n        return maskBr.number(numberValue);\n    }\n}\nNUMBERPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'numberBrazil',\n            },] }\n];\n/** @nocollapse */\nNUMBERPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ placa = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.placa(v) ? null : { placa: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ PLACA_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PLACAValidator),\n    multi: true\n};\nclass PLACAValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return placa(c);\n    }\n}\nPLACAValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[placa][formControlName],[placa][formControl],[placa][ngModel]',\n                providers: [PLACA_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nPLACAValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass PLACAPipe {\n    /**\n     * @param {?} placaValue\n     * @return {?}\n     */\n    transform(placaValue) {\n        return maskBr.placa(placaValue);\n    }\n}\nPLACAPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'placa'\n            },] }\n];\n/** @nocollapse */\nPLACAPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ porcentagem = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.porcentagem(v) ? null : { porcentagem: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ PERCENTAGE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => PERCENTAGEValidator),\n    multi: true\n};\nclass PERCENTAGEValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return porcentagem(c);\n    }\n}\nPERCENTAGEValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[percentage][formControlName],[percentage][formControl],[percentage][ngModel]',\n                providers: [PERCENTAGE_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nPERCENTAGEValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass PERCENTAGEPipe {\n    /**\n     * @param {?} percentageValue\n     * @return {?}\n     */\n    transform(percentageValue) {\n        return maskBr.porcentagem(percentageValue);\n    }\n}\nPERCENTAGEPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'percentage',\n            },] }\n];\n/** @nocollapse */\nPERCENTAGEPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ renavam = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.renavam(v) ? null : { renavam: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ RENAVAM_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => RenavamValidator),\n    multi: true\n};\nclass RenavamValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return renavam(c);\n    }\n}\nRenavamValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[renavam][formControlName],[renavam][formControl],[renavam][ngModel]',\n                providers: [RENAVAM_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nRenavamValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass RenavamPipe {\n    /**\n     * @param {?} renavamValue\n     * @return {?}\n     */\n    transform(renavamValue) {\n        return maskBr.renavam(renavamValue);\n    }\n}\nRenavamPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'renavam',\n            },] }\n];\n/** @nocollapse */\nRenavamPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ pispasep = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.pispasep(v) ? null : { pispasep: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ PISPASE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => PispasepValidator),\n    multi: true\n};\nclass PispasepValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return pispasep(c);\n    }\n}\nPispasepValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[pispasep][formControlName],[pispasep][formControl],[pispasep][ngModel]',\n                providers: [PISPASE_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nPispasepValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass PispasepPipe {\n    /**\n     * @param {?} pispasepValue\n     * @return {?}\n     */\n    transform(pispasepValue) {\n        return maskBr.pispasep(pispasepValue);\n    }\n}\nPispasepPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'pispasep',\n            },] }\n];\n/** @nocollapse */\nPispasepPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ rg = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.rg(v) ? null : { rg: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ RG_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => RGValidator),\n    multi: true\n};\nclass RGValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return rg(c);\n    }\n}\nRGValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[rg][formControlName],[rg][formControl],[rg][ngModel]',\n                providers: [RG_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nRGValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass RGPipe {\n    /**\n     * @param {?} rgValue\n     * @return {?}\n     */\n    transform(rgValue) {\n        return maskBr.rg(rgValue);\n    }\n}\nRGPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'rg',\n            },] }\n];\n/** @nocollapse */\nRGPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ time = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.time(v) ? null : { time: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ TIME_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => TIMEValidator),\n    multi: true\n};\nclass TIMEValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return time(c);\n    }\n}\nTIMEValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[time][formControlName],[time][formControl],[time][ngModel]',\n                providers: [TIME_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nTIMEValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass TIMEPipe {\n    /**\n     * @param {?} timeValue\n     * @return {?}\n     */\n    transform(timeValue) {\n        return maskBr.time(timeValue);\n    }\n}\nTIMEPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'time',\n            },] }\n];\n/** @nocollapse */\nTIMEPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ titulo = (control) => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n    const /** @type {?} */ v = control.value;\n    return validateBr.titulo(v) ? null : { titulo: true };\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ TITULO_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => TITULOValidator),\n    multi: true\n};\nclass TITULOValidator {\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return titulo(c);\n    }\n}\nTITULOValidator.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[titulo][formControlName],[titulo][formControl],[titulo][ngModel]',\n                providers: [TITULO_VALIDATOR]\n            },] }\n];\n/** @nocollapse */\nTITULOValidator.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass TITULOPipe {\n    /**\n     * @param {?} tituloValue\n     * @return {?}\n     */\n    transform(tituloValue) {\n        return maskBr.titulo(tituloValue);\n    }\n}\nTITULOPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'titulo'\n            },] }\n];\n/** @nocollapse */\nTITULOPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nconst /** @type {?} */ NgBrazilValidators = {\n    cpf,\n    cnpj,\n    celular,\n    cep,\n    currency,\n    inscricaoestadual,\n    number,\n    pispasep,\n    placa,\n    porcentagem,\n    renavam,\n    rg,\n    telefone,\n    time,\n    titulo\n};\nconst /** @type {?} */ MASKS = utilsBr.MASKS;\nconst /** @type {?} */ CustomDirectives = [\n    CelularValidator,\n    CelularPipe,\n    CEPValidator,\n    CEPPipe,\n    CPFValidator,\n    CPFPipe,\n    CNPJValidator,\n    CNPJPipe,\n    CURRENCYValidator,\n    CURRENCYPipe,\n    InscricaoEstadualValidator,\n    InscricaoEstadualPipe,\n    NUMBERValidator,\n    NUMBERPipe,\n    PERCENTAGEValidator,\n    PERCENTAGEPipe,\n    PispasepValidator,\n    PispasepPipe,\n    PLACAValidator,\n    PLACAPipe,\n    RenavamValidator,\n    RenavamPipe,\n    RGValidator,\n    RGPipe,\n    TelefoneValidator,\n    TelefonePipe,\n    TIMEValidator,\n    TIMEPipe,\n    TITULOValidator,\n    TITULOPipe\n];\nconst /** @type {?} */ NgBrDirectives = {\n    CelularValidator,\n    CelularPipe,\n    CEPValidator,\n    CEPPipe,\n    CNPJValidator,\n    CNPJPipe,\n    CPFValidator,\n    CPFPipe,\n    CURRENCYValidator,\n    CURRENCYPipe,\n    InscricaoEstadualValidator,\n    InscricaoEstadualPipe,\n    NUMBERValidator,\n    NUMBERPipe,\n    PERCENTAGEValidator,\n    PERCENTAGEPipe,\n    PispasepValidator,\n    PispasepPipe,\n    PLACAValidator,\n    PLACAPipe,\n    RGValidator,\n    RGPipe,\n    RenavamValidator,\n    RenavamPipe,\n    TelefoneValidator,\n    TelefonePipe,\n    TIMEValidator,\n    TIMEPipe,\n    TITULOValidator,\n    TITULOPipe\n};\nclass NgBrazil {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: NgBrazil\n        };\n    }\n}\nNgBrazil.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    CustomDirectives\n                ],\n                exports: [\n                    CustomDirectives\n                ]\n            },] }\n];\n/** @nocollapse */\nNgBrazil.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { NgBrazilValidators, MASKS, CustomDirectives, NgBrDirectives, NgBrazil, CelularValidator as ɵp, CelularPipe as ɵq, celular as ɵc, CEPValidator as ɵr, CEPPipe as ɵs, cep as ɵd, CNPJValidator as ɵv, CNPJPipe as ɵw, cnpj as ɵb, CPFValidator as ɵt, CPFPipe as ɵu, cpf as ɵa, CURRENCYValidator as ɵx, CURRENCYPipe as ɵy, currency as ɵe, InscricaoEstadualValidator as ɵz, InscricaoEstadualPipe as ɵba, inscricaoestadual as ɵf, NUMBERValidator as ɵbb, NUMBERPipe as ɵbc, number as ɵg, PERCENTAGEValidator as ɵbd, PERCENTAGEPipe as ɵbe, porcentagem as ɵj, PispasepValidator as ɵbf, PispasepPipe as ɵbg, pispasep as ɵh, PLACAValidator as ɵbh, PLACAPipe as ɵbi, placa as ɵi, RenavamValidator as ɵbj, RenavamPipe as ɵbk, renavam as ɵk, RGValidator as ɵbl, RGPipe as ɵbm, rg as ɵl, TelefoneValidator as ɵbn, TelefonePipe as ɵbo, telefone as ɵm, TIMEValidator as ɵbp, TIMEPipe as ɵbq, time as ɵn, TITULOValidator as ɵbr, TITULOPipe as ɵbs, titulo as ɵo };\n\n//# sourceMappingURL=ng-brazil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate_placa = exports.PLACAS_INVALID = exports.PLACAS_RANGE = void 0;\nexports.PLACAS_RANGE = [\n    ['AAA0001', 'BEZ9999', 'PR', '02/1990'],\n    ['BFA0001', 'GKI9999', 'SP', '10/1991'],\n    ['GKJ0001', 'HOK9999', 'MG', '09/1991'],\n    ['HOL0001', 'HQE9999', 'MA', '01/1992'],\n    ['HQF0001', 'HTW9999', 'MS', '03/1992'],\n    ['HTX0001', 'HZA9999', 'CE', '10/1992'],\n    ['HZB0001', 'IAP9999', 'SE', '09/1993'],\n    ['IAQ0001', 'JDO9999', 'RS', '03/1992'],\n    ['JDP0001', 'JKR9999', 'DF', '04/1994'],\n    ['JKS0001', 'JSZ9999', 'BA', '08/1993'],\n    ['JTA0001', 'JWE9999', 'PA', '07/1993'],\n    ['JWF0001', 'JXY9999', 'AM', '09/1993'],\n    ['JXZ0001', 'KAU9999', 'MT', '09/1993'],\n    ['KAV0001', 'KFC9999', 'GO', '05/1994'],\n    ['KFD0001', 'KME9999', 'PE', '08/1994'],\n    ['KMF0001', 'LVE9999', 'RJ', '05/1994'],\n    ['LVF0001', 'LWQ9999', 'PI', '04/1996'],\n    ['LWR0001', 'MMM9999', 'SC', '06/1996'],\n    ['MMN0001', 'MOW9999', 'PB', '07/1996'],\n    ['MOX0001', 'MTZ9999', 'ES', '12/1995'],\n    ['MUA0001', 'MVK9999', 'AL', '08/1996'],\n    ['MVL0001', 'MXG9999', 'TO', '11/1996'],\n    ['MXH0001', 'MZM9999', 'RN', '06/1998'],\n    ['MZN0001', 'NAG9999', 'AC', '06/1998'],\n    ['NAH0001', 'NBA9999', 'RR', '07/1998'],\n    ['NBB0001', 'NEH9999', 'RO', '07/1998'],\n    ['NEI0001', 'NFB9999', 'AP', '09/1998'],\n    ['NFC0001', 'NGZ9999', 'GO', '08/2003'],\n    ['NHA0001', 'NHT9999', 'MA', '12/2006'],\n    ['NHU0001', 'NIX9999', 'PI', '05/2007'],\n    ['NIY0001', 'NJW9999', 'MT', '10/2007'],\n    ['NJX0001', 'NLU9999', 'GO', '11/2007'],\n    ['NLV0001', 'NMO9999', 'AL', '01/2008'],\n    ['NMP0001', 'NNI9999', 'MA', '05/2008'],\n    ['NNJ0001', 'NOH9999', 'RN', '07/2008'],\n    ['NOI0001', 'NPB9999', 'AM', '07/2008'],\n    ['NPC0001', 'NPQ9999', 'MT', '09/2008'],\n    ['NPR0001', 'NQK9999', 'PB', '11/2008'],\n    ['NQL0001', 'NRE9999', 'CE', '12/2008'],\n    ['NRF0001', 'NSD9999', 'MS', '11/2009'],\n    ['NSE0001', 'NTC9999', 'PA', '11/2009'],\n    ['NTD0001', 'NTW9999', 'BA', '02/2010'],\n    ['NTX0001', 'NUG9999', 'MT', '03/2010'],\n    ['NUH0001', 'NUL9999', 'RR', '06/2010'],\n    ['NUM0001', 'NVF9999', 'CE', '06/2010'],\n    ['NVG0001', 'NVN9999', 'SE', '03/2010'],\n    ['NVO0001', 'NWR9999', 'GO', '03/2010'],\n    ['NWS0001', 'NXQ9999', 'MA', '07/2010'],\n    ['NXR0001', 'NXT9999', 'AC', '05/2011'],\n    ['NXU0001', 'NXW9999', 'PE', '07/2010'],\n    ['NXX0001', 'NYG9999', 'MG', '10/2011'],\n    ['NYH0001', 'NZZ9999', 'BA', '10/2010'],\n    ['OAA0001', 'OAO9999', 'AM', '12/2010'],\n    ['OAP0001', 'OBS9999', 'MT', '05/2011'],\n    ['OBT0001', 'OCA9999', 'PA', '07/2011'],\n    ['OCB0001', 'OCU9999', 'CE', '02/2011'],\n    ['OCV0001', 'ODT9999', 'ES', '05/2011'],\n    ['ODU0001', 'OEI9999', 'PI', '09/2011'],\n    ['OEJ0001', 'OES9999', 'SE', '08/2011'],\n    ['OET0001', 'OFH9999', 'PB', '04/2011'],\n    ['OFI0001', 'OFW9999', 'PA', '03/2011'],\n    ['OFX0001', 'OGG9999', 'PB', '06/2011'],\n    ['OGH0001', 'OHA9999', 'GO', '04/2011'],\n    ['OHB0001', 'OHK9999', 'AL', '09/2011'],\n    ['OHL0001', 'OHW9999', 'RO', '11/2011'],\n    ['OHX0001', 'OIQ9999', 'CE', '12/2011'],\n    ['OIR0001', 'OJQ9999', 'MA', '01/2012'],\n    ['OJR0001', 'OKC9999', 'RN', '04/2012'],\n    ['OKD0001', 'OKH9999', 'SC', '02/2014'],\n    ['OKI0001', 'OLG9999', 'BA', '10/2011'],\n    ['OLH0001', 'OLN9999', 'TO', '02/2012'],\n    ['OLO0001', 'OMH9999', 'MG', '03/2012'],\n    ['OMI0001', 'OOF9999', 'GO', '04/2012'],\n    ['OOG0001', 'OOU9999', 'MS', '02/2012'],\n    ['OOV0001', 'ORC9999', 'MG', '06/2012'],\n    ['ORD0001', 'ORM9999', 'AL', '01/2012'],\n    ['ORN0001', 'OSV9999', 'CE', '07/2012'],\n    ['OSW0001', 'OTZ9999', 'PA', '08/2012'],\n    ['OUA0001', 'OUE9999', 'PI', '11/2012'],\n    ['OUF0001', 'OVD9999', 'BA', '12/2012'],\n    ['OVE0001', 'OVF9999', 'ES', '12/2012'],\n    ['OVG0001', 'OVG9999', 'AC', '05/2013'],\n    ['OVH0001', 'OVL9999', 'ES', '07/2013'],\n    ['OVM0001', 'OVV9999', 'DF', '11/2013'],\n    ['OVW0001', 'OVY9999', 'PI', '10/2013'],\n    ['OVZ0001', 'OWG9999', 'RN', '06/2013'],\n    ['OWH0001', 'OXK9999', 'MG', '10/2013'],\n    ['OXL0001', 'OXL9999', 'RO', '11/2013'],\n    ['OXM0001', 'OXM9999', 'AM', '11/2013'],\n    ['OXN0001', 'OXN9999', 'AL', '11/2013'],\n    ['OXO0001', 'OXO9999', 'PB', '11/2013'],\n    ['OXP0001', 'OXP9999', 'AC', '12/2013'],\n    ['OXQ0001', 'OXZ9999', 'MA', '04/2014'],\n    ['OYA0001', 'OYC9999', 'TO', '11/2013'],\n    ['OYD0001', 'OYK9999', 'ES', '12/2013'],\n    ['OYL0001', 'OYZ9999', 'PE', '02/2014'],\n    ['OZA0001', 'OZA9999', 'CE', '01/2014'],\n    ['OZB0001', 'OZB9999', 'SE', '01/2014'],\n    ['OZC0001', 'OZV9999', 'BA', '03/2014'],\n    ['OZW0001', 'PBZ9999', 'DF', '05/2014'],\n    ['PCA0001', 'PED9999', 'PE', '12/2014'],\n    ['PEE0001', 'PFQ9999', 'PE', '09/2010'],\n    ['PFR0001', 'PGK9999', 'PE', '07/2012'],\n    ['PGL0001', 'PGU9999', 'PE', '10/2013'],\n    ['PGV0001', 'PGZ9999', 'PE', '12/2014'],\n    ['PHA0001', 'PHZ9999', 'AM', '06/2014'],\n    ['PIA0001', 'PIZ9999', 'PI', '06/2014'],\n    ['PJA0001', 'PLZ9999', 'BA', '10/2014'],\n    ['PMA0001', 'POZ9999', 'CE', '06/2014'],\n    ['PPA0001', 'PPZ9999', 'ES', '08/2014'],\n    ['PQA0001', 'PRZ9999', 'GO', '03/2015'],\n    ['PSA0001', 'PTZ9999', 'MA', '12/2014'],\n    ['PUA0001', 'PZZ9999', 'MG', '05/2014'],\n    ['QAA0001', 'QAZ9999', 'MS', '12/2014'],\n    ['QBA0001', 'QCZ9999', 'MT', '05/2014'],\n    ['QDA0001', 'QEZ9999', 'PA', '10/2014'],\n    ['QFA0001', 'QFZ9999', 'PB', '05/2014'],\n    ['QGA0001', 'QGZ9999', 'RN', '09/2014'],\n    ['QHA0001', 'QJZ9999', 'SC', '05/2014'],\n    ['QKA0001', 'QKM9999', 'TO', '11/2014'],\n    ['QKN0001', 'QKZ9999', 'SE', '06/2014'],\n    ['QLA0001', 'QLM9999', 'AL', '09/2015'],\n    ['QLN0001', 'QLT9999', 'AP', '01/2015'],\n    ['QLU0001', 'QLZ9999', 'AC', '08/2014'],\n    ['QMA0001', 'QMP9999', 'SE', '03/2017'],\n    ['QMQ0001', 'QQZ9999', 'MG', '07/2017'],\n    ['QRA0001', 'QRA9999', 'RO', '11/2017'],\n    ['QRB0001', 'QRZ9999', 'ES', '05/2018'],\n    ['QSA0001', 'QSZ9999', 'PB', '04/2018'],\n    ['QTA0001', 'QTB9999', 'RO', '08/2018'],\n    ['QTC0001', 'RIN9999', 'BR', '00/0000'],\n    ['RIO0001', 'RIO9999', 'RJ', '09/2018'],\n    ['RLA0001', 'SAU9999', 'BR', '00/0000'],\n    ['SAV0001', 'SAV9999', 'SP', '09/2009'],\n];\nexports.PLACAS_INVALID = { start: 'SAW0001', end: 'ZZZ9999' }; // || Sequências ainda não definidas\nfunction validate_placa(placa, incluiMercosul) {\n    var placaClean = placa.toString()\n        .replace(/-/g, '')\n        .replace(/ /g, '')\n        .toUpperCase();\n    var regex = {\n        legadoBR: /^[A-Z]{3}[0-9]{4}$/,\n        mercosulBR: /^[A-Z]{3}[0-9]{1}[A-Z]{1}[0-9]{2}$/,\n        mercosulAR: /^[A-Z]{2}[0-9]{3}[A-Z]{2}$|^[A-Z]{1}[0-9]{3}[A-Z]{3}$/,\n        mercosulBO: /^[A-Z]{2}[0-9]{5}$/,\n        mercosulPY: /^[A-Z]{4}[0-9]{3}$|^[0-9]{3}[A-Z]{4}$/,\n        mercosulUY: /^[A-Z]{3}[0-9]{4}$/,\n    };\n    var isLegadoBRInvalid = placaClean >= exports.PLACAS_INVALID.start && placaClean <= exports.PLACAS_INVALID.end;\n    if ((regex.legadoBR.test(placaClean) && !isLegadoBRInvalid)\n        || (regex.mercosulBR.test(placaClean))\n        || (incluiMercosul && ((regex.mercosulAR.test(placaClean))\n            || (regex.mercosulBO.test(placaClean))\n            || (regex.mercosulPY.test(placaClean))\n            || (regex.mercosulUY.test(placaClean))))) {\n        return true;\n    }\n    return false;\n}\nexports.validate_placa = validate_placa;\n//# sourceMappingURL=placa.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.createNumberMask=t():e.createNumberMask=t()}(this,function(){return function(e){function t(n){if(o[n])return o[n].exports;var i=o[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var o={};return t.m=e,t.c=o,t.p=\"\",t(0)}([function(e,t,o){e.exports=o(2)},,function(e,t){\"use strict\";function o(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=e.length;if(e===l||e[0]===y[0]&&1===t)return y.split(l).concat([v]).concat(g.split(l));if(e===k&&M)return y.split(l).concat([\"0\",k,v]).concat(g.split(l));var o=e[0]===s&&q;o&&(e=e.toString().substr(1));var c=e.lastIndexOf(k),u=c!==-1,a=void 0,b=void 0,h=void 0;if(e.slice(T*-1)===g&&(e=e.slice(0,T*-1)),u&&(M||$)?(a=e.slice(e.slice(0,R)===y?R:0,c),b=e.slice(c+1,t),b=n(b.replace(f,l))):a=e.slice(0,R)===y?e.slice(R):e,P&&(\"undefined\"==typeof P?\"undefined\":r(P))===p){var S=\".\"===j?\"[.]\":\"\"+j,w=(a.match(new RegExp(S,\"g\"))||[]).length;a=a.slice(0,P+w*Z)}return a=a.replace(f,l),E||(a=a.replace(/^0+(0$|[^0])/,\"$1\")),a=x?i(a,j):a,h=n(a),(u&&M||$===!0)&&(e[c-1]!==k&&h.push(m),h.push(k,m),b&&((\"undefined\"==typeof L?\"undefined\":r(L))===p&&(b=b.slice(0,L)),h=h.concat(b)),$===!0&&e[c-1]===k&&h.push(v)),R>0&&(h=y.split(l).concat(h)),o&&(h.length===R&&h.push(v),h=[d].concat(h)),g.length>0&&(h=h.concat(g.split(l))),h}var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=t.prefix,y=void 0===o?c:o,b=t.suffix,g=void 0===b?l:b,h=t.includeThousandsSeparator,x=void 0===h||h,S=t.thousandsSeparatorSymbol,j=void 0===S?u:S,w=t.allowDecimal,M=void 0!==w&&w,N=t.decimalSymbol,k=void 0===N?a:N,D=t.decimalLimit,L=void 0===D?2:D,O=t.requireDecimal,$=void 0!==O&&O,_=t.allowNegative,q=void 0!==_&&_,B=t.allowLeadingZeroes,E=void 0!==B&&B,I=t.integerLimit,P=void 0===I?null:I,R=y&&y.length||0,T=g&&g.length||0,Z=j&&j.length||0;return e.instanceOf=\"createNumberMask\",e}function n(e){return e.split(l).map(function(e){return v.test(e)?v:e})}function i(e,t){return e.replace(/\\B(?=(\\d{3})+(?!\\d))/g,t)}Object.defineProperty(t,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};t.default=o;var c=\"$\",l=\"\",u=\",\",a=\".\",s=\"-\",d=/-/,f=/\\D+/g,p=\"number\",v=/\\d/,m=\"[]\"}])});","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MASKSIE = exports.validate_inscricaoestadual = exports.generateInscricaoEstadual = void 0;\nvar utils_1 = require(\"./utils\");\n/**\n * BASED ON https://github.com/gammasoft/ie/\n */\nexports.generateInscricaoEstadual = {\n    ac: function (valor) {\n        if (tamanhoNaoE(valor, 13)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '01')) {\n            return false;\n        }\n        var base = primeiros(valor, 11);\n        var primeiroDigito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));\n        var segundoDigito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base + primeiroDigito));\n        return base + primeiroDigito + segundoDigito;\n    },\n    am: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    al: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '24')) {\n            return false;\n        }\n        // FORMAÇÃO: 24XNNNNND,  sendo:\n        // 24 – Código do Estado\n        // X – Tipo de empresa (0-Normal, 3-Produtor Rural, 5-Substituta, 7- Micro-Empresa Ambulante, 8-Micro-Empresa)\n        // NNNNN – Número da empresa\n        // D – Dígito de verificação calculado pelo Módulo11, pêsos 2 à 9 da direita para a esquerda, exceto D\n        // Exemplo: Número 2 4 0 0 0 0 0 4 D\n        //                 2 4 X N N N N N D\n        // Fonte: http://www.sintegra.gov.br/Cad_Estados/cad_AL.html\n        var base = primeiros(valor);\n        // Pesos 9 8 7 6 5 4 3 2\n        // SOMA = (2 * 4) + (3 * 0) + (4 * 0) + (5 * 0) + (6 * 0) + (7 * 0) + (8 * 4) + (9 * 2) = 58\n        var soma = base.split('').reduce(function (acc, v, i) {\n            return acc + (9 - i) * Number(v);\n        }, 0);\n        // PRODUTO = 58 * 10 = 580\n        var produto = soma * 10;\n        // RESTO = 580 – INTEIRO(580 / 11)*11 = 580 – (52*11) = 8\n        var resto = produto - Math.floor(produto / 11) * 11;\n        // DÍGITO = 8 - Caso RESTO seja igual a 10 o DÍGITO será 0 (zero)\n        var digito = resto === 10 ? 0 : resto;\n        return base + digito;\n    },\n    ap: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '03')) {\n            return false;\n        }\n        var base = primeiros(valor);\n        var p, d;\n        if (entre(base, 3000001, 3017000)) {\n            p = 5;\n            d = 0;\n        }\n        else if (entre(base, 3017001, 3019022)) {\n            p = 9;\n            d = 1;\n        }\n        else {\n            p = 0;\n            d = 0;\n        }\n        var resto = mod(p + base, [2, 3, 4, 5, 6, 7, 8, 9, 1]);\n        var digito;\n        if (resto === 1) {\n            digito = 0;\n        }\n        else if (resto === 0) {\n            digito = d;\n        }\n        else {\n            digito = 11 - resto;\n        }\n        return base + digito;\n    },\n    ba: function (valor) {\n        if (tamanhoNaoE(valor, 8) && tamanhoNaoE(valor)) {\n            return false;\n        }\n        var base = primeiros(valor, valor.length - 2);\n        var primeiroDigito, segundoDigito;\n        var segundoMultiplicador = serie(2, 7);\n        var primeiroMultiplicador = serie(2, 8);\n        var primeiroResto, segundoResto;\n        var digitoComparacao = valor.substring(0, 1);\n        if (tamanhoE(valor, 9)) {\n            segundoMultiplicador.push(8);\n            primeiroMultiplicador.push(9);\n            digitoComparacao = valor.substring(1, 2);\n        }\n        if ('0123458'.split('').indexOf(digitoComparacao) !== -1) {\n            segundoResto = mod(base, segundoMultiplicador, 10);\n            segundoDigito = segundoResto === 0 ? 0 : 10 - segundoResto;\n            primeiroResto = mod(base + segundoDigito, primeiroMultiplicador, 10);\n            primeiroDigito = primeiroResto === 0 ? 0 : 10 - primeiroResto;\n        }\n        else {\n            segundoResto = mod(base, segundoMultiplicador);\n            segundoDigito = substracaoPor11SeMaiorQue2CasoContrario0(segundoResto);\n            primeiroResto = mod(base + segundoDigito, primeiroMultiplicador);\n            primeiroDigito = substracaoPor11SeMaiorQue2CasoContrario0(primeiroResto);\n        }\n        return base + primeiroDigito + segundoDigito;\n    },\n    ce: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    df: function (valor) {\n        if (tamanhoNaoE(valor, 13)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '07') && naoComecaCom(valor, '08')) {\n            return false;\n        }\n        var base = primeiros(valor, 11);\n        var primeiro = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));\n        var segundo = substracaoPor11SeMaiorQue2CasoContrario0(mod(base + primeiro));\n        return base + primeiro + segundo;\n    },\n    es: function (valor) {\n        return calculoTrivialGenerate(valor);\n    },\n    go: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        if (['10', '11', '15'].indexOf(valor.substring(0, 2)) === -1) {\n            return false;\n        }\n        var base = primeiros(valor);\n        if (base === '11094402') {\n            return valor.substr(8) === '1' || valor.substr(8) === '0';\n        }\n        var resto = mod(base);\n        var digito;\n        if (resto === 0) {\n            digito = 0;\n        }\n        else if (resto === 1) {\n            if (entre(base, 10103105, 10119997)) {\n                digito = 1;\n            }\n            else {\n                digito = 0;\n            }\n        }\n        else {\n            digito = 11 - resto;\n        }\n        return base + digito;\n    },\n    ma: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '12')) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    mg: function (valor) {\n        if (tamanhoNaoE(valor, 13)) {\n            return false;\n        }\n        var base = primeiros(valor, 11);\n        var baseComZero = valor.substring(0, 3) + '0' + valor.substring(3, 11);\n        var i = 0;\n        var produtorioLiteral = baseComZero.split('').reduceRight(function (anterior, atual) {\n            if (i > [2, 1].length - 1) {\n                i = 0;\n            }\n            return ([2, 1][i++] * parseInt(atual, 10)).toString() + anterior.toString();\n        }, '').split('').reduce(function (anterior, atual) {\n            return anterior + parseInt(atual, 10);\n        }, 0);\n        var primeiro = ((Math.floor(produtorioLiteral / 10) + 1) * 10) - produtorioLiteral;\n        if (primeiro === 10) {\n            primeiro = 0;\n        }\n        var segundo = substracaoPor11SeMaiorQue2CasoContrario0(mod(base + primeiro, serie(2, 11)));\n        return base + primeiro + segundo;\n    },\n    ms: function (valor) {\n        if (naoComecaCom(valor, '28')) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    mt: function (valor) {\n        if (tamanhoNaoE(valor, 11) && tamanhoNaoE(valor)) {\n            return false;\n        }\n        var base = tamanhoE(valor, 11) ? valor.substring(0, 10) : primeiros(valor);\n        return calculoTrivialGenerate(valor, base, true);\n    },\n    pa: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '15')) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    pb: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    pe: function (valor) {\n        var base = valor.substring(0, valor.length - 2);\n        var restoPrimeiro = mod(base);\n        var primeiro = 11 - restoPrimeiro >= 10 ? 0 : 11 - restoPrimeiro;\n        var restoSegundo = mod(base + primeiro);\n        var segundo = 11 - restoSegundo >= 10 ? 0 : 11 - restoSegundo;\n        return base + primeiro + segundo;\n    },\n    pi: function (valor) {\n        return calculoTrivialGenerate(valor);\n    },\n    pr: function (valor) {\n        if (tamanhoNaoE(valor, 10)) {\n            return false;\n        }\n        var base = primeiros(valor);\n        var restoPrimeiro = mod(base, serie(2, 7));\n        var primeiro = 11 - restoPrimeiro >= 10 ? 0 : 11 - restoPrimeiro;\n        var restoSegundo = mod(base + primeiro, serie(2, 7));\n        var segundo = 11 - restoSegundo >= 10 ? 0 : 11 - restoSegundo;\n        return base + primeiro + segundo;\n    },\n    rj: function (valor) {\n        if (tamanhoNaoE(valor, 8)) {\n            return false;\n        }\n        var base = primeiros(valor, 7);\n        var digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base, serie(2, 7)));\n        return base + digito;\n    },\n    rn: function (valor) {\n        if (tamanhoNaoE(valor) && tamanhoNaoE(valor, 10)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '20')) {\n            return false;\n        }\n        var base = valor.substring(0, valor.length - 1);\n        var multiplicadores = serie(2, 9);\n        if (tamanhoE(valor, 10)) {\n            multiplicadores.push(10);\n        }\n        var resto = (mod(base, multiplicadores) * 10) % 11;\n        var digito = resto === 10 ? 0 : resto;\n        return base + digito;\n    },\n    ro: function (valor) {\n        var base, digito, resultadoMod;\n        if (tamanhoE(valor, 9)) {\n            base = valor.substring(3, 8);\n            digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));\n            return valor === valor.substring(0, 3) + base + digito;\n        }\n        else if (tamanhoE(valor, 14)) {\n            base = primeiros(valor, 13);\n            resultadoMod = mod(base);\n            digito = resultadoMod <= 1 ? 1 : 11 - resultadoMod;\n            return base + digito;\n        }\n        else {\n            return false;\n        }\n    },\n    rr: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        if (naoComecaCom(valor, '24')) {\n            return false;\n        }\n        var base = primeiros(valor);\n        var digito = mod(base, [8, 7, 6, 5, 4, 3, 2, 1], 9);\n        return base + digito;\n    },\n    rs: function (valor) {\n        if (tamanhoNaoE(valor, 10)) {\n            return false;\n        }\n        var base = primeiros(valor, 9);\n        return calculoTrivialGenerate(valor, base, true);\n    },\n    sc: function (valor) {\n        return calculoTrivialGenerate(valor);\n    },\n    se: function (valor) {\n        if (tamanhoNaoE(valor)) {\n            return false;\n        }\n        return calculoTrivialGenerate(valor);\n    },\n    sp: function (valor) {\n        valor = valor.toUpperCase();\n        var segundaBase;\n        if (valor.substr(0, 1) === 'P') {\n            if (tamanhoNaoE(valor, 13)) {\n                return false;\n            }\n            var base = valor.substring(1, 9);\n            segundaBase = valor.substring(10, 13);\n            var resto = mod(base, [10, 8, 7, 6, 5, 4, 3, 1]).toString();\n            var digito = resto.length > 1 ? resto[1] : resto[0];\n            return 'P' + base + digito + segundaBase;\n        }\n        else {\n            if (tamanhoNaoE(valor, 12)) {\n                return false;\n            }\n            var primeiraBase = primeiros(valor);\n            segundaBase = valor.substring(9, 11);\n            var primeiroResto = mod(primeiraBase, [10, 8, 7, 6, 5, 4, 3, 1]).toString();\n            var primeiro = primeiroResto.length > 1 ? primeiroResto[1] : primeiroResto[0];\n            var segundoResto = mod(primeiraBase + primeiro + segundaBase, serie(2, 10)).toString();\n            var segundo = segundoResto.length > 1 ? segundoResto[1] : segundoResto[0];\n            return primeiraBase + primeiro + segundaBase + segundo;\n        }\n    },\n    to: function (valor) {\n        if (tamanhoNaoE(valor) && tamanhoNaoE(valor, 11)) {\n            return false;\n        }\n        var base;\n        if (tamanhoE(valor, 11)) {\n            if (['01', '02', '03', '99'].indexOf(valor.substring(2, 4)) === -1) {\n                return false;\n            }\n            base = valor.substring(0, 2) + valor.substring(4, 10);\n        }\n        else {\n            base = primeiros(valor);\n        }\n        var digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));\n        return valor.substring(0, valor.length - 1) + digito;\n    },\n};\nvar funcoes = {\n    ac: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ac'](valor);\n    },\n    am: function (valor) {\n        return valor === exports.generateInscricaoEstadual['am'](valor);\n    },\n    al: function (valor) {\n        return valor === exports.generateInscricaoEstadual['al'](valor);\n    },\n    ap: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ap'](valor);\n    },\n    ba: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ba'](valor);\n    },\n    ce: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ce'](valor);\n    },\n    df: function (valor) {\n        return valor === exports.generateInscricaoEstadual['df'](valor);\n    },\n    es: function (valor) {\n        return valor === exports.generateInscricaoEstadual['es'](valor);\n    },\n    go: function (valor) {\n        return valor === exports.generateInscricaoEstadual['go'](valor);\n    },\n    ma: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ma'](valor);\n    },\n    mg: function (valor) {\n        return valor === exports.generateInscricaoEstadual['mg'](valor);\n    },\n    ms: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ms'](valor);\n    },\n    mt: function (valor) {\n        return valor === exports.generateInscricaoEstadual['mt'](valor);\n    },\n    pa: function (valor) {\n        return valor === exports.generateInscricaoEstadual['pa'](valor);\n    },\n    pb: function (valor) {\n        return valor === exports.generateInscricaoEstadual['pb'](valor);\n    },\n    pe: function (valor) {\n        return valor === exports.generateInscricaoEstadual['pe'](valor);\n    },\n    pi: function (valor) {\n        return valor === exports.generateInscricaoEstadual['pi'](valor);\n    },\n    pr: function (valor) {\n        return valor === exports.generateInscricaoEstadual['pr'](valor);\n    },\n    rj: function (valor) {\n        return valor === exports.generateInscricaoEstadual['rj'](valor);\n    },\n    rn: function (valor) {\n        return valor === exports.generateInscricaoEstadual['rn'](valor);\n    },\n    ro: function (valor) {\n        return valor === exports.generateInscricaoEstadual['ro'](valor);\n    },\n    rr: function (valor) {\n        return valor === exports.generateInscricaoEstadual['rr'](valor);\n    },\n    rs: function (valor) {\n        return valor === exports.generateInscricaoEstadual['rs'](valor);\n    },\n    sc: function (valor) {\n        return valor === exports.generateInscricaoEstadual['sc'](valor);\n    },\n    se: function (valor) {\n        return valor === exports.generateInscricaoEstadual['se'](valor);\n    },\n    sp: function (valor) {\n        return valor === exports.generateInscricaoEstadual['sp'](valor);\n    },\n    to: function (valor) {\n        return valor === exports.generateInscricaoEstadual['to'](valor);\n    },\n};\nfunction validate_inscricaoestadual(ie, estado) {\n    if (eIndefinido(estado) || estado === null) {\n        estado = '';\n    }\n    estado = estado.toLowerCase();\n    if (estado !== '' && !(estado in funcoes)) {\n        return new Error('estado não é válido');\n    }\n    if (eIndefinido(ie)) {\n        return new Error('ie deve ser fornecida');\n    }\n    if (Array.isArray(ie)) {\n        var retorno_1 = true;\n        ie.forEach(function (i) {\n            if (!validate_inscricaoestadual(i, estado)) {\n                retorno_1 = false;\n            }\n        });\n        return retorno_1;\n    }\n    if (typeof ie !== 'string') {\n        return new Error('ie deve ser string ou array de strings');\n    }\n    if (!utils_1.allNumbersAreSame(ie)) {\n        return new Error('ie com todos dígitos iguais');\n    }\n    if (ie.match(/^ISENTO$/i)) {\n        return true;\n    }\n    ie = ie.replace(/[\\.|\\-|\\/|\\s]/g, '');\n    if (estado === '') {\n        if (lookup(ie)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    if (/^\\d+$/.test(ie) || estado === 'sp' || funcoes[estado]) {\n        return funcoes[estado](ie);\n    }\n    return false;\n}\nexports.validate_inscricaoestadual = validate_inscricaoestadual;\nexports.MASKSIE = {\n    ac: {\n        text: '01.004.823/001-12',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    al: {\n        text: '240000048',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    am: {\n        text: '04.145.871-0',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    ap: {\n        text: '240000048',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    ba: {\n        text: '1234567-48',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/],\n        textMaskFunction: function mask(userInput) {\n            var numberLength = getSizeNumbers(userInput);\n            if (!userInput || numberLength > 8) {\n                return [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n            }\n            else {\n                return [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n            }\n        }\n    },\n    ce: {\n        text: '06.000001-5',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    df: {\n        text: '06 000001 123-55',\n        textMask: [/\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    es: {\n        text: '082.560.67-6',\n        textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, '-', /\\d/]\n    },\n    go: {\n        text: '06.000.001-5',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    ma: {\n        text: '12.104.376-2',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    mg: {\n        text: '001.819.263/0048',\n        textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    ms: {\n        text: '001819263',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    mt: {\n        text: '0018192630-1',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    pa: {\n        text: '06-000001-5',\n        textMask: [/\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    pb: {\n        text: '06000001-5',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    pe: {\n        text: '0192310-24',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    pi: {\n        text: '19.301.656-7',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/]\n    },\n    pr: {\n        text: '19301656-78',\n        textMask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n    },\n    rj: {\n        text: '20.040.04-1',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, '-', /\\d/]\n    },\n    rn: {\n        text: '20.040.040-1',\n        textMask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/],\n        textMaskFunction: function mask(userInput) {\n            var numberLength = getSizeNumbers(userInput);\n            if (!userInput || numberLength > 9) {\n                return [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n            }\n            else {\n                return [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/];\n            }\n        }\n    },\n    ro: {\n        text: '101.62521-3',\n        textMask: [/\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    rr: {\n        text: '24006628-1',\n        textMask: [/\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    rs: {\n        text: '024/0440013',\n        textMask: [/\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    sc: {\n        text: '271.234.563',\n        textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/]\n    },\n    se: {\n        text: '27123456-3',\n        textMask: [/\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n    sp: {\n        text: '114.814.878.119',\n        textMask: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/]\n    },\n    to: {\n        text: '11 81 4878119',\n        textMask: [/\\d/, /\\d/, ' ', /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]\n    },\n};\nfunction getSizeNumbers(userInput) {\n    var numbers = userInput.match(/\\d/g);\n    var numberLength = 0;\n    if (numbers) {\n        numberLength = numbers.join('').length;\n    }\n    return numberLength;\n}\nfunction eIndefinido(objeto) {\n    return typeof objeto === typeof undefined;\n}\nfunction tamanhoNaoE(string, tamanho) {\n    if (tamanho === void 0) { tamanho = 9; }\n    if (eIndefinido(tamanho)) {\n        tamanho = 9;\n    }\n    return string.length !== tamanho;\n}\nfunction tamanhoE(string, tamanho) {\n    return !tamanhoNaoE(string, tamanho);\n}\nfunction serie(de, ate) {\n    var resultado = [];\n    while (de <= ate) {\n        resultado.push(de++);\n    }\n    return resultado;\n}\nfunction primeiros(string, quantidade) {\n    if (quantidade === void 0) { quantidade = 8; }\n    if (eIndefinido(quantidade)) {\n        quantidade = 8;\n    }\n    return string.substring(0, quantidade);\n}\nfunction substracaoPor11SeMaiorQue2CasoContrario0(valor) {\n    return valor < 2 ? 0 : 11 - valor;\n}\nfunction mod(valor, multiplicadores, divisor) {\n    if (multiplicadores === void 0) { multiplicadores = serie(2, 9); }\n    if (divisor === void 0) { divisor = 11; }\n    if (eIndefinido(divisor)) {\n        divisor = 11;\n    }\n    if (eIndefinido(multiplicadores)) {\n        multiplicadores = serie(2, 9);\n    }\n    var i = 0;\n    return valor.split('').reduceRight(function (anterior, atual) {\n        if (i > multiplicadores.length - 1) {\n            i = 0;\n        }\n        return (multiplicadores[i++] * parseInt(atual, 10)) + anterior;\n    }, 0) % divisor;\n}\nfunction calculoTrivialGenerate(valor, base, validarTamanho) {\n    if (base === void 0) { base = null; }\n    if (validarTamanho === void 0) { validarTamanho = false; }\n    if (!validarTamanho && tamanhoNaoE(valor)) {\n        return false;\n    }\n    if (eIndefinido(base)) {\n        base = primeiros(valor);\n    }\n    if (!base) {\n        base = primeiros(valor);\n    }\n    var digito = substracaoPor11SeMaiorQue2CasoContrario0(mod(base));\n    return base + digito;\n}\nfunction naoComecaCom(string, valor) {\n    return string.substring(0, valor.length) !== valor;\n}\nfunction entre(valor, limiteInferior, limiteSuperior) {\n    if (typeof valor === 'string') {\n        valor = parseInt(valor, 10);\n    }\n    return valor >= limiteInferior && valor <= limiteSuperior;\n}\nfunction lookup(ie) {\n    var resultado = [];\n    for (var estado in funcoes) {\n        if (funcoes[estado](ie)) {\n            resultado.push(estado);\n        }\n    }\n    if (tamanhoE(resultado, 0)) {\n        return false;\n    }\n    else {\n        return resultado;\n    }\n}\n//# sourceMappingURL=inscricaoestadual.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IPTUVALIDATE = exports.validate_iptu_sp = exports.validate_iptu_contagem = exports.validate_iptu_ctba = void 0;\nvar utils_1 = require(\"./utils\");\nvar iptu_create_1 = require(\"./iptu_create\");\nvar validateRemoveDigito = function (number, max) {\n    number = utils_1.getAllDigits(number.toString());\n    if (number.length > max) {\n        return false;\n    }\n    else if (number.length === max) {\n        number = number.slice(0, -1);\n    }\n    return number;\n};\nfunction validate_iptu_ctba(value) {\n    var number = validateRemoveDigito(value, 12);\n    if (!number) {\n        return false;\n    }\n    var dv = iptu_create_1.IPTUCREATE['parana']['curitiba'](number);\n    return parseInt(value[value.length - 1]) === dv;\n}\nexports.validate_iptu_ctba = validate_iptu_ctba;\n/**\n * Índice Cadastral, ou inscrição imobiliária,  é o número de identificação do imóvel no cadastro da Prefeitura de Contagem.\n * O índice é composto por 12 (doze) ou 13 (treze) números, sendo: 2 (dois) para a zona fiscal;\n * 3 (três) ou 4 (quatro) para a quadra fiscal; 4 (quatro) para o lote fiscal; e 3 (três) para a unidade.\n */\nfunction validate_iptu_contagem(number) {\n    number = validateRemoveDigito(number, 12);\n    if (!number) {\n        return false;\n    }\n    return true;\n}\nexports.validate_iptu_contagem = validate_iptu_contagem;\nfunction validate_iptu_sp(value) {\n    var number = validateRemoveDigito(value, 12);\n    if (!number) {\n        return false;\n    }\n    var dv = iptu_create_1.IPTUCREATE['sao-paulo']['sao-paulo'](number);\n    return parseInt(value[value.length - 1]) === dv;\n}\nexports.validate_iptu_sp = validate_iptu_sp;\n// export function validate_iptu(iptu: string) {\n//   let iptuClean = iptu.replace(/\\./g, '');\n//   iptuClean = iptuClean.replace(/-/g, '');\n//   const exp = /[a-z]{2}\\-\\d{2}\\.\\d{3}\\.\\d{3}/;\n//   const expClean = /[a-z]{2}\\d{8}/;\n//   const state = iptu.substr(0, 2).toUpperCase();\n//   if (!exp.test(iptu) && !expClean.test(iptuClean) && !(state in CEPRange)) {\n//     return false;\n//   }\n//   if (IPTU[state]) {\n//     const validateState = IPTU[state];\n//     return validateState(iptu);\n//   }\n//   return true;\n// }\nexports.IPTUVALIDATE = {\n    'sao-paulo': {\n        'sao-paulo': validate_iptu_sp,\n    },\n    'minas-gerais': {\n        'contagem': validate_iptu_contagem,\n    },\n    'parana': {\n        'curitiba': validate_iptu_ctba\n    }\n};\n//# sourceMappingURL=iptu_validate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate_iptu = exports.mask_iptu = exports.create_iptu = void 0;\nvar iptu_validate_1 = require(\"./iptu_validate\");\nvar iptu_mask_1 = require(\"./iptu_mask\");\nvar utils_1 = require(\"./utils\");\nvar iptu_create_1 = require(\"./iptu_create\");\nexports.create_iptu = function (number, estado, cidade) {\n    if (!iptu_create_1.IPTUCREATE[estado] || !iptu_create_1.IPTUCREATE[estado][cidade]) {\n        return true;\n    }\n    number = utils_1.getAllDigits(number);\n    return iptu_create_1.IPTUCREATE[estado][cidade](number);\n};\nexports.mask_iptu = function (number, estado, cidade) {\n    if (!iptu_mask_1.IPTUMASKS[estado] || !iptu_mask_1.IPTUMASKS[estado][cidade]) {\n        return number;\n    }\n    return iptu_mask_1.IPTUMASKS[estado][cidade];\n};\nexports.validate_iptu = function (number, estado, cidade) {\n    if (!iptu_validate_1.IPTUVALIDATE[estado] || !iptu_validate_1.IPTUVALIDATE[estado][cidade]) {\n        return true;\n    }\n    number = utils_1.getAllDigits(number);\n    return iptu_validate_1.IPTUVALIDATE[estado][cidade](number);\n};\n//# sourceMappingURL=iptu.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maskBr = exports.utilsBr = void 0;\nvar utils_1 = require(\"./utils\");\nvar validate_1 = require(\"./validate\");\nObject.defineProperty(exports, \"validateBr\", { enumerable: true, get: function () { return validate_1.validateBr; } });\nvar mask = require(\"./mask\");\nvar mask_1 = require(\"./mask\");\nvar placa_1 = require(\"./placa\");\nvar estados_1 = require(\"./estados\");\nexports.utilsBr = {\n    isPresent: utils_1.isPresent,\n    isArray: utils_1.isArray,\n    isString: utils_1.isString,\n    isNumber: utils_1.isNumber,\n    isNil: utils_1.isNil,\n    processCaretTraps: utils_1.processCaretTraps,\n    allNumbersAreSame: utils_1.allNumbersAreSame,\n    getAllDigits: utils_1.getAllDigits,\n    getAllWords: utils_1.getAllWords,\n    currencyToNumber: utils_1.currencyToNumber,\n    modulo11: utils_1.modulo11,\n    numberToCurrency: utils_1.numberToCurrency,\n    slugify: utils_1.slugify,\n    fillString: utils_1.fillString,\n    randArray: utils_1.randArray,\n    rand: utils_1.rand,\n    randomNumber: utils_1.randomNumber,\n    randomLetter: utils_1.randomLetter,\n    randomLetterOrNumber: utils_1.randomLetterOrNumber,\n    getSpecialProperty: utils_1.getSpecialProperty,\n    MASKS: mask_1.MASKS,\n    MASKSIE: mask_1.MASKSIE,\n    PLACAS_RANGE: placa_1.PLACAS_RANGE,\n    ESTADOS: estados_1.ESTADOS\n};\nexports.maskBr = mask.maskBr;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rg_rj = exports.rg_sp = void 0;\nfunction rg_sp(number) {\n    // if(number.length>8){alert(\"Erro. Não existe RG SP\\ncom mais de 8 dígitos.\");}\n    number = \"0000000\" + number;\n    number = number.slice(number.length - 8);\n    var b1 = parseInt(number.slice(7));\n    var b2 = parseInt(number.slice(6, 7));\n    var b3 = parseInt(number.slice(5, 6));\n    var b4 = parseInt(number.slice(4, 5));\n    var b5 = parseInt(number.slice(3, 4));\n    var b6 = parseInt(number.slice(2, 3));\n    var b7 = parseInt(number.slice(1, 2));\n    var b8 = parseInt(number.slice(0, 1));\n    var cispDig = (b1 * 2 + b2 * 3 + b3 * 4 + b4 * 5 + b5 * 6 + b6 * 7 + b7 * 8 + b8 * 9) % 11;\n    if (cispDig == 10) {\n        cispDig = \"X\";\n    }\n    return cispDig;\n}\nexports.rg_sp = rg_sp;\nfunction rg_rj(number) {\n    // if(number.length>8){alert(\"Erro. Não existe RG-RJ/MaSP-MG\\ncom mais de 8 dígitos.\");}\n    number = \"0000000\" + number;\n    number = number.slice(number.length - 8);\n    var b1 = parseInt(number.slice(7));\n    var b2 = parseInt(number.slice(6, 7));\n    var b3 = parseInt(number.slice(5, 6));\n    var b4 = parseInt(number.slice(4, 5));\n    var b5 = parseInt(number.slice(3, 4));\n    var b6 = parseInt(number.slice(2, 3));\n    var b7 = parseInt(number.slice(1, 2));\n    var b8 = parseInt(number.slice(0, 1));\n    var ci7 = b1 * 2;\n    if (ci7 > 9) {\n        ci7 = ci7 - 9;\n    }\n    var ci56 = b3 * 2;\n    if (ci56 > 9) {\n        ci56 = ci56 - 9;\n    }\n    var ci34 = b5 * 2;\n    if (ci34 > 9) {\n        ci34 = ci34 - 9;\n    }\n    var ci12 = b7 * 2;\n    if (ci12 > 9) {\n        ci12 = ci12 - 9;\n    }\n    var ci67 = b2;\n    var ci45 = b4;\n    var ci23 = b6;\n    var ci01 = b8;\n    var cirjDig = (ci7 + ci56 + ci34 + ci12 + ci67 + ci45 + ci23 + ci01) % 10;\n    cirjDig = 10 - cirjDig;\n    if (cirjDig == 10) {\n        cirjDig = 0;\n    }\n    return cirjDig;\n}\nexports.rg_rj = rg_rj;\nvar RG = {\n    sp: rg_sp,\n    rj: rg_rj\n};\nexports.default = RG;\n//# sourceMappingURL=rg.js.map"],"sourceRoot":"webpack:///"}