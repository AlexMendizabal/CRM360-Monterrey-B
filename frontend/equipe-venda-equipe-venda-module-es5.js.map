{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/equipe-venda/formulario/formulario.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/equipe-venda/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/equipe-venda-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/equipe-venda.module.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/equipe-venda/formulario/formulario.component.html"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialService","http","API","params","httpParams","param","append","get","pipe","id","codCliente","ComercialCadastrosEquipeVendaListaComponent","activatedRoute","router","location","formBuilder","equipeVendaService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","comercialService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setEquipeVendaSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","dsEquipeVenda","codEquipeVenda","codSituacao","pagina","registros","required","checkOrder","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","equipeVendaSelecionado","codCarteira","situacao","codUsuario","nomeUsuario","dataCadastro","codReferenteErp","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaEquipesVenda","next","response","hasOwnProperty","success","data","slice","error","mensagem","equipeVenda","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateEquipeVenda","refreshMainData","showConfirm","confirmInactive","inactivateEquipeVenda","i","selector","template","ComercialCadastrosEquipeVendaFormularioComponent","descEquipeERP","formChanged","setFormBuilder","getFormFields","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","getListaEquipesERP","unshift","codEquipe","confirm","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosEquipeVendaModuleRoutingModule","imports","forChild","exports","FormDeactivateGuard","route","state","formCanDeactivate","ComercialCadastrosEquipeVendaModule","declarations","forRoot","providers","ComercialCadastrosEquipeVendaFormularioResolverGuard","getDetalhes","nomeCarteira"],"mappings":"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","file":"equipe-venda-equipe-venda-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9lcXVpcGUtdmVuZGEvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9lcXVpcGUtdmVuZGEvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Equipe de Vendas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n    <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-7\\\">\\r\\n              <label for=\\\"dsEquipeVenda\\\">Equipe de Venda</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"dsEquipeVenda\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n                <option value=\\\"2\\\">Inativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Equipe de Vendas</th>\\r\\n            <!-- <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th> -->\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let equipeVenda of dadosPagination; let i = index\\\" [class.table-active]=\\\"equipeVenda.codEquipeVenda == equipeVendaSelecionado.codEquipeVenda\\\">\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(equipeVenda)\\\"\\r\\n              (click)=\\\"onDetails(equipeVenda)\\\">\\r\\n              {{ equipeVenda.dsEquipeVenda | uppercase }}\\r\\n            </td>\\r\\n            <!-- <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(equipeVenda)\\\">\\r\\n              {{ equipeVenda.situacao | uppercase }}\\r\\n            </td> -->\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"equipeVenda.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, equipeVenda)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"equipeVenda.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, equipeVenda)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(equipeVenda)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n              <th scope=\\\"col\\\">Usuário</th>\\r\\n              <th scope=\\\"col\\\">Alteração</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n              <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n              <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosEquipeVendaService } from '../equipe-venda.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from '../../../comercial.service';\r\n\r\n// Interfaces\r\nimport { EquipeVenda } from '../models/equipe-venda';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-equipe-venda-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialCadastrosEquipeVendaListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codEquipeVenda';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<EquipeVenda> = [];\r\n  dadosPagination: Array<EquipeVenda> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  equipeVendaSelecionado: EquipeVenda;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private equipeVendaService: ComercialCadastrosEquipeVendaService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Equipe de Venda');\r\n    this.onDetailPanelEmitter();\r\n    this.setEquipeVendaSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Equipe de Venda'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      dsEquipeVenda: [formValue.dsEquipeVenda],\r\n      codEquipeVenda: [formValue.codEquipeVenda],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required]\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      dsEquipeVenda: null,\r\n      codSituacao: 1,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setEquipeVendaSelecionado(): void {\r\n    this.equipeVendaSelecionado = {\r\n      codEquipeVenda: -1,\r\n      dsEquipeVenda: null,\r\n      codCarteira: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null,\r\n      codReferenteErp:null\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.dsEquipeVenda) {\r\n      params.dsEquipeVenda = this.form.value.dsEquipeVenda;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.equipeVendaService\r\n      .getListaEquipesVenda(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(equipeVenda: EquipeVenda): string {\r\n    let borderClass: string;\r\n\r\n    if (equipeVenda.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (equipeVenda.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onDetails(equipeVenda: EquipeVenda): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setEquipeVendaSelecionado();\r\n    this.equipeVendaSelecionado = equipeVenda;\r\n    this.alteracoes = [];\r\n\r\n    this.equipeVendaService\r\n      .getAlteracoes(equipeVenda.codEquipeVenda)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(equipeVenda: EquipeVenda): void {\r\n    this.router.navigate(['../editar', equipeVenda.codEquipeVenda], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, equipeVenda: EquipeVenda): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.activateEquipeVenda(index, equipeVenda) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(equipeVenda);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateEquipeVenda(\r\n    index: number,\r\n    equipeVenda: EquipeVenda\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.equipeVendaService.activateEquipeVenda(\r\n      equipeVenda.codEquipeVenda\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, equipeVenda: EquipeVenda): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result ? this.inactivateEquipeVenda(index, equipeVenda) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(equipeVenda);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateEquipeVenda(\r\n    index: number,\r\n    equipeVenda: EquipeVenda\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.equipeVendaService.inactivateEquipeVenda(\r\n      equipeVenda.codEquipeVenda\r\n    );\r\n  }\r\n\r\n  refreshMainData(equipeVenda: EquipeVenda): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (equipeVenda.codEquipeVenda === this.dados[i].codEquipeVenda) {\r\n        this.dados[i].codSituacao = equipeVenda.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosEquipeVendaService } from '../equipe-venda.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { EquipeVenda } from '../models/equipe-venda';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-equipe-venda-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialCadastrosEquipeVendaFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  descEquipeERP: Array<any> = [];\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private equipeVendaService: ComercialCadastrosEquipeVendaService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.getFormFields();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Equipe de Venda';\r\n      } else {\r\n        this.appTitle = 'Nova Equipe de Venda';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Equipe de Venda',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/equipe-venda/lista`\r\n        },\r\n        {\r\n          descricao: this.appTitle\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: EquipeVenda = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codEquipeVenda: [detalhes.codEquipeVenda],\r\n        dsEquipeVenda: [detalhes.dsEquipeVenda, [Validators.required]],\r\n        codReferenteErp:[\r\n          detalhes.codReferenteErp,\r\n          [Validators.required],\r\n        ],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.equipeVendaService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.loaderFullScreen = true;\r\n\r\n    this.equipeVendaService\r\n      .getListaEquipesERP()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.success === true) {\r\n          this.descEquipeERP = response.data;\r\n\r\n          this.descEquipeERP.unshift({\r\n            codEquipe: 0,\r\n            descricao: 'NENHUM',\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosEquipeVendaFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosEquipeVendaListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosEquipeVendaFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosEquipeVendaListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosEquipeVendaFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosEquipeVendaFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosEquipeVendaFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosEquipeVendaFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosEquipeVendaModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosEquipeVendaModuleRoutingModule } from './equipe-venda-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosEquipeVendaListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosEquipeVendaFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosEquipeVendaListaComponent,\r\n    ComercialCadastrosEquipeVendaFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosEquipeVendaModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosEquipeVendaModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosEquipeVendaService } from '../equipe-venda.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosEquipeVendaFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private equipeVendaService: ComercialCadastrosEquipeVendaService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.equipeVendaService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codEquipeVenda: null,\r\n        codCarteira: null,\r\n        nomeCarteira: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"dsEquipeVenda\\\">Equipe de Venda</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dsEquipeVenda\\\"\\r\\n              formControlName=\\\"dsEquipeVenda\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('dsEquipeVenda') + ' ' + onFieldRequired(form.controls.dsEquipeVenda)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dsEquipeVenda')\\\" message=\\\"Nome da Equipe é obrigatória.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label for=\\\"codReferenteErp\\\">Equipe de Venda no ERP</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"descEquipeERP\\\"\\r\\n              formControlName=\\\"codReferenteErp\\\"\\r\\n              labelForId=\\\"codReferenteErp\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"codEquipe\\\"\\r\\n              [ngClass]=\\\"onFieldError('codReferenteErp') + ' ' + onFieldRequired(form.controls.codReferenteErp)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\\r\\n\";"]}