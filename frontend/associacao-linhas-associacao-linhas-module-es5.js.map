{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/associacao-linhas/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/lista/lista.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/associacao-linhas-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/associacao-linhas/associacao-linhas.module.ts"],"names":["ComercialCadastrosAssociacaoLinhasFormularioResolverGuard","associacaoLinhasService","route","params","id","getDetalhes","ID_LINH","IN_STAT","success","mensagem","data","NM_LINH","setores","providedIn","ComercialCadastrosAssociacaoLinhasFormularioComponent","activatedRoute","router","location","formBuilder","setoresLinhaService","pnotifyService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocSetores","fixedHeader","bodyHeight","hover","tableConfigSetores","codLinha","formChanged","showSetores","linhas","classes","filteredClasses","setoresFilter","toggleAll","searching","firstSearch","setoresFilterLoaded","setoresLista","setoresListaLoaded","setoresListaEmpty","getPNotify","registrarAcesso","setBreadCrumb","setFormBuilder","getSetores","getSetoresFilter","setFormSetores","setTitle","subscribe","appTitle","descricao","routerLink","idSubModulo","resolver","snapshot","detalhes","console","log","body","setoresAssociados","form","group","value","disabled","required","assocSetores","array","setSetores","error","back","formSetores","ID_SETO_ATIV","length","i","onAddSetor","get","pipe","response","status","setor","manipulateForm","checkSetorExists","push","DESCRICAO","ID","setTimeout","markAsTouched","markAsDirty","some","el","clear","index","confirmDelete","deleteSetor","showConfirm","removeAt","setoresLoader","next","hasOwnProperty","valid","loaderNavbar","map","o","Object","assign","checked","notice","field","onFieldInvalid","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","submittingForm","save","reset","navigateTo","navigate","relativeTo","confirm","selector","template","ComercialCadastrosAssociacaoLinhasListaComponent","detailPanelService","subtitles","text","color","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","linhasLoaded","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","getLinhas","onDetailPanelEmitter","setLinhaSelecionada","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","linhaSelecionada","situacao","codUsuario","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaLinhas","slice","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","linha","getAssociacoesSetores","show","detailPanelTitle","loadedFinished","FormDeactivateGuard","component","state","formCanDeactivate","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosAssociacaoLinhasRoutingModule","imports","forChild","exports","ComercialCadastrosAssociacaoLinhasModule","declarations","providers"],"mappings":"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","file":"associacao-linhas-associacao-linhas-module-es5.js","sourcesContent":["export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos de línea</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"NM_LINH\\\">Nombre de línea</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"NM_LINH\\\"\\r\\n              formControlName=\\\"NM_LINH\\\"\\r\\n              autocomplete=\\\"new-password\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"assocSetores\\\">\\r\\n          <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Sectores asociados a línea</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparAssociacoes()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpiar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showSetores && form.value.assocSetores.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table [config]=\\\"tableConfigAssocSetores\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Setor</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let setor of assocSetores.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 95%\\\">\\r\\n                      {{ form.value.assocSetores[i].ID_SETO_ATIV }} - {{ form.value.assocSetores[i].DESCRICAO | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteSetor(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showSetores && form.value.assocSetores.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Búsqueda de sectores</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"onFilterSetores()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              <span>Buscar</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formSetores\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"setoresFilter\\\">Sector empresarial</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"setoresFilter\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"setoresFilterLoaded\\\"\\r\\n                labelForId=\\\"ID_SETO_ATIV\\\"\\r\\n                bindLabel=\\\"DESCRICAO\\\"\\r\\n                bindValue=\\\"ID_SETO_ATIV\\\"\\r\\n                id=\\\"ID_SETO_ATIV\\\"\\r\\n                formControlName=\\\"ID_SETO_ATIV\\\"\\r\\n                >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"setoresLista.length > 0\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Selección de sectores</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarSetores()\\\"\\r\\n                [disabled]=\\\"searching === true\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span>Asociar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigSetores\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll()\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Sector de actividades</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let setor of setoresLista; let i = index;\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"setor.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onCheckSetor(i, setor)\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 95%\\\"\\r\\n                    (click)=\\\"onCheckSetor(i, setor)\\\">\\r\\n                    {{ setor.DESCRICAO | uppercase }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos pesquisando os setores para você...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searching === false\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"setoresListaEmpty && setoresListaLoaded\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"Nenhuma informação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"setoresLista.length === 0 && !firstSearch\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-search\\\"\\r\\n              text=\\\"Preecha o campo acima para filtrar o setor\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9hc3NvY2lhY2FvLWxpbmhhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Linhas\\\">\\r\\n  <!-- <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button> -->\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"linhas\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                dropdownPosition=\\\"bottom\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [loading]=\\\"linhasLoaded\\\"\\r\\n                labelForId=\\\"ID_LINH\\\"\\r\\n                bindLabel=\\\"NM_LINH\\\"\\r\\n                bindValue=\\\"ID_LINH\\\"\\r\\n                id=\\\"ID_LINH\\\"\\r\\n                formControlName=\\\"ID_LINH\\\"\\r\\n                >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">Código</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">Nome da Linha</th>\\r\\n            <th style=\\\"width:40px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let linha of dadosPagination; let i = index;\\\" [class.table-active]=\\\"linha.ID_LINH == linhaSelecionada.ID_LINH && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(linha)\\\">\\r\\n              {{ linha.ID_LINH }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(linha)\\\">\\r\\n              {{ linha.NM_LINH | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(linha)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigSetores\\\" *ngIf=\\\"setores.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Sector empresarial</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data de Alteração</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let setor of setores\\\">\\r\\n              <td class=\\\"text-center\\\">{{ setor.ID_SETO_ATIV }}</td>\\r\\n              <td>{{ setor.DESCRICAO | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ setor.DT_INCL | date : 'dd/MM/yyyy'}}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosAssociacaoLinhasService } from '../associacao-linhas.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosAssociacaoLinhasFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private associacaoLinhasService: ComercialCadastrosAssociacaoLinhasService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.associacaoLinhasService.getDetalhes({\r\n        ID_LINH: route.params.id,\r\n        IN_STAT:1,\r\n      });\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        ID_LINH: null,\r\n        NM_LINH: null,\r\n        setores: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosAssociacaoLinhasService } from '../associacao-linhas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { ILinha } from '../models/associacao-linhas';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-associacao-linhas-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosAssociacaoLinhasFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocSetores: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigSetores: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  codLinha: number = null;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  showSetores = true;\r\n\r\n  formSetores: FormGroup;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n  setores: Array<any> = [];\r\n  setoresLoader: boolean;\r\n  setoresFilter: Array<any> = [];\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n  setoresFilterLoaded = false;\r\n  setoresLista: Array<any> = [];\r\n  setoresListaLoaded = false;\r\n  setoresListaEmpty = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private setoresLinhaService: ComercialCadastrosAssociacaoLinhasService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.getSetores();\r\n    this.getSetoresFilter();\r\n    this.setFormSetores();\r\n    this.titleService.setTitle('Cadastro de linha de setores');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Linha';\r\n      } else {\r\n        this.appTitle = 'Nova Linha';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Linhas',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/associacao-linhas/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n    console.log(resolver);\r\n    if (resolver.body.success === true) {\r\n      const detalhes: ILinha = resolver.body.data[0];\r\n      const setoresAssociados: ILinha = resolver.body.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        ID_LINH: [detalhes.ID_LINH],\r\n        NM_LINH: [{ value: [detalhes.NM_LINH], disabled: true }, [Validators.required]],\r\n        assocSetores: this.formBuilder.array([]),\r\n      });\r\n      this.setSetores(setoresAssociados);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setFormSetores(): void {\r\n    this.formSetores = this.formBuilder.group({\r\n      ID_SETO_ATIV: [null],\r\n    });\r\n  }\r\n\r\n  setSetores(setores: any): void {\r\n    if (setores.length > 0) {\r\n      for (let i = 0; i < setores.length; i++) {\r\n        this.onAddSetor(setores[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocSetores(): FormArray {\r\n    return this.form.get('assocSetores') as FormArray;\r\n  }\r\n\r\n  getSetoresFilter(params?) {\r\n    this.setoresFilterLoaded = true;\r\n\r\n    this.setoresLinhaService\r\n      .getSetoresFilter()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.setoresFilterLoaded = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.setoresFilter = response.body['data'];\r\n        }\r\n      });\r\n  }\r\n\r\n  onAddSetor(setor: any, manipulateForm?: boolean): void {\r\n    if (this.checkSetorExists(setor) === false) {\r\n      this.assocSetores.push(\r\n        this.formBuilder.group({\r\n          ID_SETO_ATIV: [setor.ID_SETO_ATIV],\r\n          DESCRICAO: [setor.DESCRICAO],\r\n          ID: [setor.ID],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocSetores.length > 9) {\r\n        if (this.tableConfigAssocSetores.fixedHeader === false) {\r\n          this.showSetores = false;\r\n          this.tableConfigAssocSetores.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showSetores = true;\r\n          }, 1);\r\n        }\r\n\r\n        if (manipulateForm) {\r\n          this.form.markAsTouched();\r\n          this.form.markAsDirty();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkSetorExists(setor: any): boolean {\r\n    return this.form.value.assocSetores.some((el: any) => {\r\n      return el.ID_SETO_ATIV === setor.ID_SETO_ATIV;\r\n    });\r\n  }\r\n\r\n  onLimparAssociacoes(): void {\r\n    const assocSetores = this.form.get('assocSetores') as FormArray;\r\n    assocSetores.clear();\r\n  }\r\n\r\n  onDeleteSetor(index: number): void {\r\n    this.confirmDelete().subscribe((response: boolean) =>\r\n      response ? this.deleteSetor(index) : null\r\n    );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteSetor(index: number) {\r\n    this.assocSetores.removeAt(index);\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  getSetores(): void {\r\n    this.setoresLinhaService\r\n      .getSetores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n          this.setoresLoader = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          this.loaderFullScreen = false;\r\n          if (response.status === 200) {\r\n            this.setores = response.body['data'];\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onFilterSetores(): void {\r\n    if (this.formSetores.valid) {\r\n      this.loaderNavbar = true;\r\n      this.searching = true;\r\n      this.setoresLista = [];\r\n      this.setoresListaLoaded = false;\r\n      this.setoresListaEmpty = false;\r\n      let params;\r\n\r\n      if (this.formSetores.value.ID_SETO_ATIV) {\r\n        params = { ID_SETO_ATIV: this.formSetores.value.ID_SETO_ATIV};\r\n      } else {\r\n        params = { ID_SETO_ATIV: ''};\r\n      }\r\n      this.setoresLinhaService\r\n        .getSetores(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.firstSearch = true;\r\n            this.searching = false;\r\n            this.loaderNavbar = false;\r\n            this.setoresListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.setoresLista = response.data.map(function (el: any) {\r\n                var o = Object.assign({}, el);\r\n                o.checked = 0;\r\n                return o;\r\n              });\r\n              if (this.setoresLista.length > 9) {\r\n                this.tableConfigSetores.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigSetores.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.setoresListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.setoresListaEmpty = true;\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n                if(this.formSetores.value.ID_SETO_ATIV){\r\n                  this.pnotifyService.notice('Setor pesquisado não está disponivel para associação');\r\n                }else{\r\n                  this.pnotifyService.error()\r\n                }\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n\r\n    for (let index = 0; index < this.setoresLista.length; index++) {\r\n      this.setoresLista[index].checked = this.toggleAll === true ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  onCheckSetor(index: number, setor: any): void {\r\n    this.setoresLista[index].checked = setor.checked == 0 ? 1 : 0;\r\n  }\r\n\r\n  onAssociarSetores(): void {\r\n    this.toggleAll = false;\r\n\r\n    for (let index = 0; index < this.setoresLista.length; index++) {\r\n      if (this.setoresLista[index].checked === 1) {\r\n        const setor = {\r\n          ID_SETO_ATIV: this.setoresLista[index].ID_SETO_ATIV,\r\n          DESCRICAO: this.setoresLista[index].DESCRICAO,\r\n        };\r\n\r\n        this.onAddSetor(setor, true);\r\n        this.setoresLista[index].checked = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      if (this.form.value.assocSetores.length > 0) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.setoresLinhaService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  let navigateTo: string;\r\n\r\n                  if (params.hasOwnProperty('id')) {\r\n                    navigateTo = '../../lista';\r\n                  } else {\r\n                    navigateTo = '../lista';\r\n                  }\r\n\r\n                  this.router.navigate([navigateTo], {\r\n                    relativeTo: this.activatedRoute,\r\n                  });\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.error(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      } else {\r\n        this.pnotifyService.notice('Associe pelo menos um setor.');\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9hc3NvY2lhY2FvLWxpbmhhcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosAssociacaoLinhasService } from '../associacao-linhas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ILinha } from '../models/associacao-linhas';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-associacao-linhas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosAssociacaoLinhasListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  // tableConfig: Partial<CustomTableConfig> = {\r\n  //   subtitleBorder: true,\r\n  // };\r\n\r\n  tableConfigSetores: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'NM_LINH';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  linhas: Array<ILinha> = [];\r\n  linhasLoaded = false;\r\n  dados: Array<ILinha> = [];\r\n  dadosPagination: Array<ILinha> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  linhaSelecionada: ILinha;\r\n  setores: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private setoresLinhaService: ComercialCadastrosAssociacaoLinhasService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.getLinhas();\r\n    this.titleService.setTitle('Linhas');\r\n    this.onDetailPanelEmitter();\r\n    this.setLinhaSelecionada();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Linhas',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      ID_LINH: [formValue.ID_LINH],\r\n      IN_STAT: [formValue.IN_STAT],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      ID_LINH: null,\r\n      NM_LINH: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setLinhaSelecionada(): void {\r\n    this.linhaSelecionada = {\r\n      DESCRICAO: null,\r\n      ID_SETO_ATIV: null,\r\n      ID_LINH: null,\r\n      NM_LINH: null,\r\n      IN_STAT: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      setores: [],\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    // if (this.form.value.linha) {\r\n    //   params.ID_SETO_ATIV = this.form.value.ID_SETO_ATIV;\r\n    // }\r\n\r\n    if (this.form.value.ID_LINH) {\r\n      params.ID_LINH = this.form.value.ID_LINH;\r\n    }\r\n\r\n    if (this.form.value.IN_STAT) {\r\n      params.IN_STAT = this.form.value.IN_STAT;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.setoresLinhaService\r\n      .getListaLinhas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = false;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getLinhas(params?) {\r\n    this.linhasLoaded = true;\r\n    this.setoresLinhaService\r\n      .getLinhas()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.linhasLoaded = false;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.status === 200) {\r\n          this.linhas = response.body['data'];\r\n        }\r\n      });\r\n  }\r\n\r\n  // classStatusBorder(linha: ILinha): string {\r\n  //   let borderClass: string;\r\n\r\n  //   if (linha.IN_STAT === 0) {\r\n  //     borderClass = 'border-danger';\r\n  //   } else if (linha.IN_STAT === 1) {\r\n  //     borderClass = 'border-success';\r\n  //   }\r\n\r\n  //   return borderClass;\r\n  // }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(linha: ILinha): void {\r\n    this.getAssociacoesSetores({\r\n      ID_LINH: linha.ID_LINH,\r\n      IN_STAT:1,\r\n    });\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Setores associados (${linha.NM_LINH})`;\r\n    this.setLinhaSelecionada();\r\n    this.linhaSelecionada = linha;\r\n    this.setores = [];\r\n  }\r\n\r\n  getAssociacoesSetores(params: Partial<ILinha>) {\r\n    this.setoresLinhaService\r\n      .getAssociacoesSetores(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.status === 200) {\r\n            this.setores = response.body['data'];\r\n            this.detailPanelService.loadedFinished(false);\r\n          } else {\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(linha: Partial<ILinha>): void {\r\n    this.router.navigate(['../editar', linha.ID_LINH], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  refreshMainData(linha: ILinha): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (linha.ID_LINH === this.dados[i].ID_LINH) {\r\n        this.dados[i].IN_STAT = linha.IN_STAT;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosAssociacaoLinhasFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosAssociacaoLinhasListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosAssociacaoLinhasFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosAssociacaoLinhasListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosAssociacaoLinhasFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosAssociacaoLinhasFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosAssociacaoLinhasFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosAssociacaoLinhasFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosAssociacaoLinhasRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosAssociacaoLinhasRoutingModule } from './associacao-linhas-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosAssociacaoLinhasListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosAssociacaoLinhasFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosAssociacaoLinhasService } from './associacao-linhas.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosAssociacaoLinhasListaComponent,\r\n    ComercialCadastrosAssociacaoLinhasFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosAssociacaoLinhasRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosAssociacaoLinhasService],\r\n})\r\nexport class ComercialCadastrosAssociacaoLinhasModule {}\r\n"]}