{"version":3,"sources":["webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-carteira/modal-carteira.component.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-vendas-realizadas/modal-vendas-realizadas.component.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-carteira/modal-carteira.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-vendas-realizadas/modal-vendas-realizadas.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-estoque-comprometido/modal-estoque-comprometido.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/analise-compras.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-carteira/modal-carteira.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/analise-compras.component.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-estoque-suspenso/modal-estoque-suspenso.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-nivel-estoque/modal-nivel-estoque.component.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-estoque-suspenso/modal-estoque-suspenso.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-estoque-comprometido/modal-estoque-comprometido.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-estoque-suspenso/modal-estoque-suspenso.component.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-nivel-estoque/modal-nivel-estoque.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-vendas-perdidas/modal-vendas-perdidas.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-vendas-realizadas/modal-vendas-realizadas.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-nivel-estoque/modal-nivel-estoque.component.html","webpack:///src/app/modules/abastecimento/monitores/analise-compras/analise-compras-routing.module.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-vendas-perdidas/modal-vendas-perdidas.component.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/analise-compras.module.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/analise-compras.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-vendas-perdidas/modal-vendas-perdidas.component.scss","webpack:///src/app/modules/abastecimento/monitores/analise-compras/modal-estoque-comprometido/modal-estoque-comprometido.component.ts","webpack:///src/app/modules/abastecimento/monitores/analise-compras/analise-compras.service.ts"],"names":["AbastecimentoMonitoresAnaliseComprasModalCarteiraComponent","formBuilder","localeService","routerService","activatedRoute","dateService","service","pnotifyService","loadingDetalhesModal","noResultModal","loaderBody","enableTabAbastFornecedor","enableTabAbastInterno","empresas","depositos","pedidoPai","dataPedido","pedidoRemessa","previsaoEntrega","fornecedor","modal","dadosExcel","dadosCarteiraDetalhe","dadosCarteiraDetalhesAbastGeralTT","dadosCarteiraDetalhesAbastGeralFull","dadosCarteiraDetalhesAbastGeral","dadosCarteiraDetalhesAbastInterno","dadosCarteiraDetalhesAbastTotal","dadosCarteiraDetalhesAbastFornecedor","reverseA","keyA","reverseB","keyB","reverseC","keyC","itemsPerPage","currentPageA","beginA","endA","currentPageB","beginB","endB","currentPageC","beginC","endC","currentUser","JSON","parse","localStorage","getItem","idUsuario","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","form","group","codMaterial","item","ID_REFE_ERP","descMaterial","NM_MATE","unidadeMedida","NM_UNID_MEDI","resetValuesForm","setParamsCarteira","get","reset","queryParams","getBase64UrlParams","snapshot","params","tipoVisualizacao","idMaterial","idMesAno","idEmpresa","idDeposito","ID_EMPR","ID_DEPO","NM_MES_ANO","ID_MATE","NM_EMPR","NM_DEPO","NR_PEDI_ORIG","DT_PEDI_ORIG","NR_PEDI_REME","DT_PREV_ENTR","NM_FORN","getCarteiraDetalhes","pipe","subscribe","res","keys","length","shift","undefined","disable","notice","error","success","setDateValid","value","IN_GERA_RELA_EXCE","ID_USUA","getCarteiraDetalhesExcel","date","Date","convertToUrlDate","event","page","selector","template","AbastecimentoMonitoresAnaliseComprasModalVendasRealizadasComponent","compararDataFinal","compararDataInicial","compararDataFinalAtual","proposta","dataEntrada","dataEncerramento","cliente","dadosVendasRealDetalhesModalFull","dadosVendasRealDetalhesModal","dadosVendasRealDetalhesModalTotal","dataInicial","dataFinal","numeroNF","dataNF","vendedor","setParamsVendasRealizadas","dataInicialParam","dataFinalParam","mesAno","replace","primeiroDia","getFullYear","getMonth","ultimoDia","primeiroDiaC","ultimoDiaC","split","reverse","join","dataInicialC","dataFinalC","DT_INIC","DT_FINA","NR_NOTA_FISC","DT_NOTA_FISC","NM_CLIE","NM_VEND","getVendasRealizadasDetalhes","setValue","getVendasRealizadasDetalhesExcel","stra","strb","now","AbastecimentoMonitoresAnaliseComprasComponent","router","atividadesService","titleService","loaderFullScreen","loading","noResult","ativarCampoData","depositoBool","linhaBool","subLinhaBool","classeBool","uniMedidaBool","bitolaBool","larguraBool","comprimentoBool","qualidadeBool","revestimentoBool","tipoAcoBool","estAtualBool","estComprBool","estSuspBool","colsCarteira","colsVendasReal","colsVendasPerd","colsEstoque","nivelEstBool","carteiraBool","vendasRealBool","vendasPerdBool","estoqueCompBool","estoqueSuspBool","loadingDetalhesNivelEstoque","breadCrumbTree","linhas","subLinhas","classes","dados","dadosFull","dadosTotalizadores","dadosVendasRealDetalhe","dadosDetalhesNivelEstoqueModal","dadosVendasPerdDetalhe","colsInfAdicionais","depositosAssociados","tiposMateriais","tiposNiveisEstoques","materiais","itemEstoqueSupenso","itemEstoqueComprometido","itemVendasPerdidas","itemVendasRealizadas","itemCarteira","itemNivelEstoque","colsMat","colsEst","colsCar","colsVenRea","colsVenPed","key","itemsPerPageParam","totalItems","currentPage","numberOfItems","arrayDepositos","periodosBusca","id","nome","situacoes","infAdicionaisDados","tiposVisualizacao","tableConfig","subtitleBorder","subtitles","text","color","nivelEstoque","tipoMaterial","linha","required","subLinha","classe","material","paramData","infAdicionais","situacao","qtItensPagina","pagina","orderBy","orderType","setValueParamData","setTimeout","registrarAcesso","setBreadCrumb","setTitle","checkRouterParams","getTiposMateriais","getTiposNiveisEstoque","getInfAdicionais","getLinhas","enabledDate","descricao","routerLink","loaderNavbar","campos","setFormDisable","idSituacao","status","setFormReset","descricaoLinhas","getSubLinhas","setFormEnable","idSubLinha","getClasses","idClasses","idTipoMaterial","getMateriais","responseCode","result","idLinhas","getDepositosAssociados","param","idsEmpresa","getDepositos","getArrayDepositos","depositosFiltrados","forEach","deposito","element","d","push","resetColsInfAdicionais","getAnaliseCompras","setColsInfAdicionaisTrue","setColsMesAno","colunasCarteira","e","match","substring","row","header","selects","enable","$activatedRouteSubscription","_response","setFormValues","unsubscribe","getDadosForm","patchValue","camposReset","camposDisable","setRouterParams","navigate","relativeTo","setBase64UrlParams","title","idMesAnoCarteira","idMesAnoVendasRealizadas","idMesAnoVendasPerdidas","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","disabledDate","campoData","today","getLastThreeMonthsDay","setMonth","relatorioExcel","getAnaliseComprasExcel","i","border","onFilter","AbastecimentoMonitoresAnaliseComprasModalNivelEstoqueComponent","setParamsNivelEstoque","getNivelEstoqueDetalhes","getNiveisEstoqueDetalhes","AbastecimentoMonitoresAnaliseComprasModalEstoqueSuspensoComponent","estoqueSupensoGeralEmpty","estoqueSupensoEntradaMaterialEmpty","notaFiscal","usuario","lote","dadosEstoqueSuspensoGeral","dadosEstoqueSuspensoGeralFull","dadosEstoqueSuspensoGeralTotal","dadosEstoqueSuspensoInventario","dadosEstoqueSuspensoInventarioFull","dadosEstoqueSuspensoInventarioTotal","dadosEstoqueSuspensoEntradaMaterial","dadosEstoqueSuspensoEntradaMaterialFull","dadosEstoqueSuspensoEntradaMaterialTotal","motivo","DS_MOTI","DT_ENTR","NR_PAGE_INIC","TT_REGI_PAGI","ORDE_BY","ORDE_TYPE","getEstoqueSuspenso","getEstoqueSuspensoExcel","getEstoqueSupensoGeral","getEstoqueSupensoEntrada","DateService","months","weeks","dateA","dateB","getDate","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","h","toString","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","providedIn","routes","path","component","AbastecimentoMonitoresAnaliseComprasRoutingModule","imports","forChild","exports","AbastecimentoMonitoresAnaliseComprasModalVendasPerdidasComponent","dadosVendasPerdDetalhesModalFull","dadosVendasPerdDetalhesModal","dadosVendasPerdDetalhesModalTotal","setParamsVendasPerdidas","NR_PROP","DT_ENCE_PROP","getVendasPerdidasDetalhes","getVendasPerdidasDetalhesExcel","AbastecimentoMonitoresAnaliseComprasModule","declarations","forRoot","providers","provide","useValue","AbastecimentoMonitoresAnaliseCompraModalEstoqueComprometidoComponent","estoqueComprometidoPedidoVendasEmpty","estoqueComprometidoPlanoCorteEmpty","numero","itemFiltro","data","dadosEstoqueComprometidoPedidoVendas","dadosEstoqueComprometidoPedidoVendaslFull","dadosEstoqueComprometidoPedidoVendasTotal","dadosEstoqueComprometidoPlanoCorte","dadosEstoqueComprometidoPlanoCorteFull","dadosEstoqueComprometidoPlanoCorteTotal","dataEmissao","NR_PEDI","NR_ITEM_PEDI","DT_EMIS","getEstoqueComprometido","getEstoqueComprometidoExcel","getEstoqueComprometidoPedidoVenda","getEstoqueComprometidoPlanoCorte","AbastecimentoMonitoresAnaliseComprasService","httpClient","BASE_URL","API","ID_CLAS","ID_LINH","ID_APOI_TIPO_MATE","IN_STAT","IN_SELE_COMB","observe","ID_SUB_LINH","idEmpresas","idNivelEstoque","idLinha","idClasse","idInfAdicionais","ID_APOI_NIVE_ESTO","DT_INIC_VEND","DT_FINA_VEND","TP_VISU_PAIN","ID_INFO_ADIC_ATIV","ORDER_BY","IN_DATA_ENCE_PEDI","ID_MOTI_VEND_PERD_REFE_ERP"],"mappings":"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","file":"analise-compras-analise-compras-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n//Converte rota em base64\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from './../analise-compras.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Label } from '@amcharts/amcharts4/core';\r\n\r\n@Component({\r\n  selector: 'abastecimento-monitores-analise-compras-modal-carteira',\r\n  templateUrl: './modal-carteira.component.html',\r\n  styleUrls: ['./modal-carteira.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasModalCarteiraComponent implements OnInit {\r\n\r\n  @Input() item: any;\r\n  @Input() idMesAno: any;\r\n\r\n  loadingDetalhesModal:boolean = false;\r\n  noResultModal:boolean = false;\r\n  loaderBody:boolean = false;\r\n  enableTabAbastFornecedor: boolean = false;\r\n  enableTabAbastInterno: boolean = false;\r\n\r\n  form: FormGroup;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  empresas:any = [];\r\n  depositos:any = [];\r\n  pedidoPai:any = [];\r\n  dataPedido:any = [];\r\n  pedidoRemessa:any = [];\r\n  previsaoEntrega:any = [];\r\n  fornecedor:any = [];\r\n  modal:any = [];\r\n  dadosExcel:any = [];\r\n\r\n  dadosCarteiraDetalhe: any = [];\r\n  dadosCarteiraDetalhesAbastGeralTT: any = [];\r\n  dadosCarteiraDetalhesAbastGeralFull: any = [];\r\n  dadosCarteiraDetalhesAbastGeral: any = [];\r\n  dadosCarteiraDetalhesAbastInterno: any = [];\r\n  dadosCarteiraDetalhesAbastTotal: any = [];\r\n  dadosCarteiraDetalhesAbastFornecedor: any = [];\r\n\r\n  idEmpresa: string;\r\n  idDeposito: string;\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_EMPR';\r\n\r\n  reverseB: boolean = false;\r\n  keyB: string = 'NM_EMPR';\r\n\r\n  reverseC: boolean = false;\r\n  keyC: string = 'NM_EMPR';\r\n\r\n  /* PaginationModal*/\r\n  itemsPerPage = 15;\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n\r\n  currentPageB: number = 1;\r\n  beginB: number = 0;\r\n  endB: number = 15;\r\n\r\n  currentPageC: number = 1;\r\n  beginC: number = 0;\r\n  endC: number = 15;\r\n\r\n  /* dados do usuário */\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n  /* dados do usuário */\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService,\r\n    private pnotifyService: PNotifyService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.form = this.formBuilder.group({\r\n      empresas: [null],\r\n      depositos: [null],\r\n      pedidoPai: [null],\r\n      dataPedido: [null],\r\n      pedidoRemessa: [null],\r\n      previsaoEntrega: [null],\r\n      fornecedor: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.modal.codMaterial = this.item.ID_REFE_ERP;\r\n    this.modal.descMaterial = this.item.NM_MATE;\r\n    this.modal.unidadeMedida = this.item.NM_UNID_MEDI;\r\n    this.resetValuesForm();\r\n    this.setParamsCarteira();\r\n  }\r\n\r\n  resetValuesForm(): void {\r\n    this.form.get('empresas').reset();\r\n    this.form.get('depositos').reset();\r\n    this.form.get('pedidoPai').reset();\r\n    this.form.get('dataPedido').reset();\r\n    this.form.get('pedidoRemessa').reset();\r\n    this.form.get('previsaoEntrega').reset();\r\n    this.form.get('fornecedor').reset();\r\n  }\r\n\r\n  setParamsCarteira(): void {\r\n    let queryParams = this.routerService.getBase64UrlParams(this.activatedRoute.snapshot.queryParams);\r\n\r\n    let params: any = [];\r\n    let tipoVisualizacao = queryParams[\"tipoVisualizacao\"];\r\n    let idMaterial = this.item[\"ID_MATE\"];\r\n    let idMesAno = this.idMesAno;\r\n\r\n    if(tipoVisualizacao == 'S') {\r\n     this.idEmpresa = queryParams[\"empresas\"];\r\n     this.idDeposito = queryParams[\"depositos\"];\r\n    } else if(tipoVisualizacao == 'A') {\r\n      this.idEmpresa = \"\";\r\n      this.idDeposito = this.item[\"ID_DEPO\"];\r\n    }\r\n\r\n    params = {\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: this.idMesAno ? this.idMesAno : \"\",\r\n      ID_MATE: idMaterial ? idMaterial : \"\",\r\n      NM_EMPR: \"\",\r\n      NM_DEPO: \"\",\r\n      NR_PEDI_ORIG: \"\",\r\n      DT_PEDI_ORIG: \"\",\r\n      NR_PEDI_REME: \"\",\r\n      DT_PREV_ENTR: \"\",\r\n      NM_FORN: \"\"\r\n    };\r\n\r\n    this.getCarteiraDetalhes(params);\r\n  }\r\n\r\n  getCarteiraDetalhes(params: any): void {\r\n    this.dadosCarteiraDetalhesAbastFornecedor = [];\r\n    this.dadosCarteiraDetalhesAbastInterno = [];\r\n    this.dadosCarteiraDetalhesAbastGeral = [];\r\n    this.dadosCarteiraDetalhesAbastGeralFull = [];\r\n    this.dadosCarteiraDetalhesAbastGeralTT = [];\r\n    this.loaderBody = true;\r\n    this.noResultModal = false;\r\n    this.loadingDetalhesModal = false;\r\n    this.loadingDetalhesModal = false;\r\n    this.enableTabAbastInterno = false;\r\n    this.enableTabAbastFornecedor = false;\r\n\r\n    this.service.getCarteiraDetalhes(params)\r\n    .pipe(finalize(() => (this.loaderBody = false)))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.loadingDetalhesModal = true;\r\n            this.noResultModal = false;\r\n            this.dadosCarteiraDetalhesAbastFornecedor = res['body']['result']['ABAS_FORN'];\r\n            this.dadosCarteiraDetalhesAbastInterno = res['body']['result']['ABAS_INTE'];\r\n            this.dadosCarteiraDetalhesAbastTotal = res['body']['result']['TOTA_DETA_CART_ABER'];\r\n\r\n            this.dadosCarteiraDetalhesAbastGeralFull = res['body']['result']['INFO_GERA'];\r\n            this.dadosCarteiraDetalhesAbastGeralTT = this.dadosCarteiraDetalhesAbastGeralFull.shift();\r\n            this.dadosCarteiraDetalhesAbastGeral = this.dadosCarteiraDetalhesAbastGeralFull;\r\n            \r\n            if (this.dadosCarteiraDetalhesAbastInterno != (null || undefined)) {\r\n              this.enableTabAbastInterno = true;\r\n            }\r\n            \r\n            if (this.dadosCarteiraDetalhesAbastFornecedor != (null || undefined)) {\r\n              this.enableTabAbastFornecedor = true;\r\n            }\r\n\r\n            if (!this.enableTabAbastInterno && this.enableTabAbastFornecedor) {\r\n              this.form.get('pedidoRemessa').reset();\r\n              this.form.get('pedidoRemessa').disable();\r\n            }\r\n            \r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = false;\r\n            this.noResultModal = true;\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao detalhes de Carteira');\r\n      }\r\n    );\r\n  }\r\n\r\n  getCarteiraDetalhesExcel(params: any): void{\r\n    this.dadosExcel = [];\r\n\r\n    this.service.getCarteiraDetalhes(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200){\r\n            this.dadosExcel = res['body']['result'];\r\n            this.pnotifyService.success(this.dadosExcel);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao detalhes de Carteira');\r\n      }\r\n    );\r\n  }\r\n\r\n  onFilter(): void {\r\n    let dataPedido = this.setDateValid(this.form.value['dataPedido']);\r\n    let previsaoEntrega = this.setDateValid(this.form.value['previsaoEntrega']);\r\n\r\n    let params = {\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: this.idMesAno ? this.idMesAno : \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",    \r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_PEDI_ORIG: this.form.value['pedidoPai'] ? this.form.value['pedidoPai'] : \"\",\r\n      DT_PEDI_ORIG: dataPedido ? dataPedido : \"\",\r\n      NR_PEDI_REME: this.form.value['pedidoRemessa'] ? this.form.value['pedidoRemessa'] : \"\",\r\n      DT_PREV_ENTR: previsaoEntrega ? previsaoEntrega : \"\",\r\n      NM_FORN: this.form.value['fornecedor'] ? this.form.value['fornecedor'] : \"\",\r\n      IN_GERA_RELA_EXCE: \"\",\r\n      ID_USUA: \"\"\r\n    };\r\n\r\n    this.getCarteiraDetalhes(params);                          \r\n  }\r\n\r\n  excelExport(): void {\r\n    let dataPedido = this.setDateValid(this.form.value['dataPedido']);\r\n    let previsaoEntrega = this.setDateValid(this.form.value['previsaoEntrega']);\r\n\r\n    let params = {\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: this.idMesAno ? this.idMesAno : \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",    \r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_PEDI_ORIG: this.form.value['pedidoPai'] ? this.form.value['pedidoPai'] : \"\",\r\n      DT_PEDI_ORIG: dataPedido ? dataPedido : \"\",\r\n      NR_PEDI_REME: this.form.value['pedidoRemessa'] ? this.form.value['pedidoRemessa'] : \"\",\r\n      DT_PREV_ENTR: previsaoEntrega ? previsaoEntrega : \"\",\r\n      NM_FORN: this.form.value['fornecedor'] ? this.form.value['fornecedor'] : \"\",\r\n      IN_GERA_RELA_EXCE: 1,\r\n      ID_USUA: this.idUsuario\r\n    };\r\n\r\n    this.getCarteiraDetalhesExcel(params);  \r\n  }\r\n\r\n  setDateValid(date: any): any {\r\n  if (date instanceof Date) {\r\n    date = this.dateService.convertToUrlDate(date);\r\n  }\r\n  return date;\r\n  }\r\n\r\n  sortA(keyA): void {\r\n    this.keyA = keyA;\r\n    this.reverseA = !this.reverseA;\r\n  }\r\n\r\n  sortB(keyB): void {\r\n    this.keyB = keyB;\r\n    this.reverseB = !this.reverseB;\r\n  }\r\n\r\n  sortC(keyC): void {\r\n    this.keyC = keyC;\r\n    this.reverseC = !this.reverseC;\r\n  }\r\n\r\n  /* Paginação Modal*/\r\n  onPageChangedA(event: PageChangedEvent): void {\r\n    this.beginA = (event.page - 1) * event.itemsPerPage;\r\n    this.endA = event.page * event.itemsPerPage;\r\n  }\r\n\r\n  onPageChangedB(event: PageChangedEvent): void {\r\n    this.beginB = (event.page - 1) * event.itemsPerPage;\r\n    this.endB = event.page * event.itemsPerPage;\r\n  }\r\n\r\n  onPageChangedC(event: PageChangedEvent): void {\r\n    this.beginC = (event.page - 1) * event.itemsPerPage;\r\n    this.endC = event.page * event.itemsPerPage;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n//Converte rota em base64\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from './../analise-compras.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'abastecimento-monitores-analise-compras-modal-vendas-realizadas',\r\n  templateUrl: './modal-vendas-realizadas.component.html',\r\n  styleUrls: ['./modal-vendas-realizadas.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasModalVendasRealizadasComponent implements OnInit {\r\n\r\n  @Input() item: any;\r\n  @Input() idMesAno: any;\r\n\r\n  loadingDetalhesModal:boolean = false;\r\n  noResultModal:boolean = false;\r\n  loaderBody = false;\r\n\r\n  compararDataFinal: boolean = false;\r\n  compararDataInicial: boolean = false;\r\n  compararDataFinalAtual: boolean = false;\r\n\r\n  form: FormGroup;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  empresas:any = [];\r\n  depositos:any = [];\r\n  proposta:any = [];\r\n  dataEntrada:any = [];\r\n  dataEncerramento:any = [];\r\n  cliente:any = [];\r\n  modal:any = [];\r\n  dadosExcel:any = [];\r\n\r\n  idEmpresa: string;\r\n  idDeposito: string;\r\n\r\n  dadosVendasRealDetalhesModalFull = [];\r\n  dadosVendasRealDetalhesModal = [];\r\n  dadosVendasRealDetalhesModalTotal = [];\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_EMPR';\r\n\r\n  /* PaginationModal*/\r\n  itemsPerPage = 15;\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n\r\n  /* dados do usuário */\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n  /* dados do usuário */\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService,\r\n    private pnotifyService: PNotifyService,\r\n  ) { \r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [null],\r\n      dataFinal: [null],\r\n      empresas: [null],\r\n      depositos: [null],\r\n      numeroNF: [null],\r\n      dataNF: [null],\r\n      cliente: [null],\r\n      vendedor: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.modal.codMaterial = this.item.ID_REFE_ERP;\r\n    this.modal.descMaterial = this.item.NM_MATE;\r\n    this.modal.unidadeMedida = this.item.NM_UNID_MEDI;\r\n    this.resetValuesForm();\r\n    this.setParamsVendasRealizadas();\r\n  }\r\n\r\n  resetValuesForm(): void {\r\n    this.form.get('dataInicial').reset();\r\n    this.form.get('dataFinal').reset();\r\n    this.form.get('empresas').reset();\r\n    this.form.get('depositos').reset();\r\n    this.form.get('numeroNF').reset();\r\n    this.form.get('dataNF').reset();\r\n    this.form.get('cliente').reset();\r\n    this.form.get('vendedor').reset();\r\n  }\r\n\r\n  setParamsVendasRealizadas(): void {\r\n    let queryParams = this.routerService.getBase64UrlParams(this.activatedRoute.snapshot.queryParams);\r\n    let dataInicial = queryParams[\"dataInicial\"];\r\n    let dataFinal = queryParams[\"dataFinal\"];\r\n    let dataInicialParam = dataInicial;\r\n    let dataFinalParam = dataFinal;\r\n    let params: any = [];\r\n    let tipoVisualizacao = queryParams[\"tipoVisualizacao\"];\r\n    let idMaterial = this.item[\"ID_MATE\"];\r\n    let idMesAno = this.idMesAno\r\n\r\n    if(this.idMesAno) {\r\n      dataInicialParam = \"\";\r\n      dataFinalParam = \"\";\r\n\r\n      let mesAno = this.idMesAno.replace('_', '/01/');\r\n      let date = new Date(mesAno);\r\n      let primeiroDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n      let primeiroDiaC = this.setDateValid(primeiroDia);\r\n      let ultimoDiaC = this.setDateValid(ultimoDia);\r\n\r\n      primeiroDiaC = new Date(primeiroDiaC.split('-').reverse().join('-'));\r\n      ultimoDiaC = new Date(ultimoDiaC.split('-').reverse().join('-'));\r\n\r\n      let dataInicialC = new Date(dataInicial.split('-').reverse().join('-'));\r\n      let dataFinalC = new Date(dataFinal.split('-').reverse().join('-'));\r\n\r\n      if(primeiroDiaC > dataInicialC) {\r\n        dataInicial = this.setDateValid(primeiroDia);\r\n      }\r\n\r\n      if(ultimoDiaC < dataFinalC) {\r\n        dataFinal = this.setDateValid(ultimoDia);\r\n      }\r\n\r\n    }\r\n\r\n    if(tipoVisualizacao == 'S') {\r\n      this.idEmpresa = queryParams[\"empresas\"];\r\n      this.idDeposito = queryParams[\"depositos\"];\r\n    } else if(tipoVisualizacao == 'A') {\r\n      this.idEmpresa = \"\";\r\n      this.idDeposito = this.item[\"ID_DEPO\"];\r\n    }\r\n\r\n    params = {  \r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      DT_INIC: dataInicial ? dataInicial : \"\",\r\n      DT_FINA: dataFinal ? dataFinal : \"\",\r\n      NM_MES_ANO: \"\",\r\n      ID_MATE: idMaterial ? idMaterial : \"\",\r\n      NM_EMPR: \"\",\r\n      NM_DEPO: \"\",\r\n      NR_NOTA_FISC: \"\",\r\n      DT_NOTA_FISC: \"\", \r\n      NM_CLIE: \"\",\r\n      NM_VEND: \"\"\r\n    };\r\n\r\n    this.getVendasRealizadasDetalhes(params);\r\n\r\n    this.form.get(\"dataInicial\").setValue(dataInicial);\r\n    this.form.get(\"dataFinal\").setValue(dataFinal);\r\n    \r\n  }\r\n\r\n  getVendasRealizadasDetalhes(params: any): void {\r\n    this.dadosVendasRealDetalhesModalFull = [];\r\n    this.dadosVendasRealDetalhesModal = [];\r\n    this.dadosVendasRealDetalhesModalTotal = [];\r\n    this.loaderBody = true;\r\n    this.noResultModal = false;\r\n    this.loadingDetalhesModal = false;\r\n\r\n    this.service.getVendasRealizadasDetalhes(params)\r\n    .pipe(finalize(() => (this.loaderBody = false)))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.dadosVendasRealDetalhesModalFull = res['body']['result'];\r\n            this.dadosVendasRealDetalhesModalTotal = this.dadosVendasRealDetalhesModalFull.shift();\r\n            this.dadosVendasRealDetalhesModal = this.dadosVendasRealDetalhesModalFull;\r\n            this.loadingDetalhesModal = true;\r\n            this.noResultModal = false;\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = false;\r\n            this.noResultModal = true;\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao Vendas Realizadas Detalhes');\r\n      }\r\n    );\r\n  }\r\n\r\n  getVendasRealizadasDetalhesExcel(params: any): void{\r\n    this.dadosExcel = [];\r\n\r\n    this.service.getVendasRealizadasDetalhes(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200){\r\n            this.dadosExcel = res['body']['result'];\r\n            this.pnotifyService.success(this.dadosExcel);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao detalhes de Carteira');\r\n      }\r\n    );\r\n  }\r\n\r\n  onFilter(): void {\r\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\r\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\r\n    let dataNF = this.setDateValid(this.form.value['dataNF']);\r\n\r\n    let params = {\r\n      DT_INIC: dataInicial ? dataInicial: \"\",\r\n      DT_FINA: dataFinal ? dataFinal : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",\r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_NOTA_FISC: this.form.value['numeroNF'] ? this.form.value['numeroNF'] : \"\",\r\n      DT_NOTA_FISC: dataNF ? dataNF : \"\", \r\n      NM_CLIE: this.form.value['cliente'] ? this.form.value['cliente'] : \"\",\r\n      NM_VEND: this.form.value['vendedor'] ? this.form.value['vendedor'] : \"\",\r\n      IN_GERA_RELA_EXCE: \"\",\r\n      ID_USUA: \"\"\r\n    };\r\n\r\n    this.getVendasRealizadasDetalhes(params);\r\n  }\r\n\r\n  excelExport(): void { \r\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\r\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\r\n    let dataNF = this.setDateValid(this.form.value['dataNF']);\r\n\r\n    let params = {\r\n      DT_INIC: dataInicial ? dataInicial: \"\",\r\n      DT_FINA: dataFinal ? dataFinal : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",\r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_NOTA_FISC: this.form.value['numeroNF'] ? this.form.value['numeroNF'] : \"\",\r\n      DT_NOTA_FISC: dataNF ? dataNF : \"\", \r\n      NM_CLIE: this.form.value['cliente'] ? this.form.value['cliente'] : \"\",\r\n      NM_VEND: this.form.value['vendedor'] ? this.form.value['vendedor'] : \"\",\r\n      IN_GERA_RELA_EXCE: 1,\r\n      ID_USUA: this.idUsuario\r\n    };\r\n\r\n    this.getVendasRealizadasDetalhesExcel(params);\r\n  }\r\n\r\n  setDateValid(date: any): any {\r\n    if (date instanceof Date) {\r\n      date = this.dateService.convertToUrlDate(date);\r\n    }\r\n    return date;\r\n  }\r\n\r\n  comparaData(): boolean  {\r\n    let stra = this.form.get('dataInicial').value;\r\n    let strb = this.form.get('dataFinal').value;\r\n    let dataInicial = {};\r\n    let dataFinal = {};\r\n\r\n    if (stra instanceof Date) {\r\n      dataInicial = stra;\r\n    } else if(stra !== null) {\r\n      dataInicial = new Date(stra.split('-').reverse().join('-'));\r\n    }\r\n\r\n    if (strb instanceof Date) {\r\n      dataFinal = strb;\r\n    } else if(strb !== null) {\r\n      dataFinal = new Date(strb.split('-').reverse().join('-'));;\r\n    }\r\n\r\n    if (!dataInicial) {\r\n      this.compararDataFinal = false;\r\n      return false;\r\n    } else if (dataInicial > dataFinal) {\r\n      this.compararDataFinal = true;\r\n      return this.compararDataFinal;\r\n    }\r\n  }\r\n\r\n  comparaDataFinal(): boolean {\r\n    let now = new Date();\r\n    if (!this.form.get('dataFinal').value) {\r\n      this.compararDataFinalAtual = false;\r\n      return false;\r\n    } else if (this.form.get('dataFinal').value > now) {\r\n      this.compararDataFinalAtual = true;\r\n      return this.compararDataFinalAtual;\r\n    }\r\n  }\r\n\r\n  comparaDataInicial(): boolean {\r\n    let now = new Date();\r\n    if (!this.form.get('dataInicial').value) {\r\n      this.compararDataInicial = false;\r\n      return false;\r\n    } else if (this.form.get('dataInicial').value > now) {\r\n      this.compararDataInicial = true;\r\n      return this.compararDataInicial;\r\n    }\r\n  }\r\n\r\n  sortA(keyA: any): void {\r\n    this.keyA = keyA;\r\n    this.reverseA = !this.reverseA;\r\n  }\r\n\r\n  /* Paginação Modal*/\r\n  onPageChangedA(event: PageChangedEvent): void {\r\n    this.beginA = (event.page - 1) * event.itemsPerPage;\r\n    this.endA = event.page * event.itemsPerPage;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9tb25pdG9yZXMvYW5hbGlzZS1jb21wcmFzL21vZGFsLWNhcnRlaXJhL21vZGFsLWNhcnRlaXJhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"row mb-2 mt-2\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> CÓD. MATERIAL: </strong> {{ modal.codMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> DESCRIÇÃO: </strong> {{ modal.descMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> UN. MEDIDA: </strong> {{ modal.unidadeMedida }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 text-right\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"onFilter()\\\"\\r\\n      class=\\\"btn mr-2\\\"\\r\\n       [disabled]=\\\"\\r\\n        comparaData() ||\\r\\n        comparaDataInicial() ||\\r\\n        comparaDataFinal()\\r\\n      \\\"\\r\\n    >\\r\\n      Filtrar\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"excelExport()\\\"\\r\\n      class=\\\"btn\\\"\\r\\n      [disabled]=\\\"\\r\\n        comparaData() ||\\r\\n        comparaDataInicial() ||\\r\\n        comparaDataFinal()\\r\\n      \\\"\\r\\n    >\\r\\n      Exportar Excel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataNF\\\">Data Inicial</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataInicial\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataInicial\\\"\\r\\n        >\\r\\n        <invalid-form-control\\r\\n          [show]=\\\"comparaDataInicial()\\\"\\r\\n          message=\\\"Data inicial não pode ser maior que data atual\\\"\\r\\n        >\\r\\n        </invalid-form-control>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataFinal\\\">Data Final</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataFinal\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataFinal\\\"\\r\\n        >\\r\\n        <invalid-form-control\\r\\n          [show]=\\\"comparaData()\\\"\\r\\n          message=\\\"Data final deve ser maior que data inicial\\\"\\r\\n        >\\r\\n        </invalid-form-control>\\r\\n        <invalid-form-control\\r\\n          [show]=\\\"comparaDataFinal()\\\"\\r\\n          message=\\\"Data final não pode ser maior que data atual\\\"\\r\\n        >\\r\\n        </invalid-form-control>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"empresas\\\">Empresas</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"empresas\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"empresas\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"depositos\\\">Depósito</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"depositos\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"depositos\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"numeroNF\\\">Número NF</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"numeroNF\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"numeroNF\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataNF\\\">Data NF</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataNF\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataNF\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"cliente\\\">Cliente</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"cliente\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"cliente\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"vendedor\\\">Promotor</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"vendedor\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"vendedor\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"loadingDetalhesModal\\\">\\r\\n  <custom-table subtitleBorder=\\\"true\\\">\\r\\n    <ng-template #thead let-thead>\\r\\n      <tr>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_EMPR')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Empresa\\r\\n          <span *ngIf=\\\"keyA == 'NM_EMPR'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_EMPR'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_DEPO')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Depósito\\r\\n          <span *ngIf=\\\"keyA == 'NM_DEPO'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_DEPO'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NR_NOTA_FISC_SAID')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Número de NF\\r\\n          <span *ngIf=\\\"keyA == 'NR_NOTA_FISC_SAID'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NR_NOTA_FISC_SAID'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('DT_EMIS_NOTA_FISC_SAID')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Data de NF\\r\\n          <span *ngIf=\\\"keyA == 'DT_EMIS_NOTA_FISC_SAID'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'DT_EMIS_NOTA_FISC_SAID'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_CLIE')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Cliente\\r\\n          <span *ngIf=\\\"keyA == 'NM_CLIE'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_CLIE'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_VEND')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Vendedor\\r\\n          <span *ngIf=\\\"keyA == 'NM_VEND'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_VEND'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('TT_ITEM_PEDI_TONE')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n          *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n        >\\r\\n          Quantidade(Ton)\\r\\n          <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_TONE'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_TONE'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('TT_ITEM_PEDI')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Quantidade\\r\\n          <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template #tbody let-tbody>\\r\\n      <tr\\r\\n        *ngFor=\\\"\\r\\n          let item of dadosVendasRealDetalhesModal\\r\\n            | orderBy: keyA:reverseA\\r\\n            | slice: beginA:endA;\\r\\n          let i = index\\r\\n        \\\"\\r\\n      >\\r\\n        <td nowrap>{{ item.NM_EMPR }}</td>\\r\\n        <td nowrap>{{ item.NM_DEPO }}</td>\\r\\n        <td nowrap class=\\\"text-center\\\">\\r\\n          {{ item.NR_NOTA_FISC_SAID | number: '0.0' }}\\r\\n        </td>\\r\\n        <td nowrap class=\\\"text-center\\\">\\r\\n          {{ item.DT_EMIS_NOTA_FISC_SAID | date: 'dd/MM/yyyy' }}\\r\\n        </td>\\r\\n        <td nowrap>{{ item.NM_CLIE }}</td>\\r\\n        <td nowrap>{{ item.NM_VEND }}</td>\\r\\n        <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n          {{ item.TT_ITEM_PEDI_TONE | number: '0.3' }}\\r\\n        </td>\\r\\n        <td nowrap class=\\\"text-right\\\">\\r\\n          {{ this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI | number: '0.0') : (item.TT_ITEM_PEDI | number: '0.3') }}\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td nowrap class=\\\"bg-dark text-white\\\">TOTAL</td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n          {{ dadosVendasRealDetalhesModalTotal[\\\"TT_ITEM_PEDI_TONE\\\"] | number: '0.3' }}\\r\\n        </td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n          {{this.modal.unidadeMedida != 'TON' ? (dadosVendasRealDetalhesModalTotal[\\\"TT_ITEM_PEDI\\\"] | number: '0.0') : (dadosVendasRealDetalhesModalTotal[\\\"TT_ITEM_PEDI\\\"] | number: '0.3')}}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </custom-table>\\r\\n</div>\\r\\n<div\\r\\n  class=\\\"mt-2 mb-2\\\"\\r\\n  *ngIf=\\\"dadosVendasRealDetalhesModal?.length > itemsPerPage\\\"\\r\\n>\\r\\n  Exibindo {{ beginA + 1 }} a {{ endA }} de\\r\\n  {{ dadosVendasRealDetalhesModal?.length }}\\r\\n  <div class=\\\"d-flex\\\">\\r\\n    <pagination\\r\\n      [maxSize]=\\\"10\\\"\\r\\n      [totalItems]=\\\"dadosVendasRealDetalhesModal?.length\\\"\\r\\n      (pageChanged)=\\\"onPageChangedA($event)\\\"\\r\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n      [boundaryLinks]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"currentPageA\\\"\\r\\n      previousText=\\\"&lsaquo;\\\"\\r\\n      nextText=\\\"&rsaquo;\\\"\\r\\n      firstText=\\\"&laquo;\\\"\\r\\n      lastText=\\\"&raquo;\\\"\\r\\n    >\\r\\n    </pagination>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" *ngIf=\\\"loaderBody\\\">\\r\\n  <div class=\\\"spinner-border\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  *ngIf=\\\"noResultModal && !loadingDetalhesModal\\\"\\r\\n  class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n  style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\\r\\n\";","export default \"#header-modal-estoque-comprometido > div > button:hover {\\n  background-color: #e6ebf1;\\n  background-image: linear-gradient(-180deg, #f0f3f6, #e6ebf1 90%);\\n  background-position: -0.5em;\\n  border-color: rgba(27, 31, 35, 0.35);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL21vbml0b3Jlcy9hbmFsaXNlLWNvbXByYXMvbW9kYWwtZXN0b3F1ZS1jb21wcm9tZXRpZG8vbW9kYWwtZXN0b3F1ZS1jb21wcm9tZXRpZG8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUVBLGdFQUFBO0VBQ0EsMkJBQUE7RUFDQSxvQ0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL21vbml0b3Jlcy9hbmFsaXNlLWNvbXByYXMvbW9kYWwtZXN0b3F1ZS1jb21wcm9tZXRpZG8vbW9kYWwtZXN0b3F1ZS1jb21wcm9tZXRpZG8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjaGVhZGVyLW1vZGFsLWVzdG9xdWUtY29tcHJvbWV0aWRvPiBkaXYgPiBidXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmViZjE7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjZjBmM2Y2KSwgY29sb3Itc3RvcCg5MCUsICNlNmViZjEpKTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoLTE4MGRlZywgI2YwZjNmNiwgI2U2ZWJmMSA5MCUpO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0wLjVlbTtcclxuICBib3JkZXItY29sb3I6IHJnYmEoMjcsIDMxLCAzNSwgMC4zNSk7XHJcbn0iXX0= */\";","export default \"<loader-spinner-full-screen\\r\\n  *ngIf=\\\"loaderFullScreen\\\"\\r\\n></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Análise de Compras\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter(currentPage=1)\\\"\\r\\n    [disabled]=\\\"\\r\\n      form.status == 'INVALID' ||\\r\\n      (form.get('dataInicial').value == null &&\\r\\n        form.get('paramData').value != 1) ||\\r\\n      (form.get('dataFinal').value == null &&\\r\\n        form.get('paramData').value != 1) ||\\r\\n      comparaData() ||\\r\\n      comparaDataInicial() ||\\r\\n      comparaDataFinal()\\r\\n    \\\"\\r\\n  >\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"excelExport()\\\"\\r\\n    [disabled]=\\\"\\r\\n      form.status == 'INVALID' ||\\r\\n      (form.get('dataInicial').value == null &&\\r\\n        form.get('paramData').value != 1) ||\\r\\n      (form.get('dataFinal').value == null &&\\r\\n        form.get('paramData').value != 1) ||\\r\\n      comparaData() ||\\r\\n      comparaDataInicial() ||\\r\\n      comparaDataFinal()\\r\\n    \\\"\\r\\n  >\\r\\n    Exportar Excel\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter>\\r\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"tipoMaterial\\\">Tipo de Material</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"tiposMateriais\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_APOI_TIPO_MATE\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"tipoMaterial\\\"\\r\\n            (change)=\\\"resetForm()\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"situacao\\\">Situação</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"situacoes\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            formControlName=\\\"situacao\\\"\\r\\n            (change)=\\\"resetForm()\\\"\\r\\n            [ngClass]=\\\"\\r\\n              onFieldError('situacao') + ' ' + onFieldRequired('situacao')\\r\\n            \\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('situacao')\\\"\\r\\n            message=\\\"Situação é obrigatório.\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"linha\\\">Linha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"linhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_LINH\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"linha\\\"\\r\\n            (change)=\\\"\\r\\n              getSubLinhas() +\\r\\n                ' ' +\\r\\n                getClasses() +\\r\\n                ' ' +\\r\\n                getDepositosAssociados()\\r\\n            \\\"\\r\\n            [ngClass]=\\\"onFieldError('linha') + ' ' + onFieldRequired('linha')\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('linha')\\\"\\r\\n            message=\\\"Linha é obrigatório.\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"subLinha\\\">Sublinha</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"subLinhas\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_SUB_LINH\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            (change)=\\\"getClasses()\\\"\\r\\n            formControlName=\\\"subLinha\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"classe\\\">Classe</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"classes\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            maxSelectedItems=\\\"6\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_CLAS\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"classe\\\"\\r\\n            (change)=\\\"getMateriais() + ' ' + getDepositosAssociados()\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"material\\\">Material</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"materiais\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"ID_REFE_ERP_NM_MATE\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"material\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"empresas\\\">Empresas</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"depositosAssociados\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            (change)=\\\"getDepositos($event)\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_EMPR\\\"\\r\\n            bindValue=\\\"ID_EMPR\\\"\\r\\n            formControlName=\\\"empresas\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"depositos\\\">Depósitos</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"depositos\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_DEPO\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"depositos\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"nivelEstoque\\\">Nível de Estoque</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"true\\\"\\r\\n            [items]=\\\"tiposNiveisEstoques\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            [multiple]=\\\"false\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"NM_APOI_TIPO_NIVE_ESTO\\\"\\r\\n            bindValue=\\\"ID\\\"\\r\\n            formControlName=\\\"nivelEstoque\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"paramData\\\">Período de Vendas</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"periodosBusca\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            (change)=\\\"activeInputDate()\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            formControlName=\\\"paramData\\\"\\r\\n            [ngClass]=\\\"\\r\\n              onFieldError('paramData') + ' ' + onFieldRequired('paramData')\\r\\n            \\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('paramData')\\\"\\r\\n            message=\\\"Período de vendas é obrigatório.\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"dataInicial\\\">Data Inicial</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"dataInicial\\\"\\r\\n          />\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"comparaDataInicial()\\\"\\r\\n            message=\\\"Data inicial não pode ser maior que data atual\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"dataFinal\\\">Data Final</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"dataFinal\\\"\\r\\n          />\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"comparaData()\\\"\\r\\n            message=\\\"Data final deve ser maior que data inicial\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"comparaDataFinal()\\\"\\r\\n            message=\\\"Data final não pode ser maior que data atual\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-2\\\">\\r\\n          <label for=\\\"tipoVisualizacao\\\">Tipo Visualização</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"tiposVisualizacao\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [hideSelected]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"true\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            bindLabel=\\\"nome\\\"\\r\\n            bindValue=\\\"id\\\"\\r\\n            formControlName=\\\"tipoVisualizacao\\\"\\r\\n            [ngClass]=\\\"\\r\\n              onFieldError('tipoVisualizacao') +\\r\\n              ' ' +\\r\\n              onFieldRequired('tipoVisualizacao')\\r\\n            \\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n          <invalid-form-control\\r\\n            [show]=\\\"onFieldInvalid('tipoVisualizacao')\\\"\\r\\n            message=\\\"Tipo visualização é obrigatório.\\\"\\r\\n          >\\r\\n          </invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-3\\\">\\r\\n          <label for=\\\"infAdicionais\\\">Inf. Adicionais</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"infAdicionaisDados\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            dropdownPosition=\\\"bottom\\\"\\r\\n            bindLabel=\\\"NM_INFO\\\"\\r\\n            bindValue=\\\"ID_INFO\\\"\\r\\n            groupBy=\\\"INFO\\\"\\r\\n            placeholder=\\\"Selecione...\\\"\\r\\n            formControlName=\\\"infAdicionais\\\"\\r\\n          >\\r\\n            <ng-template ng-optgroup-tmp let-item=\\\"item\\\">\\r\\n              {{ item.NM_GRUP }}\\r\\n            </ng-template>\\r\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n              {{ item.NM_INFO }}\\r\\n            </ng-template>\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-1\\\">\\r\\n          <label for=\\\"qtItensPagina\\\">Registros</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"numberOfItems\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            labelForId=\\\"qtItensPagina\\\"\\r\\n            formControlName=\\\"qtItensPagina\\\"\\r\\n          >\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <subtitles [data]=\\\"subtitles\\\" [show]=\\\"totalItems > 0 && loading\\\"> </subtitles>\\r\\n  <div class=\\\"mt-3\\\" *ngIf=\\\"loading && totalItems > 0\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th\\r\\n              nowrap\\r\\n              class=\\\"sticky\\\"\\r\\n              scope=\\\"col\\\"\\r\\n              colspan=\\\"1\\\"\\r\\n              *ngIf=\\\"depositoBool\\\"\\r\\n              [ngStyle]=\\\"{ left: '0px' }\\\"\\r\\n              style=\\\"background-color: #fff;\\\"\\r\\n              width=\\\"180px\\\"\\r\\n            >\\r\\n              Grupo\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              class=\\\"sticky\\\"\\r\\n              scope=\\\"col\\\"\\r\\n              colspan=\\\"2\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '0px' : '180px' }\\\"\\r\\n              style=\\\"background-color: #fff;\\\"\\r\\n            >\\r\\n              Material\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              [attr.colspan]=\\\"colsMat\\\"\\r\\n              *ngIf=\\\"colsMat != 0\\\"\\r\\n            ></th>\\r\\n            <th nowrap scope=\\\"col\\\" [attr.colspan]=\\\"colsEstoque ? colsEst : 1\\\">\\r\\n              Estoque(TON)\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"setColsEstoqueTrue()\\\"\\r\\n                *ngIf=\\\"colsEst > 1\\\"\\r\\n              >\\r\\n                <i\\r\\n                  [ngClass]=\\\"colsEstoque ? 'fas fa-minus' : 'fas fa-plus'\\\"\\r\\n                  title=\\\"Mostrar detalhes Estoque\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" [attr.colspan]=\\\"colsCarteira ? colsCar : 1\\\">\\r\\n              Carteira(TON)\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"setColsCarteiraTrue()\\\"\\r\\n                *ngIf=\\\"colsCar > 1\\\"\\r\\n              >\\r\\n                <i\\r\\n                  [ngClass]=\\\"colsCarteira ? 'fas fa-minus' : 'fas fa-plus'\\\"\\r\\n                  title=\\\"Mostrar Carteira/mês\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              [attr.colspan]=\\\"colsVendasReal ? colsVenRea : 2\\\"\\r\\n            >\\r\\n              Vendas Realizadas (TON)\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"setColsVendasRealTrue()\\\"\\r\\n                *ngIf=\\\"colsVenRea > 2\\\"\\r\\n              >\\r\\n                <i\\r\\n                  [ngClass]=\\\"colsVendasReal ? 'fas fa-minus' : 'fas fa-plus'\\\"\\r\\n                  title=\\\"Mostrar Vendas Realizadas/mês\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              [attr.colspan]=\\\"colsVendasPerd ? colsVenPed : 2\\\"\\r\\n            >\\r\\n              Vendas Perdidas (TON)\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"setColsVendasPerdTrue()\\\"\\r\\n                *ngIf=\\\"colsVenPed > 2\\\"\\r\\n              >\\r\\n                <i\\r\\n                  [ngClass]=\\\"colsVendasPerd ? 'fas fa-minus' : 'fas fa-plus'\\\"\\r\\n                  title=\\\"Mostrar Vendas Perdidas/mês\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" colspan=\\\"2\\\">Estatístico</th>\\r\\n          </tr>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <!-- Inicio - Materiais -->\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover sticky\\\"\\r\\n              [ngStyle]=\\\"{ left: '0px' }\\\"\\r\\n              style=\\\"background-color: #fff;\\\"\\r\\n              width=\\\"180px\\\"\\r\\n              (click)=\\\"sort('NM_DEPO')\\\"\\r\\n              *ngIf=\\\"depositoBool\\\"\\r\\n            >\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"key == 'NM_DEPO'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_DEPO'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover sticky\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '0px' : '180px' }\\\"\\r\\n              style=\\\"background-color: #fff;\\\"\\r\\n              width=\\\"105px\\\"\\r\\n              (click)=\\\"sort('ID_REFE_ERP')\\\"\\r\\n            >\\r\\n              Cód. Material\\r\\n              <span *ngIf=\\\"key == 'ID_REFE_ERP'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'ID_REFE_ERP'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover sticky\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '105px' : '285px' }\\\"\\r\\n              style=\\\"background-color: #fff;\\\"\\r\\n              (click)=\\\"sort('NM_MATE')\\\"\\r\\n            >\\r\\n              Descrição\\r\\n              <span *ngIf=\\\"key == 'NM_MATE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_MATE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_LINH')\\\"\\r\\n              *ngIf=\\\"linhaBool\\\"\\r\\n            >\\r\\n              Linha\\r\\n              <span *ngIf=\\\"key == 'NM_LINH'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_LINH'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_SUB_LINH')\\\"\\r\\n              *ngIf=\\\"subLinhaBool\\\"\\r\\n            >\\r\\n              Sublinha\\r\\n              <span *ngIf=\\\"key == 'NM_SUB_LINH'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_SUB_LINH'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_CLAS')\\\"\\r\\n              *ngIf=\\\"classeBool\\\"\\r\\n            >\\r\\n              Classe\\r\\n              <span *ngIf=\\\"key == 'NM_CLAS'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_CLAS'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"uniMedidaBool\\\"\\r\\n            >\\r\\n              Unidade de Medida\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"bitolaBool\\\"\\r\\n            >\\r\\n              Bitola\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"larguraBool\\\"\\r\\n            >\\r\\n              Largura\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"comprimentoBool\\\"\\r\\n            >\\r\\n              Comprimento\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"qualidadeBool\\\"\\r\\n            >\\r\\n              Qualidade\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"revestimentoBool\\\"\\r\\n            >\\r\\n              Revestimento\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NM_APOI_UNID_MEDI')\\\"\\r\\n              *ngIf=\\\"tipoAcoBool\\\"\\r\\n            >\\r\\n              Tipo de Aço\\r\\n              <span *ngIf=\\\"key == 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NM_APOI_UNID_MEDI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <!-- FIM - Materiais -->\\r\\n            <!-- Inicio - Estoque -->\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_ESTO_ATUA_TONE')\\\"\\r\\n              *ngIf=\\\"estAtualBool && colsEstoque\\\"\\r\\n            >\\r\\n              Atual\\r\\n              <span *ngIf=\\\"key == 'TT_ESTO_ATUA_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_ESTO_ATUA_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_ESTO_COMP_TONE')\\\"\\r\\n              *ngIf=\\\"estComprBool && colsEstoque\\\"\\r\\n            >\\r\\n              Comprometido\\r\\n              <span *ngIf=\\\"key == 'TT_ESTO_COMP_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_ESTO_COMP_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_ESTO_SUSP_TONE')\\\"\\r\\n              *ngIf=\\\"estSuspBool && colsEstoque\\\"\\r\\n            >\\r\\n              Supenso\\r\\n              <span *ngIf=\\\"key == 'TT_ESTO_SUSP_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_ESTO_SUSP_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_ESTO_DISP_TONE')\\\"\\r\\n            >\\r\\n              Disponível\\r\\n              <span *ngIf=\\\"key == 'TT_ESTO_DISP_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_ESTO_DISP_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <!-- FIM - Estoque -->\\r\\n            <!-- Inicio - Carteira -->\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort(item.row)\\\"\\r\\n              *ngFor=\\\"let item of dadosCarteiraDetalhe\\\"\\r\\n              [hidden]=\\\"!colsCarteira\\\"\\r\\n            >\\r\\n              {{ item.header }}\\r\\n              <span *ngIf=\\\"key == item.row\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != item.row\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_CART_ABER_TONE')\\\"\\r\\n            >\\r\\n              Carteira\\r\\n              <span *ngIf=\\\"key == 'TT_CART_ABER_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_CART_ABER_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <!-- FIM - Carteira -->\\r\\n            <!-- Inicio - Vendas Realizadas -->\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort(item.row)\\\"\\r\\n              *ngFor=\\\"let item of dadosVendasRealDetalhe\\\"\\r\\n              [hidden]=\\\"!colsVendasReal\\\"\\r\\n            >\\r\\n              {{ item.header }}\\r\\n              <span *ngIf=\\\"key == item.row\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != item.row\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_VEND_REAL_TONE')\\\"\\r\\n            >\\r\\n              Vendas\\r\\n              <span *ngIf=\\\"key == 'TT_VEND_REAL_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_VEND_REAL_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_MEDI_VEND_REAL_TONE')\\\"\\r\\n              tooltip=\\\"(Vol. vendas / Período) * 30\\\"\\r\\n              placement=\\\"top\\\"\\r\\n            >\\r\\n              Média\\r\\n              <span *ngIf=\\\"key == 'TT_MEDI_VEND_REAL_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_MEDI_VEND_REAL_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <!-- FIM - Vendas Realizadas -->\\r\\n            <!-- Inicio - Vendas Perdidas -->\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort(item.row)\\\"\\r\\n              *ngFor=\\\"let item of dadosVendasPerdDetalhe\\\"\\r\\n              [hidden]=\\\"!colsVendasPerd\\\"\\r\\n            >\\r\\n              {{ item.header }}\\r\\n              <span *ngIf=\\\"key == item.row\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != item.row\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_VEND_PERD_TONE')\\\"\\r\\n            >\\r\\n              Perdas\\r\\n              <span *ngIf=\\\"key == 'TT_VEND_PERD_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_VEND_PERD_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('TT_MEDI_VEND_PERD_TONE')\\\"\\r\\n              tooltip=\\\"(Vol. vendas perd / Período) * 30\\\"\\r\\n              placement=\\\"top\\\"\\r\\n            >\\r\\n              Média\\r\\n              <span *ngIf=\\\"key == 'TT_MEDI_VEND_PERD_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'TT_MEDI_VEND_PERD_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <!-- FIM - Vendas Realizadas -->\\r\\n            <!-- Inicio - Estatistico -->\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('VL_RITM_VEND_TONE')\\\"\\r\\n              tooltip=\\\"(Vendas mês / Dia mês) * 30\\\"\\r\\n              placement=\\\"top\\\"\\r\\n            >\\r\\n              Ritmo\\r\\n              <span *ngIf=\\\"key == 'VL_RITM_VEND_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'VL_RITM_VEND_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              scope=\\\"col\\\"\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"sort('NR_DIAS_GIRO')\\\"\\r\\n              tooltip=\\\"Est. disponível / Med. diária\\\"\\r\\n              placement=\\\"left\\\"\\r\\n            >\\r\\n              Giro\\r\\n              <span *ngIf=\\\"key == 'NR_DIAS_GIRO'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"reverse ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"key != 'NR_DIAS_GIRO'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <!-- FIM - Estatistico -->\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dados\\\">\\r\\n            <!-- Inicio - Materiais -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"text-center hover sticky\\\"\\r\\n              *ngIf=\\\"depositoBool\\\"\\r\\n              [ngClass]=\\\"setColorBorder(item.DS_COR_TIPO_NIVE_ESTO)\\\"\\r\\n              [ngStyle]=\\\"{ left: '0px' }\\\"\\r\\n              width=\\\"180px\\\"\\r\\n              (click)=\\\"lgModal.show() + ' ' + getNivelEstoqueModal(item)\\\"\\r\\n              >\\r\\n              {{ item.NM_DEPO }}\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"text-center hover sticky\\\"\\r\\n              [ngClass]=\\\"!depositoBool ? setColorBorder(item.DS_COR_TIPO_NIVE_ESTO) : ''\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '0px' : '180px' }\\\"\\r\\n              width=\\\"105px\\\"\\r\\n              (click)=\\\"lgModal.show() + ' ' + getNivelEstoqueModal(item)\\\"\\r\\n              >\\r\\n              {{ item.ID_REFE_ERP | number }}\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"sticky\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '105px' : '285px' }\\\"\\r\\n            >\\r\\n              {{ item.NM_MATE }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"linhaBool\\\">\\r\\n              {{ item.NM_LINH }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"subLinhaBool\\\">\\r\\n              {{ item.NM_SUB_LINH ? item.NM_SUB_LINH : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"classeBool\\\">\\r\\n              {{ item.NM_CLAS }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"uniMedidaBool\\\">\\r\\n              {{ item.NM_APOI_UNID_MEDI ? item.NM_APOI_UNID_MEDI : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"bitolaBool\\\">\\r\\n              {{ item.VL_MEDI ? item.VL_MEDI : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"larguraBool\\\">\\r\\n              {{ item.VL_LARG ? item.VL_LARG : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"comprimentoBool\\\">\\r\\n              {{ item.VL_COMP ? item.VL_COMP : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"qualidadeBool\\\">\\r\\n              {{ item.DS_QUAL ? item.DS_QUAL : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"revestimentoBool\\\">\\r\\n              {{ item.DS_REVE ? item.DS_REVE : '-' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"tipoAcoBool\\\">\\r\\n              {{ item.DS_TIPO_ACO ? item.DS_TIPO_ACO : '-' }}\\r\\n            </td>\\r\\n            <!-- FIM - Materiais -->\\r\\n            <!-- Inicio - Estoque -->\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"estAtualBool && colsEstoque\\\">\\r\\n              {{ item.TT_ESTO_ATUA_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"estComprBool && colsEstoque\\\">\\r\\n              {{ item.TT_ESTO_COMP_TONE | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"\\r\\n                  lgModal.show() + ' ' + getEstoqueComprometidoModal(item)\\r\\n                \\\"\\r\\n                [disabled]=\\\"item.TT_ESTO_COMP_TONE == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Estoque Comprometido\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\" *ngIf=\\\"estSuspBool && colsEstoque\\\">\\r\\n              {{ item.TT_ESTO_SUSP_TONE | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"\\r\\n                  lgModal.show() + ' ' + getEstoqueSupensoModal(item)\\r\\n                \\\"\\r\\n                [disabled]=\\\"item.TT_ESTO_SUSP_TONE == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Estoque Suspendo\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.TT_ESTO_DISP_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Estoque -->\\r\\n            <!-- Inicio - Carteira -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"text-right\\\"\\r\\n              *ngFor=\\\"let column of dadosCarteiraDetalhe\\\"\\r\\n              [hidden]=\\\"!colsCarteira\\\"\\r\\n            >\\r\\n              {{ item[column.row] | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"\\r\\n                  lgModal.show() + ' ' + getCarteiraModal(item, column.id)\\r\\n                \\\"\\r\\n                [disabled]=\\\"item[column.row] == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Carteira/mês\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{ item.TT_CART_ABER_TONE | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"lgModal.show() + ' ' + getCarteiraModal(item)\\\"\\r\\n                [disabled]=\\\"item.TT_CART_ABER_TONE == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Carteira\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <!-- FIM - Carteira -->\\r\\n            <!-- Inicio - Vendas Realizadas -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"text-right\\\"\\r\\n              *ngFor=\\\"let column of dadosVendasRealDetalhe\\\"\\r\\n              [hidden]=\\\"!colsVendasReal\\\"\\r\\n            >\\r\\n              {{ item[column.row] | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"\\r\\n                  lgModal.show() + ' ' + getVendasRealModal(item, column.id)\\r\\n                \\\"\\r\\n                [disabled]=\\\"item[column.row] == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Vendas Realizadas/mês\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{ item.TT_VEND_REAL_TONE | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"lgModal.show() + ' ' + getVendasRealModal(item)\\\"\\r\\n                [disabled]=\\\"item.TT_VEND_REAL_TONE == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Vendas Realizadas\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.TT_MEDI_VEND_REAL_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Vendas Realizadas -->\\r\\n            <!-- Inicio - Vendas Perdidas -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"text-right\\\"\\r\\n              *ngFor=\\\"let column of dadosVendasPerdDetalhe\\\"\\r\\n              [hidden]=\\\"!colsVendasPerd\\\"\\r\\n            >\\r\\n              {{ item[column.row] | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"\\r\\n                  lgModal.show() + ' ' + getVendasPerdModal(item, column.id)\\r\\n                \\\"\\r\\n                [disabled]=\\\"item[column.row] == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Vendas Perdidas/mês\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{ item.TT_VEND_PERD_TONE | number: '0.3' }}\\r\\n              <button\\r\\n                class=\\\"btn-icon-sm\\\"\\r\\n                (click)=\\\"lgModal.show() + ' ' + getVendasPerdModal(item)\\\"\\r\\n                [disabled]=\\\"item.TT_VEND_PERD_TONE == 0\\\"\\r\\n              >\\r\\n                <i\\r\\n                  class=\\\"fa fa-search text-primary\\\"\\r\\n                  title=\\\"Detalhes Vendas Perdidas\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                ></i>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.TT_MEDI_VEND_PERD_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Vendas Perdidas -->\\r\\n            <!-- Inicio - Estatístico -->\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.VL_RITM_VEND_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{ item.NR_DIAS_GIRO | number }}</td>\\r\\n            <!-- FIM - Estatístico -->\\r\\n          </tr>\\r\\n          <!-- Totalizadores -->\\r\\n          <tr>\\r\\n            <!-- Inicio - Materiais -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark border-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"depositoBool\\\"\\r\\n              [ngStyle]=\\\"{ left: '0px' }\\\"\\r\\n              style=\\\"position: sticky;\\\"\\r\\n              width=\\\"180px\\\"\\r\\n            >\\r\\n              <strong>TOTAL</strong>\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '0px' : '180px' }\\\"\\r\\n              [ngClass]=\\\"!depositoBool ? 'border-dark' : ''\\\"\\r\\n              style=\\\"position: sticky;\\\"\\r\\n              width=\\\"105px\\\"\\r\\n            >\\r\\n              <strong>{{ !depositoBool ? 'TOTAL' : '' }}</strong>\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              [ngStyle]=\\\"{ left: !depositoBool ? '105px' : '272px' }\\\"\\r\\n              style=\\\"position: sticky;\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"linhaBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"subLinhaBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"classeBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"uniMedidaBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"bitolaBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"larguraBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"comprimentoBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"qualidadeBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"revestimentoBool\\\"\\r\\n            ></td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"tipoAcoBool\\\"\\r\\n            ></td>\\r\\n            <!-- FIM - Materiais -->\\r\\n            <!-- Inicio - Estoque -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"estAtualBool && colsEstoque\\\"\\r\\n            >\\r\\n              {{ dadosTotalizadores.TT_ESTO_ATUA_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"estComprBool && colsEstoque\\\"\\r\\n            >\\r\\n              {{ dadosTotalizadores.TT_ESTO_COMP_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngIf=\\\"estSuspBool && colsEstoque\\\"\\r\\n            >\\r\\n              {{ dadosTotalizadores.TT_ESTO_SUSP_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.TT_ESTO_DISP_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Estoque -->\\r\\n            <!-- Inicio - Carteira -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngFor=\\\"let column of dadosCarteiraDetalhe\\\"\\r\\n              [hidden]=\\\"!colsCarteira\\\"\\r\\n            >\\r\\n              {{ dadosTotalizadores[column.row] | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.TT_CART_ABER_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Carteira -->\\r\\n            <!-- Inicio - Vendas Realizadas -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngFor=\\\"let column of dadosVendasRealDetalhe\\\"\\r\\n              [hidden]=\\\"!colsVendasReal\\\"\\r\\n            >\\r\\n              {{ dadosTotalizadores[column.row] | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.TT_VEND_REAL_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.TT_MEDI_VEND_REAL_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Vendas Realizadas -->\\r\\n            <!-- Inicio - Vendas Perdidas -->\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center\\\"\\r\\n              *ngFor=\\\"let column of dadosVendasPerdDetalhe\\\"\\r\\n              [hidden]=\\\"!colsVendasPerd\\\"\\r\\n            >\\r\\n              {{ dadosTotalizadores[column.row] | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.TT_VEND_PERD_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.TT_MEDI_VEND_PERD_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <!-- FIM - Vendas Perdidas -->\\r\\n            <!-- Inicio - Estatístico -->\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.VL_RITM_VEND_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\">\\r\\n              {{ dadosTotalizadores.NR_DIAS_GIRO | number: '0.0' }}\\r\\n            </td>\\r\\n            <!-- FIM - Estatístico -->\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-2\\\" *ngIf=\\\"totalItems > itemsPerPageParam\\\">\\r\\n      Exibindo {{ itemsPerPageParam * (currentPage - 1) + 1 }} a\\r\\n      {{\\r\\n        currentPage * itemsPerPageParam > totalItems\\r\\n          ? totalItems\\r\\n          : currentPage * itemsPerPageParam\\r\\n      }}\\r\\n      de {{ totalItems }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPageParam\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\"\\r\\n        >\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    *ngIf=\\\"noResult && !loading\\\"\\r\\n    class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n    style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #lgModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"dialog-sizes-name1\\\"\\r\\n  [hidden]=\\\"!loadingDetalhesModal\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-xl\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n          {{ modal.title }}\\r\\n        </h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close pull-right\\\"\\r\\n          (click)=\\\"lgModal.hide() + ' ' + closeModal()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <!-- Detalhes nível de estoque -->\\r\\n        <div class=\\\"container\\\" *ngIf=\\\"nivelEstBool\\\">\\r\\n          <abastecimento-monitores-analise-compras-modal-nivel-estoque [item]=itemNivelEstoque>\\r\\n          </abastecimento-monitores-analise-compras-modal-nivel-estoque>\\r\\n        </div>\\r\\n        <!-- Detalhes Carteira -->\\r\\n        <div class=\\\"container\\\" *ngIf=\\\"carteiraBool\\\">\\r\\n          <abastecimento-monitores-analise-compras-modal-carteira [item]=itemCarteira [idMesAno]=idMesAnoCarteira>\\r\\n          </abastecimento-monitores-analise-compras-modal-carteira>\\r\\n        </div>\\r\\n        <!-- Detalhes Vendas Realizadas -->\\r\\n        <div\\r\\n          class=\\\"container\\\"\\r\\n          *ngIf=\\\"vendasRealBool\\\"\\r\\n        >\\r\\n          <abastecimento-monitores-analise-compras-modal-vendas-realizadas [item]=itemVendasRealizadas [idMesAno]=idMesAnoVendasRealizadas>\\r\\n          </abastecimento-monitores-analise-compras-modal-vendas-realizadas>\\r\\n        </div>\\r\\n        <!-- Detalhes Vendas Perdidas -->\\r\\n        <div\\r\\n          class=\\\"container\\\"\\r\\n          *ngIf=\\\"vendasPerdBool\\\"\\r\\n        >\\r\\n          <abastecimento-monitores-analise-compras-modal-vendas-perdidas [item]=itemVendasPerdidas [idMesAno]=idMesAnoVendasPerdidas>\\r\\n          </abastecimento-monitores-analise-compras-modal-vendas-perdidas>\\r\\n        </div>\\r\\n        <!-- Detalhes Estoque Supenso -->\\r\\n        <div\\r\\n        class=\\\"container\\\"\\r\\n        *ngIf=\\\"estoqueSuspBool\\\"\\r\\n        >\\r\\n          <abastecimento-monitores-analise-compras-modal-estoque-suspenso [item]=itemEstoqueSupenso>\\r\\n          </abastecimento-monitores-analise-compras-modal-estoque-suspenso>\\r\\n        </div>\\r\\n        <!-- Detalhes Estoque Comprometido -->\\r\\n        <div\\r\\n          class=\\\"container\\\"\\r\\n          *ngIf=\\\"estoqueCompBool\\\"\\r\\n        >\\r\\n          <abastecimento-monitores-analise-compras-modal-estoque-comprometido [item]=itemEstoqueComprometido>\\r\\n          </abastecimento-monitores-analise-compras-modal-estoque-comprometido>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row mb-2 mt-2\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> CÓD. MATERIAL: </strong> {{ modal.codMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> DESCRIÇÃO: </strong> {{ modal.descMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> UN. MEDIDA: </strong> {{ modal.unidadeMedida }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 text-right\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"onFilter()\\\"\\r\\n      class=\\\"btn mr-2\\\"\\r\\n    >\\r\\n      Filtrar\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"excelExport()\\\"\\r\\n      class=\\\"btn\\\"\\r\\n    >\\r\\n      Exportar Excel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">   \\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"empresas\\\">Empresa</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"empresas\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"empresas\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"depositos\\\">Deposito</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"depositos\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"depositos\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"pedidoPai\\\">Pedido/ Pedido Pai</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"pedidoPai\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"pedidoPai\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataPedido\\\">Data Pedido</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataPedido\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataPedido\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"pedidoRemessa\\\">Pedido Remessa</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"pedidoRemessa\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"pedidoRemessa\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"previsaoEntrega\\\">Previsão Entrega</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"previsaoEntrega\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"previsaoEntrega\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"fornecedor\\\">Fornecedor</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"fornecedor\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"fornecedor\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<tabset *ngIf=\\\"loadingDetalhesModal\\\">\\r\\n  <tab heading=\\\"Geral\\\" *ngIf=\\\"this.enableTabAbastInterno && this.enableTabAbastFornecedor\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('NM_EMPR_DEST')\\\"\\r\\n              class=\\\"hover text-center sticky\\\"\\r\\n              style=\\\"background-color: #fff; left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyC == 'NM_EMPR_DEST'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'NM_EMPR_DEST'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('NM_DEPO_DEST')\\\"\\r\\n              class=\\\"hover text-center sticky\\\"\\r\\n              style=\\\"background-color: #fff; left: 190px;\\\"\\r\\n            >\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyC == 'NM_DEPO_DEST'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'NM_DEPO_DEST'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Pedido\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('DT_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Data pedido\\r\\n              <span *ngIf=\\\"keyC == 'DT_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'DT_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('DT_PREV_ENTR')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Previsão entrega\\r\\n              <span *ngIf=\\\"keyC == 'DT_PREV_ENTR'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'DT_PREV_ENTR'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('NM_FORN')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Fornecedor\\r\\n              <span *ngIf=\\\"keyC == 'NM_FORN'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'NM_FORN'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('TT_ITEM_PEDI_SOLI_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume demanda (TON)\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM_PEDI_SOLI_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM_PEDI_SOLI_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('TT_ITEM_PEDI_RECE_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume recebido (TON)\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM_PEDI_RECE_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM_PEDI_RECE_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('TT_ITEM_PEDI_SALD_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume saldo (TON)\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM_PEDI_SALD_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM_PEDI_SALD_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('TT_ITEM_PEDI_SOLI')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume demanda\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM_PEDI_SOLI'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM_PEDI_SOLI'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('TT_ITEM_PEDI_RECE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume recebido\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM_PEDI_RECE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM_PEDI_RECE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortC('TT_ITEM_PEDI_SALD')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume saldo\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM_PEDI_SALD'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM_PEDI_SALD'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosCarteiraDetalhesAbastGeral | orderBy: keyC:reverseC | slice: beginC:endC;\\\">\\r\\n            <td \\r\\n              nowrap\\r\\n              class=\\\"sticky\\\"\\r\\n              style=\\\"left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              {{item.NM_EMPR_DEST}}\\r\\n            </td>\\r\\n            <td \\r\\n              nowrap \\r\\n              class=\\\"sticky\\\" \\r\\n              style=\\\"left: 190px;\\\"\\r\\n            >\\r\\n              {{item.NM_DEPO_DEST}}\\r\\n            </td>\\r\\n            <td nowrap>{{item.NR_PEDI_ORIG | number: '0.0' }}</td>\\r\\n            <td nowrap>{{item.DT_PEDI_ORIG | date: 'dd/MM/yyyy' }}</td>\\r\\n            <td nowrap>{{item.DT_PREV_ENTR | date: 'dd/MM/yyyy' }}</td>\\r\\n            <td nowrap>{{item.NM_FORN}}</td>\\r\\n            <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">{{item.TT_ITEM_PEDI_SOLI_TONE | number: '0.3' }}</td>\\r\\n            <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">{{item.TT_ITEM_PEDI_RECE_TONE | number: '0.3' }}</td>\\r\\n            <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">{{item.TT_ITEM_PEDI_SALD_TONE | number: '0.3' }}</td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SOLI | number: '0.0') : (item.TT_ITEM_PEDI_SOLI | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_RECE | number: '0.0') : (item.TT_ITEM_PEDI_RECE | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SALD | number: '0.0') : (item.TT_ITEM_PEDI_SALD | number: '0.3')}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td \\r\\n              nowrap\\r\\n              style=\\\"left: 0px;\\\"\\r\\n              width=\\\"190px\\\" class=\\\"bg-dark text-white sticky\\\">\\r\\n              TOTAL\\r\\n            </td>\\r\\n            <td \\r\\n              nowrap \\r\\n              style=\\\"left: 190px;\\\" \\r\\n              class=\\\"bg-dark text-white text-center sticky\\\">\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">{{dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_SOLI_TONE | number: '0.' }}</td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">{{dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_RECE_TONE | number: '0.' }}</td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">{{dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_SALD_TONE | number: '0.' }}</td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_SOLI | number: '0.0') : (dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_SOLI | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_RECE | number: '0.0') : (dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_RECE | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_SALD | number: '0.0') : (dadosCarteiraDetalhesAbastGeralTT.TT_ITEM_PEDI_SALD | number: '0.3')}}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"mt-2 mb-2\\\"\\r\\n      *ngIf=\\\"dadosCarteiraDetalhesAbastGeral?.length > itemsPerPage\\\"\\r\\n    >\\r\\n      Exibindo {{ beginC + 1 }} a {{ endC }} de\\r\\n      {{ dadosCarteiraDetalhesAbastGeral?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"dadosCarteiraDetalhesAbastGeral?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedC($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageC\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\"\\r\\n        >\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <tab heading=\\\"Abastecimento Interno\\\" *ngIf=\\\"enableTabAbastInterno\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table>\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NM_EMPR_DEST')\\\"\\r\\n              class=\\\"hover text-center sticky\\\"\\r\\n              style=\\\"background-color: #fff; left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyA == 'NM_EMPR_DEST'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NM_EMPR_DEST'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NM_DEPO_DEST')\\\"\\r\\n              class=\\\"hover text-center sticky\\\"\\r\\n              style=\\\"background-color: #fff; left: 190px;\\\"\\r\\n            >\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyA == 'NM_DEPO_DEST'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NM_DEPO_DEST'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Pedido PAI\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('DT_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Data pedido\\r\\n              <span *ngIf=\\\"keyA == 'DT_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'DT_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_REME')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Pedido remessa\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_REME'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_REME'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('DT_PREV_ENTR')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Previsão entrega\\r\\n              <span *ngIf=\\\"keyA == 'DT_PREV_ENTR'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'DT_PREV_ENTR'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NM_FORN')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Fornecedor\\r\\n              <span *ngIf=\\\"keyA == 'NM_FORN'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NM_FORN'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('TT_ITEM_PEDI_SOLI_DEPO_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume demanda (TON)\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_SOLI_DEPO_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_SOLI_DEPO_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('TT_ITEM_PEDI_RECE_DEPO_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume recebido (TON)\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_RECE_DEPO_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_RECE_DEPO_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('TT_ITEM_PEDI_SALD_DEPO_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume saldo (TON)\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_SALD_DEPO_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_SALD_DEPO_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('TT_ITEM_PEDI_SOLI_DEPO')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume demanda\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_SOLI_DEPO'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_SOLI_DEPO'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('TT_ITEM_PEDI_RECE_DEPO')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume recebido\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_RECE_DEPO'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_RECE_DEPO'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('TT_ITEM_PEDI_SALD_DEPO')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume saldo\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_SALD_DEPO'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_SALD_DEPO'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr\\r\\n            *ngFor=\\\"\\r\\n              let item of dadosCarteiraDetalhesAbastInterno\\r\\n                | orderBy: keyA:reverseA\\r\\n                | slice: beginA:endA;\\r\\n              let i = index\\r\\n            \\\"\\r\\n          >\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"sticky\\\"\\r\\n              style=\\\"left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              {{ item.NM_EMPR_DEST }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"sticky\\\" style=\\\"left: 190px;\\\">\\r\\n              {{ item.NM_DEPO_DEST }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.NR_PEDI_ORIG | number: '0.0' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.DT_PEDI_ORIG | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.NR_PEDI_REME | number: '0.0' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-center\\\">\\r\\n              {{ item.DT_PREV_ENTR | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td nowrap>{{ item.NM_FORN }}</td>\\r\\n            <td nowrap class=\\\"text-right\\\"  *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SOLI_DEPO_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\"  *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_RECE_DEPO_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\"  *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SALD_DEPO_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SOLI_DEPO | number: '0.0') : (item.TT_ITEM_PEDI_SOLI_DEPO | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_RECE_DEPO | number: '0.0') : (item.TT_ITEM_PEDI_RECE_DEPO | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SALD_DEPO | number: '0.0') : (item.TT_ITEM_PEDI_SALD_DEPO | number: '0.3')}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let item of dadosCarteiraDetalhesAbastTotal\\\">\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white sticky\\\"\\r\\n              style=\\\"left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              TOTAL\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center sticky\\\"\\r\\n              style=\\\"left: 190px;\\\"\\r\\n            ></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SOLI_DEPO_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_RECE_DEPO_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SALD_DEPO_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SOLI_DEPO | number: '0.0') : (item.TT_ITEM_PEDI_SOLI_DEPO | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_RECE_DEPO | number: '0.0') : (item.TT_ITEM_PEDI_RECE_DEPO | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SALD_DEPO | number: '0.0') : (item.TT_ITEM_PEDI_SALD_DEPO | number: '0.3')}}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"mt-2 mb-2\\\"\\r\\n      *ngIf=\\\"dadosCarteiraDetalhesAbastInterno?.length > itemsPerPage\\\"\\r\\n    >\\r\\n      Exibindo {{ beginA + 1 }} a {{ endA }} de\\r\\n      {{ dadosCarteiraDetalhesAbastInterno?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"dadosCarteiraDetalhesAbastInterno?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedA($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageA\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\"\\r\\n        >\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <tab\\r\\n    heading=\\\"Abastecimento Fornecedor\\\"\\r\\n    *ngIf=\\\"enableTabAbastFornecedor\\\"\\r\\n  >\\r\\n    <div class=\\\"table-responsive mt-4\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('NM_EMPR_DEST')\\\"\\r\\n              class=\\\"hover text-center sticky\\\"\\r\\n              style=\\\"background-color: #fff; left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyB == 'NM_EMPR_DEST'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_EMPR_DEST'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('NM_DEPO_DEST')\\\"\\r\\n              class=\\\"hover text-center sticky\\\"\\r\\n              style=\\\"background-color: #fff; left: 190px;\\\"\\r\\n            >\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyB == 'NM_DEPO_DEST'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_DEPO_DEST'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Pedido\\r\\n              <span *ngIf=\\\"keyB == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('DT_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Data pedido\\r\\n              <span *ngIf=\\\"keyB == 'DT_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'DT_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('DT_PREV_ENTR')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Previsão entrega\\r\\n              <span *ngIf=\\\"keyB == 'DT_PREV_ENTR'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'DT_PREV_ENTR'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('NM_FORN')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Fornecedor\\r\\n              <span *ngIf=\\\"keyB == 'NM_FORN'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_FORN'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('TT_ITEM_PEDI_SOLI_EMPR_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume demanda (TON)\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM_PEDI_SOLI_EMPR_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM_PEDI_SOLI_EMPR_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('TT_ITEM_PEDI_RECE_EMPR_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume recebido (TON)\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM_PEDI_RECE_EMPR_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM_PEDI_RECE_EMPR_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('TT_ITEM_PEDI_SALD_EMPR_TONE')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n              *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n            >\\r\\n              Volume saldo (TON)\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM_PEDI_SALD_EMPR_TONE'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM_PEDI_SALD_EMPR_TONE'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('TT_ITEM_PEDI_SOLI_EMPR')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume demanda\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM_PEDI_SOLI_EMPR'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM_PEDI_SOLI_EMPR'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('TT_ITEM_PEDI_RECE_EMPR')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume recebido\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM_PEDI_RECE_EMPR'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM_PEDI_RECE_EMPR'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortB('TT_ITEM_PEDI_SALD_EMPR')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume saldo\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM_PEDI_SALD_EMPR'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM_PEDI_SALD_EMPR'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr\\r\\n            *ngFor=\\\"\\r\\n              let item of dadosCarteiraDetalhesAbastFornecedor\\r\\n                | orderBy: keyB:reverseB\\r\\n                | slice: beginB:endB;\\r\\n              let i = index\\r\\n            \\\"\\r\\n          >\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"sticky\\\"\\r\\n              style=\\\"left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              {{ item.NM_EMPR_DEST }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"sticky\\\" style=\\\"left: 190px;\\\">\\r\\n              {{ item.NM_DEPO_DEST }}\\r\\n            </td>\\r\\n            <td nowrap>{{ item.NR_PEDI_ORIG | number: '0.0' }}</td>\\r\\n            <td nowrap>\\r\\n              {{ item.DT_PEDI_ORIG | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td nowrap>\\r\\n              {{ item.DT_PREV_ENTR | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td nowrap>{{ item.NM_FORN }}</td>\\r\\n            <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SOLI_EMPR_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_RECE_EMPR_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SALD_EMPR_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SOLI_EMPR | number: '0.0') : (item.TT_ITEM_PEDI_SOLI_EMPR | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_RECE_EMPR | number: '0.0') : (item.TT_ITEM_PEDI_RECE_EMPR | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SALD_EMPR | number: '0.0') : (item.TT_ITEM_PEDI_SALD_EMPR | number: '0.3')}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let item of dadosCarteiraDetalhesAbastTotal\\\">\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white sticky\\\"\\r\\n              style=\\\"left: 0px;\\\"\\r\\n              width=\\\"190px\\\"\\r\\n            >\\r\\n              TOTAL\\r\\n            </td>\\r\\n            <td\\r\\n              nowrap\\r\\n              class=\\\"bg-dark text-white text-center sticky\\\"\\r\\n              style=\\\"left: 190px;\\\"\\r\\n            ></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SOLI_EMPR_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_RECE_EMPR_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n              {{ item.TT_ITEM_PEDI_SALD_EMPR_TONE | number: '0.3' }}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SOLI_EMPR | number: '0.0') : (item.TT_ITEM_PEDI_SOLI_EMPR | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_RECE_EMPR | number: '0.0') : (item.TT_ITEM_PEDI_RECE_EMPR | number: '0.3')}}\\r\\n            </td>\\r\\n            <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n              {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI_SALD_EMPR | number: '0.0') : (item.TT_ITEM_PEDI_SALD_EMPR | number: '0.3')}}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"mt-2 mb-2\\\"\\r\\n      *ngIf=\\\"\\r\\n        dadosCarteiraDetalhesAbastFornecedor?.length > itemsPerPage\\r\\n      \\\"\\r\\n    >\\r\\n      Exibindo {{ beginB + 1 }} a {{ endB }} de\\r\\n      {{ dadosCarteiraDetalhesAbastFornecedor?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"dadosCarteiraDetalhesAbastFornecedor?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedB($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageB\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\"\\r\\n        >\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n</tabset>\\r\\n<div class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" *ngIf=\\\"loaderBody\\\">\\r\\n  <div class=\\\"spinner-border\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  *ngIf=\\\"noResultModal && !loadingDetalhesModal\\\"\\r\\n  class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n  style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n//Converte rota em base64\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\r\n\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from './analise-compras.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'analise-compras',\r\n  templateUrl: './analise-compras.component.html',\r\n  styleUrls: ['./analise-compras.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasComponent implements OnInit {\r\n\r\n  loaderFullScreen: boolean = true;\r\n  loaderNavbar: boolean;\r\n  loading: boolean = false;\r\n  loadingDetalhesModal: boolean = false;\r\n  noResult: boolean = false;\r\n  ativarCampoData: boolean = false;\r\n  compararDataFinal: boolean = false;\r\n  compararDataInicial: boolean = false;\r\n  compararDataFinalAtual: boolean = false;\r\n\r\n  /* Exibir Colunas */\r\n  depositoBool: boolean = false;\r\n  linhaBool: boolean = false;\r\n  subLinhaBool: boolean = false;\r\n  classeBool: boolean = false;\r\n  uniMedidaBool: boolean = false;\r\n  bitolaBool: boolean = false;\r\n  larguraBool: boolean = false;\r\n  comprimentoBool: boolean = false;\r\n  qualidadeBool: boolean = false;\r\n  revestimentoBool: boolean = false;\r\n  tipoAcoBool: boolean = false;\r\n  estAtualBool: boolean = false;\r\n  estComprBool: boolean = false;\r\n  estSuspBool: boolean = false;\r\n  colsCarteira: boolean = false;\r\n  colsVendasReal: boolean = false;\r\n  colsVendasPerd: boolean = false;\r\n  colsEstoque: boolean = false;\r\n  /* Exibir Colunas */\r\n\r\n  /* Modais */\r\n  nivelEstBool: boolean = false;\r\n  carteiraBool: boolean = false;\r\n  vendasRealBool: boolean = false;\r\n  vendasPerdBool: boolean = false;\r\n  estoqueCompBool: boolean = false;\r\n  estoqueSuspBool: boolean = false;\r\n  loadingDetalhesNivelEstoque: boolean = false;\r\n  /* Modais */\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  form: FormGroup;\r\n\r\n  breadCrumbTree: any = [];\r\n  depositos: any = [];\r\n  linhas: any = [];\r\n  subLinhas: any = [];\r\n  classes: any = [];\r\n  dados: any = [];\r\n  dadosFull: any = [];\r\n  dadosTotalizadores: any = [];\r\n  dadosExcel: any = [];\r\n  dadosCarteiraDetalhe: any = [];\r\n  dadosVendasRealDetalhe: any = [];\r\n  dadosDetalhesNivelEstoqueModal: any = [];\r\n  dadosVendasPerdDetalhe: any = [];\r\n  colsInfAdicionais: any = [];\r\n  depositosAssociados: any = [];\r\n  tiposMateriais: any = [];\r\n  tiposNiveisEstoques: any = [];\r\n  materiais: any = [];\r\n\r\n  itemEstoqueSupenso: any = []; \r\n  itemEstoqueComprometido: any = []; \r\n  itemVendasPerdidas: any = []; \r\n  itemVendasRealizadas: any = []; \r\n  itemCarteira: any = []; \r\n  itemNivelEstoque: any = []; \r\n\r\n  idMesAnoVendasPerdidas: string;\r\n  idMesAnoVendasRealizadas: string;\r\n  idMesAnoCarteira: string;\r\n\r\n  colsMat: number = 0;\r\n  colsEst: number = 1;\r\n  colsCar: number = 1;\r\n  colsVenRea: number = 2;\r\n  colsVenPed: number = 2;\r\n\r\n  /* Ordenação */\r\n  reverse: boolean = false;\r\n  key: string = 'NM_MATE';\r\n  /* Ordenação */\r\n\r\n  /* Pagination */\r\n  itemsPerPageParam = 15;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  numberOfItems = [15, 25, 50];\r\n  /* Pagination */\r\n\r\n  arrayDepositos: any = [];\r\n\r\n  periodosBusca: any = [\r\n    // { id: 1, nome: 'Padrão' },\r\n    { id: 2, nome: 'Customizado' }\r\n  ];\r\n\r\n  situacoes: any = [\r\n    { id: 1, nome: 'Ativo' },\r\n    { id: 0, nome: 'Inativo' }\r\n  ];\r\n\r\n  infAdicionaisDados: any = [];\r\n\r\n  tiposVisualizacao: any = [\r\n    { id: 'S', nome: 'Sintética por material' },\r\n    { id: 'A', nome: 'Analítica por depósito' }\r\n  ];\r\n\r\n  modal: any = [];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      text: 'Acima do máximo',\r\n      color: 'blue'\r\n    },\r\n    {\r\n      text: 'Máximo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      text: 'Médio',\r\n      color: 'yellow'\r\n    },\r\n    {\r\n      text: 'Mínimo',\r\n      color: 'red'\r\n    },\r\n    {\r\n      text: 'Sem cadastro',\r\n      color: 'gray'\r\n    }\r\n  ];\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  /* dados do usuário */\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n  /* dados do usuário */\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private titleService: TitleService,\r\n    private dateService: DateService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.form = this.formBuilder.group({\r\n      empresas: [null],\r\n      depositos: [null],\r\n      dataInicial: [null],\r\n      dataFinal: [null],\r\n      nivelEstoque: [null],\r\n      tipoMaterial: [null],\r\n      linha: [null, Validators.required],\r\n      subLinha: [null],\r\n      classe: [null],\r\n      material: [null],\r\n      paramData: [null, Validators.required],\r\n      tipoVisualizacao: [null, Validators.required],\r\n      infAdicionais: [null],\r\n      situacao: [null, Validators.required],\r\n      qtItensPagina: [this.itemsPerPageParam],\r\n      pagina: [this.currentPage],\r\n      orderBy: [null],\r\n      orderType: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setValueParamData();\r\n    setTimeout(() => {\r\n      this.loaderFullScreen = false;\r\n    }, 1000);\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.titleService.setTitle('Análise de Compras');\r\n    this.checkRouterParams();\r\n    this.getTiposMateriais();\r\n    this.getTiposNiveisEstoque();\r\n    this.getInfAdicionais();\r\n    this.getLinhas();\r\n  }\r\n\r\n  setValueParamData(){\r\n    this.form.get('paramData').setValue(2);\r\n    this.form.get('situacao').setValue(1);\r\n    this.form.get('tipoVisualizacao').setValue(\"S\");\r\n    this.enabledDate();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/abastecimento/home'\r\n        },\r\n        {\r\n          descricao: 'Monitores',\r\n          routerLink: `/abastecimento/monitores/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Análise de Compras'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  getLinhas(): void {\r\n    this.loaderNavbar = true;\r\n    this.linhas = [];\r\n\r\n    let campos = ['classe', 'subLinha', 'material', 'empresas', 'depositos'];\r\n    this.setFormDisable(campos);\r\n\r\n    let idSituacao = 1;\r\n\r\n    this.service\r\n      .getLinhas(idSituacao)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        res => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.linhas = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Linhas');\r\n        }\r\n      );\r\n  }\r\n\r\n  getSubLinhas(): void {\r\n    this.loaderNavbar = true;\r\n    let campos = ['subLinha', 'classe', 'material', 'empresas', 'depositos'];\r\n    this.setFormReset(campos);\r\n    this.setFormDisable(campos);\r\n\r\n    this.subLinhas = [];\r\n\r\n    if (this.form.get('linha').status === 'VALID') {\r\n      let descricaoLinhas = this.form.get('linha').value;\r\n      let idSituacao = 1;\r\n      this.service\r\n        .getSubLinhas(descricaoLinhas,idSituacao)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.subLinhas = res['body']['result'];\r\n                  this.setFormEnable(['subLinha']);\r\n                } else if (res['body']['responseCode'] === 404) {\r\n                  this.pnotifyService.notice('Não há sublinha cadastrada');\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar sublinhas');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.setFormDisable(['subLinha']);\r\n    }\r\n  }\r\n\r\n  getClasses(): void {\r\n    this.classes = [];\r\n    this.loaderNavbar = true;\r\n\r\n    let campos = ['classe'];\r\n    this.setFormReset(campos);\r\n\r\n    if (\r\n      this.form.value['linha'] != null &&\r\n      this.form.value['linha'].length > 0\r\n    ) {\r\n      let descricaoLinhas = this.form.get('linha').value;\r\n      let idSubLinha = this.form.get('subLinha').value;\r\n      let idSituacao = 1;\r\n\r\n      this.service\r\n        .getClasses(descricaoLinhas, idSubLinha, idSituacao)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                this.classes = res['body']['result'];\r\n                this.setFormEnable(campos);\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Classes');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.setFormDisable(campos);\r\n    }\r\n  }\r\n\r\n  getMateriais(): void {\r\n    this.materiais = [];\r\n    this.loaderNavbar = true;\r\n    let campos = ['material'];\r\n    this.setFormReset(campos);\r\n\r\n    let idClasses = this.form.get('classe').value;\r\n    let idTipoMaterial = this.form.get('tipoMaterial').value;\r\n    let idSituacao = this.form.get('situacao').value;\r\n    if (\r\n      this.form.value['classe'] != null &&\r\n      this.form.value['classe'].length > 0\r\n    ) {\r\n      this.service\r\n        .getMateriais(idClasses, idTipoMaterial, idSituacao)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res['body'].responseCode === 200) {\r\n                this.materiais = res['body'].result;\r\n                this.setFormEnable(campos);\r\n              } else if (\r\n                res['body']['responseCode'] === 204 ||\r\n                res['body']['responseCode'] === 404\r\n              ) {\r\n                this.materiais = [];\r\n                this.setFormDisable(campos);\r\n                this.pnotifyService.notice(\r\n                  'Não há materiais cadastrados para essa classe'\r\n                );\r\n              }\r\n            }\r\n            this.loaderNavbar = false;\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar filtro Materias');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.setFormDisable(campos);\r\n    }\r\n  }\r\n\r\n  getDepositosAssociados(): void {\r\n    this.loaderNavbar = true;\r\n    this.depositosAssociados = [];\r\n\r\n    let campos = ['empresas', 'depositos'];\r\n    this.setFormReset(campos);\r\n    this.setFormDisable(campos);\r\n\r\n    let idLinhas = this.form.get('linha').value;\r\n    let idClasses = this.form.get('classe').value;\r\n    let idTipoMaterial = this.form.get('tipoMaterial').value;\r\n    let idSituacao = 1;\r\n    if (\r\n      (this.form.value['classe'] != null &&\r\n        this.form.value['classe'].length > 0) ||\r\n      (this.form.value['linha'] != null && this.form.value['linha'].length > 0)\r\n    ) {\r\n      this.service\r\n        .getDepositosAssociados(idLinhas,idClasses, idTipoMaterial, idSituacao)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res['body']['responseCode'] === 200) {\r\n                this.depositosAssociados = res['body']['result'];\r\n                this.setFormEnable(['empresas']);\r\n              } else if (res['body']['responseCode'] === 404) {\r\n                this.pnotifyService.notice('Não há empresa vinculada');\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Empresas associadas');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n    }\r\n  }\r\n\r\n  getDepositos(param?): void {\r\n    this.loaderNavbar = true;\r\n    this.depositos = [];\r\n\r\n    let campos = ['depositos'];\r\n    this.setFormReset(campos);\r\n    this.setFormDisable(campos);\r\n\r\n    if (Object.keys(this.form.get('empresas').value).length > 0) {\r\n      let idsEmpresa = this.form.get('empresas').value;\r\n      let idSituacao = 1;\r\n\r\n      this.service\r\n        .getDepositos(idsEmpresa, idSituacao)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          res => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res['body']['responseCode'] === 200) {\r\n                this.depositos = res['body']['result'];\r\n                this.getArrayDepositos(param);\r\n                this.setFormEnable(campos);\r\n              } else if (res['body']['responseCode'] === 404) {\r\n                this.setFormDisable(campos);\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Depositos');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.setFormDisable(campos);\r\n    }\r\n  }\r\n\r\n  /* Função para filtrar os depositos que possue vinculo com as classes */\r\n  getArrayDepositos(event) {\r\n    let depositosFiltrados: Array<any> = [];\r\n\r\n    this.depositos.forEach(deposito => {\r\n      event.forEach(element => {\r\n        element['DEPO'].forEach(d => {\r\n          if (d['ID_DEPO'] == deposito['ID']) depositosFiltrados.push(deposito);\r\n        });\r\n      });\r\n    });\r\n\r\n    this.depositos = depositosFiltrados;\r\n  }\r\n  /* Função para filtrar os depositos que possue vinculo com as classes */\r\n\r\n  getInfAdicionais(): void {\r\n    this.loaderNavbar = true;\r\n    this.service\r\n      .getInfAdicionais()\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.infAdicionaisDados = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Informações adicionais');\r\n        }\r\n      );\r\n  }\r\n\r\n  getTiposNiveisEstoque(): void {\r\n    let idSituacao = 1;\r\n\r\n    this.loaderNavbar = true;\r\n    this.tiposNiveisEstoques = [];\r\n    this.service\r\n      .getTiposNiveisEstoque(idSituacao)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        res => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.tiposNiveisEstoques = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Tipos de Niveis de Estoque');\r\n        }\r\n      );\r\n  }\r\n\r\n  getTiposMateriais(): void {\r\n    let idSituacao = 1;\r\n\r\n    this.loaderNavbar = true;\r\n    this.tiposMateriais = [];\r\n    this.service\r\n      .getTiposMateriais(idSituacao)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        res => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res.status === 200) {\r\n              this.tiposMateriais = res['body']['result'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar Tipos de Materiais');\r\n        }\r\n      );\r\n  }\r\n\r\n  getAnaliseCompras(params) {\r\n    this.loaderNavbar = true;\r\n    this.loading = false;\r\n    this.dados = [];\r\n    this.dadosTotalizadores = [];\r\n    this.colsInfAdicionais = [];\r\n\r\n    /* função para resetar colunas adicionais */\r\n    this.resetColsInfAdicionais();\r\n\r\n    this.service\r\n      .getAnaliseCompras(params)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res['body']['responseCode'] === 200) {\r\n              /* função para habilitar as colunas adicionais */\r\n              this.colsInfAdicionais = Object.keys(res['body']['result'][0]);\r\n              this.setColsInfAdicionaisTrue();\r\n              /* função para habilitar as colunas adicionais */\r\n              this.setColsMesAno();\r\n              this.totalItems = res['body']['result'][1]['TT_REGI'];\r\n              this.dadosFull = res['body']['result'];\r\n              this.dadosTotalizadores = this.dadosFull.shift();\r\n              this.dados = this.dadosFull;\r\n\r\n              this.noResult = false;\r\n              this.loading = true;\r\n\r\n            } else if (\r\n              res['body']['responseCode'] === 204 ||\r\n              res['body']['responseCode'] === 404\r\n            ) {\r\n              this.noResult = true;\r\n              this.loading = false;\r\n              this.pnotifyService.notice('Nenhuma informação encontrada');\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.noResult = true;\r\n          this.loading = false;\r\n          this.pnotifyService.error('Erro ao carregar dados');\r\n        }\r\n      );\r\n  }\r\n\r\n  getAnaliseComprasExcel(params) {\r\n    this.loaderNavbar = true;\r\n    this.dadosExcel = [];\r\n\r\n    this.service\r\n      .getAnaliseCompras(params)\r\n      .pipe(finalize(() => (this.loaderNavbar = false)))\r\n      .subscribe(\r\n        (res: any) => {\r\n          if (Object.keys(res).length > 0) {\r\n            if (res['body']['responseCode'] === 200) {\r\n              this.dadosExcel = res['body']['result'];\r\n              this.pnotifyService.success(this.dadosExcel);\r\n            } else if (\r\n              res['body']['responseCode'] === 404\r\n            ) {\r\n              this.pnotifyService.notice('Nenhuma informação encontrada');\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.pnotifyService.error('Erro ao carregar para excel dados');\r\n        }\r\n      );\r\n  }\r\n\r\n  setColsMesAno() {\r\n    this.colsCar = 1;\r\n    this.colsVenRea = 2;\r\n    this.colsVenPed = 2;\r\n    this.dadosCarteiraDetalhe = [];\r\n    this.dadosVendasRealDetalhe = [];\r\n    this.dadosVendasPerdDetalhe = [];\r\n    let colunasCarteira = this.colsInfAdicionais;\r\n\r\n    colunasCarteira.forEach(e => {\r\n      if (e.match(/^CART_ABER_/)) {\r\n        this.colsCar = this.colsCar + 1;\r\n        this.dadosCarteiraDetalhe.push({\r\n          id: e.substring(10),\r\n          row: e,\r\n          header: e.substring(10).replace(/_/g, '/')\r\n        });\r\n      };\r\n\r\n      if (e.match(/^VEND_REAL_/)) {\r\n        this.colsVenRea = this.colsVenRea + 1;\r\n        this.dadosVendasRealDetalhe.push({\r\n          id: e.substring(10),\r\n          row: e,\r\n          header: e.substring(10).replace(/_/g, '/')\r\n        });\r\n      };\r\n\r\n      if (e.match(/^VEND_PERD_/)) {\r\n        this.colsVenPed = this.colsVenPed + 1;\r\n        this.dadosVendasPerdDetalhe.push({\r\n          id: e.substring(10),\r\n          row: e,\r\n          header: e.substring(10).replace(/_/g, '/')\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  setColsCarteiraTrue(){\r\n    this.colsCarteira = !this.colsCarteira;\r\n  }\r\n\r\n  setColsVendasRealTrue() {\r\n    this.colsVendasReal = !this.colsVendasReal;\r\n  }\r\n\r\n  setColsVendasPerdTrue() {\r\n    this.colsVendasPerd = !this.colsVendasPerd;\r\n  }\r\n\r\n  setColsEstoqueTrue() {\r\n    this.colsEstoque = !this.colsEstoque;\r\n  }\r\n\r\n  /* Seta como true as colunas que serão exibidas na tabela */\r\n  setColsInfAdicionaisTrue() {\r\n    this.colsMat = 0;\r\n    this.colsEst = 1;\r\n    this.colsInfAdicionais.forEach(element => {\r\n      if (element == 'NM_DEPO') {\r\n        this.depositoBool = true;\r\n      }\r\n      if (element == 'NM_LINH') {\r\n        this.linhaBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'NM_SUB_LINH') {\r\n        this.subLinhaBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'NM_CLAS') {\r\n        this.classeBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'NM_APOI_UNID_MEDI') {\r\n        this.uniMedidaBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'VL_MEDI') {\r\n        this.bitolaBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'VL_LARG') {\r\n        this.larguraBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'VL_COMP') {\r\n        this.comprimentoBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'DS_QUAL') {\r\n        this.qualidadeBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'DS_REVE') {\r\n        this.revestimentoBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'DS_TIPO_ACO') {\r\n        this.tipoAcoBool = true;\r\n        this.colsMat = this.colsMat + 1;\r\n      }\r\n      if (element == 'TT_ESTO_ATUA') {\r\n        this.estAtualBool = true;\r\n        this.colsEst = this.colsEst + 1;\r\n      }\r\n      if (element == 'TT_ESTO_COMP') {\r\n        this.estComprBool = true;\r\n        this.colsEst = this.colsEst + 1;\r\n      }\r\n      if (element == 'TT_ESTO_SUSP') {\r\n        this.estSuspBool = true;\r\n        this.colsEst = this.colsEst + 1;\r\n      }\r\n    });\r\n  }\r\n  /* Seta como true as colunas que serão exibidas na tabela */\r\n\r\n  /* Resetas as colunas que serão exibidas */\r\n  resetColsInfAdicionais() {\r\n    this.depositoBool = false;\r\n    this.linhaBool = false;\r\n    this.subLinhaBool = false;\r\n    this.classeBool = false;\r\n    this.uniMedidaBool = false;\r\n    this.bitolaBool = false;\r\n    this.larguraBool = false;\r\n    this.comprimentoBool = false;\r\n    this.qualidadeBool = false;\r\n    this.revestimentoBool = false;\r\n    this.tipoAcoBool = false;\r\n    this.estAtualBool = false;\r\n    this.estComprBool = false;\r\n    this.estSuspBool = false;\r\n  }\r\n  /* Resetas as colunas que serão exibidas */\r\n\r\n  setFormDisable(selects) {\r\n    selects.forEach(element => {\r\n      return this.form.get(element).disable();\r\n    });\r\n  }\r\n\r\n  setFormEnable(selects) {\r\n    selects.forEach(element => {\r\n      return this.form.get(element).enable();\r\n    });\r\n  }\r\n\r\n  setFormReset(selects) {\r\n    selects.forEach(element => {\r\n      return this.form.get(element).reset();\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): void {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let _response = this.routerService.getBase64UrlParams(queryParams);\r\n          //busca de dados\r\n          this.getAnaliseCompras(_response);\r\n          this.setFormValues(_response);\r\n        }\r\n      }\r\n    );\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  setFormValues(queryParams) {\r\n    let empresas = queryParams['empresas'] ? queryParams['empresas'] : null;\r\n    let depositos = queryParams['depositos'] ? queryParams['depositos'] : null;\r\n    let nivelEstoque = queryParams['nivelEstoque']\r\n      ? queryParams['nivelEstoque']\r\n      : null;\r\n    let tipoMaterial = queryParams['tipoMaterial']\r\n      ? queryParams['tipoMaterial']\r\n      : null;\r\n    let situacao = queryParams['situacao'];\r\n    let linha = queryParams['linha'] ? queryParams['linha'] : null;\r\n    let subLinha = queryParams['subLinha'] ? queryParams['subLinha'] : null;\r\n    let classe = queryParams['classe'] ? queryParams['classe'] : [];\r\n    let material = queryParams['material'] ? queryParams['material'] : null;\r\n    let paramData = queryParams['paramData'] ? queryParams['paramData'] : null;\r\n    let dataInicial = queryParams['dataInicial']\r\n      ? queryParams['dataInicial']\r\n      : null;\r\n    let dataFinal = queryParams['dataFinal'] ? queryParams['dataFinal'] : null;\r\n    let tipoVisualizacao = queryParams['tipoVisualizacao']\r\n      ? queryParams['tipoVisualizacao']\r\n      : null;\r\n    let infAdicionais = queryParams['infAdicionais']\r\n      ? queryParams['infAdicionais']\r\n      : null;\r\n    //let pagina = queryParams['pagina'];\r\n    let orderBy = queryParams['orderBy'];\r\n    let orderType = queryParams['orderType'];\r\n\r\n    \r\n    if(paramData == 2){\r\n      this.setFormEnable(['dataInicial', 'dataFinal']);\r\n    }\r\n    \r\n    this.currentPage = queryParams['pagina'];\r\n\r\n    this.itemsPerPageParam = queryParams['qtItensPagina'];\r\n\r\n    this.key = orderBy;\r\n\r\n    if (orderType === \"ASC\") {\r\n      this.reverse = false;\r\n    } else if (orderType === \"DESC\") {\r\n      this.reverse = true;\r\n    }\r\n\r\n    //consulta para recarregamento dos dados no form\r\n    this.getDadosForm({ empresas, linha, classe, tipoMaterial, situacao });\r\n\r\n    this.form.patchValue({\r\n      empresas: empresas,\r\n      depositos: depositos,\r\n      nivelEstoque: nivelEstoque,\r\n      tipoMaterial: tipoMaterial,\r\n      situacao: situacao,\r\n      linha: linha,\r\n      subLinha: subLinha,\r\n      classe: classe,\r\n      material: material,\r\n      paramData: paramData,\r\n      dataInicial: dataInicial,\r\n      dataFinal: dataFinal,\r\n      tipoVisualizacao: tipoVisualizacao,\r\n      infAdicionais: infAdicionais,\r\n      qtItensPagina: this.itemsPerPageParam,\r\n      pagina: this.currentPage,\r\n      orderBy: orderBy,\r\n      orderType: orderType\r\n    });\r\n\r\n  }\r\n\r\n  /* Consulta para recarregamento de dados nos selects dos form */\r\n  getDadosForm(params) {\r\n    /* Alimenta select Sublinha */\r\n    if (params['linha'] !== null) {\r\n      let campos = ['subLinha'];\r\n\r\n      this.service\r\n        .getSubLinhas(params['linha'], 1)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                if (res['body']['responseCode'] === 200) {\r\n                  this.subLinhas = res['body']['result'];\r\n                  this.setFormEnable(campos);\r\n                } else if (res['body']['responseCode'] === 404) {\r\n                  this.setFormDisable(campos);\r\n                }\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Sublinhas');\r\n          }\r\n        );\r\n    } else {\r\n      this.setFormDisable(['subLinha']);\r\n    }\r\n\r\n    /* Alimenta select Classes */\r\n    if (params['linha'] !== null) {\r\n      let campos = ['classe'];\r\n\r\n      this.service\r\n        .getClasses(params['linha'], params['subLinha'], 1)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                this.classes = res['body']['result'];\r\n                this.setFormEnable(campos);\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Classes');\r\n          }\r\n        );\r\n    }\r\n\r\n    /* Alimenta select Materiais */\r\n    if (Object.keys(params['classe']).length > 0) {\r\n      let campos = ['material'];\r\n\r\n      this.service\r\n        .getMateriais(\r\n          params['classe'],\r\n          params['tipoMaterial'],\r\n          params['situacao']\r\n        )\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res['body'].responseCode === 200) {\r\n                this.materiais = res['body'].result;\r\n                this.setFormEnable(campos);\r\n              } else if (\r\n                res['body']['responseCode'] === 204 ||\r\n                res['body']['responseCode'] === 404\r\n              ) {\r\n                this.setFormDisable(campos);\r\n                this.pnotifyService.notice(\r\n                  'Não há materiais cadastrados para essa classe'\r\n                );\r\n              }\r\n            }\r\n            this.loaderNavbar = false;\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar filtro Materias');\r\n          }\r\n        );\r\n    } else {\r\n      this.loaderNavbar = false;\r\n      this.setFormDisable(['material']);\r\n    }\r\n\r\n    /* Alimenta o select de empresas */\r\n    if (Object.keys(params['linha']).length > 0) {\r\n      let campos = ['empresas'];\r\n      this.service\r\n        .getDepositosAssociados(\r\n          params['linha'],\r\n          params['classe'],\r\n          params['tipoMaterial'],\r\n          1\r\n        )\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                this.depositosAssociados = res['body']['result'];\r\n                this.setFormEnable(campos);\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Depositos associados');\r\n          }\r\n        );\r\n    }\r\n\r\n    /* Alimenta select depositos */\r\n    if (params['empresas'] !== null) {\r\n      let campos = ['depositos'];\r\n\r\n      this.service\r\n        .getDepositos(params['empresas'], 1)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (res: any) => {\r\n            if (Object.keys(res).length > 0) {\r\n              if (res.status === 200) {\r\n                this.depositos = res['body']['result'];\r\n                this.setFormEnable(campos);\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.pnotifyService.error('Erro ao carregar Depositos');\r\n          }\r\n        );\r\n    } else {\r\n      this.setFormEnable(['depositos']);\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    let camposReset = [\r\n      'linha',\r\n      'subLinha',\r\n      'classe',\r\n      'material',\r\n      'empresas',\r\n      'depositos'\r\n    ];\r\n    let camposDisable = [\r\n      'subLinha',\r\n      'classe',\r\n      'material',\r\n      'empresas',\r\n      'depositos'\r\n    ];\r\n    this.setFormReset(camposReset);\r\n    this.setFormDisable(camposDisable);\r\n  }\r\n\r\n  onFilter(pagina) {\r\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\r\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\r\n\r\n    this.itemsPerPageParam = this.form.value['qtItensPagina'];\r\n    this.key = this.form.value['orderBy'];\r\n\r\n    this.setRouterParams({\r\n      empresas: this.form.value['empresas'],\r\n      depositos: this.form.value['depositos'],\r\n      nivelEstoque: this.form.value['nivelEstoque'],\r\n      tipoMaterial: this.form.value['tipoMaterial'],\r\n      situacao: this.form.value['situacao'],\r\n      linha: this.form.value['linha'],\r\n      subLinha: this.form.value['subLinha'],\r\n      classe: this.form.value['classe'],\r\n      material: this.form.value['material'],\r\n      paramData: this.form.value['paramData'],\r\n      dataInicial: dataInicial,\r\n      dataFinal: dataFinal,\r\n      tipoVisualizacao: this.form.value['tipoVisualizacao'],\r\n      infAdicionais: this.form.value['infAdicionais'],\r\n      qtItensPagina: this.form.value['qtItensPagina'],\r\n      pagina: pagina,\r\n      orderBy: this.form.value['orderBy'],\r\n      orderType: this.form.value['orderType']\r\n    });\r\n  }\r\n\r\n  setRouterParams(params) {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(params)\r\n    });\r\n    this.getAnaliseCompras(params);\r\n  }\r\n\r\n  /* Modals */\r\n\r\n  getNivelEstoqueModal(item) {\r\n    this.itemNivelEstoque = item;\r\n    this.modal.title=\"NÍVEL DE ESTOQUE\";\r\n\r\n    this.loadingDetalhesModal = true;\r\n    this.nivelEstBool = true;\r\n  }\r\n\r\n  getCarteiraModal(item, idMesAno) {\r\n    this.itemCarteira = item;\r\n    this.idMesAnoCarteira = idMesAno;\r\n    this.modal.title = \"CARTEIRA\";\r\n\r\n    this.carteiraBool = true;\r\n    this.loadingDetalhesModal = true;\r\n  }\r\n\r\n  getVendasRealModal(item, idMesAno) {\r\n    this.itemVendasRealizadas = item;\r\n    this.idMesAnoVendasRealizadas = idMesAno;\r\n    this.modal.title=\"VENDAS REALIZADAS\";\r\n\r\n    this.loadingDetalhesModal = true;\r\n    this.vendasRealBool = true;\r\n  }\r\n\r\n  \r\n  getVendasPerdModal(item, idMesAno) {\r\n    this.vendasPerdBool = true;\r\n    this.loadingDetalhesModal = true;\r\n\r\n    this.modal.title=\"VENDAS PERDIDAS\";\r\n    this.itemVendasPerdidas = item;\r\n    this.idMesAnoVendasPerdidas = idMesAno;\r\n  }\r\n\r\n  getEstoqueSupensoModal(item) {\r\n    this.loadingDetalhesModal = true;\r\n    this.estoqueSuspBool = true;\r\n\r\n    this.modal.title=\"ESTOQUE SUSPENSO\";\r\n    this.itemEstoqueSupenso = item;\r\n  }\r\n  \r\n  getEstoqueComprometidoModal(item) {\r\n    this.loadingDetalhesModal = true;\r\n    this.estoqueCompBool = true;\r\n\r\n    this.modal.title=\"ESTOQUE COMPROMETIDO\";\r\n    this.itemEstoqueComprometido = item;\r\n  }\r\n\r\n  closeModal(){\r\n    this.vendasPerdBool = false;\r\n    this.vendasRealBool = false;\r\n    this.carteiraBool = false;\r\n    this.nivelEstBool = false;\r\n    this.estoqueSuspBool = false;\r\n    this.estoqueCompBool = false;\r\n  }\r\n\r\n  /* Modals */\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  activeInputDate() {\r\n    if (this.form.value['paramData'] == 2) {\r\n      this.enabledDate();\r\n    } else if (this.form.value['paramData'] == 1) {\r\n      this.disabledDate();\r\n    }\r\n  }\r\n\r\n  disabledDate() {\r\n    let campoData = ['dataInicial', 'dataFinal'];\r\n    this.setFormReset(campoData);\r\n    this.setFormDisable(campoData);\r\n  }\r\n\r\n  enabledDate() {\r\n    let campoData = ['dataInicial', 'dataFinal'];\r\n    let today = new Date;\r\n    this.setFormReset(campoData);\r\n    this.setFormEnable(campoData);\r\n    this.form.get('dataInicial').setValue(this.getLastThreeMonthsDay());\r\n    this.form.get('dataFinal').setValue(today);\r\n  }\r\n\r\n  getLastThreeMonthsDay(){\r\n    let date = new Date();\r\n    date.setMonth(date.getMonth() - 3);\r\n    return date;\r\n  }\r\n\r\n  setDateValid(date) {\r\n    if (date instanceof Date) {\r\n      date = this.dateService.convertToUrlDate(date);\r\n    }\r\n    return date;\r\n  }\r\n\r\n  comparaData() {\r\n    let stra = this.form.get('dataInicial').value;\r\n    let strb = this.form.get('dataFinal').value;\r\n    let dataInicial = {};\r\n    let dataFinal = {};\r\n\r\n    if (stra instanceof Date) {\r\n      dataInicial = stra;\r\n    } else if(stra !== null) {\r\n      dataInicial = new Date(stra.split('-').reverse().join('-'));\r\n    }\r\n\r\n    if (strb instanceof Date) {\r\n      dataFinal = strb;\r\n    } else if(strb !== null) {\r\n      dataFinal = new Date(strb.split('-').reverse().join('-'));;\r\n    }\r\n\r\n    if (!dataInicial) {\r\n      this.compararDataFinal = false;\r\n      return false;\r\n    } else if (dataInicial > dataFinal) {\r\n      this.compararDataFinal = true;\r\n      return this.compararDataFinal;\r\n    }\r\n  }\r\n\r\n  comparaDataFinal() {\r\n    let now = new Date();\r\n    if (!this.form.get('dataFinal').value) {\r\n      this.compararDataFinalAtual = false;\r\n      return false;\r\n    } else if (this.form.get('dataFinal').value > now) {\r\n      this.compararDataFinalAtual = true;\r\n      return this.compararDataFinalAtual;\r\n    }\r\n  }\r\n\r\n  comparaDataInicial() {\r\n    let now = new Date();\r\n    if (!this.form.get('dataInicial').value) {\r\n      this.compararDataInicial = false;\r\n      return false;\r\n    } else if (this.form.get('dataInicial').value > now) {\r\n      this.compararDataInicial = true;\r\n      return this.compararDataInicial;\r\n    }\r\n  }\r\n\r\n  excelExport() {\r\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\r\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\r\n\r\n    let queryParams = {\r\n      empresas: this.form.value['empresas'],\r\n      depositos: this.form.value['depositos'],\r\n      nivelEstoque: this.form.value['nivelEstoque'],\r\n      tipoMaterial: this.form.value['tipoMaterial'],\r\n      situacao: this.form.value['situacao'],\r\n      linha: this.form.value['linha'],\r\n      subLinha: this.form.value['subLinha'],\r\n      classe: this.form.value['classe'],\r\n      material: this.form.value['material'],\r\n      paramData: this.form.value['paramData'],\r\n      dataInicial: dataInicial,\r\n      dataFinal: dataFinal,\r\n      tipoVisualizacao: this.form.value['tipoVisualizacao'],\r\n      infAdicionais: this.form.value['infAdicionais'],\r\n      qtItensPagina: \"\",\r\n      pagina: \"\",\r\n      idUsuario: this.idUsuario,\r\n      relatorioExcel: 1\r\n    }\r\n    \r\n    this.getAnaliseComprasExcel(queryParams);\r\n  }\r\n\r\n  setColorBorder(i) {\r\n    let border:string;\r\n    \r\n    if( i == 'RED') {\r\n      border = 'border-danger';\r\n    }\r\n    if( i == 'YELLOW') {\r\n      border = 'border-warning';\r\n    }\r\n    if( i == 'GREEN') {\r\n      border = 'border-success';\r\n    }\r\n    if( i == 'BLUE') {\r\n      border = 'border-primary';\r\n    }\r\n    if( i == 'GREY') {\r\n      border = 'border-secondary';\r\n    }\r\n\r\n    return border;\r\n  }\r\n\r\n  /* Ordenação via API*/\r\n  sort(key) {\r\n  \r\n    if(this.key != key) {\r\n      this.reverse = true;\r\n    } else if( this.key == key ) {\r\n      this.reverse = !this.reverse;\r\n    }\r\n\r\n    this.key = key;\r\n    \r\n    if (this.reverse == false) {\r\n      this.form.get('orderType').setValue(\"ASC\");\r\n    } else if (this.reverse == true) {\r\n      this.form.get('orderType').setValue(\"DESC\");\r\n    }\r\n\r\n    this.form.get('orderBy').setValue(this.key);\r\n    this.onFilter(this.currentPage);\r\n  }\r\n  /* Ordenação via API*/\r\n\r\n  /* Paginação Tabela Principal*/\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    if (this.currentPage != event.page ) {\r\n      this.currentPage = event.page;\r\n      this.onFilter(this.currentPage);\r\n    }\r\n  }\r\n  /* Paginação */\r\n}","export default \"<div class=\\\"row mb-2 mt-2\\\" id=\\\"header-modal-estoque-suspenso\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> CÓD. MATERIAL: </strong>\\r\\n      {{ modal.codMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> DESCRIÇÃO: </strong>\\r\\n      {{ modal.descMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 text-right\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"onFilter()\\\" class=\\\"btn mr-2\\\">\\r\\n      Filtrar\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"excelExport()\\\" class=\\\"btn\\\">\\r\\n      Exportar Excel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"empresas\\\">Empresas</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"empresas\\\" type=\\\"text\\\" formControlName=\\\"empresas\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"depositos\\\">Depósito</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"depositos\\\" type=\\\"text\\\" formControlName=\\\"depositos\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataEntrada\\\">Data entrada/lançamento</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"dataEntrada\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataEntrada\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"notaFiscal\\\">Nota Fiscal</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"notaFiscal\\\" type=\\\"text\\\" formControlName=\\\"notaFiscal\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"motivo\\\">Motivo</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"motivo\\\" type=\\\"text\\\" formControlName=\\\"motivo\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<tabset *ngIf=\\\"(!estoqueSupensoEntradaMaterialEmpty || !estoqueSupensoGeralEmpty)  && !loaderBody\\\">\\r\\n  <tab heading=\\\"Inventário\\\" *ngIf=\\\"!estoqueSupensoGeralEmpty\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th nowrap (click)=\\\"sortA('NM_EMPR')\\\" class=\\\"hover text-center\\\">\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyA == 'NM_EMPR'\\\"><i [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyA != 'NM_EMPR'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortA('NM_DEPO')\\\" class=\\\"hover text-center\\\">\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyA == 'NM_DEPO'\\\"><i [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyA != 'NM_DEPO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <!-- <th nowrap (click)=\\\"sortA('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Data Lançamento\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th> -->\\r\\n            <th nowrap (click)=\\\"sortA('DS_MOTI')\\\" class=\\\"hover text-center\\\">\\r\\n              Motivo\\r\\n              <span *ngIf=\\\"keyA == 'DS_MOTI'\\\"><i [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyA != 'DS_MOTI'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortA('TT_ITEM')\\\" class=\\\"hover text-center\\\">\\r\\n              Volume\\r\\n              <span *ngIf=\\\"keyA == 'TT_ITEM'\\\"><i [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyA != 'TT_ITEM'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosEstoqueSuspensoInventario | orderBy: keyA:reverseA | slice: beginA:endA;\\\">\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_EMPR}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_DEPO}}</td>\\r\\n<!--             <td nowrap class=\\\"text-center\\\">sem data lançamento</td> -->\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.DS_MOTI}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">Total</td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <!-- <td nowrap class=\\\"text-center text-white bg-dark\\\"></td> -->\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">{{dadosEstoqueSuspensoInventarioTotal.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"dadosEstoqueSuspensoInventario?.length > itemsPerPage\\\">\\r\\n      Exibindo {{ beginA + 1 }} a {{ endA }} de\\r\\n      {{ dadosEstoqueSuspensoInventario?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination [maxSize]=\\\"10\\\" [totalItems]=\\\"dadosEstoqueSuspensoInventario?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedA($event)\\\" [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageA\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <tab heading=\\\"Entrada de materias\\\" *ngIf=\\\"!estoqueSupensoEntradaMaterialEmpty\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th nowrap (click)=\\\"sortB('NM_EMPR')\\\" class=\\\"hover text-center\\\">\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyB == 'NM_EMPR'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_EMPR'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NM_DEPO')\\\" class=\\\"hover text-center\\\">\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyB == 'NM_DEPO'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_DEPO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NR_RELA')\\\" class=\\\"hover text-center\\\">\\r\\n              Relatório\\r\\n              <span *ngIf=\\\"keyB == 'NR_RELA'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NR_RELA'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('DT_ENTR')\\\" class=\\\"hover text-center\\\">\\r\\n              Data Entrada\\r\\n              <span *ngIf=\\\"keyB == 'DT_ENTR'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'DT_ENTR'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NR_NOTA_FISC')\\\" class=\\\"hover text-center\\\">\\r\\n              Nota Fiscal\\r\\n              <span *ngIf=\\\"keyB == 'NR_NOTA_FISC'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NR_NOTA_FISC'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NM_FORN')\\\" class=\\\"hover text-center\\\">\\r\\n              Fornecedor\\r\\n              <span *ngIf=\\\"keyB == 'NM_FORN'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_FORN'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NR_LOTE')\\\" class=\\\"hover text-center\\\">\\r\\n              Lote\\r\\n              <span *ngIf=\\\"keyB == 'NR_LOTE'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NR_LOTE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('TT_ITEM')\\\" class=\\\"hover text-center\\\">\\r\\n              Volume\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosEstoqueSuspensoEntradaMaterial | orderBy: keyB:reverseB | slice: beginB:endB;\\\">\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_EMPR}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_DEPO}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NR_RELA | number: '0.0'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.DT_ENTR | date: 'dd/MM/yyyy'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NR_NOTA_FISC | number: '0.0'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_FORN}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NR_LOTE | number: '0.0'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">Total</td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">{{dadosEstoqueSuspensoEntradaMaterialTotal.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"\\r\\n        dadosEstoqueSuspensoEntradaMaterial?.length > itemsPerPage\\r\\n      \\\">\\r\\n      Exibindo {{ beginB + 1 }} a {{ endB }} de\\r\\n      {{ dadosEstoqueSuspensoEntradaMaterial?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination [maxSize]=\\\"10\\\" [totalItems]=\\\"dadosEstoqueSuspensoEntradaMaterial?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedB($event)\\\" [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageB\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <!-- <tab heading=\\\"Inventário\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Relatório\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Data lançamento\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Usuário\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Motivo\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PEDI_ORIG')\\\" class=\\\"hover text-center\\\">\\r\\n              Volume\\r\\n              <span *ngIf=\\\"keyC == 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PEDI_ORIG'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosEstoqueSuspensoInventario | orderBy: keyC:reverseC | slice: beginC:endC;\\\">\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"dadosEstoqueSuspensoInventario?.length > itemsPerPage\\\">\\r\\n      Exibindo {{ beginC + 1 }} a {{ endC }} de\\r\\n      {{ dadosEstoqueSuspensoInventario?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination [maxSize]=\\\"10\\\" [totalItems]=\\\"dadosEstoqueSuspensoInventario?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedC($event)\\\" [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageC\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab> -->\\r\\n</tabset>\\r\\n<div class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" *ngIf=\\\"loaderBody\\\">\\r\\n  <div class=\\\"spinner-border\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"estoqueSupensoEntradaMaterialEmpty && estoqueSupensoGeralEmpty && !loaderBody\\\"\\r\\n  class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" style=\\\"height: 80%;\\\">\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { BsLocaleService } from 'ngx-bootstrap';\r\n\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from '../analise-compras.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'abastecimento-monitores-analise-compras-modal-nivel-estoque',\r\n  templateUrl: './modal-nivel-estoque.component.html',\r\n  styleUrls: ['./modal-nivel-estoque.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasModalNivelEstoqueComponent implements OnInit {\r\n\r\n  @Input() item;\r\n\r\n  loadingDetalhesModal:boolean = false;\r\n  noResultModal:boolean = false;\r\n  loaderBody = false;\r\n\r\n  dadosDetalhesNivelEstoqueModal: any = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService,\r\n    private pnotifyService: PNotifyService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setParamsNivelEstoque();\r\n  }\r\n\r\n  setParamsNivelEstoque() {\r\n    let queryParams = this.routerService.getBase64UrlParams(this.activatedRoute.snapshot.queryParams);\r\n    let dataInicial = queryParams[\"dataInicial\"];\r\n    let dataFinal = queryParams[\"dataFinal\"];\r\n  \r\n    let params: any = [];\r\n    let tipoVisualizacao = queryParams[\"tipoVisualizacao\"];\r\n    let idDeposito;\r\n    let idMaterial = this.item[\"ID_MATE\"];\r\n  \r\n    if(tipoVisualizacao == 'S') {\r\n      idDeposito = queryParams[\"depositos\"];\r\n    } else if(tipoVisualizacao == 'A') {\r\n      idDeposito = this.item[\"ID_DEPO\"];\r\n    }\r\n  \r\n    params = ({idMaterial, idDeposito, dataInicial, dataFinal});\r\n    \r\n    this.getNivelEstoqueDetalhes(params);\r\n  }\r\n\r\n  getNivelEstoqueDetalhes(params) {\r\n    this.loaderBody = true;\r\n    this.loadingDetalhesModal = false;\r\n    this.noResultModal = false;\r\n\r\n    this.dadosDetalhesNivelEstoqueModal = [];\r\n    \r\n    this.service.getNiveisEstoqueDetalhes(params)\r\n    .pipe(\r\n      finalize(() => this.loaderBody = false)\r\n    )\r\n    .subscribe((res: any) => {\r\n      if (Object.keys(res).length > 0) {\r\n        if(res.status === 200) {\r\n          if(res['body']['responseCode'] === 200) {\r\n            this.loadingDetalhesModal = true;\r\n            this.noResultModal = false;\r\n            this.dadosDetalhesNivelEstoqueModal = res['body']['result'][0];\r\n          } else  if(res['body']['responseCode'] === 404) {\r\n            this.noResultModal = true;\r\n            this.loadingDetalhesModal = false;\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      }\r\n    },\r\n    error => {\r\n      this.noResultModal = true;\r\n      this.loadingDetalhesModal = false;\r\n      this.pnotifyService.error('Erro ao detalhes de niveis de estoque');\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"#header-modal-estoque-suspenso > div > button:hover {\\n  background-color: #e6ebf1;\\n  background-image: linear-gradient(-180deg, #f0f3f6, #e6ebf1 90%);\\n  background-position: -0.5em;\\n  border-color: rgba(27, 31, 35, 0.35);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL21vbml0b3Jlcy9hbmFsaXNlLWNvbXByYXMvbW9kYWwtZXN0b3F1ZS1zdXNwZW5zby9tb2RhbC1lc3RvcXVlLXN1c3BlbnNvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFFQSxnRUFBQTtFQUNBLDJCQUFBO0VBQ0Esb0NBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9tb25pdG9yZXMvYW5hbGlzZS1jb21wcmFzL21vZGFsLWVzdG9xdWUtc3VzcGVuc28vbW9kYWwtZXN0b3F1ZS1zdXNwZW5zby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNoZWFkZXItbW9kYWwtZXN0b3F1ZS1zdXNwZW5zbyA+IGRpdiA+IGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZWJmMTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNmMGYzZjYpLCBjb2xvci1zdG9wKDkwJSwgI2U2ZWJmMSkpO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCAjZjBmM2Y2LCAjZTZlYmYxIDkwJSk7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTAuNWVtO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiYSgyNywgMzEsIDM1LCAwLjM1KTtcclxufSJdfQ== */\";","export default \"<div class=\\\"row mb-2 mt-2\\\" id=\\\"header-modal-estoque-comprometido\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> CÓD. MATERIAL: </strong> {{ modal.codMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> DESCRIÇÃO: </strong> {{ modal.descMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 text-right\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"onFilter()\\\" class=\\\"btn mr-2\\\">\\r\\n      Filtrar\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"excelExport()\\\" class=\\\"btn\\\">\\r\\n      Exportar Excel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"empresas\\\">Empresas</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"empresas\\\" type=\\\"text\\\" formControlName=\\\"empresas\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"depositos\\\">Depósito</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"depositos\\\" type=\\\"text\\\" formControlName=\\\"depositos\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-1\\\">\\r\\n        <label for=\\\"numero\\\">Número</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"numero\\\" type=\\\"text\\\" formControlName=\\\"numero\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-1\\\">\\r\\n        <label for=\\\"itemFiltro\\\">Item</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"itemFiltro\\\" type=\\\"text\\\" formControlName=\\\"itemFiltro\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"data\\\">Data</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"data\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" formControlName=\\\"data\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"cliente\\\">Cliente</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"cliente\\\" type=\\\"text\\\" formControlName=\\\"cliente\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"vendedor\\\">Promotor</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"vendedor\\\" type=\\\"text\\\" formControlName=\\\"vendedor\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<tabset *ngIf=\\\"(!estoqueComprometidoPlanoCorteEmpty || !estoqueComprometidoPedidoVendasEmpty) && !loaderBody\\\">\\r\\n  <!-- <tab heading=\\\"Geral\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Número\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Item\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Data Lançamento\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n            <th\\r\\n              nowrap\\r\\n              (click)=\\\"sortA('NR_PEDI_ORIG')\\\"\\r\\n              class=\\\"hover text-center\\\"\\r\\n            >\\r\\n              Volume\\r\\n              <span *ngIf=\\\"keyA == 'NR_PEDI_ORIG'\\\"\\r\\n                ><i\\r\\n                  [ngClass]=\\\"\\r\\n                    reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"\\r\\n                ></i\\r\\n              ></span>\\r\\n              <span *ngIf=\\\"keyA != 'NR_PEDI_ORIG'\\\"\\r\\n                ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n              ></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosEstoqueComprometidoGeral | orderBy: keyA:reverseA | slice: beginA:endA;\\\">\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n            <td nowrap class=\\\"text-center\\\">asdasdas</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"mt-2 mb-2\\\"\\r\\n      *ngIf=\\\"dadosEstoqueComprometidoGeral?.length > itemsPerPage\\\"\\r\\n    >\\r\\n      Exibindo {{ beginA + 1 }} a {{ endA }} de\\r\\n      {{ dadosEstoqueComprometidoGeral?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"10\\\"\\r\\n          [totalItems]=\\\"dadosEstoqueComprometidoGeral?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedA($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageA\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\"\\r\\n        >\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab> -->\\r\\n  <tab heading=\\\"Pedido de Vendas\\\" *ngIf=\\\"!estoqueComprometidoPedidoVendasEmpty\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th nowrap (click)=\\\"sortB('NM_EMPR')\\\" class=\\\"hover text-center\\\">\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyB == 'NM_EMPR'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_EMPR'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NM_DEPO')\\\" class=\\\"hover text-center\\\">\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyB == 'NM_DEPO'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_DEPO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NR_PEDI')\\\" class=\\\"hover text-center\\\">\\r\\n              Número\\r\\n              <span *ngIf=\\\"keyB == 'NR_PEDI'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NR_PEDI'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NR_ITEM_PEDI')\\\" class=\\\"hover text-center\\\">\\r\\n              Item\\r\\n              <span *ngIf=\\\"keyB == 'NR_ITEM_PEDI'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NR_ITEM_PEDI'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('DT_EMIS')\\\" class=\\\"hover text-center\\\">\\r\\n              Data\\r\\n              <span *ngIf=\\\"keyB == 'DT_EMIS'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'DT_EMIS'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NM_CLIE')\\\" class=\\\"hover text-center\\\">\\r\\n              Cliente\\r\\n              <span *ngIf=\\\"keyB == 'NM_CLIE'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_CLIE'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('NM_VEND')\\\" class=\\\"hover text-center\\\">\\r\\n              Vendedor\\r\\n              <span *ngIf=\\\"keyB == 'NM_VEND'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'NM_VEND'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortB('TT_ITEM')\\\" class=\\\"hover text-center\\\">\\r\\n              Volume\\r\\n              <span *ngIf=\\\"keyB == 'TT_ITEM'\\\"><i [ngClass]=\\\"\\r\\n                    reverseB ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyB != 'TT_ITEM'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosEstoqueComprometidoPedidoVendas | orderBy: keyB:reverseB | slice: beginB:endB;\\\">\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_EMPR}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_DEPO}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NR_PEDI | number: '0.0'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NR_ITEM_PEDI | number: '0.0'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.DT_EMIS | date: 'dd/MM/yyyy'}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_CLIE}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.NM_VEND}}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{item.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">Total</td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">\\r\\n              {{dadosEstoqueComprometidoPedidoVendasTotal.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"\\r\\n        dadosEstoqueComprometidoPedidoVendas?.length > itemsPerPage\\r\\n      \\\">\\r\\n      Exibindo {{ beginB + 1 }} a {{ endB }} de\\r\\n      {{ dadosEstoqueComprometidoPedidoVendas?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination [maxSize]=\\\"10\\\" [totalItems]=\\\"dadosEstoqueComprometidoPedidoVendas?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedB($event)\\\" [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageB\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <tab heading=\\\"Plano de Corte\\\" *ngIf=\\\"!estoqueComprometidoPlanoCorteEmpty\\\">\\r\\n    <div class=\\\"table-responsive mt-2\\\">\\r\\n      <custom-table subtitleBorder=\\\"true\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th nowrap (click)=\\\"sortC('NM_EMPR')\\\" class=\\\"hover text-center\\\">\\r\\n              Empresa\\r\\n              <span *ngIf=\\\"keyC == 'NM_EMPR'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NM_EMPR'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NM_DEPO')\\\" class=\\\"hover text-center\\\">\\r\\n              Depósito\\r\\n              <span *ngIf=\\\"keyC == 'NM_DEPO'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NM_DEPO'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('NR_PLAN_CORT')\\\" class=\\\"hover text-center\\\">\\r\\n              Plano de Corte\\r\\n              <span *ngIf=\\\"keyC == 'NR_PLAN_CORT'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'NR_PLAN_CORT'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('DT_PLAN_CORT')\\\" class=\\\"hover text-center\\\">\\r\\n              Data Plano\\r\\n              <span *ngIf=\\\"keyC == 'DT_PLAN_CORT'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'DT_PLAN_CORT'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n            <th nowrap (click)=\\\"sortC('TT_ITEM')\\\" class=\\\"hover text-center\\\">\\r\\n              Volume\\r\\n              <span *ngIf=\\\"keyC == 'TT_ITEM'\\\"><i [ngClass]=\\\"\\r\\n                    reverseC ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n                  \\\"></i></span>\\r\\n              <span *ngIf=\\\"keyC != 'TT_ITEM'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosEstoqueComprometidoPlanoCorte | orderBy: keyC:reverseC | slice: beginC:endC;\\\">\\r\\n            <td nowrap class=\\\"text-center\\\">{{ item.NM_EMPR }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{ item.NM_DEPO }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{ item.NR_PLAN_CORT | number : '0.0' }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{ item.DT_PLAN_CORT | date: 'dd/MM/yyyy' }}</td>\\r\\n            <td nowrap class=\\\"text-center\\\">{{ item.TT_ITEM | number : '0.3' }}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">Total</td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\"></td>\\r\\n            <td nowrap class=\\\"text-center text-white bg-dark\\\">\\r\\n              {{dadosEstoqueComprometidoPlanoCorteTotal.TT_ITEM | number: '0.3'}}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div class=\\\"mt-2 mb-2\\\" *ngIf=\\\"dadosEstoqueComprometidoPlanoCorte?.length > itemsPerPage\\\">\\r\\n      Exibindo {{ beginC + 1 }} a {{ endC }} de\\r\\n      {{ dadosEstoqueComprometidoPlanoCorte?.length }}\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <pagination [maxSize]=\\\"10\\\" [totalItems]=\\\"dadosEstoqueComprometidoPlanoCorte?.length\\\"\\r\\n          (pageChanged)=\\\"onPageChangedC($event)\\\" [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPageC\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n</tabset>\\r\\n<div class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" *ngIf=\\\"loaderBody\\\">\\r\\n  <div class=\\\"spinner-border\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"estoqueComprometidoPlanoCorteEmpty && estoqueComprometidoPedidoVendasEmpty && !loaderBody\\\"\\r\\n  class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" style=\\\"height: 80%;\\\">\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\\r\\n\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from '../analise-compras.service';\r\n\r\n@Component({\r\n  selector: 'abastecimento-monitores-analise-compras-modal-estoque-suspenso',\r\n  templateUrl: './modal-estoque-suspenso.component.html',\r\n  styleUrls: ['./modal-estoque-suspenso.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasModalEstoqueSuspensoComponent implements OnInit {\r\n\r\n  @Input() item;\r\n\r\n  form: FormGroup;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  loaderBody: boolean = false;\r\n  loadingDetalhesModal:boolean = false;\r\n  noResultModal:boolean = false;\r\n  estoqueSupensoGeralEmpty:boolean = false;\r\n  estoqueSupensoEntradaMaterialEmpty:boolean = false;\r\n\r\n  empresas:any = [];\r\n  depositos:any = [];\r\n  dataEntrada:any = [];\r\n  notaFiscal:any = [];\r\n  usuario:any = [];\r\n  lote:any = [];\r\n  modal:any = [];\r\n\r\n  idEmpresa: string = '';\r\n  idDeposito: string = '';\r\n\r\n  dadosEstoqueSuspensoGeral:any = [];\r\n  dadosEstoqueSuspensoGeralFull:any = [];\r\n  dadosEstoqueSuspensoGeralTotal:any = [];\r\n\r\n  dadosEstoqueSuspensoInventario:any = [];\r\n  dadosEstoqueSuspensoInventarioFull:any = [];\r\n  dadosEstoqueSuspensoInventarioTotal:any = [];\r\n\r\n  dadosEstoqueSuspensoEntradaMaterial:any = [];\r\n  dadosEstoqueSuspensoEntradaMaterialFull:any = [];\r\n  dadosEstoqueSuspensoEntradaMaterialTotal:any = [];\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_EMPR';\r\n\r\n  reverseB: boolean = false;\r\n  keyB: string = 'NM_EMPR';\r\n\r\n  reverseC: boolean = false;\r\n  keyC: string = 'NM_EMPR';\r\n\r\n  /* PaginationModal*/\r\n  itemsPerPage = 15;\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n\r\n  currentPageB: number = 1;\r\n  beginB: number = 0;\r\n  endB: number = 15;\r\n\r\n  currentPageC: number = 1;\r\n  beginC: number = 0;\r\n  endC: number = 15;\r\n\r\n  /* dados do usuário */\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n  /* dados do usuário */\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private localeService: BsLocaleService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService,\r\n    private pnotifyService: PNotifyService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.form = this.formBuilder.group({\r\n      empresas: [null],\r\n      depositos: [null],\r\n      dataEntrada: [null],\r\n      notaFiscal: [null],\r\n      motivo: [null],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.modal.codMaterial = this.item.ID_REFE_ERP;\r\n    this.modal.descMaterial = this.item.NM_MATE;\r\n    this.idEmpresa = this.item.ID_EMPR ? this.item.ID_EMPR : \"\";\r\n    this.idDeposito = this.item.ID_DEPO ? this.item.ID_DEPO : \"\";\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    let dataPedido = this.setDateValid(this.form.value['dataEntrada']);\r\n\r\n     let params = {\r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_NOTA_FISC: this.form.value['notaFiscal'] ? this.form.value['notaFiscal'] : \"\",\r\n      DS_MOTI: this.form.value['motivo'] ? this.form.value['motivo'] : \"\",\r\n      DT_ENTR: dataPedido ? dataPedido : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",    \r\n      NR_PAGE_INIC: \"\",\r\n      TT_REGI_PAGI: \"\",\r\n      ORDE_BY: \"\",\r\n      ORDE_TYPE: \"\",\r\n      IN_GERA_RELA_EXCE: \"\",\r\n      ID_USUA: \"\"\r\n     };\r\n\r\n    this.getEstoqueSuspenso(params);                          \r\n  }\r\n\r\n  excelExport(): void {\r\n    let dataPedido = this.setDateValid(this.form.value['dataEntrada']);\r\n\r\n     let params = { \r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_NOTA_FISC: this.form.value['notaFiscal'] ? this.form.value['notaFiscal'] : \"\",\r\n      DS_MOTI: this.form.value['motivo'] ? this.form.value['motivo'] : \"\",\r\n      DT_ENTR: dataPedido ? dataPedido : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",    \r\n      NR_PAGE_INIC: \"\",\r\n      TT_REGI_PAGI: \"\",\r\n      ORDE_BY: \"\",\r\n      ORDE_TYPE: \"\",\r\n      IN_GERA_RELA_EXCE: 1,\r\n      ID_USUA: this.idUsuario\r\n     };\r\n\r\n    this.getEstoqueSuspensoExcel(params);  \r\n  }\r\n\r\n  getEstoqueSuspenso(params: any): void {\r\n    \r\n    this.dadosEstoqueSuspensoGeralFull = [];\r\n    this.dadosEstoqueSuspensoGeral = [];\r\n    this.dadosEstoqueSuspensoGeralTotal = [];\r\n\r\n    this.dadosEstoqueSuspensoEntradaMaterial = [];\r\n    this.dadosEstoqueSuspensoEntradaMaterialFull = [];\r\n    this.dadosEstoqueSuspensoEntradaMaterialTotal = [];\r\n\r\n    this.dadosEstoqueSuspensoInventario = [];\r\n    this.dadosEstoqueSuspensoInventarioFull = [];\r\n    this.dadosEstoqueSuspensoInventarioTotal = [];\r\n\r\n    this.loaderBody = true;\r\n    this.loadingDetalhesModal = false;\r\n    this.noResultModal = false;\r\n    this.estoqueSupensoGeralEmpty = true;\r\n    this.estoqueSupensoEntradaMaterialEmpty = true;\r\n\r\n    this.service.getEstoqueSupensoGeral(params)\r\n    .pipe(finalize(() => this.loaderBody = false))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.dadosEstoqueSuspensoInventarioFull = res['body']['result'];\r\n            this.dadosEstoqueSuspensoInventarioTotal = this.dadosEstoqueSuspensoInventarioFull.shift();\r\n            this.dadosEstoqueSuspensoInventario = this.dadosEstoqueSuspensoInventarioFull;\r\n            this.estoqueSupensoGeralEmpty = false;\r\n            this.loadingDetalhesModal = true;\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = true;\r\n            this.estoqueSupensoGeralEmpty = true;\r\n            this.pnotifyService.notice(res['body']['message']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao carregar Estoque Suspenso');\r\n        this.loadingDetalhesModal = true;\r\n        this.estoqueSupensoGeralEmpty = true;\r\n      }\r\n    );\r\n\r\n    this.service.getEstoqueSupensoEntrada(params)\r\n    .pipe(finalize(() => this.loaderBody = false))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.dadosEstoqueSuspensoEntradaMaterialFull = res['body']['result'];\r\n            this.dadosEstoqueSuspensoEntradaMaterialTotal = this.dadosEstoqueSuspensoEntradaMaterialFull.shift();\r\n            this.dadosEstoqueSuspensoEntradaMaterial = this.dadosEstoqueSuspensoEntradaMaterialFull;\r\n            this.estoqueSupensoEntradaMaterialEmpty = false;\r\n            this.loadingDetalhesModal = true;\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = true;\r\n            this.estoqueSupensoEntradaMaterialEmpty = true;\r\n            this.pnotifyService.notice(res['body']['message']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao carregar Estoque Suspenso');\r\n        this.loadingDetalhesModal = true;\r\n        this.estoqueSupensoEntradaMaterialEmpty = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  getEstoqueSuspensoExcel(params: any): void {\r\n    \r\n    this.service.getEstoqueSupensoGeral(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.pnotifyService.success(res['body']['result']);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice(res['body']['result']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao gerar Excel - Estoque Suspenso');\r\n      }\r\n    );\r\n\r\n    this.service.getEstoqueSupensoEntrada(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.pnotifyService.success(res['body']['result']);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice(res['body']['result']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao gerar Excel - Estoque Suspenso');\r\n      }\r\n    );\r\n  }\r\n\r\n  setDateValid(date: any): any {\r\n    if (date instanceof Date) {\r\n      date = this.dateService.convertToUrlDate(date);\r\n    }\r\n    return date;\r\n    }\r\n  \r\n    sortA(keyA): void {\r\n      this.keyA = keyA;\r\n      this.reverseA = !this.reverseA;\r\n    }\r\n  \r\n    sortB(keyB): void {\r\n      this.keyB = keyB;\r\n      this.reverseB = !this.reverseB;\r\n    }\r\n  \r\n    sortC(keyC): void {\r\n      this.keyC = keyC;\r\n      this.reverseC = !this.reverseC;\r\n    }\r\n  \r\n    /* Paginação Modal*/\r\n    onPageChangedA(event: PageChangedEvent): void {\r\n      this.beginA = (event.page - 1) * event.itemsPerPage;\r\n      this.endA = event.page * event.itemsPerPage;\r\n    }\r\n  \r\n    onPageChangedB(event: PageChangedEvent): void {\r\n      this.beginB = (event.page - 1) * event.itemsPerPage;\r\n      this.endB = event.page * event.itemsPerPage;\r\n    }\r\n  \r\n    onPageChangedC(event: PageChangedEvent): void {\r\n      this.beginC = (event.page - 1) * event.itemsPerPage;\r\n      this.endC = event.page * event.itemsPerPage;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9tb25pdG9yZXMvYW5hbGlzZS1jb21wcmFzL21vZGFsLW5pdmVsLWVzdG9xdWUvbW9kYWwtbml2ZWwtZXN0b3F1ZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"row mb-2 mt-2\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> CÓD. MATERIAL: </strong> {{ modal.codMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> DESCRIÇÃO: </strong> {{ modal.descMaterial }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <p style=\\\"font-size: 14px;\\\">\\r\\n      <strong> UN. MEDIDA: </strong> {{ modal.unidadeMedida }}\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 text-right\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"onFilter()\\\"\\r\\n      class=\\\"btn mr-2\\\"\\r\\n      [disabled]=\\\"\\r\\n        comparaData() ||\\r\\n        comparaDataInicial() ||\\r\\n        comparaDataFinal()\\r\\n      \\\"\\r\\n    >\\r\\n      Filtrar\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"excelExport()\\\"\\r\\n      class=\\\"btn\\\"\\r\\n      [disabled]=\\\"\\r\\n        comparaData() ||\\r\\n        comparaDataInicial() ||\\r\\n        comparaDataFinal()\\r\\n      \\\"\\r\\n    >\\r\\n      Exportar Excel\\r\\n  </button>\\r\\n  </div>\\r\\n</div>\\r\\n<advanced-filter>\\r\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataNF\\\">Data Inicial</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataInicial\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataInicial\\\"\\r\\n        >\\r\\n        <invalid-form-control\\r\\n          [show]=\\\"comparaDataInicial()\\\"\\r\\n          message=\\\"Data inicial não pode ser maior que data atual\\\"\\r\\n        >\\r\\n        </invalid-form-control>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataFinal\\\">Data Final</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataFinal\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataFinal\\\"\\r\\n        >\\r\\n       <invalid-form-control\\r\\n          [show]=\\\"comparaData()\\\"\\r\\n          message=\\\"Data final deve ser maior que data inicial\\\"\\r\\n        >\\r\\n        </invalid-form-control>\\r\\n        <invalid-form-control\\r\\n          [show]=\\\"comparaDataFinal()\\\"\\r\\n          message=\\\"Data final não pode ser maior que data atual\\\"\\r\\n        >\\r\\n        </invalid-form-control>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"empresas\\\">Empresas</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"empresas\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"empresas\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"depositos\\\">Depósito</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"depositos\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"depositos\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"proposta\\\">Proposta</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"proposta\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"proposta\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"dataEncerramento\\\">Data Encerramento</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataEncerramento\\\"\\r\\n          type=\\\"text\\\"\\r\\n          bsDatepicker\\r\\n          [bsConfig]=\\\"bsConfig\\\"\\r\\n          formControlName=\\\"dataEncerramento\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"cliente\\\">Cliente</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"cliente\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"cliente\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</advanced-filter>\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"loadingDetalhesModal\\\">\\r\\n  <custom-table subtitleBorder=\\\"true\\\">\\r\\n    <ng-template #thead let-thead>\\r\\n      <tr>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_EMPR')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Empresa\\r\\n          <span *ngIf=\\\"keyA == 'NM_EMPR'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_EMPR'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_DEPO')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Depósito\\r\\n          <span *ngIf=\\\"keyA == 'NM_DEPO'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_DEPO'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NR_PEDI')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Proposta\\r\\n          <span *ngIf=\\\"keyA == 'NR_PEDI'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NR_PEDI'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('DT_ENCE_PEDI')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Data encerramento\\r\\n          <span *ngIf=\\\"keyA == 'DT_ENCE_PEDI'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'DT_ENCE_PEDI'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('NM_CLIE')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Cliente\\r\\n          <span *ngIf=\\\"keyA == 'NM_CLIE'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_CLIE'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <!--                   <th nowrap (click)=\\\"sortA('NM_VEND')\\\" class=\\\"hover text-center\\\">\\r\\n          Usuário\\r\\n          <span *ngIf=\\\"keyA == 'NM_VEND'\\\"><i [ngClass]=\\\"reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\\"></i></span>\\r\\n          <span *ngIf=\\\"keyA != 'NM_VEND'\\\"><i [ngClass]=\\\"'fas fa-sort'\\\"></i></span>\\r\\n        </th> -->\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('TT_ITEM_PEDI_TONE')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n          *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\"\\r\\n        >\\r\\n          Quantidade(Ton)\\r\\n          <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI_TONE'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI_TONE'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n        <th\\r\\n          nowrap\\r\\n          (click)=\\\"sortA('TT_ITEM_PEDI')\\\"\\r\\n          class=\\\"hover text-center\\\"\\r\\n        >\\r\\n          Quantidade\\r\\n          <span *ngIf=\\\"keyA == 'TT_ITEM_PEDI'\\\"\\r\\n            ><i\\r\\n              [ngClass]=\\\"\\r\\n                reverseA ? 'fas fa-sort-down' : 'fas fa-sort-up'\\r\\n              \\\"\\r\\n            ></i\\r\\n          ></span>\\r\\n          <span *ngIf=\\\"keyA != 'TT_ITEM_PEDI'\\\"\\r\\n            ><i [ngClass]=\\\"'fas fa-sort'\\\"></i\\r\\n          ></span>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template #tbody let-tbody>\\r\\n      <tr\\r\\n        *ngFor=\\\"\\r\\n          let item of dadosVendasPerdDetalhesModal\\r\\n            | orderBy: keyA:reverseA\\r\\n            | slice: beginA:endA;\\r\\n          let i = index\\r\\n        \\\"\\r\\n      >\\r\\n        <td nowrap>{{ item.NM_EMPR }}</td>\\r\\n        <td nowrap>{{ item.NM_DEPO }}</td>\\r\\n        <td nowrap class=\\\"text-center\\\">\\r\\n          {{ item.NR_PEDI | number: '0.0' }}\\r\\n        </td>\\r\\n        <td nowrap class=\\\"text-center\\\">\\r\\n          {{ item.DT_ENCE_PEDI | date: 'dd/MM/yyyy' }}\\r\\n        </td>\\r\\n        <td nowrap>{{ item.NM_CLIE }}</td>\\r\\n        <!--    <td nowrap>{{ item.NM_VEND }}</td> -->\\r\\n        <td nowrap class=\\\"text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n          {{ item.TT_ITEM_PEDI_TONE | number: '0.3' }}\\r\\n        </td>\\r\\n        <td nowrap class=\\\"text-right\\\">\\r\\n          {{this.modal.unidadeMedida != 'TON' ? (item.TT_ITEM_PEDI | number: '0.0') : (item.TT_ITEM_PEDI | number: '0.3')}}\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td nowrap class=\\\"bg-dark text-white\\\">TOTAL</td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-center\\\"></td>\\r\\n        <!--  <td nowrap class=\\\"bg-dark text-white text-center\\\"></td> -->\\r\\n        <td nowrap class=\\\"bg-dark text-white text-right\\\" *ngIf=\\\"this.modal.unidadeMedida != 'TON'\\\">\\r\\n          {{\\r\\n            dadosVendasPerdDetalhesModalTotal.TT_ITEM_PEDI_TONE\\r\\n              | number: '0.3'\\r\\n          }}\\r\\n        </td>\\r\\n        <td nowrap class=\\\"bg-dark text-white text-right\\\">\\r\\n          {{this.modal.unidadeMedida != 'TON' ? (dadosVendasPerdDetalhesModalTotal.TT_ITEM_PEDI | number: '0.0') : (dadosVendasPerdDetalhesModalTotal.TT_ITEM_PEDI | number: '0.3')}}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </custom-table>\\r\\n</div>\\r\\n<div\\r\\n  class=\\\"mt-2 mb-2\\\"\\r\\n  *ngIf=\\\"dadosVendasPerdDetalhesModal?.length > itemsPerPage\\\"\\r\\n>\\r\\n  Exibindo {{ beginA + 1 }} a {{ endA }} de\\r\\n  {{ dadosVendasPerdDetalhesModal?.length }}\\r\\n  <div class=\\\"d-flex\\\">\\r\\n    <pagination\\r\\n      [maxSize]=\\\"10\\\"\\r\\n      [totalItems]=\\\"dadosVendasPerdDetalhesModal?.length\\\"\\r\\n      (pageChanged)=\\\"onPageChangedA($event)\\\"\\r\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n      [boundaryLinks]=\\\"true\\\"\\r\\n      [(ngModel)]=\\\"currentPageA\\\"\\r\\n      previousText=\\\"&lsaquo;\\\"\\r\\n      nextText=\\\"&rsaquo;\\\"\\r\\n      firstText=\\\"&laquo;\\\"\\r\\n      lastText=\\\"&raquo;\\\"\\r\\n    >\\r\\n    </pagination>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" *ngIf=\\\"loaderBody\\\">\\r\\n  <div class=\\\"spinner-border\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  *ngIf=\\\"noResultModal && !loadingDetalhesModal\\\"\\r\\n  class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n  style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9tb25pdG9yZXMvYW5hbGlzZS1jb21wcmFzL21vZGFsLXZlbmRhcy1yZWFsaXphZGFzL21vZGFsLXZlbmRhcy1yZWFsaXphZGFzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div *ngIf=\\\"loadingDetalhesModal\\\">\\r\\n  <div class=\\\"row mb-2 mt-2 text-center\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <p style=\\\"font-size: 14px;\\\">\\r\\n        <strong> CÓD. MATERIAL: </strong> {{ dadosDetalhesNivelEstoqueModal.ID_REFE_ERP | number: '0.0' }}\\r\\n      </p>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <p style=\\\"font-size: 14px;\\\">\\r\\n        <strong> DESCRIÇÃO: </strong> {{ dadosDetalhesNivelEstoqueModal.NM_MATE }}\\r\\n      </p>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <p style=\\\"font-size: 14px;\\\"><strong> LINHA: </strong>{{ dadosDetalhesNivelEstoqueModal.NM_LINH }} </p>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <p style=\\\"font-size: 14px;\\\"><strong> CLASSE: </strong>{{ dadosDetalhesNivelEstoqueModal.NM_CLAS }} </p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mb-2 mt-2 text-center\\\">\\r\\n    <div class=\\\"col-4\\\"><strong> ESTOQUE DIPONÍVEL: </strong> {{ (dadosDetalhesNivelEstoqueModal.TT_ESTO_DISP_TONE ? dadosDetalhesNivelEstoqueModal.TT_ESTO_DISP_TONE : 0) | number: '0.3'}} </div>\\r\\n    <div class=\\\"col-4\\\"><strong> VENDAS REALIZADAS: </strong> {{ (dadosDetalhesNivelEstoqueModal.TT_VEND_REAL_TONE ? dadosDetalhesNivelEstoqueModal.TT_VEND_REAL_TONE : 0) | number: '0.3' }} </div>\\r\\n    <div class=\\\"col-4\\\"><strong> DIAS ANALIZADOS: </strong>{{ (dadosDetalhesNivelEstoqueModal.NR_DIAS_PERI_ANAL ? dadosDetalhesNivelEstoqueModal.NR_DIAS_PERI_ANAL : 0) | number: '0.0' }}</div>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive mt-4\\\">\\r\\n    <custom-table>\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th>Tipo</th>\\r\\n          <th>Volume</th>\\r\\n          <th>Giro</th>\\r\\n          <th>Diferença</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr>\\r\\n          <td><i class=\\\"fas fa-circle text-danger\\\"></i> Mínimo</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.TT_ESTO_MINI ? dadosDetalhesNivelEstoqueModal.TT_ESTO_MINI : 0) | number: '0.3'  }}</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.NR_DIAS_GIRO_ESTO_MINI ? dadosDetalhesNivelEstoqueModal.NR_DIAS_GIRO_ESTO_MINI : 0) | number: '0.0'  }}</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.TT_DIFE_ESTO_DISP_MINI ? dadosDetalhesNivelEstoqueModal.TT_DIFE_ESTO_DISP_MINI: 0) | number: '0.3'  }}</td>\\r\\n  \\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><i class=\\\"fas fa-circle text-warning\\\"></i> Médio</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.TT_ESTO_SEGU ? dadosDetalhesNivelEstoqueModal.TT_ESTO_SEGU : 0)| number: '0.3'  }}</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.NR_DIAS_GIRO_ESTO_SEGU ? dadosDetalhesNivelEstoqueModal.NR_DIAS_GIRO_ESTO_SEGU : 0)| number: '0.0'  }}</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.TT_DIFE_ESTO_DISP_SEGU ? dadosDetalhesNivelEstoqueModal.TT_DIFE_ESTO_DISP_SEGU : 0)| number: '0.3'  }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><i class=\\\"fas fa-circle text-success\\\"></i> Máximo</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.TT_ESTO_MAXI ? dadosDetalhesNivelEstoqueModal.TT_ESTO_MAXI : 0) | number: '0.3'  }}</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.NR_DIAS_GIRO_ESTO_MAXI ? dadosDetalhesNivelEstoqueModal.NR_DIAS_GIRO_ESTO_MAXI : 0) | number: '0.0'  }}</td>\\r\\n          <td>{{ (dadosDetalhesNivelEstoqueModal.TT_DIFE_ESTO_DISP_MAXI ? dadosDetalhesNivelEstoqueModal.TT_DIFE_ESTO_DISP_MAXI : 0) | number: '0.3'  }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive mt-4\\\">\\r\\n    <custom-table>\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th>Código Correspondente</th>\\r\\n          <th>Descrição</th>\\r\\n          <th>Sul Fluminense</th>\\r\\n          <th>Avançado</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr>\\r\\n          <td>{{dadosDetalhesNivelEstoqueModal.ID_REFE_CORR_ERP | number: '0.0'}}</td>\\r\\n          <td>{{dadosDetalhesNivelEstoqueModal.DS_MATE_REFE_CORR_ERP}}</td>\\r\\n          <td>{{(dadosDetalhesNivelEstoqueModal.TT_ESTO_SUL_FLUM_TONE ? dadosDetalhesNivelEstoqueModal.TT_ESTO_SUL_FLUM_TONE : 0) | number: '0.3'}}</td>\\r\\n          <td>{{(dadosDetalhesNivelEstoqueModal.TT_ESTO_AVAN_TONE ? dadosDetalhesNivelEstoqueModal.TT_ESTO_AVAN_TONE : 0) | number: '0.3'}}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\" *ngIf=\\\"loaderBody\\\">\\r\\n  <div class=\\\"spinner-border\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  *ngIf=\\\"noResultModal && !loadingDetalhesModal\\\"\\r\\n  class=\\\"text-center d-flex justify-content-center align-items-center p-5\\\"\\r\\n  style=\\\"height: 80%;\\\"\\r\\n  >\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n</div>\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasComponent } from './analise-compras.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AbastecimentoMonitoresAnaliseComprasComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasRoutingModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\n\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n//Converte rota em base64\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from './../analise-compras.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'abastecimento-monitores-analise-compras-modal-vendas-perdidas',\r\n  templateUrl: './modal-vendas-perdidas.component.html',\r\n  styleUrls: ['./modal-vendas-perdidas.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasModalVendasPerdidasComponent implements OnInit {\r\n\r\n  @Input() item: any;\r\n  @Input() idMesAno: any;\r\n\r\n  loadingDetalhesModal:boolean = false;\r\n  noResultModal:boolean = false;\r\n  loaderBody = false;\r\n\r\n  compararDataFinal: boolean = false;\r\n  compararDataInicial: boolean = false;\r\n  compararDataFinalAtual: boolean = false;\r\n\r\n  form: FormGroup;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  empresas:any = [];\r\n  depositos:any = [];\r\n  proposta:any = [];\r\n  dataEntrada:any = [];\r\n  dataEncerramento:any = [];\r\n  cliente:any = [];\r\n  modal:any = [];\r\n  dadosExcel:any = [];\r\n\r\n  idEmpresa: string;\r\n  idDeposito: string;\r\n\r\n  dadosVendasPerdDetalhesModalFull: any = [];\r\n  dadosVendasPerdDetalhesModal: any = [];\r\n  dadosVendasPerdDetalhesModalTotal: any = [];\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_EMPR';\r\n\r\n  /* PaginationModal*/\r\n  itemsPerPage = 15;\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n\r\n  /* dados do usuário */\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n  /* dados do usuário */\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private routerService: RouterService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService,\r\n    private pnotifyService: PNotifyService,\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.form = this.formBuilder.group({\r\n      dataInicial: [null],\r\n      dataFinal: [null],\r\n      empresas: [null],\r\n      depositos: [null],\r\n      proposta: [null],\r\n      dataEncerramento: [null],\r\n      cliente: [null]\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.modal.codMaterial = this.item.ID_REFE_ERP;\r\n    this.modal.descMaterial = this.item.NM_MATE;\r\n    this.modal.unidadeMedida = this.item.NM_UNID_MEDI;\r\n    this.resetValuesForm();\r\n    this.setParamsVendasPerdidas();\r\n  }\r\n\r\n  resetValuesForm(): void {\r\n    this.form.get('dataInicial').reset();\r\n    this.form.get('dataFinal').reset();\r\n    this.form.get('empresas').reset();\r\n    this.form.get('depositos').reset();\r\n    this.form.get('proposta').reset();\r\n    this.form.get('dataEncerramento').reset();\r\n    this.form.get('cliente').reset();\r\n  }\r\n\r\n  setParamsVendasPerdidas(): void {\r\n    let queryParams = this.routerService.getBase64UrlParams(this.activatedRoute.snapshot.queryParams);\r\n    let dataInicial = queryParams[\"dataInicial\"];\r\n    let dataFinal = queryParams[\"dataFinal\"];\r\n    let dataInicialParam = dataInicial;\r\n    let dataFinalParam = dataFinal;\r\n\r\n    let params: any = [];\r\n    let tipoVisualizacao = queryParams[\"tipoVisualizacao\"];\r\n    let idMaterial = this.item[\"ID_MATE\"];\r\n    let idMesAno = this.idMesAno;\r\n\r\n    if(tipoVisualizacao == 'S') {\r\n      this.idEmpresa = queryParams[\"empresas\"];\r\n      this.idDeposito = queryParams[\"depositos\"];\r\n    } else if(tipoVisualizacao == 'A') {\r\n      this.idEmpresa = \"\";\r\n      this.idDeposito = this.item[\"ID_DEPO\"];\r\n    }\r\n\r\n    if(this.idMesAno) {\r\n      dataInicialParam = \"\";\r\n      dataFinalParam = \"\";\r\n\r\n      let mesAno = this.idMesAno.replace('_', '/01/');\r\n      let date = new Date(mesAno);\r\n      let primeiroDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n      let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n      let primeiroDiaC = this.setDateValid(primeiroDia);\r\n      let ultimoDiaC = this.setDateValid(ultimoDia);\r\n\r\n      primeiroDiaC = new Date(primeiroDiaC.split('-').reverse().join('-'));\r\n      ultimoDiaC = new Date(ultimoDiaC.split('-').reverse().join('-'));\r\n\r\n      let dataInicialC = new Date(dataInicial.split('-').reverse().join('-'));\r\n      let dataFinalC = new Date(dataFinal.split('-').reverse().join('-'));\r\n\r\n      if(primeiroDiaC > dataInicialC) {\r\n        dataInicial = this.setDateValid(primeiroDia);\r\n      }\r\n\r\n      if(ultimoDiaC < dataFinalC) {\r\n        dataFinal = this.setDateValid(ultimoDia);\r\n      }\r\n    }\r\n    \r\n    params = {  \r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      DT_INIC: dataInicial ? dataInicial : \"\",\r\n      DT_FINA: dataFinal ? dataFinal : \"\",\r\n      NM_MES_ANO: \"\",\r\n      ID_MATE: idMaterial ? idMaterial : \"\",\r\n      NM_EMPR: \"\",\r\n      NM_DEPO: \"\",\r\n      NR_PROP: \"\",\r\n      DT_ENCE_PROP: \"\",\r\n      NM_CLIE: \"\"\r\n    };\r\n\r\n    this.getVendasPerdidasDetalhes(params);\r\n\r\n    this.form.get(\"dataInicial\").setValue(dataInicial);\r\n    this.form.get(\"dataFinal\").setValue(dataFinal);\r\n  }\r\n\r\n  getVendasPerdidasDetalhes(params: any): void {\r\n    this.dadosVendasPerdDetalhesModalFull = [];\r\n    this.dadosVendasPerdDetalhesModal = [];\r\n    this.dadosVendasPerdDetalhesModalTotal = [];\r\n    this.loaderBody = true;\r\n    //this.loadingDetalhesVendPerd = false;\r\n    this.loadingDetalhesModal = false;\r\n    this.noResultModal = false;\r\n\r\n    this.service.getVendasPerdidasDetalhes(params)\r\n    .pipe(finalize(() => this.loaderBody = false))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.dadosVendasPerdDetalhesModalFull = res['body']['result'];\r\n            this.dadosVendasPerdDetalhesModalTotal = this.dadosVendasPerdDetalhesModalFull.shift();\r\n            this.dadosVendasPerdDetalhesModal = this.dadosVendasPerdDetalhesModalFull;\r\n            //this.loadingDetalhesVendPerd = true;\r\n            this.noResultModal = false;\r\n            this.loadingDetalhesModal = true;\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = false;\r\n            this.noResultModal = true;\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao Vendas Perdidadas Detalhes');\r\n      }\r\n    );\r\n  }\r\n\r\n  getVendasPerdidasDetalhesExcel(params: any): void {\r\n    this.dadosExcel = [];\r\n\r\n    this.service.getVendasPerdidasDetalhes(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200){\r\n            this.dadosExcel = res['body']['result'];\r\n            this.pnotifyService.success(this.dadosExcel);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice('Não há dados');\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao detalhes de Carteira');\r\n      }\r\n    );\r\n  }\r\n\r\n  onFilter(): void {\r\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\r\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\r\n    let dataEncerramento = this.setDateValid(this.form.value['dataEncerramento']);\r\n\r\n    let params = {\r\n      DT_INIC: dataInicial ? dataInicial: \"\",\r\n      DT_FINA: dataFinal ? dataFinal : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",\r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_PROP: this.form.value['proposta'] ? this.form.value['proposta'] : \"\",\r\n      DT_ENCE_PROP: dataEncerramento ? dataEncerramento : \"\",\r\n      NM_CLIE: this.form.value['cliente'] ? this.form.value['cliente'] : \"\",\r\n      IN_GERA_RELA_EXCE: \"\",\r\n      ID_USUA: \"\"\r\n    };\r\n\r\n    this.getVendasPerdidasDetalhes(params);\r\n\r\n  }\r\n\r\n  excelExport(): void {\r\n    let dataInicial = this.setDateValid(this.form.value['dataInicial']);\r\n    let dataFinal = this.setDateValid(this.form.value['dataFinal']);\r\n    let dataEncerramento = this.setDateValid(this.form.value['dataEncerramento']);\r\n\r\n    let params = {\r\n      DT_INIC: dataInicial ? dataInicial: \"\",\r\n      DT_FINA: dataFinal ? dataFinal : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      NM_MES_ANO: \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",\r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NR_PROP: this.form.value['proposta'] ? this.form.value['proposta'] : \"\",\r\n      DT_ENCE_PROP: dataEncerramento ? dataEncerramento : \"\",\r\n      NM_CLIE: this.form.value['cliente'] ? this.form.value['cliente'] : \"\",\r\n      IN_GERA_RELA_EXCE: 1,\r\n      ID_USUA: this.idUsuario\r\n    };\r\n\r\n    this.getVendasPerdidasDetalhesExcel(params);\r\n  }\r\n\r\n  setDateValid(date: any): any {\r\n    if (date instanceof Date) {\r\n      date = this.dateService.convertToUrlDate(date);\r\n    }\r\n    return date;\r\n  }\r\n\r\n  comparaData(): boolean {\r\n    let stra = this.form.get('dataInicial').value;\r\n    let strb = this.form.get('dataFinal').value;\r\n    let dataInicial = {};\r\n    let dataFinal = {};\r\n\r\n    if (stra instanceof Date) {\r\n      dataInicial = stra;\r\n    } else if(stra !== null) {\r\n      dataInicial = new Date(stra.split('-').reverse().join('-'));\r\n    }\r\n\r\n    if (strb instanceof Date) {\r\n      dataFinal = strb;\r\n    } else if(strb !== null) {\r\n      dataFinal = new Date(strb.split('-').reverse().join('-'));\r\n    }\r\n\r\n    if (!dataInicial) {\r\n      this.compararDataFinal = false;\r\n      return false;\r\n    } else if (dataInicial > dataFinal) {\r\n      this.compararDataFinal = true;\r\n      return this.compararDataFinal;\r\n    }\r\n  }\r\n\r\n  comparaDataFinal(): boolean {\r\n    let now = new Date();\r\n    if (!this.form.get('dataFinal').value) {\r\n      this.compararDataFinalAtual = false;\r\n      return false;\r\n    } else if (this.form.get('dataFinal').value > now) {\r\n      this.compararDataFinalAtual = true;\r\n      return this.compararDataFinalAtual;\r\n    }\r\n  }\r\n\r\n  comparaDataInicial(): boolean {\r\n    let now = new Date();\r\n    if (!this.form.get('dataInicial').value) {\r\n      this.compararDataInicial = false;\r\n      return false;\r\n    } else if (this.form.get('dataInicial').value > now) {\r\n      this.compararDataInicial = true;\r\n      return this.compararDataInicial;\r\n    }\r\n  }\r\n\r\n  sortA(keyA: string): void {\r\n    this.keyA = keyA;\r\n    this.reverseA = !this.reverseA;\r\n  }\r\n\r\n  /* Paginação Modal*/\r\n  onPageChangedA(event: PageChangedEvent): void {\r\n    this.beginA = (event.page - 1) * event.itemsPerPage;\r\n    this.endA = event.page * event.itemsPerPage;\r\n  }\r\n}\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { TooltipModule, PaginationModule, BsDatepickerModule,ModalModule } from 'ngx-bootstrap';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasRoutingModule } from './analise-compras-routing.module';\r\nimport { AbastecimentoMonitoresAnaliseComprasComponent } from './analise-compras.component';\r\nimport { AbastecimentoMonitoresAnaliseComprasModalEstoqueSuspensoComponent } from './modal-estoque-suspenso/modal-estoque-suspenso.component';\r\nimport { AbastecimentoMonitoresAnaliseCompraModalEstoqueComprometidoComponent } from './modal-estoque-comprometido/modal-estoque-comprometido.component';\r\nimport { AbastecimentoMonitoresAnaliseComprasModalVendasPerdidasComponent } from './modal-vendas-perdidas/modal-vendas-perdidas.component';\r\nimport { AbastecimentoMonitoresAnaliseComprasModalVendasRealizadasComponent } from './modal-vendas-realizadas/modal-vendas-realizadas.component';\r\nimport { AbastecimentoMonitoresAnaliseComprasModalCarteiraComponent } from './modal-carteira/modal-carteira.component';\r\nimport { AbastecimentoMonitoresAnaliseComprasModalNivelEstoqueComponent } from './modal-nivel-estoque/modal-nivel-estoque.component';\r\n\r\n/* Localização Brasil */\r\nimport { registerLocaleData } from '@angular/common';\r\nimport ptBr from '@angular/common/locales/pt';\r\nregisterLocaleData(ptBr)\r\n/* Localização Brasil */\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbastecimentoMonitoresAnaliseComprasComponent,\r\n    AbastecimentoMonitoresAnaliseComprasModalEstoqueSuspensoComponent,\r\n    AbastecimentoMonitoresAnaliseCompraModalEstoqueComprometidoComponent,\r\n    AbastecimentoMonitoresAnaliseComprasModalVendasPerdidasComponent,\r\n    AbastecimentoMonitoresAnaliseComprasModalVendasRealizadasComponent,\r\n    AbastecimentoMonitoresAnaliseComprasModalCarteiraComponent,\r\n    AbastecimentoMonitoresAnaliseComprasModalNivelEstoqueComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AbastecimentoMonitoresAnaliseComprasRoutingModule,\r\n    NotFoundModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    OrderModule,\r\n    NgSelectModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [{ provide: LOCALE_ID, useValue: 'pt-PT' }]\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasModule { }\r\n","export default \".sticky {\\n  position: sticky;\\n}\\n\\n.btn-xm {\\n  padding: 0.05rem 0.15rem;\\n  font-size: 0.7rem;\\n  border-radius: 0.2rem;\\n}\\n\\n.btn-open-modal:disabled {\\n  color: #fff;\\n  background-color: #66c0ce;\\n  border-color: #66c0ce;\\n  opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hYmFzdGVjaW1lbnRvL21vbml0b3Jlcy9hbmFsaXNlLWNvbXByYXMvYW5hbGlzZS1jb21wcmFzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNDLHdCQUFBO0VBQ0csaUJBQUE7RUFDQSxxQkFBQTtBQUNKOztBQUVBO0VBQ0UsV0FBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7RUFDQSxVQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FiYXN0ZWNpbWVudG8vbW9uaXRvcmVzL2FuYWxpc2UtY29tcHJhcy9hbmFsaXNlLWNvbXByYXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RpY2t5IHtcclxuICBwb3NpdGlvbjogc3RpY2t5O1xyXG59XHJcblxyXG4uYnRuLXhtIHtcclxuXHRwYWRkaW5nOiAwLjA1cmVtIDAuMTVyZW07XHJcbiAgICBmb250LXNpemU6IDAuN3JlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuMnJlbTtcclxufVxyXG5cclxuLmJ0bi1vcGVuLW1vZGFsOmRpc2FibGVkIHtcclxuICBjb2xvcjogI2ZmZjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjZjMGNlO1xyXG4gIGJvcmRlci1jb2xvcjogIzY2YzBjZTtcclxuICBvcGFjaXR5OiAxO1xyXG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWJhc3RlY2ltZW50by9tb25pdG9yZXMvYW5hbGlzZS1jb21wcmFzL21vZGFsLXZlbmRhcy1wZXJkaWRhcy9tb2RhbC12ZW5kYXMtcGVyZGlkYXMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { PageChangedEvent } from 'ngx-bootstrap';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { AbastecimentoMonitoresAnaliseComprasService } from '../analise-compras.service';\r\n\r\n@Component({\r\n  selector: 'abastecimento-monitores-analise-compras-modal-estoque-comprometido',\r\n  templateUrl: './modal-estoque-comprometido.component.html',\r\n  styleUrls: ['./modal-estoque-comprometido.component.scss']\r\n})\r\nexport class AbastecimentoMonitoresAnaliseCompraModalEstoqueComprometidoComponent implements OnInit {\r\n\r\n  @Input() item;\r\n\r\n  form: FormGroup;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  loaderBody: boolean = false;\r\n  loadingDetalhesModal:boolean = false;\r\n  noResultModal:boolean = false;\r\n  estoqueComprometidoPedidoVendasEmpty:boolean = false;\r\n  estoqueComprometidoPlanoCorteEmpty:boolean = false;\r\n\r\n  modal:any = [];\r\n  empresas:any = [];\r\n  depositos: any = [];\r\n  numero: any = [];\r\n  itemFiltro: any = [];\r\n  data: any = [];\r\n  cliente: any = [];\r\n  vendedor: any = [];\r\n\r\n  idEmpresa: string = '';\r\n  idDeposito: string = '';\r\n\r\n  dadosEstoqueComprometidoPedidoVendas: any = [];\r\n  dadosEstoqueComprometidoPedidoVendaslFull: any = [];\r\n  dadosEstoqueComprometidoPedidoVendasTotal: any = [];\r\n\r\n  dadosEstoqueComprometidoPlanoCorte: any = [];\r\n  dadosEstoqueComprometidoPlanoCorteFull: any = [];\r\n  dadosEstoqueComprometidoPlanoCorteTotal: any = [];\r\n\r\n  /* Ordenação modal */\r\n  reverseA: boolean = false;\r\n  keyA: string = 'NM_EMPR';\r\n\r\n  reverseB: boolean = false;\r\n  keyB: string = 'NM_EMPR';\r\n\r\n  reverseC: boolean = false;\r\n  keyC: string = 'NM_EMPR';\r\n\r\n  /* PaginationModal*/\r\n  itemsPerPage = 15;\r\n  currentPageA: number = 1;\r\n  beginA: number = 0;\r\n  endA: number = 15;\r\n\r\n  currentPageB: number = 1;\r\n  beginB: number = 0;\r\n  endB: number = 15;\r\n\r\n  currentPageC: number = 1;\r\n  beginC: number = 0;\r\n  endC: number = 15;\r\n\r\n  /* dados do usuário */\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  idUsuario: any = this.currentUser['info']['id'];\r\n  /* dados do usuário */\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private localeService: BsLocaleService,\r\n    private service: AbastecimentoMonitoresAnaliseComprasService,\r\n    private pnotifyService: PNotifyService\r\n  ) { \r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.form = this.formBuilder.group({\r\n      empresas: [null],\r\n      depositos: [null],\r\n      numero: [null],\r\n      itemFiltro: [null],\r\n      data: [null],\r\n      cliente: [null],\r\n      vendedor: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.modal.codMaterial = this.item.ID_REFE_ERP;\r\n    this.modal.descMaterial = this.item.NM_MATE;\r\n    this.idEmpresa = this.item.ID_EMPR ? this.item.ID_EMPR : \"\";\r\n    this.idDeposito = this.item.ID_DEPO ? this.item.ID_DEPO : \"\";\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    let dataEmissao = this.setDateValid(this.form.value['data']);\r\n\r\n    let params = {  \r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NM_CLIE: this.form.value['cliente'] ? this.form.value['cliente'] : \"\",\r\n      NM_VEND: this.form.value['vendedor'] ? this.form.value['vendedor'] : \"\",\r\n      NR_PEDI: this.form.value['numero'] ? this.form.value['numero'] : \"\",\r\n      NR_ITEM_PEDI  : this.form.value['itemFiltro'] ? this.form.value['itemFiltro'] : \"\",\r\n      DT_EMIS: dataEmissao ? dataEmissao : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",    \r\n      NR_PAGE_INIC: \"\",\r\n      TT_REGI_PAGI: \"\",\r\n      ORDE_BY: \"\",\r\n      ORDE_TYPE: \"\",\r\n      IN_GERA_RELA_EXCE: \"\",\r\n      ID_USUA: \"\"\r\n    };\r\n\r\n    this.getEstoqueComprometido(params);                          \r\n  }\r\n\r\n  excelExport(): void {\r\n    let dataEmissao = this.setDateValid(this.form.value['data']);\r\n\r\n    let params = {\r\n      NM_EMPR: this.form.value['empresas'] ? this.form.value['empresas'] : \"\",\r\n      NM_DEPO: this.form.value['depositos'] ? this.form.value['depositos'] : \"\",\r\n      NM_CLIE: this.form.value['cliente'] ? this.form.value['cliente'] : \"\",\r\n      NM_VEND: this.form.value['vendedor'] ? this.form.value['vendedor'] : \"\",\r\n      NR_PEDI: this.form.value['numero'] ? this.form.value['numero'] : \"\",\r\n      NR_ITEM_PEDI  : this.form.value['itemFiltro'] ? this.form.value['itemFiltro'] : \"\",\r\n      DT_EMIS: dataEmissao ? dataEmissao : \"\",\r\n      ID_EMPR:  this.idEmpresa ? this.idEmpresa : \"\",\r\n      ID_DEPO:  this.idDeposito ? this.idDeposito : \"\",\r\n      ID_MATE: this.item[\"ID_MATE\"] ? this.item[\"ID_MATE\"] : \"\",    \r\n      NR_PAGE_INIC: \"\",\r\n      TT_REGI_PAGI: \"\",\r\n      ORDE_BY: \"\",\r\n      ORDE_TYPE: \"\",\r\n      IN_GERA_RELA_EXCE: 1,\r\n      ID_USUA: this.idUsuario\r\n    };\r\n\r\n    this.getEstoqueComprometidoExcel(params);  \r\n  }\r\n\r\n  getEstoqueComprometido(params: any): void {    \r\n    this.dadosEstoqueComprometidoPedidoVendaslFull = [];\r\n    this.dadosEstoqueComprometidoPedidoVendas = [];\r\n    this.dadosEstoqueComprometidoPedidoVendasTotal = [];\r\n  \r\n    this.dadosEstoqueComprometidoPlanoCorteFull = [];\r\n    this.dadosEstoqueComprometidoPlanoCorte = [];\r\n    this.dadosEstoqueComprometidoPlanoCorteTotal = [];\r\n\r\n    this.loaderBody = true;\r\n    this.loadingDetalhesModal = false;\r\n    this.noResultModal = false;\r\n    this.estoqueComprometidoPedidoVendasEmpty = false;\r\n    this.estoqueComprometidoPlanoCorteEmpty = false;\r\n\r\n    this.service.getEstoqueComprometidoPedidoVenda(params)\r\n    .pipe(finalize(() => this.loaderBody = false))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.dadosEstoqueComprometidoPedidoVendaslFull = res['body']['result'];\r\n            this.dadosEstoqueComprometidoPedidoVendasTotal = this.dadosEstoqueComprometidoPedidoVendaslFull.shift();\r\n            this.dadosEstoqueComprometidoPedidoVendas = this.dadosEstoqueComprometidoPedidoVendaslFull;\r\n            this.estoqueComprometidoPedidoVendasEmpty = false;\r\n            this.loadingDetalhesModal = true;\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = true;\r\n            this.estoqueComprometidoPedidoVendasEmpty = true;\r\n            this.pnotifyService.notice(res['body']['message']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao carregar Estoque Comprometido');\r\n        this.loadingDetalhesModal = true;\r\n        this.estoqueComprometidoPedidoVendasEmpty = true;\r\n      }\r\n    );\r\n\r\n    this.service.getEstoqueComprometidoPlanoCorte(params)\r\n    .pipe(finalize(() => this.loaderBody = false))\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.dadosEstoqueComprometidoPlanoCorteFull = res['body']['result'];\r\n            this.dadosEstoqueComprometidoPlanoCorteTotal = this.dadosEstoqueComprometidoPlanoCorteFull.shift();\r\n            this.dadosEstoqueComprometidoPlanoCorte = this.dadosEstoqueComprometidoPlanoCorteFull;\r\n            this.estoqueComprometidoPlanoCorteEmpty = false;\r\n            this.loadingDetalhesModal = true;\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.loadingDetalhesModal = true;\r\n            this.estoqueComprometidoPlanoCorteEmpty = true;\r\n            this.pnotifyService.notice(res['body']['message']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao carregar Estoque Comprometido');\r\n        this.loadingDetalhesModal = true;\r\n        this.estoqueComprometidoPlanoCorteEmpty = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  getEstoqueComprometidoExcel(params: any): void {\r\n    \r\n    this.service.getEstoqueComprometidoPedidoVenda(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.pnotifyService.success(res['body']['result']);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice(res['body']['result']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao gerar Excel - Estoque Comprometido');\r\n      }\r\n    );\r\n\r\n    this.service.getEstoqueComprometidoPlanoCorte(params)\r\n    .subscribe(\r\n      (res: any) => {\r\n        if (Object.keys(res).length > 0) {\r\n          if (res['body']['responseCode'] === 200) {\r\n            this.pnotifyService.success(res['body']['result']);\r\n          } else if(res['body']['responseCode'] === 404) {\r\n            this.pnotifyService.notice(res['body']['result']);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.pnotifyService.error('Erro ao gerar Excel - Estoque Comprometido');\r\n      }\r\n    );\r\n  }\r\n\r\n  setDateValid(date: any): any {\r\n    if (date instanceof Date) {\r\n      date = this.dateService.convertToUrlDate(date);\r\n    }\r\n    return date;\r\n    }\r\n  \r\n    sortA(keyA): void {\r\n      this.keyA = keyA;\r\n      this.reverseA = !this.reverseA;\r\n    }\r\n  \r\n    sortB(keyB): void {\r\n      this.keyB = keyB;\r\n      this.reverseB = !this.reverseB;\r\n    }\r\n  \r\n    sortC(keyC): void {\r\n      this.keyC = keyC;\r\n      this.reverseC = !this.reverseC;\r\n    }\r\n  \r\n    /* Paginação Modal*/\r\n    onPageChangedA(event: PageChangedEvent): void {\r\n      this.beginA = (event.page - 1) * event.itemsPerPage;\r\n      this.endA = event.page * event.itemsPerPage;\r\n    }\r\n  \r\n    onPageChangedB(event: PageChangedEvent): void {\r\n      this.beginB = (event.page - 1) * event.itemsPerPage;\r\n      this.endB = event.page * event.itemsPerPage;\r\n    }\r\n  \r\n    onPageChangedC(event: PageChangedEvent): void {\r\n      this.beginC = (event.page - 1) * event.itemsPerPage;\r\n      this.endC = event.page * event.itemsPerPage;\r\n    }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AbastecimentoMonitoresAnaliseComprasService {\r\n\r\n  private readonly BASE_URL = environment.API;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  getDepositosAssociados(idLinhas, idClasses,idTipoMaterial,idSituacao): Observable<any> {\r\n    let linhas;\r\n    if (!idLinhas)\r\n     linhas = null;\r\n    else\r\n    linhas = idLinhas.toString()\r\n    if (!idClasses)\r\n      idClasses = \"\";\r\n    if (!idTipoMaterial)\r\n      idTipoMaterial = \"\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/depositos-associados-materiais`, {\r\n      params:{\r\n        ID_CLAS: idClasses.toString(),\r\n        ID_LINH: linhas,\r\n        ID_APOI_TIPO_MATE: idTipoMaterial.toString(),\r\n        IN_STAT: idSituacao,\r\n        IN_SELE_COMB:\"1\"\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getDepositos(idsEmpresa, idSituacao) {\r\n    if(!idsEmpresa)\r\n      idsEmpresa = \"\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/depositos`, {\r\n      params: {\r\n        ID_EMPR: idsEmpresa.toString(),\r\n        IN_STAT: idSituacao\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getFiltroNivelCritico(): Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/cadastros/niveis-criticos`,\r\n    {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getLinhas(idSituacao) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/linhas`,{\r\n      params: {\r\n        IN_STAT: idSituacao\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getSubLinhas(descricaoLinhas,idSituacao) {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/sub-linhas`,{\r\n      params: {\r\n        ID_LINH: descricaoLinhas.toString(),\r\n        IN_STAT:idSituacao\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getClasses(descricaoLinhas, idSubLinha, idSituacao) : Observable<any> {\r\n    if (!idSubLinha)\r\n      idSubLinha = \"\";\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/classes`, {\r\n      params: {\r\n        ID_LINH: descricaoLinhas.toString(),\r\n        ID_SUB_LINH: idSubLinha,\r\n        IN_STAT: idSituacao\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }  \r\n\r\n  getMateriais(idClasses, idTipoMaterial, idSituacao) : Observable<any> {\r\n    if (!idClasses)\r\n      idClasses = \"\";\r\n    if (!idTipoMaterial)\r\n      idTipoMaterial = \"\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/materiais`, {\r\n      params: {\r\n        ID_CLAS: idClasses.toString(),\r\n        ID_APOI_TIPO_MATE: idTipoMaterial.toString(),\r\n        IN_STAT: idSituacao\r\n      },\r\n       observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getTiposNiveisEstoque(idSituacao) {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/tipos-niveis-estoque`, {\r\n      params: {\r\n        IN_STAT: idSituacao\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getTiposMateriais(idSituacao) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/tipos-material`, {\r\n      params: {\r\n        IN_STAT: idSituacao\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getInfAdicionais() : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/common/v2/informacoes-adicionais-atividade/1`, {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getAnaliseCompras(params) : Observable<any> {\r\n    let idEmpresas = params[\"empresas\"] ?? \"\";\r\n    let idDeposito = params[\"depositos\"] ?? \"\";\r\n    let idNivelEstoque = params[\"nivelEstoque\"] ?? \"\";\r\n    let idTipoMaterial = params[\"tipoMaterial\"] ?? \"\";\r\n    let idSituacao = params[\"situacao\"];\r\n    let idLinha = params[\"linha\"] ?? \"\";\r\n    let idSubLinha = params[\"subLinha\"] ?? \"\";\r\n    let idClasse = params[\"classe\"] ?? \"\";\r\n    let idMaterial = params[\"material\"] ?? \"\";\r\n    let paramData = params[\"paramData\"] ?? \"\";\r\n    let dataInicial = params[\"dataInicial\"] ?? \"\";\r\n    let dataFinal = params[\"dataFinal\"] ?? \"\"; \r\n    let tipoVisualizacao = params[\"tipoVisualizacao\"] ?? \"\";\r\n    let idInfAdicionais = params[\"infAdicionais\"] ?? \"\";\r\n    let qtItensPagina = params[\"qtItensPagina\"] ?? \"\";\r\n    let pagina = params[\"pagina\"] ?? \"\";\r\n    let relatorioExcel = params[\"relatorioExcel\"] ?? \"\";\r\n    let idUsuario = params[\"idUsuario\"] ?? \"\";\r\n    let orderType = params[\"orderType\"] ?? \"\";\r\n    let orderBy = params[\"orderBy\"] ?? \"\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/analise-compras`, {\r\n      params: {\r\n        ID_EMPR: idEmpresas.toString(),\r\n        ID_DEPO: idDeposito.toString(),\r\n        ID_APOI_NIVE_ESTO: idNivelEstoque,\r\n        ID_APOI_TIPO_MATE: idTipoMaterial.toString(),\r\n        IN_STAT: idSituacao,\r\n        ID_LINH: idLinha,\r\n        ID_SUB_LINH: idSubLinha,\r\n        ID_CLAS: idClasse.toString(),\r\n        ID_MATE: idMaterial.toString(),\r\n        /* paramData, */\r\n        DT_INIC_VEND: dataInicial,\r\n        DT_FINA_VEND: dataFinal,\r\n        TP_VISU_PAIN: tipoVisualizacao,\r\n        ID_INFO_ADIC_ATIV: idInfAdicionais.toString(),\r\n        NR_PAGE_INIC: pagina,\r\n        TT_REGI_PAGI: qtItensPagina,\r\n        IN_GERA_RELA_EXCE:  relatorioExcel,\r\n        ID_USUA: idUsuario,\r\n        ORDE_TYPE: orderType,\r\n        ORDE_BY: orderBy \r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getVendasRealizadasDetalhes(params) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/vendas-realizadas/detalhes`, {\r\n      params: {\r\n        ID_EMPR: params[\"ID_EMPR\"].toString(),\r\n        ID_DEPO: params[\"ID_DEPO\"].toString(),\r\n        DT_INIC: params[\"DT_INIC\"],\r\n        DT_FINA: params[\"DT_FINA\"],\r\n        NM_MES_ANO: params[\"NM_MES_ANO\"],\r\n        ID_MATE: params[\"ID_MATE\"],\r\n        NM_EMPR: params[\"NM_EMPR\"],\r\n        NM_DEPO: params[\"NM_DEPO\"],\r\n        NR_NOTA_FISC: params[\"NR_NOTA_FISC\"],\r\n        DT_NOTA_FISC: params[\"DT_NOTA_FISC\"], \r\n        NM_CLIE: params[\"NM_CLIE\"],\r\n        NM_VEND: params[\"NM_VEND\"],\r\n        IN_GERA_RELA_EXCE: params[\"IN_GERA_RELA_EXCE\"],\r\n        ID_USUA: params[\"ID_USUA\"],\r\n        NR_PAGE_INIC: '',\r\n        TT_REGI_PAGI: '',\r\n        ORDE_TYPE: '',\r\n        ORDER_BY: ''\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getVendasPerdidasDetalhes(params) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/vendas-perdidas/detalhes`, {\r\n      params: {\r\n        ID_EMPR: params[\"ID_EMPR\"].toString(),\r\n        ID_DEPO: params[\"ID_DEPO\"].toString(),\r\n        DT_INIC: params[\"DT_INIC\"],\r\n        DT_FINA: params[\"DT_FINA\"],\r\n        NM_MES_ANO: params[\"NM_MES_ANO\"],\r\n        ID_MATE: params[\"ID_MATE\"],\r\n        NM_EMPR: params[\"NM_EMPR\"],\r\n        NM_DEPO: params[\"NM_DEPO\"],\r\n        NR_PROP: params[\"NR_PROP\"],\r\n        DT_ENCE_PROP: params[\"DT_ENCE_PROP\"],\r\n        NM_CLIE: params[\"NM_CLIE\"],\r\n        IN_DATA_ENCE_PEDI: '1',\r\n        ID_MOTI_VEND_PERD_REFE_ERP: '4',\r\n        IN_GERA_RELA_EXCE: params[\"IN_GERA_RELA_EXCE\"],\r\n        ID_USUA: params[\"ID_USUA\"],\r\n        NR_PAGE_INIC: '',\r\n        TT_REGI_PAGI: '',\r\n        ORDE_TYPE: '',\r\n        ORDER_BY: ''\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getCarteiraDetalhes(params) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/carteira-em-aberto/detalhes`, {\r\n      params: {\r\n        ID_EMPR: params[\"ID_EMPR\"].toString(),\r\n        ID_DEPO: params[\"ID_DEPO\"].toString(),\r\n        NM_MES_ANO: params[\"NM_MES_ANO\"],\r\n        ID_MATE: params[\"ID_MATE\"],\r\n        NM_EMPR: params[\"NM_EMPR\"],\r\n        NM_DEPO: params[\"NM_DEPO\"],\r\n        NR_PEDI_ORIG: params[\"NR_PEDI_ORIG\"],\r\n        DT_PEDI_ORIG: params[\"DT_PEDI_ORIG\"],\r\n        NR_PEDI_REME: params[\"NR_PEDI_REME\"],\r\n        DT_PREV_ENTR: params[\"DT_PREV_ENTR\"],\r\n        NM_FORN: params[\"NM_FORN\"],\r\n        IN_GERA_RELA_EXCE: params[\"IN_GERA_RELA_EXCE\"],\r\n        ID_USUA: params[\"ID_USUA\"],\r\n        NR_PAGE_INIC: '',\r\n        TT_REGI_PAGI: '',\r\n        ORDE_TYPE: '',\r\n        ORDER_BY: ''\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getNiveisEstoqueDetalhes(params) : Observable<any> {\r\n    let idMaterial = params[\"idMaterial\"] ?? \"\";\r\n    let idDeposito = params[\"idDeposito\"] ?? \"\";\r\n    let dataInicial = params[\"dataInicial\"] ?? \"\";\r\n    let dataFinal = params[\"dataFinal\"] ?? \"\";\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/situacao-material-deposito/detalhes`, {\r\n      params: {\r\n        ID_MATE: idMaterial,\r\n        ID_DEPO: idDeposito,\r\n        DT_INIC: dataInicial,\r\n        DT_FINA: dataFinal\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getEstoqueComprometidoPedidoVenda(params) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/comprometido-pedido-venda/detalhes`, {\r\n      params: {\r\n        NM_EMPR: params['NM_EMPR'],\r\n        NM_DEPO: params['NM_DEPO'],\r\n        NM_CLIE: params['NM_CLIE'],\r\n        NM_VEND: params['NM_VEND'],\r\n        NR_PEDI: params['NR_PEDI'],\r\n        NR_ITEM_PEDI: params['NR_ITEM_PEDI'],\r\n        DT_EMIS: params['DT_EMIS'],\r\n        ID_EMPR: params['ID_EMPR'],\r\n        ID_DEPO: params['ID_DEPO'],\r\n        ID_MATE: params['ID_MATE'],\r\n        NR_PAGE_INIC: params['NR_PAGE_INIC'],\r\n        TT_REGI_PAGI: params['TT_REGI_PAGI'],\r\n        ORDE_BY: params['ORDE_BY'],\r\n        ORDE_TYPE: params['ORDE_TYPE'],\r\n        IN_GERA_RELA_EXCE: params['IN_GERA_RELA_EXCE'],\r\n        ID_USUA: params['ID_USUA']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getEstoqueComprometidoPlanoCorte(params) : Observable<any> {\r\n\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/comprometido-plano-corte/detalhes`, {\r\n      params: {\r\n        NM_EMPR: params['NM_EMPR'],\r\n        NM_DEPO: params['NM_DEPO'],\r\n        NM_CLIE: params['NM_CLIE'],\r\n        NM_VEND: params['NM_VEND'],\r\n        NR_PEDI: params['NR_PEDI'],\r\n        NR_ITEM_PEDI: params['NR_ITEM_PEDI'],\r\n        DT_EMIS: params['DT_EMIS'],\r\n        ID_EMPR: params['ID_EMPR'],\r\n        ID_DEPO: params['ID_DEPO'],\r\n        ID_MATE: params['ID_MATE'],\r\n        NR_PAGE_INIC: params['NR_PAGE_INIC'],\r\n        TT_REGI_PAGI: params['TT_REGI_PAGI'],\r\n        ORDE_BY: params['ORDE_BY'],\r\n        ORDE_TYPE: params['ORDE_TYPE'],\r\n        IN_GERA_RELA_EXCE: params['IN_GERA_RELA_EXCE'],\r\n        ID_USUA: params['ID_USUA']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getEstoqueSupensoEntrada(params) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/suspenso-entrada/detalhes`, {\r\n      params: {\r\n        NM_EMPR: params['NM_EMPR'],\r\n        NM_DEPO: params['NM_DEPO'],\r\n        NR_NOTA_FISC: params['NR_NOTA_FISC'],\r\n        DS_MOTI: params['DS_MOTI'],\r\n        DT_ENTR: params['DT_ENTR'],\r\n        ID_EMPR: params['ID_EMPR'],\r\n        ID_DEPO: params['ID_DEPO'],\r\n        ID_MATE: params['ID_MATE'],\r\n        NR_PAGE_INIC: params['NR_PAGE_INIC'],\r\n        TT_REGI_PAGI: params['TT_REGI_PAGI'],\r\n        ORDE_BY: params['ORDE_BY'],\r\n        ORDE_TYPE: params['ORDE_TYPE'],\r\n        IN_GERA_RELA_EXCE: params['IN_GERA_RELA_EXCE'],\r\n        ID_USUA: params['ID_USUA']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getEstoqueSupensoGeral(params) : Observable<any> {\r\n    return this.httpClient.get(`${this.BASE_URL}/abastecimento/estoque/suspenso-geral/detalhes`, {\r\n      params: {\r\n        NM_EMPR: params['NM_EMPR'],\r\n        NM_DEPO: params['NM_DEPO'],\r\n        NR_NOTA_FISC: params['NR_NOTA_FISC'],\r\n        DS_MOTI: params['DS_MOTI'],\r\n        DT_ENTR: params['DT_ENTR'],\r\n        ID_EMPR: params['ID_EMPR'],\r\n        ID_DEPO: params['ID_DEPO'],\r\n        ID_MATE: params['ID_MATE'],\r\n        NR_PAGE_INIC: params['NR_PAGE_INIC'],\r\n        TT_REGI_PAGI: params['TT_REGI_PAGI'],\r\n        ORDE_BY: params['ORDE_BY'],\r\n        ORDE_TYPE: params['ORDE_TYPE'],\r\n        IN_GERA_RELA_EXCE: params['IN_GERA_RELA_EXCE'],\r\n        ID_USUA: params['ID_USUA']\r\n      },\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n}\r\n"]}