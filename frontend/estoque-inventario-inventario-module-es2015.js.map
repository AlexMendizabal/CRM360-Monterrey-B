{"version":3,"sources":["./src/app/modules/logistica/estoque/inventario/inventario.module.ts","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.ts","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.scss","./src/app/modules/logistica/estoque/inventario/inventario.component.html","./src/app/modules/logistica/estoque/inventario/inventario.component.scss","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.scss","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.html","./src/app/modules/logistica/estoque/inventario/lista/lista.component.scss","./src/app/modules/logistica/estoque/inventario/filtro/filtro.component.ts","./src/app/modules/logistica/estoque/inventario/lista/lista.service.ts","./src/app/modules/logistica/estoque/inventario/inventario-routing.module.ts","./src/app/modules/logistica/estoque/inventario/filtro/filtro.component.html","./src/app/modules/logistica/estoque/inventario/filtro/filtro.service.ts","./src/app/modules/logistica/estoque/inventario/inventario.component.ts","./src/app/modules/logistica/estoque/inventario/lista/lista.component.html","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.service.ts","./src/app/modules/logistica/estoque/inventario/filtro/filtro.component.scss","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.service.ts","./src/app/modules/logistica/estoque/inventario/lista/lista.component.ts","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.html","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.ts"],"names":[],"mappings":"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","file":"estoque-inventario-inventario-module-es2015.js","sourcesContent":["import { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\nimport { LogisticaEstoqueInventarioComponent } from './inventario.component';\nimport { LogisticaEstoqueInventarioFiltroComponent } from './filtro/filtro.component';\nimport { LogisticaEstoqueInventarioRoutingModule } from './inventario-routing.module';\nimport { LogisticaEstoqueInventarioListaComponent } from './lista/lista.component';\nimport { LogisticaEstoqueInventarioListaInventarioComponent } from './lista/inventario/inventario.component';\nimport { LogisticaEstoqueInventarioListaRelatorioComponent } from './lista/relatorio/relatorio.component';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\n@NgModule({\n  declarations: [\n    LogisticaEstoqueInventarioComponent,\n    LogisticaEstoqueInventarioFiltroComponent,\n    LogisticaEstoqueInventarioListaComponent,\n    LogisticaEstoqueInventarioListaInventarioComponent,\n    LogisticaEstoqueInventarioListaRelatorioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    LogisticaEstoqueInventarioRoutingModule,\n    NotFoundModule,\n    SharedModule\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }]\n})\nexport class LogisticaEstoqueInventarioModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LogisticaEstoqueInventarioListaInventarioService } from './inventario.service';\nimport { finalize, take } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'logistica-estoque-lista-inventario',\n  templateUrl: './inventario.component.html',\n  styleUrls: ['./inventario.component.scss']\n})\nexport class LogisticaEstoqueInventarioListaInventarioComponent\n  implements OnInit {\n  listaInventarios: any = [];\n  inventarios: any = [];\n  totalItems: number;\n  loaderNavbar: boolean = false;\n  spinnerFullScreen: boolean = true;\n  ultimoStatusEnviado: any = null;\n  noResult: boolean = true;\n  noResultado: boolean = true;\n  noLista: boolean = true;\n  $subscription: Subscription;\n  inve: any = [];\n  compressedTable = false;\n  idInventario: number;\n  infoClasses = '';\n  infoLinha = '';\n  infoIdInventario = '';\n\n  /* Parametros para filtros */\n  tipo: any;\n  empresa: any;\n  deposito: any;\n  linha: any;\n  classe: any;\n  dataInicial: any;\n  dataFinal: any;\n  cdInventario = '';\n  sigla: any;\n  informacoes: any;\n  parametro: boolean = false;\n  checked: boolean = true;\n  /* Parametros para filtros */\n\n  breadCrumbTree: any = [\n    {\n      descricao: 'Home',\n      routerLink: '/logistica/estoque/inventario/filtro'\n    },\n    {\n      descricao: 'Filtro',\n      routerLink: '/logistica/estoque/inventario/filtro'\n    },\n    {\n      descricao: 'Lista para consulta de inventários'\n    }\n  ];\n\n  /* Paginação */\n  itemsPerPage: number = 10;\n  currentPage: number = 1;\n  /* Paginação */\n\n  constructor(\n    private inventarioService: LogisticaEstoqueInventarioListaInventarioService,\n    private activatedRoute: ActivatedRoute,\n    private notice: PNotifyService,\n    private route: Router,\n    private atividadesService: AtividadesService\n  ) {}\n\n  ngOnInit() {\n    this.tipo = '';\n    this.empresa = '';\n    this.deposito = '';\n    this.linha = '';\n    this.classe = '';\n    this.dataInicial = '';\n    this.dataFinal = '';\n    this.cdInventario = '';\n    this.sigla = '';\n    this.atividadesService.registrarAcesso().subscribe();\n    this.getInventario('');\n  }\n\n  getInventario(sigla = '', page = 1) {\n    this.loaderNavbar = true;\n    this.sigla = sigla;\n    this.checked = !this.checked;\n    if (this.checked == false) {\n      sigla = '';\n    }\n\n    this.inventarioService\n      .getInventario(\n        page,\n        this.tipo,\n        this.empresa,\n        this.deposito,\n        this.linha,\n        this.classe,\n        this.dataInicial,\n        this.dataFinal,\n        this.cdInventario,\n        sigla\n      )\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.spinnerFullScreen = false;\n        })\n      )\n      .subscribe(\n        data => {\n          this.noResult = false;\n          this.inve = data['inventarios'];\n          this.inventarios = data['inventarios'];\n          this.loaderNavbar = false;\n          let lancamentos = [];\n          this.inventarios.forEach(element => {\n            if (element.empresa || element.deposito) {\n              lancamentos.push({\n                empresa: element.empresa,\n                deposito: element.deposito\n              });\n            }\n          });\n\n          this.informacoes = lancamentos;\n\n          if (!this.totalItems) {\n            this.totalItems = data['qtRegistros'];\n          }\n        },\n        error => {\n          this.notice.notice(\n            'Não há inventários cadastrados para esse status.'\n          );\n        }\n      );\n  }\n\n  getClassesInventario(idInventario, i) {\n    this.noLista = true;\n    this.loaderNavbar = true;\n    this.noResultado = false;\n    this.inventarioService\n      .getClassesInventario(idInventario)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response['status'] === 200) {\n          response.body.forEach(element => {\n            if (element.dsClasse == null) {\n              this.noResultado = true;\n            } else {\n              this.noLista = false;\n              this.infoClasses = response.body;\n            }\n          });\n        }\n      });\n    this.compressedTable = true;\n    this.infoLinha = this.inve[i].dsLinha;\n    this.infoIdInventario = this.inve[i].idInventario;\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.getInventario('', event.page);\n  }\n  /* Paginação */\n\n  abrirInventario(idInventario, idStatusInventario) {\n    this.route.navigate(\n      [`logistica/estoque/inventario/${idInventario}/contagem-materiais`],\n      {\n        queryParams: {\n          tipo: this.tipo,\n          empresa: this.empresa,\n          deposito: this.deposito,\n          linha: this.linha,\n          classe: this.classe,\n          dataInicial: this.dataInicial,\n          dataFinal: this.dataFinal,\n          sigla: this.sigla\n        }\n      }\n    );\n  }\n\n  abrirRelatorio(idInventario, idStatusInventario) {\n    this.route.navigate(\n      [`logistica/estoque/inventario/${idInventario}/relatorio`],\n      {\n        queryParams: {\n          tipo: this.tipo,\n          empresa: this.empresa,\n          deposito: this.deposito,\n          linha: this.linha,\n          classe: this.classe,\n          dataInicial: this.dataInicial,\n          dataFinal: this.dataFinal,\n          sigla: this.sigla,\n          informacoes: this.informacoes\n        }\n      }\n    );\n  }\n\n  openModal(index) {\n    this.idInventario = this.inventarios[index].idInventario;\n    this.compressedTable = true;\n  }\n\n  onClose() {\n    this.compressedTable = false;\n  }\n\n  clickEvent(inventario) {\n    this.inventarios.forEach(element => {\n      if (element.idInventario != inventario.idInventario) {\n        element.status = false;\n      } else if (inventario.status == true) {\n        inventario.status = true;\n      } else {\n        inventario.status = !inventario.status;\n      }\n    });\n  }\n}\n","export default \"ul li {\\n  list-style-type: none;\\n}\\n\\n.bgdValueList {\\n  background-color: #e9ecef;\\n}\\n\\n.textUpper {\\n  font-size: -webkit-xxx-large;\\n}\\n\\n.espacamento50 {\\n  height: 50px;\\n}\\n\\n.espacamento20 {\\n  height: 20px;\\n}\\n\\n.espacamento25 {\\n  height: 25px;\\n}\\n\\n.espacamento150 {\\n  height: 150px;\\n}\\n\\n.espacamento250 {\\n  height: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL3JlbGF0b3Jpby9yZWxhdG9yaW8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLDRCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lc3RvcXVlL2ludmVudGFyaW8vbGlzdGEvcmVsYXRvcmlvL3JlbGF0b3Jpby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIGxpe1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG59XG5cbi5iZ2RWYWx1ZUxpc3R7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG59XG5cbi50ZXh0VXBwZXJ7XG4gIGZvbnQtc2l6ZTogLXdlYmtpdC14eHgtbGFyZ2U7XG59XG5cbi5lc3BhY2FtZW50bzUwe1xuICBoZWlnaHQ6IDUwcHg7XG59XG5cbi5lc3BhY2FtZW50bzIwe1xuICBoZWlnaHQ6IDIwcHg7XG59XG5cbi5lc3BhY2FtZW50bzI1e1xuICBoZWlnaHQ6IDI1cHg7XG59XG5cbi5lc3BhY2FtZW50bzE1MHtcbiAgaGVpZ2h0OiAxNTBweDtcbn1cblxuLmVzcGFjYW1lbnRvMjUwe1xuICBoZWlnaHQ6IDE1MHB4O1xufSJdfQ== */\";","export default \"\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VzdG9xdWUvaW52ZW50YXJpby9pbnZlbnRhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \".bgRowTable {\\n  background-color: #b6b8b9;\\n}\\n\\n.loaderTab {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2ludmVudGFyaW8vaW52ZW50YXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2ludmVudGFyaW8vaW52ZW50YXJpby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iZ1Jvd1RhYmxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2I2YjhiOTtcbn1cblxuLmxvYWRlclRhYiB7XG4gIHdpZHRoOiAxLjVyZW07XG4gIGhlaWdodDogMS41cmVtO1xufVxuIl19 */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\n  <div class=\\\"col-6\\\">\\n    <div id=\\\"title\\\">\\n      <back-button></back-button>\\n      <h1>Consulta de inventários</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\n    <div id=\\\"actions\\\">\\n    </div>\\n  </div>\\n</div>\\n<!-- Início dos Filtros -->\\n<div class=\\\"row\\\" id=\\\"application-body\\\" [hidden]=\\\"spinnerFullScreen\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\n    <div class=\\\"row justify-content-between mb-2\\\">\\n      <div class=\\\"col-6 pt-4\\\">\\n        <div class=\\\"d-flex\\\">\\n          <div class=\\\"legend yellow hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_ABER' }\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_ABER')\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">EM ABERTO</div>\\n          </div>\\n          <div class=\\\"legend red hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_CANC'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_CANC')\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">CANCELADO</div>\\n          </div>\\n          <div class=\\\"legend gray hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_CANC_SIST'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_CANC_SIST')\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">CANCELADO PELO SISTEMA</div>\\n          </div>\\n          <div class=\\\"legend green hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_FINA'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_FINA')\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">FINALIZADO</div>\\n          </div>\\n          <div class=\\\"legend blue hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_APRO'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_APRO')\\\">\\n            <div class=\\\"square\\\"></div>\\n            <div class=\\\"text\\\">APROVADO</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-3 justify-content-end\\\">\\n        <label for=\\\"cdInventario\\\"> Código do inventário </label>\\n        <input \\n          id=\\\"cdInventario\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"DIGITE...\\\"\\n          [(ngModel)]=\\\"cdInventario\\\"\\n          (keyup.enter)=\\\"getInventario()\\\"\\n        >\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 p-0\\\" [hidden]=\\\"noResult\\\" class=\\\"d-flex\\\">\\n      <div>\\n        <div style=\\\"height: 55vh\\\">\\n          <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th>Data</th>\\n                <th>Código</th>\\n                <th>Depósito</th>\\n                <th [hidden]=\\\"compressedTable\\\">Linha</th>\\n                <th>Tipo</th>\\n                <th style=\\\"width:250px\\\" nowrap>Auditor</th>\\n                <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\n                <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let inventario of inventarios let i = index\\\" class=\\\"hover\\\" \\n                    [ngClass]=\\\"inventario.status ? 'bgRowTable' : ''\\\" (click)=\\\"getClassesInventario(inventario.idInventario, i); clickEvent(inventario)\\\"\\n              >\\n                <td [ngClass]=\\\"{\\n                  'border-primary'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_APRO',\\n                  'border-secondary'  : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST',\\n                  'border-danger'     : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_CANC',\\n                  'border-success'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_FINA',\\n                  'border-warning'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_ABER'\\n                }\\\"\\n                > {{ inventario.dtInclusao  | date : 'dd/MM/yyyy HH:mm:ss'}} </td>\\n                <td> {{ inventario.idInventario   | number:'6.0-0'}} </td>\\n                <td> {{ inventario.dsDeposito | uppercase }} </td>\\n                <td [hidden]=\\\"compressedTable\\\"> {{ inventario.dsLinha | uppercase }} </td>\\n                <td> {{ inventario.dsTipoInventario | uppercase }} </td>\\n                <td style=\\\"width:250px\\\" nowrap> {{ inventario.dsUsuario | uppercase }} </td> \\n                <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n                  <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                    <button class=\\\"btn-icon-sm\\\" (click)=\\\"abrirInventario(inventario.idInventario)\\\">\\n                      <i class=\\\"fas fa-search\\\"></i>\\n                    </button>\\n                  </span>\\n                </td>\\n                <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n                  <span tooltip=\\\"Imprimir\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                    <button class=\\\"btn-icon-sm\\\" (click)=\\\"abrirRelatorio(inventario.idInventario)\\\">\\n                      <i class=\\\"fas fa-file-alt\\\"></i>\\n                    </button>\\n                  </span>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"mt-3\\\" [hidden]=\\\"noResult\\\">\\n            Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n          <pagination\\n            [maxSize]=\\\"10\\\"\\n            [totalItems]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <tabset class=\\\"col-3 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">          \\n        <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onClose()\\\">\\n          <i class=\\\"fas fa-times\\\"></i>\\n        </button>\\n        <tab heading=\\\"Detalhes - {{ infoIdInventario | number:'6.0-0' }}\\\">\\n          <div class=\\\"border-right border-left border-bottom border-top px-3 pt-3\\\">\\n            <div class=\\\"form-row\\\" [hidden]=\\\"noLista\\\">\\n              <div class=\\\"form-group col-md-12\\\">\\n                <div class=\\\"text-nowrap\\\">\\n                  <table class=\\\"table table-sm table-hover text-left table-fixed\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th>Classe</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let infoClasse of infoClasses\\\">\\n                        <td class=\\\"border-top-0\\\"> {{ infoClasse.dsClasse | uppercase }} </td>\\n                      </tr>\\n                    </tbody>\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th>Linha</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr>\\n                        <td class=\\\"border-top-0\\\"> {{ infoLinha | uppercase }} </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n            <div\\n            class=\\\"d-flex align-items-center justify-content-center\\\"\\n            style=\\\"width: 100%; height: 80%;\\\"\\n            [hidden]=\\\"!noResultado\\\"\\n            >\\n              <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n            </div>\\n            <div class=\\\"spinner-border text-primary justify-content-end positionSpinner loaderTab\\\" role=\\\"status\\\" [hidden]=\\\"!loaderNavbar\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n          </div>\\n        </tab>\\n      </tabset>\\n    </div>\\n    <div\\n      class=\\\"d-flex align-items-center justify-content-center\\\"\\n      style=\\\"width: 100%; height: 80%;\\\"\\n      [hidden]=\\\"!noResult\\\"\\n      >\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \".border-left-green {\\n  border-left-color: green !important;\\n}\\n\\n.border-left-orange {\\n  border-left-color: orange !important;\\n}\\n\\n.modal-content {\\n  position: absolute;\\n  left: -50%;\\n  width: 1000px;\\n}\\n\\n.actions button {\\n  background-color: transparent;\\n  border: unset;\\n  color: #586464;\\n  font-weight: 500;\\n  line-height: 35px;\\n  padding: 0px 10px;\\n}\\n\\n.bg-active {\\n  background-color: #e9ecef;\\n}\\n\\ntr:hover {\\n  background-color: #f8fafb !important;\\n}\\n\\n.actions button:hover {\\n  color: #005fdc;\\n}\\n\\n.positionSpinner {\\n  margin-top: 19px;\\n  right: -20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUNBQUE7QUFDRjs7QUFFQTtFQUNFLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSw2QkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0Usb0NBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlci1sZWZ0LWdyZWVuIHtcbiAgYm9yZGVyLWxlZnQtY29sb3I6IGdyZWVuICFpbXBvcnRhbnQ7XG59XG5cbi5ib3JkZXItbGVmdC1vcmFuZ2Uge1xuICBib3JkZXItbGVmdC1jb2xvcjogb3JhbmdlICFpbXBvcnRhbnQ7XG59XG5cbi5tb2RhbC1jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtNTAlO1xuICB3aWR0aDogMTAwMHB4O1xufVxuXG4uYWN0aW9ucyBidXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiB1bnNldDtcbiAgY29sb3I6ICM1ODY0NjQ7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICBwYWRkaW5nOiAwcHggMTBweDtcbn1cblxuLmJnLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG59XG5cbnRyOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZmFmYiAhaW1wb3J0YW50O1xufVxuXG4uYWN0aW9ucyBidXR0b246aG92ZXIge1xuICBjb2xvcjogIzAwNWZkYztcbn1cblxuLnBvc2l0aW9uU3Bpbm5lciB7XG4gIG1hcmdpbi10b3A6IDE5cHg7XG4gIHJpZ2h0OiAtMjAlO1xufVxuIl19 */\";","import { LogisticaEstoqueInventarioFiltroService } from './filtro.service';\nimport { PNotifyService } from '../../../../../shared/services/core/pnotify.service';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { Router } from '@angular/router';\nimport { finalize, delay, retry } from 'rxjs/operators';\nimport {\n  FormControl,\n  Validators,\n  FormBuilder,\n  FormGroup\n} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { string } from '@amcharts/amcharts4/core';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { forkJoin } from 'rxjs';\nimport { elementEventFullName } from '@angular/compiler/src/view_compiler/view_compiler';\n\n@Component({\n  selector: 'logistica-estoque-inventario-filtro',\n  templateUrl: './filtro.component.html',\n  styleUrls: ['./filtro.component.scss']\n})\nexport class LogisticaEstoqueInventarioFiltroComponent implements OnInit {\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\n  ativarCampos: any = false;\n  tipoInventario: number;\n  spinnerFullScreen: boolean = true;\n  loaderNavbar: boolean = false;\n  loading: boolean = true;\n  data: Date = new Date();\n  form: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  empresas: any = [];\n  depositos: any = [];\n  linhas: any = [];\n  classes: any = [];\n  materiais: any = [];\n  breadCrumbTree: any = [\n    {\n      descricao: 'Home',\n      routerLink: '/logistica/estoque/inventario/filtro'\n    },\n    {\n      descricao: 'Filtros'\n    }\n  ];\n  disabledBotoes: any = {\n    finalizar: false,\n    editar: false,\n    aprovar: false\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private notice: PNotifyService,\n    private localeService: BsLocaleService,\n    private empresasService: LogisticaEstoqueInventarioFiltroService,\n    private route: Router,\n    private atividadesService: AtividadesService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      empresas: [null, Validators.required],\n      depositos: [null, Validators.required],\n      linhas: [null, Validators.required],\n      classes: [null],\n      materiais: [null],\n      dataInicial: [null],\n      dataFinal: [null]\n    });\n    this.atividadesService.registrarAcesso().subscribe();\n    this.getPerfil();\n    /* INICIO FILTROS INICIAIS */\n    this.empresasService\n      .getEmpresas()\n      .pipe(\n        finalize(() => {\n          this.spinnerFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (Object.keys(response).length > 0) {\n          this.empresas = response;\n        }\n      });\n\n    this.empresasService\n      .getLinhas()\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe((response: any) => {\n        if (Object.keys(response).length > 0) {\n          this.linhas = response;\n        }\n      });\n  }\n\n  /* INICIO ALTERA BOTÕES TIPO DE INVENTARIO */\n  setType(type: number) {\n    this.tipoInventario = type;\n  }\n\n  /* INICIO FUNÇÕES FILTROS COM PARÂMETROS */\n  getDepositos() {\n    this.loaderNavbar = true;\n\n    if (this.form.get('empresas').status === 'VALID') {\n      let idEmpresa = this.form.get('empresas').value;\n      this.empresasService\n        .getDepositos(idEmpresa)\n        .subscribe((response: any) => {\n          if (Object.keys(response).length > 0) {\n            this.depositos = response;\n          }\n          this.loaderNavbar = false;\n        });\n    }\n  }\n\n  getClasses() {\n    this.classes = [];\n    let descricaoLinhas = [];\n    this.loaderNavbar = true;\n\n    if (this.form.get('linhas').status === 'VALID') {\n      descricaoLinhas.push(this.form.get('linhas').value);\n      this.empresasService\n        .getClasses(descricaoLinhas)\n        .subscribe((response: any) => {\n          if (Object.keys(response).length > 0) {\n            this.classes = response;\n          }\n          this.loaderNavbar = false;\n        });\n    }\n  }\n\n  getMateriais(linhas, classes) {\n    this.materiais = [];\n    this.loaderNavbar = true;\n\n    if (\n      this.form.get('linhas').status === 'VALID' ||\n      this.form.get('classes').status === 'VALID'\n    ) {\n      let descricaoLinhas = this.form.get('linhas').value;\n      let idClasses = this.form.get('classes').value;\n      this.empresasService\n        .getMateriais(descricaoLinhas, idClasses)\n        .subscribe((response: any) => {\n          if (Object.keys(response).length > 0) {\n            this.materiais = response.result;\n          }\n          this.loaderNavbar = false;\n        });\n    }\n  }\n\n  /* INICIO CADASTRO DE INVENTÁRIO */\n  postCadastraInventario() {\n    if (\n      this.disabledBotoes.finalizar == false &&\n      this.disabledBotoes.editar == false &&\n      this.disabledBotoes.aprovar == false\n    ) {\n      this.notice.notice('Seu usuário não pode iniciar um inventário.');\n    } else {\n      if (\n        this.form.get('empresas').status === 'VALID' &&\n        this.form.get('depositos').status === 'VALID'\n      ) {\n        this.spinnerFullScreen = true;\n        let cdEmpresa = this.form.get('empresas').value;\n        let cdDeposito = this.form.get('depositos').value;\n\n        this.empresasService\n          .postCadastraInventario(\n            this.matriculaAuditor,\n            cdEmpresa,\n            cdDeposito,\n            this.tipoInventario\n          )\n          .subscribe(\n            (response: any) => {\n              if (response.status == 200) {\n                this.postMateriais(\n                  this.matriculaAuditor,\n                  response.body.idInventario\n                );\n              } else\n                this.notice.error('Houve um errro ao cadastrar o inventário.');\n            },\n            error => {\n              this.spinnerFullScreen = false;\n              if (error.status < 500) this.notice.notice(error.error.dsErro);\n              else this.notice.error('Ocorreu um erro!');\n            }\n          );\n      }\n    }\n  }\n\n  /* INICIO CADASTRO DE MATERIAIS */\n  /* postMateriais(matriculaAuditor, idInventario) {\n    let cdMateriais = [];\n\n    if (this.form.get('materiais').value == null)\n      this.materiais.forEach(element => {\n        cdMateriais.push(element.codigoMaterial);\n      });\n    else cdMateriais.push(this.form.get('materiais').value);\n    this.empresasService\n      .postMateriais(matriculaAuditor, idInventario, cdMateriais)\n      .pipe(finalize(() => (this.spinnerFullScreen = false)))\n      .subscribe(\n        (response: any) => {\n          if (response.status == 200) {\n            this.route.navigate([\n              `logistica/estoque/inventario/${idInventario}/contagem-materiais`\n            ]);\n          } else this.notice.error('Não há dados.');\n        },\n        error => {\n          if (error.status < 500) this.notice.notice(error.error.dsErro);\n          else this.notice.error('Ocorreu um erro!');\n        }\n      );\n  } */\n\n  postMateriais(matriculaAuditor, idInventario) {\n    let cdMateriais: any = [];\n\n    if (this.form.get('materiais').value == null)\n      this.materiais.forEach(element => {\n        cdMateriais.push(element.codigoMaterial);\n      });\n    else cdMateriais = this.form.get('materiais').value;\n\n    let particao = 50;\n    let qtEnvios = Math.ceil(cdMateriais.length / particao);\n    let mat: any = [];\n    for (let index = 0; index < qtEnvios; index++)\n      mat.push(\n        this.empresasService.postMateriais(\n          matriculaAuditor,\n          idInventario,\n          cdMateriais.slice(particao * index, particao * (index + 1))\n        )\n      );\n    forkJoin(mat)\n      .pipe(\n        retry(2),\n        finalize(() => (this.spinnerFullScreen = false))\n      )\n      .subscribe(\n        (response: any) => {\n          let contador = 0;\n\n          response.forEach(element => {\n            if (element.status == 200) {\n              contador++;\n            }\n          });\n\n          if (contador === response.length) {\n            this.route.navigate([\n              `/logistica/estoque/inventario/${idInventario}/contagem-materiais`\n            ]);\n          } else {\n            this.notice.error('Não há dados.');\n          }\n        },\n        error => {\n          if (error.status < 500) this.notice.notice(error.error.dsErro);\n          else this.notice.error('Ocorreu um erro!');\n        }\n      );\n  }\n\n  /* INICIO CONSULTA DO INVENTARIO */\n  onSearch() {\n    this.route.navigate([`logistica/estoque/inventario/inventario`], {\n      queryParams: {\n        tipo: this.tipoInventario,\n        empresa: this.form.get('empresas').value,\n        deposito: this.form.get('depositos').value,\n        linha: this.form.get('linhas').value,\n        classe: this.form.get('classes').value,\n        dataInicial: this.form.get('dataInicial').value,\n        dataFinal: this.form.get('dataFinal').value\n      }\n    });\n  }\n\n  /* CONTROLE VALIDAÇÕES DOS CAMPOS */\n  resetForm() {\n    this.form.get('depositos').reset();\n    this.form.get('linhas').reset();\n    this.form.get('classes').reset();\n    this.form.get('materiais').reset();\n    this.form.get('empresas').reset();\n  }\n\n  mostrarCampos() {\n    if (this.tipoInventario == 1 || this.tipoInventario == 2)\n      this.ativarCampos = true;\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onVideoLoaded() {\n    window.open('https://youtu.be/pwxbnXJw0uo', '_blank');\n  }\n\n  getPerfil() {\n    this.empresasService\n      .getPerfil(this.matriculaAuditor)\n      .pipe(\n        finalize(() => {\n          this.spinnerFullScreen = false;\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          this.disabledBotoes = response['disabledBotoes'];\n        },\n        error => {\n          this.notice.notice(\n            'Não há vinculo de perfil para realizar inventário nesse usuário.'\n          );\n        }\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaEstoqueInventarioListaService {\n  private readonly API: string = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) {}\n\n  getLista(\n    idInventario,\n    matricula = '',\n    cdMaterial = '',\n    naoConsideraEstoqueZerado\n  ) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\n      {\n        params: {\n          idInventario: idInventario,\n          matricula: matricula,\n          cdMaterial: cdMaterial,\n          naoConsideraEstoqueZerado: naoConsideraEstoqueZerado\n        }\n      }\n    );\n  }\n\n  getListaMateriaisParaFiltro(idInventario, matricula = '') {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\n      {\n        params: {\n          idInventario: idInventario,\n          matricula: matricula,\n          naoConsideraEstoqueZerado: '0',\n          qtPagina: '1000'\n        },\n        observe: 'response'\n      }\n    );\n  }\n\n  postSalvar(requisicao, idInventario) {\n    return this.http.post(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais/lancamento`,\n      requisicao,\n      { observe: 'response' }\n    );\n  }\n\n  atualizarInventario(\n    observacao = '',\n    idStatusInventario,\n    idInventario,\n    matriculaAuditor\n  ) {\n    return this.http.put(\n      `${this.API}/logistica/estoque/inventario/${idInventario}`,\n      {\n        observacao: observacao,\n        idStatusInventario: idStatusInventario,\n        matriculaAuditor: matriculaAuditor\n      },\n      { observe: 'response' }\n    );\n  }\n\n  getInfoInventario(idInventario) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}`\n    );\n  }\n\n  getNotasFiscais(idInventario, nrNotaFiscal) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\n      {\n        params: {\n          nrNotaFiscal: nrNotaFiscal\n        },\n        observe: 'response'\n      }\n    );\n  }\n\n  getMateriaisNotasFiscais(idInventario, notaFiscal) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/nota-fiscal/${notaFiscal}`,\n      {\n        observe: 'response'\n      }\n    );\n  }\n\n  salvarNotasFiscais(idInventario, notasFiscais, matriculaAuditor) {\n    return this.http.put(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\n      {\n        notasFiscais: notasFiscais,\n        matriculaAuditor: matriculaAuditor\n      },\n      { observe: 'response' }\n    );\n  }\n\n  getNotasFiscaisRo(idInventario, nrNotaFiscalRo) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\n      {\n        params: {\n          nrNotaFiscalRo: nrNotaFiscalRo\n        },\n        observe: 'response'\n      }\n    );\n  }\n\n  getMateriaisNotasFiscaisRo(idInventario, notaFiscalRo) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/nota-fiscal/${notaFiscalRo}`,\n      {\n        observe: 'response'\n      }\n    );\n  }\n\n  salvarNotasFiscaisRo(idInventario, notasFiscaisRo, matriculaAuditor) {\n    return this.http.put(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\n      {\n        notasFiscaisRo: notasFiscaisRo,\n        matriculaAuditor: matriculaAuditor\n      },\n      { observe: 'response' }\n    );\n  }\n\n  getInfoInventarioRotativo(idInventario, cdMaterial) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario-rotativo/${idInventario}/material/${cdMaterial}`,\n      {\n        observe: 'response'\n      }\n    );\n  }\n\n  getPerfil(matricula = '') {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/usuarios/${matricula}/perfis/controle-acesso`\n    );\n  }\n\n  getTotal(idInventario) {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/resultado`\n    );\n  }\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\n\nimport { LogisticaEstoqueInventarioComponent } from './inventario.component';\nimport { LogisticaEstoqueInventarioFiltroComponent } from './filtro/filtro.component';\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaEstoqueInventarioListaComponent } from './lista/lista.component';\nimport { LogisticaEstoqueInventarioListaInventarioComponent } from './lista/inventario/inventario.component';\nimport { LogisticaEstoqueInventarioListaRelatorioComponent } from './lista/relatorio/relatorio.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaEstoqueInventarioComponent,\n  },\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    path: 'filtro',\n    component: LogisticaEstoqueInventarioFiltroComponent\n  },\n  {\n    path: 'inventario',\n    component: LogisticaEstoqueInventarioListaInventarioComponent\n  },\n  {\n    path: ':id/relatorio',\n    component: LogisticaEstoqueInventarioListaRelatorioComponent\n  },\n  {\n    path: ':id/contagem-materiais',\n    component: LogisticaEstoqueInventarioListaComponent\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LogisticaEstoqueInventarioRoutingModule { }","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\n  <div class=\\\"col-6\\\">\\n    <div id=\\\"title\\\">\\n      <h1>Painel de inventário</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\n    <div id=\\\"actions\\\">\\n      <button \\n        (click)=\\\"postCadastraInventario()\\\"\\n        [disabled]=\\\"form.status  == 'INVALID' || !tipoInventario\\\">\\n        Novo\\n      </button>\\n      <button \\n        (click)=\\\"onSearch()\\\">\\n        Pesquisar\\n      </button>\\n      <!-- <button (click)=\\\"onVideoLoaded()\\\">\\n        Video\\n      </button> -->\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" id=\\\"application-body\\\" [hidden]=\\\"loading\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\n    <div class=\\\"col-12 p-0\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"col-6 justify-content-start\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"btn-group btn-group-sm w-100\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-light\\\"\\n                  [ngClass]=\\\"{'active': tipoInventario == 1}\\\"\\n                  (click)=\\\"setType( 1 ); resetForm(); mostrarCampos()\\\">\\n                  <strong>Inventário oficial</strong>\\n                </button>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-light\\\"\\n                  [ngClass]=\\\"{'active': tipoInventario == 2}\\\"\\n                  (click)=\\\"setType( 2 ); resetForm(); mostrarCampos()\\\">\\n                  <strong>Inventário rotativo</strong>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"empresa\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"empresas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"empresa\\\"\\n              bindLabel=\\\"nomeFantasia\\\"\\n              bindValue=\\\"codigoEmpresa\\\"\\n              placeholder=\\\"Selecione uma empresa\\\"\\n              formControlName=\\\"empresas\\\"\\n              (change) =\\\"getDepositos()\\\"\\n              (focus) =\\\"resetForm()\\\"\\n              [ngClass]=\\\"onFieldError('empresas') + ' ' + onFieldRequired('empresas')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('empresas')\\\"\\n              message=\\\"Empresa é obrigatório.\\\">\\n            </invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"deposito\\\">Depósito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"depositos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"deposito\\\"\\n              bindLabel=\\\"depositoDescricao\\\"\\n              bindValue=\\\"depositoId\\\"\\n              placeholder=\\\"Selecione um deposito\\\"\\n              formControlName=\\\"depositos\\\"\\n              [ngClass]=\\\"onFieldError('depositos') + ' ' + onFieldRequired('depositos')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('depositos')\\\"\\n              message=\\\"Despósito é obrigatório.\\\">\\n            </invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"linha\\\">Linha</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"linhas\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"linha\\\"\\n              bindLabel=\\\"linha\\\"\\n              bindValue=\\\"linha\\\"\\n              placeholder=\\\"Selecione uma linha\\\"\\n              formControlName=\\\"linhas\\\"\\n              (change) = \\\"getClasses(); getMateriais(linhas, '')\\\"\\n              [ngClass]=\\\"onFieldError('linhas') + ' ' + onFieldRequired('linhas')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('linhas')\\\"\\n              message=\\\"Linha é obrigatório.\\\">\\n            </invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"classe\\\">Classe</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"classes\\\"\\n              [multiple]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"classe\\\"\\n              bindLabel=\\\"classeDescricao\\\"\\n              bindValue=\\\"classeId\\\"\\n              placeholder=\\\"Selecione uma classe\\\"\\n              formControlName=\\\"classes\\\"\\n              (change) = \\\"getMateriais(linhas, classes)\\\"\\n              [ngClass]=\\\"onFieldError('classes')\\\"\\n            >\\n            </ng-select>\\n            <invalid-form-control\\n              [show]=\\\"onFieldInvalid('classes')\\\"\\n              message=\\\"Classe é obrigatório.\\\">\\n            </invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"material\\\">Material</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"materiais\\\"\\n              [multiple]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"material\\\"\\n              bindLabel=\\\"codigoDescricaoMaterial\\\"\\n              bindValue=\\\"codigoMaterial\\\"\\n              placeholder=\\\"Selecione um material\\\"\\n              formControlName=\\\"materiais\\\"\\n            >\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"empresa\\\">Data inicial</label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n              </div>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                [ngClass]=\\\"onFieldRequired('dataInicial')\\\"\\n                formControlName=\\\"dataInicial\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data inicial é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"empresa\\\">Data final</label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n              </div>\\n              <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataFinal\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              [ngClass]=\\\"onFieldRequired('dataFinal')\\\"\\n              formControlName=\\\"dataFinal\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data final é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaEstoqueInventarioFiltroService {\n  private readonly API: string = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) {}\n\n  getEmpresas() {\n    return this.http.get(`${this.API}/common/empresas`);\n  }\n\n  getDepositos(idEmpresa) {\n    return this.http.get(`${this.API}/common/depositos/${idEmpresa}`);\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/common/linhas`);\n  }\n\n  getClasses(descricaoLinhas) {\n    return this.http.get(`${this.API}/common/classes`, {\n      params: {\n        linhas: btoa(descricaoLinhas)\n      }\n    });\n  }\n\n  getMateriais(descricaoLinhas, idClasses) {\n    if (!idClasses) idClasses = '';\n\n    return this.http.get(`${this.API}/common/materiais`, {\n      params: {\n        linhas: btoa(descricaoLinhas),\n        classes: btoa(idClasses)\n      }\n    });\n  }\n\n  postCadastraInventario(\n    matriculaAuditor,\n    cdEmpresa,\n    cdDeposito,\n    tipoInventario\n  ) {\n    return this.http.post(\n      `${this.API}/logistica/estoque/inventario`,\n      {\n        matriculaAuditor: matriculaAuditor,\n        cdEmpresa: cdEmpresa,\n        cdDeposito: cdDeposito,\n        tipoInventario: tipoInventario\n      },\n      { observe: 'response' }\n    );\n  }\n\n  postMateriais(matriculaAuditor, idInventario, cdMaterial) {\n    return this.http.post(\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\n      {\n        matriculaAuditor: matriculaAuditor,\n        idInventario: idInventario,\n        cdMaterial: cdMaterial\n      },\n      { observe: 'response' }\n    );\n  }\n\n  getPerfil(matricula = '') {\n    return this.http.get(\n      `${this.API}/logistica/estoque/inventario/usuarios/${matricula}/perfis/controle-acesso`\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n@Component({\n  selector: 'logistica-estoque-inventario',\n  templateUrl: './inventario.component.html',\n  styleUrls: ['./inventario.component.scss']\n})\nexport class LogisticaEstoqueInventarioComponent implements OnInit {\n  constructor(\n    private route: Router,\n    private atividadesService: AtividadesService\n  ) { }\n\n  ngOnInit() {\n    this.route.navigate(['/logistica/estoque/inventario/filtro']);\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n  }\n}\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\n  <div class=\\\"col-5\\\">\\n    <div id=\\\"title\\\">\\n      <back-button></back-button>\\n      <h1>Lista de materiais</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"col-7 d-flex justify-content-end\\\">\\n    <div id=\\\"actions\\\">\\n      <!-- acomodar botões -->\\n      <button \\n        (click)=\\\"onSearch()\\\"\\n        >\\n        Pesquisar\\n      </button>\\n      <button \\n        (click)=\\\"openModalNotaFiscal()\\\"\\n        *ngIf=\\\"ativNotaFiscal\\\"\\n        >\\n        Notas Fiscais\\n      </button>\\n      <!-- <button \\n        (click)=\\\"openModalRo()\\\"\\n        *ngIf=\\\"ativNotaFiscal\\\"\\n        >\\n        Notas Fiscais R.O\\n      </button> -->\\n      <button \\n        (click)=\\\"exportarExcel()\\\"\\n        [disabled]=\\\"!info || noResult\\\"\\n        *ngIf=\\\"ativExport\\\"\\n        >\\n        Exportar\\n      </button>\\n      <button\\n        class=\\\"hover\\\" \\n        (click)=\\\"cancelar(template, 1)\\\"\\n        *ngIf=\\\"ativCancelar\\\"\\n        >\\n        Cancelar\\n      </button>\\n      <button \\n        (click)=\\\"habilitaCampos()\\\"\\n        [disabled]=\\\"(habilita && !info) || inativBotoes || noResult\\\"\\n        *ngIf=\\\"ativEditar\\\"\\n        >\\n        Editar\\n      </button>\\n      <button \\n        (click)=\\\"postSalvar()\\\"\\n        [disabled]=\\\"info || inativBotoes || noResult\\\"\\n        *ngIf=\\\"ativSalvar\\\"\\n        >\\n        Salvar\\n      </button>\\n      <button \\n        (click)=\\\"finalizar(template)\\\"\\n        *ngIf=\\\"ativFinaliza\\\"\\n        >\\n        Finalizar\\n      </button>\\n      <button \\n        (click)=\\\"atualizarInventario('',1)\\\"\\n        *ngIf=\\\"ativReabrir\\\"\\n        >\\n        Reabrir\\n      </button>\\n      <button\\n        class=\\\"hover\\\" \\n        (click)=\\\"atualizarInventario('',5)\\\"\\n        [disabled]=\\\"!ativAprovar\\\"\\n        *ngIf=\\\"ativAprovar\\\"\\n        >\\n        Aprovar\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\n    <div>\\n      <div class=\\\"d-flex justify-content-between align-items-center col-12 p-0\\\">\\n        <div>\\n          <strong style=\\\"font-size: 1.25rem\\\">Código do Inventário: {{ idInventario | number : '6.0-0'}} - {{ tipoInventario | uppercase }}</strong>\\n          <div \\n            class=\\\"d-flex justify-content-start align-items-center\\\" \\n            style=\\\"cursor: pointer; font-size: 1rem\\\"\\n            *ngIf=\\\"disabledBotoes.editar\\\"\\n            >\\n              <i [ngClass]=\\\"{'fa-toggle-off': considerarMaterialSemEstoque == 1, 'fa-toggle-on': considerarMaterialSemEstoque == 0}\\\" \\n              class=\\\"fas pr-1\\\" \\n              (click)=\\\"onToggleListaMateriais();\\\" \\n              >\\n            </i> Considerar materiais sem estoque\\n          </div>\\n        </div>\\n        <form class=\\\"col-4 p-0\\\" [formGroup]=\\\"form\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-12\\\">\\n              <label for=\\\"dsMaterial\\\">Material</label>\\n              <ng-select\\n                  [items]= \\\"listaMateriaisFiltro\\\"\\n                  [closeOnSelect]=\\\"true\\\"\\n                  [hideSelected]=\\\"true\\\"\\n                  bindLabel=\\\"dsMaterial\\\"\\n                  bindValue=\\\"cdMaterial\\\"\\n                  placeholder=\\\"Pesquise por um material\\\"\\n                  formControlName=\\\"cdMaterial\\\"\\n              >\\n              </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div [hidden]=\\\"noResult || spinnerFullScreen\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-sm table-hover border-left border-right border-bottom text-center table-fixed\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(1)\\\">Classe</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(2)\\\">Cod. material</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 350px;\\\" *ngIf=\\\"esconderColunas(3)\\\">Material</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(4)\\\">Endereço</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(5)\\\">Estoque (tons)</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(6)\\\">Peso por peça (Kg)</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(7)\\\">Qtd. peças</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(8)\\\">Peso físico (tons)</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(9)\\\">Total da contagem</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(10)\\\">Notas fiscais</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Saldo inventário</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(12) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Soma inventário rotativo</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\">Valor unitário</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(14) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Resultado inventário</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\">Resultado monetário</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\">\\n                <td *ngIf=\\\"esconderColunas(1)\\\" class=\\\"align-middle\\\"> {{ lista.dsClasse | uppercase }}</td>\\n                <td *ngIf=\\\"esconderColunas(2)\\\" class=\\\"align-middle\\\">{{ lista.cdMaterial }}</td>\\n                <td *ngIf=\\\"esconderColunas(3)\\\" class=\\\"align-middle\\\" style=\\\"width: 350px;\\\">{{ lista.dsMaterial | uppercase }}</td>\\n                <td *ngIf=\\\"esconderColunas(4)\\\" class=\\\"align-middle\\\">{{ lista.enderecoPatio | uppercase }}</td>\\n                <td *ngIf=\\\"esconderColunas(5)\\\" class=\\\"align-middle\\\">{{ lista.qtPesoEstoque | number: '1.3-3'}}</td>\\n                <td *ngIf=\\\"esconderColunas(6)\\\" class=\\\"align-middle\\\">{{ lista.pesoPeca | number: '1.3-3'}}</td>\\n                <td *ngIf=\\\"esconderColunas(7)\\\" class=\\\"align-middle\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input \\n                      class=\\\"form-control form-control-sm\\\" \\n                      type=\\\"text\\\" \\n                      [(ngModel)]=\\\"lista.qtPecaContagem\\\"\\n                      [disabled]=\\\"info\\\">\\n                  </div>\\n                </td>\\n                <td *ngIf=\\\"esconderColunas(8)\\\" class=\\\"align-middle\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input \\n                      class=\\\"form-control form-control-sm\\\" \\n                      type=\\\"text\\\" \\n                      [(ngModel)]=\\\"lista.qtPesoContagem\\\"\\n                      [disabled]=\\\"info\\\"\\n                      currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\n                  </div>\\n                </td>\\n                <td *ngIf=\\\"esconderColunas(9)\\\" class=\\\"align-middle\\\">{{ getTotalContagem(lista) | number: '1.3-3' }}</td>\\n                <td *ngIf=\\\"esconderColunas(10)\\\" class=\\\"align-middle\\\">{{ lista.qtMaterialNotaFiscal | number: '1.3-3' }}</td>\\n                <td *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getSaldoInventario(lista) | number: '1.3-3' }}</td>\\n                <td *ngIf=\\\"esconderColunas(12) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ lista.somaInventarioRotativo }}</td>\\n                <td *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ lista.precoMinimo | currency:'BRL' }}</td>\\n                <td *ngIf=\\\"esconderColunas(14) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getResultadoInventario(lista) | number: '1.3-3' }}</td>\\n                <td *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getResultadoMonetario(lista) | currency:'BRL' }}</td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"pt-2\\\"><h6>TOTAL</h6></td>\\n                <td></td>\\n                <td></td>\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPesoEstoque | number: '1.3-3' }}</h6></td>\\n                <td ></td>\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPecaLancamento }}</h6></td>\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPesoLancamento | number: '1.3-3' }}</h6></td>\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.saldoEstoqueLancamento | number: '1.3-3' }}</h6></td>\\n                <td></td>\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\"><h6>{{ listaInfo.saldoEstoque | number: '1.3-3' }}</h6></td>\\n                <td></td>\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\"><h6>{{ listaInfo.precoMinimo | currency:'BRL' }}</h6></td>\\n                <td></td>\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\"><h6>{{ listaInfo.saldoFinanceiro | currency:'BRL' }}</h6></td>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"mt-3 col-6\\\">\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n            <pagination\\n              [maxSize]=\\\"10\\\"\\n              [totalItems]=\\\"totalItems\\\"\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n              [boundaryLinks]=\\\"true\\\"\\n              [(ngModel)]=\\\"currentPage\\\"\\n              previousText=\\\"&lsaquo;\\\"\\n              nextText=\\\"&rsaquo;\\\"\\n              firstText=\\\"&laquo;\\\"\\n              lastText=\\\"&raquo;\\\">\\n            </pagination>\\n          </div>\\n          <div class=\\\"align-self-center d-flex mt-3 col-6\\\" *ngIf=\\\"!perfilLoaded\\\">\\n            <ng-select\\n              [items]= \\\"listaColunas\\\"\\n              [multiple]=\\\"true\\\"\\n              [closeOnSelect]=\\\"false\\\"\\n              [hideSelected]=\\\"true\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"id\\\"\\n              placeholder=\\\"Selcione Colunas\\\"\\n              [(ngModel)]=\\\"colunas\\\"\\n              >\\n            </ng-select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div \\n    class=\\\"d-flex align-items-center justify-content-center\\\"\\n    style=\\\"width: 100%; height: 70%;\\\"\\n    [hidden]=\\\"!noResult\\\">\\n    <empty-result message=\\\"Não há materiais cadastrados para este inventário\\\"></empty-result>\\n  </div>\\n  \\n  <ng-template #template>\\n    <div class=\\\"modal-header\\\">\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"63\\\" rows=\\\"10\\\" #justificativa></textarea>\\n      <button  \\n        type=\\\"button\\\" \\n        class=\\\"btn btn-primary justify-content-end \\\" \\n        style=\\\"margin-left: 51vh\\\"\\n        (click)=\\\"atualizarInventario(justificativa.value, 3); modalRef.hide()\\\"> Finalizar </button>\\n    </div>\\n  </ng-template>\\n\\n\\n  <div bsModal #childModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\n    <div class=\\\"modal-dialog modal-md\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header justify-content-end\\\">\\n          <div class=\\\"actions d-flex\\\">\\n            <button (click)=\\\"hideChildModal()\\\">\\n              Fechar\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-body d-flex\\\">\\n          <div class=\\\"p-0\\\" [ngClass]=\\\"{'col-3': compressedTable}\\\">\\n            <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"width: 50px\\\"></th>\\n                  <th>Nota Fiscal</th>\\n                  <th [hidden]=\\\"compressedTable\\\" >Data de Emissão</th>\\n                  <th [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr class=\\\"hover\\\" *ngFor=\\\"let notaFiscal of notasFiscais | slice : beginP : endP; let i = index\\\" [ngClass]=\\\"{'bg-active': notaFiscalSelecionada == notaFiscal.notaFiscal}\\\">\\n                  <td \\n                  style=\\\"width: 50px\\\"\\n                  [ngClass]=\\\"{ 'border-left-green': notaFiscal.situacao == 'Emitida',\\n                  'border-left-orange': notaFiscal.situacao != 'Emitida'}\\\" >\\n                    <div class=\\\"custom-control custom-checkbox\\\" style=\\\"cursor: pointer;\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" \\n                              [(ngModel)]=\\\"notaFiscal.check\\\" \\n                              (change)=\\\"verificaCheck(notaFiscal)\\\" \\n                              id=\\\"customCheck{{ i }}\\\" \\n                              style=\\\"cursor: pointer;\\\">\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{ i }}\\\" style=\\\"cursor: pointer;\\\"></label>\\n                    </div>\\n                  </td>\\n                  <td (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\">{{ notaFiscal.notaFiscal }}</td>\\n                  <td (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\" [hidden]=\\\"compressedTable\\\">{{ notaFiscal.dtEmissao | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                  <td [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px; cursor: pointer;\\\" (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\"><i class=\\\"far fa-file-alt\\\"></i></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"mt-3 col-6\\\"></div>\\n            <div *ngIf=\\\"qtNotasFiscais >= itemsPerPage\\\">\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > qtNotasFiscais ? qtNotasFiscais : currentPage*(itemsPerPage) }} de {{ qtNotasFiscais }}\\n              <pagination\\n                [maxSize]=\\\"10\\\"\\n                [totalItems]=\\\"qtNotasFiscais\\\"\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n                (pageChanged)=\\\"onPageChangedProduct($event)\\\"\\n                [boundaryLinks]=\\\"true\\\"\\n                [(ngModel)]=\\\"currentPage\\\"\\n                previousText=\\\"&lsaquo;\\\"\\n                nextText=\\\"&rsaquo;\\\"\\n                firstText=\\\"&laquo;\\\"\\n                lastText=\\\"&raquo;\\\">\\n              </pagination>\\n            </div>\\n          </div>\\n          <tabset class=\\\"col-9 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onClose()\\\">\\n              <i class=\\\"fas fa-times\\\"></i>\\n            </button>\\n            <tab [heading]=\\\"notaFiscalSelecionada\\\">\\n                <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                    <tr>\\n                      <th>Código</th>\\n                      <th style=\\\"width: 50%\\\">Descrição</th>\\n                      <th>Peso Liq.</th>\\n                      <th>Valor</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let materialNotaFiscal of materiaisNotaFiscal; let i = index\\\">\\n                      <td>{{ materialNotaFiscal.cdMaterial }}</td>\\n                      <td style=\\\"width: 50%\\\">{{ materialNotaFiscal.dsMaterial  }}</td>\\n                      <td>{{ materialNotaFiscal.pesoLiquido | number : '1.3-3' }}</td>\\n                      <td>{{ materialNotaFiscal.vlTotal  | currency:'BRL':'symbol':'1.2-2'}}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n            </tab>\\n          </tabset>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div bsModal #childModalRo=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\">\\n      <div class=\\\"modal-content\\\" style=\\\"position: absolute; left: -100%;\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div class=\\\"d-flex position-relative\\\">\\n            <div class=\\\"form-group justify-content-end mr-2 mb-0\\\">\\n                <label for=\\\"cdNotaFiscalRo\\\"> Número Nota Fiscal RO </label>\\n                <input \\n                  id=\\\"cdNotaFiscalRo\\\"\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"DIGITE...\\\"\\n                  [(ngModel)]=\\\"cdNotaFiscalRo\\\"\\n                  (keyup.enter)=\\\"getListaExistenteRo()\\\"\\n                >\\n              </div>\\n            <div class=\\\"spinner-border text-primary position-absolut positionSpinner\\\" role=\\\"status\\\" [hidden]=\\\"!loading\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n          </div>\\n          <div class=\\\"actions justify-content-end d-flex\\\">\\n            <!-- <button (click)=\\\"salvarNotasFiscais()\\\">\\n              Salvar\\n            </button> -->\\n            <button (click)=\\\"hideChildModalRo()\\\">\\n              Fechar\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-body d-flex\\\">\\n          <div class=\\\"p-0\\\" [ngClass]=\\\"{'col-3': compressedTable}\\\">\\n            <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"width: 50px\\\"></th>\\n                  <th>Nota Fiscal</th>\\n                  <th [hidden]=\\\"compressedTable\\\" >Data de Emissão</th>\\n                  <th [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr class=\\\"hover\\\" *ngFor=\\\"let notaFiscal of notasFiscaisRo | slice : beginP : endP; let i = index\\\" [ngClass]=\\\"{'bg-active': notaFiscalSelecionada == notaFiscal.notaFiscal}\\\">\\n                  <td \\n                  style=\\\"width: 50px\\\"\\n                  [ngClass]=\\\"{ 'border-left-green': notaFiscal.situacao == 'Emitida',\\n                  'border-left-orange': notaFiscal.situacao != 'Emitida'}\\\" >\\n                    <div class=\\\"custom-control custom-checkbox\\\" style=\\\"cursor: pointer;\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" \\n                              [(ngModel)]=\\\"notaFiscal.check\\\" \\n                              (change)=\\\"verificaCheck(notaFiscal)\\\" \\n                              id=\\\"customCheck{{ i }}\\\" \\n                              style=\\\"cursor: pointer;\\\">\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{ i }}\\\" style=\\\"cursor: pointer;\\\"></label>\\n                    </div>\\n                  </td>\\n                  <td (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\">{{ notaFiscal.notaFiscal }}</td>\\n                  <td (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\" [hidden]=\\\"compressedTable\\\">{{ notaFiscal.dtEmissao | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                  <td [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px; cursor: pointer;\\\" (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\"><i class=\\\"far fa-file-alt\\\"></i></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"mt-3 col-6\\\"></div>\\n            <div *ngIf=\\\"qtNotasFiscaisRo >= itemsPerPage\\\">\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > qtNotasFiscaisRo ? qtNotasFiscaisRo : currentPage*(itemsPerPage) }} de {{ qtNotasFiscaisRo }}\\n              <pagination\\n                [maxSize]=\\\"10\\\"\\n                [totalItems]=\\\"qtNotasFiscaisRo\\\"\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n                (pageChanged)=\\\"onPageChangedProduct($event)\\\"\\n                [boundaryLinks]=\\\"true\\\"\\n                [(ngModel)]=\\\"currentPage\\\"\\n                previousText=\\\"&lsaquo;\\\"\\n                nextText=\\\"&rsaquo;\\\"\\n                firstText=\\\"&laquo;\\\"\\n                lastText=\\\"&raquo;\\\">\\n              </pagination>\\n            </div>\\n          </div>\\n          <tabset class=\\\"col-9 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">\\n            <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onCloseRo()\\\">\\n              <i class=\\\"fas fa-times\\\"></i>\\n            </button>\\n            <tab [heading]=\\\"notaFiscalSelecionadaRo\\\">\\n                <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                    <tr>\\n                      <th>Código</th>\\n                      <th style=\\\"width: 50%\\\">Descrição</th>\\n                      <th>Peso Liq.</th>\\n                      <th>Valor</th>\\n                      <th>Novo Peso</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let materialNotaFiscal of materiaisNotaFiscalRo; let i = index\\\">\\n                      <td>{{ materialNotaFiscal.cdMaterial }}</td>\\n                      <td style=\\\"width: 50%\\\">{{ materialNotaFiscal.dsMaterial  }}</td>\\n                      <td>{{ materialNotaFiscal.pesoLiquido | number : '1.3-3' }}</td>\\n                      <td>{{ materialNotaFiscal.vlTotal  | currency:'BRL':'symbol':'1.2-2'}}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n            </tab>\\n          </tabset>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaEstoqueInventarioListaInventarioService {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient, private dateService: DateService) {}\n\n  getInventario(\n    page,\n    tipo,\n    empresa,\n    deposito,\n    linha,\n    classe,\n    dataInicial,\n    dataFinal,\n    cdInventario,\n    sigla\n  ) {\n    let di = dataInicial\n      ? this.dateService.convert2PhpDate(new Date(dataInicial))\n      : '';\n    let df = dataFinal\n      ? this.dateService.convert2PhpDate(new Date(dataFinal))\n      : '';\n    return this.http.get(`${this.BASE_URL}/logistica/estoque/inventario`, {\n      params: {\n        pagina: page ? page : '',\n        tipo: tipo,\n        empresa: empresa,\n        deposito: deposito,\n        linha: linha,\n        classe: classe,\n        dataInicial: di,\n        dataFinal: df,\n        cdInventario: cdInventario,\n        sigla: sigla\n      }\n    });\n  }\n\n  getClassesInventario(idInventario) {\n    return this.http.get(\n      `${this.BASE_URL}/logistica/estoque/inventario/classes/${idInventario}`,\n      {\n        observe: 'response'\n      }\n    );\n  }\n}\n","export default \"button,\\nbutton:focus {\\n  box-shadow: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2ZpbHRyby9maWx0cm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBR0UsMkJBQUE7QUFBRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VzdG9xdWUvaW52ZW50YXJpby9maWx0cm8vZmlsdHJvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uLFxuYnV0dG9uOmZvY3VzXG57XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbn0iXX0= */\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaEstoqueInventarioListaRelatorioService {\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\n\n  constructor(private http: HttpClient) {}\n\n  getLista(idInventario) {\n    return this.http.get(\n      `${this.BASE_URL}/logistica/estoque/inventario/${idInventario}/materiais`\n    );\n  }\n\n  getInfoInventario(idInventario) {\n    return this.http.get(\n      `${this.BASE_URL}/logistica/estoque/inventario/${idInventario}/resultado`\n    );\n  }\n\n  getInfoInventarioRotativoGeral(idInventario) {\n    return this.http.get(\n      `${this.BASE_URL}/logistica/estoque/inventario-rotativo/${idInventario}`\n    );\n  }\n\n  getInfoInventarioRotativo(idInventario, cdMaterial) {\n    return this.http.get(\n      `${this.BASE_URL}/logistica/estoque/inventario-rotativo/${idInventario}/material/${cdMaterial}`,\n      {\n        observe: 'response'\n      }\n    );\n  }\n}\n","import {\n  BsModalService,\n  BsModalRef,\n  ModalDirective,\n} from 'ngx-bootstrap/modal';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  Component,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  Directive,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { LogisticaEstoqueInventarioListaService } from './lista.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize, retry } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n@Component({\n  selector: 'logistica-estoque-inventario-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaEstoqueInventarioListaComponent implements OnInit {\n  @ViewChild('childModal', { static: false }) childModal: ModalDirective;\n  @ViewChild('childModalRo', { static: false }) childModalRo: ModalDirective;\n\n  idInventario: number = this.activatedRoute.snapshot.params['id'];\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\n\n  form: FormGroup;\n\n  dateRef: Date;\n  dataNow: any;\n  cdNotaFiscal = '';\n  cdNotaFiscalRo = '';\n  tipoInventario = '';\n  status: any;\n  adminProfile = true;\n\n  perfilLoaded: boolean;\n  loaderNavbar = true;\n  spinnerFullScreen = true;\n  loading = false;\n  noResult = false;\n  compressedTable = false;\n  considerarMaterialSemEstoque = 1;\n  perfilTipo = '';\n\n  listaColunas: any;\n  listas = [];\n  listaInfo: any = {};\n  disabledBotoes = {\n    finalizar: false,\n    editar: false,\n    aprovar: false,\n    reabrir: false,\n  };\n  habilita = false;\n  info = false;\n  ativAprovar = false;\n  ativFinaliza = false;\n  ativReabrir = false;\n  ativCancelar = false;\n  ativEditar = false;\n  ativSalvar = false;\n  ativNotaFiscal = false;\n  ativExport = false;\n  inativBotoes = false;\n  desabilitarBotoes = true;\n  notaFiscalSelecionada: number;\n  notaFiscalSelecionadaRo: number;\n\n  modalRef: BsModalRef;\n  config = {\n    animated: true,\n  };\n\n  parametros = {};\n  breadCrumbTree = [\n    {\n      descricao: 'Home',\n      routerLink: '/logistica/estoque/inventario/filtro',\n    },\n    {\n      descricao: 'Inventario',\n      routerLink: '/logistica/estoque/inventario/inventario',\n    },\n    {\n      descricao: 'Inventário',\n    },\n  ];\n\n  colunas = [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\n  /* Paginação */\n  itemsPerPage: number = 10;\n  totalItems: number;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 10;\n  beginP: number = 0;\n  endP: number = 10;\n  /* Paginação */\n\n  /* Seleção de Colunas */\n  itens: FormGroup;\n  selectedPeople = [];\n  listaMateriaisFiltro: any = [];\n  notasFiscais: any;\n  qtNotasFiscais: any;\n  tempNotasFiscais: any;\n  materiaisNotaFiscal: any = [];\n  notasFiscaisRo: any;\n  qtNotasFiscaisRo: any;\n  tempNotasFiscaisRo: any;\n  materiaisNotaFiscalRo: any = [];\n  /* Seleção de Colunas */\n\n  constructor(\n    private xlsxService: XlsxService,\n    private activatedRoute: ActivatedRoute,\n    private notice: PNotifyService,\n    private empresasService: LogisticaEstoqueInventarioListaService,\n    private dateSevice: DateService,\n    private route: Router,\n    private modalService: BsModalService,\n    private formBuilder: FormBuilder,\n    private atividadesService: AtividadesService\n  ) {\n    this.form = this.formBuilder.group({\n      cdMaterial: [null, Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.getListaMateriaisParaFiltro();\n    this.changeColunas();\n    this.getInfoInventario();\n    this.onLoadAplication();\n    this.atividadesService.registrarAcesso().subscribe();\n    this.getPerfil();\n  }\n\n  onLoadAplication() {\n    this.adminProfile = true;\n    this.loaderNavbar = true;\n    let params = {};\n\n    if (!this.adminProfile) {\n      setTimeout(() => {\n        this.perfilLoaded = true;\n        this.loaderNavbar = false;\n      }, 500);\n    } else if (this.adminProfile) {\n      setTimeout(() => {\n        this.perfilLoaded = false;\n        this.loaderNavbar = false;\n      }, 500);\n    }\n  }\n\n  onToggleListaMateriais() {\n    this.considerarMaterialSemEstoque =\n      this.considerarMaterialSemEstoque == 1 ? 0 : 1;\n    this.getLista('', this.considerarMaterialSemEstoque);\n  }\n\n  getLista(cdMaterial = '', considerarMaterialSemEstoque = 1) {\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\n      this.spinnerFullScreen = true;\n\n      this.listas = [];\n      this.totalItems = 0;\n      //Carrega a lista de materiais em inventário\n      this.empresasService\n        .getLista(\n          this.idInventario,\n          this.matriculaAuditor,\n          cdMaterial,\n          considerarMaterialSemEstoque\n        )\n        .pipe(\n          finalize(() => {\n            this.spinnerFullScreen = false;\n            this.loaderNavbar = false;\n            this.getTotal();\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            this.listas = response['materiais'];\n            this.totalItems = response['qtRegistros'];\n            this.noResult = false;\n            this.listas.forEach((element) => {\n              element.totalContagem =\n                element.qtPecaContagem * element.pesoPeca +\n                parseFloat(element.qtPesoContagem);\n              this.getInfoInventarioRotativo(element.cdMaterial).subscribe(\n                (response: any) => {\n                  if (response.status == 204)\n                    element.somaInventarioRotativo = 0;\n                  else\n                    element.somaInventarioRotativo = parseFloat(\n                      response.body.saldoEstoque\n                    );\n                  element.resultadoInventario =\n                    parseFloat(element.saldoEstoque) +\n                    element.somaInventarioRotativo;\n                }\n              );\n            });\n          },\n          (error) => {\n            this.notice.notice(\n              'Não há materiais cadastrados para esse inventário.'\n            );\n            this.noResult = true;\n          }\n        );\n    }\n  }\n\n  getListaMateriaisParaFiltro() {\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\n\n      //Carrega a lista de materiais para o filtro\n      this.empresasService\n        .getListaMateriaisParaFiltro(this.idInventario, this.matriculaAuditor)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe((response: any) => {\n          if (response['status'] === 200)\n            this.listaMateriaisFiltro = response['body']['materiais'];\n        });\n    }\n  }\n\n  postSalvar() {\n    let materiais = [];\n    let requisicao = {};\n    this.loaderNavbar = true;\n\n    this.listas.forEach((element) => {\n      if (element.qtPecaContagem != null || element.qtPesoContagem != null) {\n        materiais.push({\n          idInventarioMaterial: element.idInventarioMaterial,\n          qtPeca: element.qtPecaContagem ? element.qtPecaContagem : null,\n          qtPeso: element.qtPesoContagem ? element.qtPesoContagem : null,\n          cdMaterial: element.cdMaterial ? element.cdMaterial : null,\n        });\n      } else {\n        this.getLista();\n      }\n    });\n\n    if (materiais.length > 0) {\n      requisicao = {\n        matriculaAuditor: this.matriculaAuditor,\n        materiais,\n      };\n      this.empresasService\n        .postSalvar(requisicao, this.idInventario)\n        .pipe(finalize(() => (this.loaderNavbar = false)))\n        .subscribe(\n          (response: any) => {\n            if (response['body']['erros'].length === 0) {\n              this.notice.success('Registros atualizados com sucesso!');\n            } else {\n              this.notice.error('Alguns registros não puderam ser atualizados');\n            }\n            this.getLista();\n          },\n          (error: any) => {\n            this.notice.error('Erro ao salvar registros');\n          }\n        );\n    } else {\n      this.notice.notice('Inventário não teve alterações para ser salvo');\n      this.getLista();\n    }\n  }\n\n  finalizar(template) {\n    if (this.dateDiff(this.dateRef, new Date()) >= 7)\n      this.modalRef = this.modalService.show(template);\n    else {\n      let finaliza = confirm('Tem certeza que deseja finalizar o inventário?');\n\n      if (finaliza) this.atualizarInventario('', 2);\n    }\n  }\n\n  cancelar(template, valor) {\n    let cancela = confirm('Tem certeza que deseja cancelar o inventário?');\n    if (valor == 1)\n      if (cancela) this.modalRef = this.modalService.show(template);\n  }\n\n  dateDiff(date1, date2) {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  }\n\n  atualizarInventario(justificativa, statusInventario) {\n    this.loaderNavbar = true;\n    let finalizacao = {};\n\n    finalizacao = {\n      idStatusInventario: statusInventario,\n      matriculaAuditor: this.matriculaAuditor,\n      idInventario: this.idInventario,\n      observacao: justificativa,\n    };\n    this.empresasService\n      .atualizarInventario(\n        justificativa,\n        statusInventario,\n        this.idInventario,\n        this.matriculaAuditor\n      )\n      .pipe(\n        finalize(\n          () => (\n            (this.loaderNavbar = false),\n            this.getLista(),\n            this.getInfoInventario()\n          )\n        )\n      )\n      .subscribe(\n        (response: any) => {\n          if (response['status'] === 200)\n            this.notice.success(response['body']['message']);\n        },\n        (error) => {\n          this.notice.error(error.error.dsErro);\n        }\n      );\n  }\n\n  getInfoInventarioRotativo(cdMaterial) {\n    return this.empresasService.getInfoInventarioRotativo(\n      this.idInventario,\n      cdMaterial\n    );\n  }\n\n  /* TRATA HORA ATUAL */\n  RetornaDataHoraAtual() {\n    var dNow = new Date();\n    var localdate =\n      dNow.getDate() +\n      '/' +\n      (dNow.getMonth() + 1) +\n      '/' +\n      dNow.getFullYear() +\n      ' ' +\n      dNow.getHours() +\n      ':' +\n      dNow.getMinutes();\n    return (this.dataNow = localdate);\n  }\n\n  /* TRATA CAMPOS DE INPUT - DESABILITA EXIGINDO O CLICK NO BOTÃO EDITAR */\n  getInfoInventario() {\n    this.empresasService\n      .getInfoInventario(this.idInventario)\n      .subscribe((response: any) => {\n        this.dateRef = new Date(response.dtInclusao);\n        this.status = response.siglaStatusInventario;\n        this.tipoInventario = response.dsTipoInventario;\n        if (\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_ABER' ||\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_FINA' ||\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC' ||\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST' ||\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_APRO'\n        ) {\n          this.info = true;\n        } else {\n          this.info;\n        }\n\n        if (response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST') {\n          this.noResult = true;\n        }\n\n        this.controlaAcessoBotoes();\n      });\n  }\n\n  /* HABILITA CAMPOS PARA EDITAR */\n  habilitaCampos() {\n    if (this.listas !== null) {\n      this.info = false;\n      this.habilita = true;\n    }\n  }\n\n  changeColunas() {\n    let response = [\n      { id: 1, descricao: 'Classe' },\n      { id: 2, descricao: 'Código do Material' },\n      { id: 3, descricao: 'Descrição do Material' },\n      { id: 4, descricao: 'Endereço' },\n      { id: 5, descricao: 'Estoque (Tons)' },\n      { id: 6, descricao: 'Peso Por Peça' },\n      { id: 7, descricao: 'Quantidade de Peças' },\n      { id: 8, descricao: 'Peso físico (Tons)' },\n      { id: 9, descricao: 'Total da contagem' },\n      { id: 10, descricao: 'Notas Fiscais' },\n      { id: 11, descricao: 'Diferença Ajustada' },\n      { id: 12, descricao: 'Soma Inventário Rotativo' },\n      { id: 13, descricao: 'Valor Unitário' },\n      { id: 14, descricao: 'Resultado Inventário' },\n      { id: 15, descricao: 'Resultado Monetário' },\n    ];\n\n    this.listaColunas = response;\n  }\n\n  esconderColunas(titulo) {\n    return this.colunas.indexOf(titulo) !== -1;\n  }\n\n  exportarExcel() {\n    this.xlsxService.exportFile(this.listas, 'inventario');\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n\n  /* Pesquisa a lista de materiais para popular o filtro */\n  onSearch() {\n    this.loaderNavbar = true;\n    if (this.form.get('cdMaterial').status == 'VALID')\n      this.getLista(this.form.get('cdMaterial').value, 0);\n    else this.getLista();\n  }\n  /* */\n\n  getMateriaisNotasFiscais(notaFiscal) {\n    this.loading = true;\n    this.materiaisNotaFiscal = [];\n    this.empresasService\n      .getMateriaisNotasFiscais(this.idInventario, notaFiscal)\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe((data) => {\n        if (data['status'] === 200) {\n          this.materiaisNotaFiscal = data['body'];\n          this.compressedTable = true;\n          this.notaFiscalSelecionada = notaFiscal;\n        }\n      });\n  }\n\n  getMateriaisNotasFiscaisRo(notaFiscal) {\n    this.loading = true;\n    this.materiaisNotaFiscalRo = [];\n    this.empresasService\n      .getMateriaisNotasFiscaisRo(this.idInventario, notaFiscal)\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe((data) => {\n        if (data['status'] === 200) {\n          this.materiaisNotaFiscalRo = data['body'];\n          this.compressedTable = true;\n          this.notaFiscalSelecionadaRo = notaFiscal;\n        }\n      });\n  }\n\n  /* Função para abertura de modal de Notas Fiscais */\n  openModalNotaFiscal() {\n    this.getListaExistente();\n    this.childModal.show();\n  }\n\n  /* Função para abertura de modal de Notas Fiscais relacionadas a R.O's */\n  openModalRo() {\n    this.getListaExistenteRo();\n    this.childModalRo.show();\n  }\n\n  /* Função que verifica se a lista já foi carregada e se a nf da consulta consta na lista */\n  getListaCarregadaMaisNotaFiscal() {\n    let containsNotaFiscal = false;\n    let isNotUndefined = typeof this.tempNotasFiscais !== 'undefined';\n\n    if (isNotUndefined) {\n      containsNotaFiscal = this.tempNotasFiscais.find(\n        (element) => element.notaFiscal === this.cdNotaFiscal\n      );\n    }\n\n    return isNotUndefined && containsNotaFiscal;\n  }\n\n  getListaCarregadaMaisNotaFiscalRo() {\n    let containsNotaFiscal = false;\n    let isNotUndefined = typeof this.tempNotasFiscais !== 'undefined';\n\n    if (isNotUndefined) {\n      containsNotaFiscal = this.tempNotasFiscais.find(\n        (element) => element.notaFiscal === this.cdNotaFiscalRo\n      );\n    }\n\n    return isNotUndefined && containsNotaFiscal;\n  }\n\n  /* Função que verifica se a lista já foi carregada e usa ela para pesquisa, sem a necessidade de consultar novamente */\n  getListaExistente() {\n    if (this.getListaCarregadaMaisNotaFiscal()) {\n      const val = this.cdNotaFiscal;\n\n      if (!val) {\n        this.notasFiscais = this.tempNotasFiscais;\n      }\n\n      const temp = this.tempNotasFiscais.filter((row) => {\n        return Object.keys(row).some((property) => {\n          return row[property] === null\n            ? null\n            : row[property].toString().indexOf(val) !== -1;\n        });\n      });\n\n      this.notasFiscais = temp;\n      this.loading = false;\n    } else this.getNotasFiscais();\n  }\n\n  getListaExistenteRo() {\n    if (this.getListaCarregadaMaisNotaFiscalRo()) {\n      const val = this.cdNotaFiscalRo;\n\n      if (!val) {\n        this.notasFiscaisRo = this.tempNotasFiscais;\n      }\n\n      const temp = this.tempNotasFiscais.filter((row) => {\n        return Object.keys(row).some((property) => {\n          return row[property] === null\n            ? null\n            : row[property].toString().indexOf(val) !== -1;\n        });\n      });\n\n      this.notasFiscaisRo = temp;\n      this.loading = false;\n    } else this.getNotasFiscaisRo();\n  }\n\n  /* Função consulta lista de notas fiscais, seja ela uma lista com 1 ou mais resultados */\n  getNotasFiscais() {\n    this.loading = true;\n    this.empresasService\n      .getNotasFiscais(this.idInventario, this.cdNotaFiscal)\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe(\n        (data) => {\n          if (data['status'] === 200) {\n            this.notasFiscais = data['body']['notasFiscais'];\n            this.tempNotasFiscais = data['body']['notasFiscais'];\n            this.qtNotasFiscais = data['body']['qtRegistros'];\n          } else this.notice.notice('Não houve retorno para sua consulta');\n        },\n        (error) => this.notice.error(error.message)\n      );\n  }\n\n  /* Função consulta lista de notas fiscais, seja ela uma lista com 1 ou mais resultados */\n  getNotasFiscaisRo() {\n    this.loading = true;\n    this.empresasService\n      .getNotasFiscaisRo(this.idInventario, this.cdNotaFiscalRo)\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe(\n        (data) => {\n          if (data['status'] === 200) {\n            this.notasFiscaisRo = data['body']['notasFiscais'];\n            this.tempNotasFiscaisRo = data['body']['notasFiscais'];\n            this.qtNotasFiscaisRo = data['body']['qtRegistros'];\n          } else this.notice.notice('Não houve retorno para sua consulta');\n        },\n        (error) => this.notice.error(error.message)\n      );\n  }\n\n  hideChildModal(): void {\n    this.childModal.hide();\n    this.postSalvar();\n  }\n\n  hideChildModalRo(): void {\n    this.childModalRo.hide();\n    this.postSalvar();\n  }\n\n  onClose() {\n    this.compressedTable = false;\n    this.notaFiscalSelecionada = 0;\n  }\n\n  onCloseRo() {\n    this.compressedTable = false;\n    this.notaFiscalSelecionadaRo = 0;\n  }\n\n  /* Paginação */\n  onPageChangedProduct(event: PageChangedEvent): void {\n    this.beginP = (event.page - 1) * event.itemsPerPage;\n    this.endP = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n\n  salvarNotasFiscais() {\n    let checkAlterado = [];\n    this.notasFiscais.forEach((element) => {\n      if (element.checkAlterado) {\n        checkAlterado.push(element);\n      }\n    });\n\n    let particao = 50;\n    let qtEnvios = Math.ceil(checkAlterado.length / particao);\n    let req: any = [];\n\n    this.loading = true;\n\n    for (let index = 0; index < qtEnvios; index++)\n      req.push(\n        this.empresasService.salvarNotasFiscais(\n          this.idInventario,\n          checkAlterado.slice(particao * index, particao * (index + 1)),\n          this.matriculaAuditor\n        )\n      );\n\n    forkJoin(req)\n      .pipe(\n        retry(2),\n        finalize(() => (this.loading = false))\n      )\n      .subscribe(\n        (data) => {\n          let contador = 0;\n          data[0]['body'].forEach((element) => {\n            if (element['responseCode'] == 200) {\n              this.notice.success('Itens salvos com sucesso!');\n              contador++;\n            } else {\n              this.notice.error(element['response']);\n            }\n          });\n          if (contador === data.length) {\n          }\n        },\n        (error) => {\n          this.notice.error('Ocorreu um erro ao salvar os itens');\n        }\n      );\n  }\n\n  salvarNotasFiscaisRo() {\n    let checkAlterado = [];\n    this.notasFiscaisRo.forEach((element) => {\n      if (element.checkAlterado) {\n        checkAlterado.push(element);\n      }\n    });\n\n    let particao = 50;\n    let qtEnvios = Math.ceil(checkAlterado.length / particao);\n    let req: any = [];\n\n    this.loading = true;\n\n    for (let index = 0; index < qtEnvios; index++)\n      req.push(\n        this.empresasService.salvarNotasFiscaisRo(\n          this.idInventario,\n          checkAlterado.slice(particao * index, particao * (index + 1)),\n          this.matriculaAuditor\n        )\n      );\n\n    forkJoin(req)\n      .pipe(\n        retry(2),\n        finalize(() => (this.loading = false))\n      )\n      .subscribe(\n        (data) => {\n          let contador = 0;\n\n          this.notice.success('Itens salvos com sucesso!');\n          data.forEach((element) => {\n            if (element['status'] == 200) {\n              contador++;\n            }\n          });\n          if (contador === data.length) {\n          }\n        },\n        (error) => {\n          this.notice.error('Ocorreu um erro ao salvar os itens');\n        }\n      );\n  }\n\n  verificaCheck(notaFiscal) {\n    notaFiscal.checkAlterado = !notaFiscal.checkAlterado;\n    this.salvarNotasFiscais();\n    this.getNotasFiscais();\n  }\n\n  getTotalContagem(material) {\n    return (\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\n      material.qtPesoContagem\n    );\n  }\n\n  getSaldoInventario(material) {\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\n      return undefined;\n    }\n\n    const pesoFisico =\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\n      material.qtPesoContagem;\n    const estoque = material.qtPesoEstoque;\n    const notasFiscais = parseFloat(material.qtMaterialNotaFiscal) ?? 0;\n    const saldo = pesoFisico - estoque + notasFiscais;\n    return saldo;\n  }\n\n  getResultadoInventario(material) {\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\n      return undefined;\n    }\n    return (\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\n      material.qtPesoContagem -\n      material.qtPesoEstoque +\n      material.somaInventarioRotativo\n    );\n  }\n\n  getResultadoMonetario(material) {\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\n      return undefined;\n    }\n    return (\n      ((material.pesoPeca / 1000) * material.qtPecaContagem +\n        material.qtPesoContagem -\n        material.qtPesoEstoque +\n        material.somaInventarioRotativo) *\n      material.precoMinimo\n    );\n  }\n\n  getPerfil() {\n    this.empresasService\n      .getPerfil(this.matriculaAuditor)\n      .pipe(\n        finalize(() => {\n          this.spinnerFullScreen = false;\n          this.loaderNavbar = false;\n          this.getLista();\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          this.disabledBotoes = response['disabledBotoes'];\n          this.perfilTipo = response['perfilTipo'];\n          this.controlaAcessoBotoes();\n        },\n        (error) => {\n          this.notice.notice(\n            'Não há vinculo de perfil para realizar inventário nesse usuário.'\n          );\n          this.noResult = true;\n        }\n      );\n  }\n\n  getTotal() {\n    this.spinnerFullScreen = true;\n    this.empresasService\n      .getTotal(this.idInventario)\n      .pipe(\n        finalize(() => {\n          this.spinnerFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        this.listaInfo = response;\n      });\n  }\n\n  controlaAcessoBotoes() {\n    if (\n      this.perfilTipo == 'assistente' &&\n      this.status == 'LOGI_INVE_STAT_ABER'\n    ) {\n      this.ativExport = true;\n      this.ativEditar = true;\n      this.ativNotaFiscal = true;\n      this.ativSalvar = true;\n    } else if (this.perfilTipo == 'lider') {\n      this.ativFinaliza = true;\n      this.ativCancelar = true;\n      this.ativEditar = true;\n      this.ativNotaFiscal = true;\n      this.ativSalvar = true;\n      if (this.status == 'LOGI_INVE_STAT_ABER') this.ativExport = true;\n    } else if (this.perfilTipo == 'coordenador') {\n      if (this.status == 'LOGI_INVE_STAT_ABER') {\n        this.ativFinaliza = true;\n        this.ativReabrir = false;\n        this.ativAprovar = false;\n        this.ativCancelar = true;\n        this.ativEditar = true;\n        this.ativNotaFiscal = true;\n        this.ativSalvar = true;\n        this.ativExport = true;\n      }\n      if (this.status == 'LOGI_INVE_STAT_FINA') {\n        this.ativFinaliza = false;\n        this.ativReabrir = true;\n        this.ativAprovar = true;\n        this.ativCancelar = true;\n        this.ativEditar = false;\n        this.ativNotaFiscal = false;\n        this.ativSalvar = false;\n        this.ativExport = true;\n      }\n      if (this.status == 'LOGI_INVE_STAT_APRO') {\n        this.ativFinaliza = false;\n        this.ativReabrir = false;\n        this.ativAprovar = false;\n        this.ativCancelar = false;\n        this.ativEditar = false;\n        this.ativNotaFiscal = false;\n        this.ativSalvar = false;\n        this.ativExport = true;\n      }\n    }\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\n  <div class=\\\"col-6\\\">\\n    <div id=\\\"title\\\">\\n      <back-button></back-button>\\n      <h1>Realtório de inventário</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\n    <div id=\\\"actions\\\">\\n      <button \\n        (click)=\\\"onDownload()\\\"\\n        >\\n        Imprimir relatório\\n    </button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div id=\\\"download\\\">\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"d-flex justify-content-between col-6 pl-5\\\">\\n              <img class=\\\"\\\" src=\\\"../../../../../../../assets/images/logo/logo-manetoni.png\\\" height=\\\"100\\\" width=\\\"150\\\">\\n            </div>\\n            \\n            <div class=\\\"d-flex justify-content-end col-6 mt-2 pr-5\\\">\\n              <img class=\\\"\\\" src=\\\"../../../../../../../assets/images/logo/Logo-MTcorp.png\\\" height=\\\"65\\\" width=\\\"220\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"espacamento250\\\">&nbsp;</div>\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"my-5\\\">\\n              <div class=\\\"d-flex justify-content-center\\\">\\n                <h1>RELATÓRIO DE RESULTADOS DO INVENTÁRIO</h1>\\n              </div>\\n            </div>\\n          </div>\\n        <!-- INICIA ESPAÇAMENTO -->\\n          <div class=\\\"espacamento150\\\">&nbsp;</div>\\n          <div style=\\\"height: 170px\\\">&nbsp;</div>\\n        <!-- FINALIZA ESPAÇAMENTO --> \\n          <ul class=\\\"p-0\\\">\\n            <li class=\\\"mx-3\\\">\\n              <h6 class=\\\"card-header border\\\"> \\n                Empresa: {{ listaInfo.dsEmpresa | uppercase }} / Depósito: {{ listaInfo.dsDeposito | uppercase }} / Linha: {{ infoLinha| uppercase }} / Classe: {{ infoClasse | uppercase }}\\n              </h6>\\n            </li>\\n          </ul> \\n          <ul class=\\\"d-flex p-0 col-12  my-5\\\">\\n            <li class=\\\"col-6\\\">\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\n                <h5 class=\\\"card-header text-center w-100\\\"> Estoque total ton.(Anterior) </h5>\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.qtPesoEstoque | number:'1.3-3' }} </h1></div>\\n                  </div>\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                </div>\\n              </div>\\n            </li>\\n            <li class=\\\"col-6\\\">\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\n                <h5 class=\\\"card-header text-center w-100\\\"> Estoque total ton.(Atual) </h5>\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.saldoEstoque | number:'1.3-3' }} </h1></div>\\n                  </div>\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                </div>\\n              </div>\\n            </li>\\n          </ul>\\n          <div class=\\\"espacamento20\\\">&nbsp;</div>\\n          <ul class=\\\"d-flex p-0 col-12  mt-5\\\">\\n            <li class=\\\"col-6\\\">\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\n                <h5 class=\\\"card-header text-center w-100\\\"> Total geral da contagem </h5>\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.saldoEstoqueLancamento | number:'1.3-3' }} </h1></div>\\n                  </div>\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                </div>\\n              </div>\\n            </li>\\n            <li class=\\\"col-6\\\">\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\n                <h5 class=\\\"card-header text-center w-100\\\"> Diferença total ajustada </h5>\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>  \\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\n                    <div class=\\\"col\\\"><h1> {{ resultadoDiferenca | number:'1.3-3' }} </h1></div>\\n                  </div>\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                </div>\\n              </div>\\n            </li>\\n          </ul>\\n          <div class=\\\"espacamento20\\\">&nbsp;</div>\\n          <ul class=\\\"d-flex p-0 col-12  mt-5\\\">\\n            <li class=\\\"col-6\\\">\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\n                  <h5 class=\\\"card-header text-center w-100\\\"> Resultado total do inventário </h5>\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\n                    <div class=\\\"col\\\"><h1> {{ resultTotalInventario | number:'1.3-3' }} </h1></div>\\n                  </div>\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                </div>\\n              </div> \\n            </li>\\n            <li class=\\\"col-6\\\">\\n                <div class=\\\"card justify-content-center align-items-center\\\">\\n                  <h5 class=\\\"card-header text-center w-100\\\"> Resultado monetário total </h5>\\n                  <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\n                    <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                    <div class=\\\"d-flex text-center col-12 large\\\">\\n                      <div class=\\\"col\\\"><h1> {{ listaInfo.saldoFinanceiro | currency:'BRL':'symbol':'1.2-2'}} </h1></div>\\n                    </div>\\n                    <div class=\\\"espacamento50\\\">&nbsp;</div>\\n                  </div>\\n                </div>\\n              </li>\\n          </ul>\\n          <div class=\\\"espacamento25\\\">&nbsp;</div>\\n          <ul class=\\\"p-0\\\">\\n            <li class=\\\"px-1 pb-1 \\\" *ngFor=\\\"let lista of listas\\\" style=\\\"list-style: none;\\\">\\n              <div class=\\\"card\\\">\\n                <h6 class=\\\"card-header\\\"> {{ lista.cdMaterial }} - {{ lista.dsMaterial }} </h6>\\n                <div class=\\\"row card-body\\\">\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\n                    <div class=\\\"list-group-item border-0\\\"> Estoque ton.: {{ lista.qtPesoEstoque | number : '1.3-3' }} </div>\\n                    <div class=\\\"list-group-item border-0\\\"> Qtd. peça físico: {{ lista.qtPecaContagem }} </div>\\n                    <div class=\\\"list-group-item border-0\\\"> Peso físico ton.: {{ lista.qtPesoContagem | number : '1.3-3' }} </div>\\n                  </div>\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\n                    <div class=\\\"list-group-item border-0\\\"> Total da contagem: {{ lista.totalContagem | number : '1.3-3' }} </div>\\n                    <div class=\\\"list-group-item border-0\\\"> Diferença ajustada: {{ lista.saldoEstoque | number : '1.3-3' }} </div>\\n                    <div class=\\\"list-group-item border-0\\\"> Soma inventário rotativo: {{ lista.somaInventarioRotativo | number : '1.3-3' }} </div>\\n                  </div>\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\n                    <div class=\\\"list-group-item border-0\\\"> Resultado inventário: {{ lista.resultadoInventario | number : '1.3-3' }} </div>\\n                    <div class=\\\"list-group-item border-0\\\"> Custo médio: {{ lista.precoMinimo | currency:'BRL':'symbol':'1.2-2' }} </div>\\n                    <div class=\\\"list-group-item border-0\\\"> Resultado monetário: {{ lista.saldoFinanceiro | currency:'BRL':'symbol':'1.2-2' }} </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LogisticaEstoqueInventarioListaRelatorioService } from './relatorio.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { finalize } from 'rxjs/operators';\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n@Component({\n  selector: 'relatorio',\n  templateUrl: './relatorio.component.html',\n  styleUrls: ['./relatorio.component.scss']\n})\nexport class LogisticaEstoqueInventarioListaRelatorioComponent\n  implements OnInit {\n  idInventario: number = this.activatedRoute.snapshot.params['id'];\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\n  spinnerFullScreen: boolean = true;\n  resultTotalInventario: number;\n  resultadoDiferenca: number;\n  resultadoContagem: number;\n  totalContagem: number;\n  qtPecaContagem: number;\n  qtPesoContagem: number;\n  inventarioRotativoTotal: any;\n  listas: any = [];\n  listaInfo: any = [];\n  infoLinha: any = '';\n  infoClasse: any = '';\n  loaderNavbar: boolean = false;\n  breadCrumbTree: any = [\n    {\n      descricao: 'Home',\n      routerLink: '/logistica/estoque/inventario/filtro'\n    },\n    {\n      descricao: 'Filtro',\n      routerLink: '/logistica/estoque/inventario/filtro'\n    },\n    {\n      descricao: 'Inventários',\n      routerLink: '/logistica/estoque/inventario/inventario'\n    },\n    {\n      descricao: 'Relatório'\n    }\n  ];\n\n  constructor(\n    private pdfService: PdfService,\n    private notice: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private empresasService: LogisticaEstoqueInventarioListaRelatorioService,\n    private atividadesService: AtividadesService\n  ) { }\n\n  ngOnInit() {\n    this.getLista();\n    this.getInfoInventario();\n    this.getInfoInventarioRotativoGeral();\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n  }\n\n  getLista() {\n    let infoMateriais = [];\n\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\n      this.empresasService\n        .getLista(this.idInventario)\n        .pipe(finalize(() => (this.spinnerFullScreen = false)))\n        .subscribe(\n          (response: any) => {\n            if (Object.keys(response).length > 0) {\n              this.listas = response['materiais'];\n              /* this.infoLinha = this.listas[0].dsLinha.trim();\n              this.infoClasse = this.listas[0].dsClasse; */\n\n              this.listas.forEach(element => {\n                element.totalContagem =\n                  element.qtPecaContagem * element.pesoPeca +\n                  parseFloat(element.qtPesoContagem);\n\n                this.getInfoInventarioRotativo(element.cdMaterial).subscribe(\n                  (response: any) => {\n                    if (response.status == 204)\n                      element.somaInventarioRotativo = 0;\n                    else\n                      element.somaInventarioRotativo = parseFloat(\n                        response.body.saldoEstoque\n                      );\n                    element.resultadoInventario =\n                      parseFloat(element.saldoEstoque) +\n                      element.somaInventarioRotativo;\n                  }\n                );\n              });\n            }\n          },\n          error => {\n            this.notice.notice(\n              'Não há materiais cadastrados para esse inventário.'\n            );\n          }\n        );\n    }\n  }\n\n  getInfoInventario() {\n    this.empresasService\n      .getInfoInventario(this.idInventario)\n      .subscribe((response: any) => {\n        this.listaInfo = response;\n        this.resultadoDiferenca =\n          parseFloat(this.listaInfo.saldoEstoque) -\n          parseFloat(this.listaInfo.qtPesoEstoque);\n      });\n  }\n\n  getInfoInventarioRotativo(cdMaterial) {\n    return this.empresasService.getInfoInventarioRotativo(\n      this.idInventario,\n      cdMaterial\n    );\n  }\n\n  getInfoInventarioRotativoGeral() {\n    return this.empresasService\n      .getInfoInventarioRotativoGeral(this.idInventario)\n      .subscribe((response: any) => {\n        this.inventarioRotativoTotal = parseFloat(response.saldoEstoque);\n        this.resultTotalInventario =\n          parseFloat(this.listaInfo.saldoEstoque) +\n          parseFloat(this.inventarioRotativoTotal);\n      });\n  }\n\n  onDownload() {\n    this.loaderNavbar = true;\n    setTimeout(() => {\n      this.pdfService.download(\n        'download',\n        `${this.idInventario}_ResultadoInventario`\n      );\n      this.loaderNavbar = false;\n    }, 1000);\n  }\n}\n"],"sourceRoot":"webpack:///"}