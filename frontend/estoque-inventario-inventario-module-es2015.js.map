{"version":3,"sources":["./src/app/modules/logistica/estoque/inventario/inventario.module.ts","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.ts","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.scss","./src/app/modules/logistica/estoque/inventario/inventario.component.html","./src/app/modules/logistica/estoque/inventario/inventario.component.scss","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.scss","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.html","./src/app/modules/logistica/estoque/inventario/lista/lista.component.scss","./src/app/modules/logistica/estoque/inventario/filtro/filtro.component.ts","./src/app/modules/logistica/estoque/inventario/lista/lista.service.ts","./src/app/modules/logistica/estoque/inventario/inventario-routing.module.ts","./src/app/modules/logistica/estoque/inventario/filtro/filtro.component.html","./src/app/modules/logistica/estoque/inventario/filtro/filtro.service.ts","./src/app/modules/logistica/estoque/inventario/inventario.component.ts","./src/app/modules/logistica/estoque/inventario/lista/lista.component.html","./src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.service.ts","./src/app/modules/logistica/estoque/inventario/filtro/filtro.component.scss","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.service.ts","./src/app/modules/logistica/estoque/inventario/lista/lista.component.ts","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.html","./src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.ts"],"names":[],"mappings":"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","file":"estoque-inventario-inventario-module-es2015.js","sourcesContent":["import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { LogisticaEstoqueInventarioComponent } from './inventario.component';\r\nimport { LogisticaEstoqueInventarioFiltroComponent } from './filtro/filtro.component';\r\nimport { LogisticaEstoqueInventarioRoutingModule } from './inventario-routing.module';\r\nimport { LogisticaEstoqueInventarioListaComponent } from './lista/lista.component';\r\nimport { LogisticaEstoqueInventarioListaInventarioComponent } from './lista/inventario/inventario.component';\r\nimport { LogisticaEstoqueInventarioListaRelatorioComponent } from './lista/relatorio/relatorio.component';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaEstoqueInventarioComponent,\r\n    LogisticaEstoqueInventarioFiltroComponent,\r\n    LogisticaEstoqueInventarioListaComponent,\r\n    LogisticaEstoqueInventarioListaInventarioComponent,\r\n    LogisticaEstoqueInventarioListaRelatorioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FilterPipeModule,\r\n    ModalModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    LogisticaEstoqueInventarioRoutingModule,\r\n    NotFoundModule,\r\n    SharedModule\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }]\r\n})\r\nexport class LogisticaEstoqueInventarioModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LogisticaEstoqueInventarioListaInventarioService } from './inventario.service';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-lista-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioListaInventarioComponent\r\n  implements OnInit {\r\n  listaInventarios: any = [];\r\n  inventarios: any = [];\r\n  totalItems: number;\r\n  loaderNavbar: boolean = false;\r\n  spinnerFullScreen: boolean = true;\r\n  ultimoStatusEnviado: any = null;\r\n  noResult: boolean = true;\r\n  noResultado: boolean = true;\r\n  noLista: boolean = true;\r\n  $subscription: Subscription;\r\n  inve: any = [];\r\n  compressedTable = false;\r\n  idInventario: number;\r\n  infoClasses = '';\r\n  infoLinha = '';\r\n  infoIdInventario = '';\r\n\r\n  /* Parametros para filtros */\r\n  tipo: any;\r\n  empresa: any;\r\n  deposito: any;\r\n  linha: any;\r\n  classe: any;\r\n  dataInicial: any;\r\n  dataFinal: any;\r\n  cdInventario = '';\r\n  sigla: any;\r\n  informacoes: any;\r\n  parametro: boolean = false;\r\n  checked: boolean = true;\r\n  /* Parametros para filtros */\r\n\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Filtro',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Lista para consulta de inventários'\r\n    }\r\n  ];\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  currentPage: number = 1;\r\n  /* Paginação */\r\n\r\n  constructor(\r\n    private inventarioService: LogisticaEstoqueInventarioListaInventarioService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notice: PNotifyService,\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tipo = '';\r\n    this.empresa = '';\r\n    this.deposito = '';\r\n    this.linha = '';\r\n    this.classe = '';\r\n    this.dataInicial = '';\r\n    this.dataFinal = '';\r\n    this.cdInventario = '';\r\n    this.sigla = '';\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getInventario('');\r\n  }\r\n\r\n  getInventario(sigla = '', page = 1) {\r\n    this.loaderNavbar = true;\r\n    this.sigla = sigla;\r\n    this.checked = !this.checked;\r\n    if (this.checked == false) {\r\n      sigla = '';\r\n    }\r\n\r\n    this.inventarioService\r\n      .getInventario(\r\n        page,\r\n        this.tipo,\r\n        this.empresa,\r\n        this.deposito,\r\n        this.linha,\r\n        this.classe,\r\n        this.dataInicial,\r\n        this.dataFinal,\r\n        this.cdInventario,\r\n        sigla\r\n      )\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          this.noResult = false;\r\n          this.inve = data['inventarios'];\r\n          this.inventarios = data['inventarios'];\r\n          this.loaderNavbar = false;\r\n          let lancamentos = [];\r\n          this.inventarios.forEach(element => {\r\n            if (element.empresa || element.deposito) {\r\n              lancamentos.push({\r\n                empresa: element.empresa,\r\n                deposito: element.deposito\r\n              });\r\n            }\r\n          });\r\n\r\n          this.informacoes = lancamentos;\r\n\r\n          if (!this.totalItems) {\r\n            this.totalItems = data['qtRegistros'];\r\n          }\r\n        },\r\n        error => {\r\n          this.notice.notice(\r\n            'Não há inventários cadastrados para esse status.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  getClassesInventario(idInventario, i) {\r\n    this.noLista = true;\r\n    this.loaderNavbar = true;\r\n    this.noResultado = false;\r\n    this.inventarioService\r\n      .getClassesInventario(idInventario)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response['status'] === 200) {\r\n          response.body.forEach(element => {\r\n            if (element.dsClasse == null) {\r\n              this.noResultado = true;\r\n            } else {\r\n              this.noLista = false;\r\n              this.infoClasses = response.body;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    this.compressedTable = true;\r\n    this.infoLinha = this.inve[i].dsLinha;\r\n    this.infoIdInventario = this.inve[i].idInventario;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.getInventario('', event.page);\r\n  }\r\n  /* Paginação */\r\n\r\n  abrirInventario(idInventario, idStatusInventario) {\r\n    this.route.navigate(\r\n      [`logistica/estoque/inventario/${idInventario}/contagem-materiais`],\r\n      {\r\n        queryParams: {\r\n          tipo: this.tipo,\r\n          empresa: this.empresa,\r\n          deposito: this.deposito,\r\n          linha: this.linha,\r\n          classe: this.classe,\r\n          dataInicial: this.dataInicial,\r\n          dataFinal: this.dataFinal,\r\n          sigla: this.sigla\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  abrirRelatorio(idInventario, idStatusInventario) {\r\n    this.route.navigate(\r\n      [`logistica/estoque/inventario/${idInventario}/relatorio`],\r\n      {\r\n        queryParams: {\r\n          tipo: this.tipo,\r\n          empresa: this.empresa,\r\n          deposito: this.deposito,\r\n          linha: this.linha,\r\n          classe: this.classe,\r\n          dataInicial: this.dataInicial,\r\n          dataFinal: this.dataFinal,\r\n          sigla: this.sigla,\r\n          informacoes: this.informacoes\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(index) {\r\n    this.idInventario = this.inventarios[index].idInventario;\r\n    this.compressedTable = true;\r\n  }\r\n\r\n  onClose() {\r\n    this.compressedTable = false;\r\n  }\r\n\r\n  clickEvent(inventario) {\r\n    this.inventarios.forEach(element => {\r\n      if (element.idInventario != inventario.idInventario) {\r\n        element.status = false;\r\n      } else if (inventario.status == true) {\r\n        inventario.status = true;\r\n      } else {\r\n        inventario.status = !inventario.status;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"ul li {\\n  list-style-type: none;\\n}\\n\\n.bgdValueList {\\n  background-color: #e9ecef;\\n}\\n\\n.textUpper {\\n  font-size: -webkit-xxx-large;\\n}\\n\\n.espacamento50 {\\n  height: 50px;\\n}\\n\\n.espacamento20 {\\n  height: 20px;\\n}\\n\\n.espacamento25 {\\n  height: 25px;\\n}\\n\\n.espacamento150 {\\n  height: 150px;\\n}\\n\\n.espacamento250 {\\n  height: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL3JlbGF0b3Jpby9yZWxhdG9yaW8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLDRCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lc3RvcXVlL2ludmVudGFyaW8vbGlzdGEvcmVsYXRvcmlvL3JlbGF0b3Jpby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIGxpe1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG5cclxuLmJnZFZhbHVlTGlzdHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllY2VmO1xyXG59XHJcblxyXG4udGV4dFVwcGVye1xyXG4gIGZvbnQtc2l6ZTogLXdlYmtpdC14eHgtbGFyZ2U7XHJcbn1cclxuXHJcbi5lc3BhY2FtZW50bzUwe1xyXG4gIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuLmVzcGFjYW1lbnRvMjB7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4uZXNwYWNhbWVudG8yNXtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbn1cclxuXHJcbi5lc3BhY2FtZW50bzE1MHtcclxuICBoZWlnaHQ6IDE1MHB4O1xyXG59XHJcblxyXG4uZXNwYWNhbWVudG8yNTB7XHJcbiAgaGVpZ2h0OiAxNTBweDtcclxufSJdfQ== */\";","export default \"\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VzdG9xdWUvaW52ZW50YXJpby9pbnZlbnRhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \".bgRowTable {\\n  background-color: #b6b8b9;\\n}\\n\\n.loaderTab {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2ludmVudGFyaW8vaW52ZW50YXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2ludmVudGFyaW8vaW52ZW50YXJpby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iZ1Jvd1RhYmxlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjZiOGI5O1xyXG59XHJcblxyXG4ubG9hZGVyVGFiIHtcclxuICB3aWR0aDogMS41cmVtO1xyXG4gIGhlaWdodDogMS41cmVtO1xyXG59XHJcbiJdfQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Consulta de inventários</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Início dos Filtros -->\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\" [hidden]=\\\"spinnerFullScreen\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"row justify-content-between mb-2\\\">\\r\\n      <div class=\\\"col-6 pt-4\\\">\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <div class=\\\"legend yellow hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_ABER' }\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_ABER')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">EM ABERTO</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend red hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_CANC'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_CANC')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">CANCELADO</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend gray hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_CANC_SIST'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_CANC_SIST')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">CANCELADO PELO SISTEMA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend green hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_FINA'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_FINA')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">FINALIZADO</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_APRO'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_APRO')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">APROVADO</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-3 justify-content-end\\\">\\r\\n        <label for=\\\"cdInventario\\\"> Código do inventário </label>\\r\\n        <input \\r\\n          id=\\\"cdInventario\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"DIGITE...\\\"\\r\\n          [(ngModel)]=\\\"cdInventario\\\"\\r\\n          (keyup.enter)=\\\"getInventario()\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-0\\\" [hidden]=\\\"noResult\\\" class=\\\"d-flex\\\">\\r\\n      <div>\\r\\n        <div style=\\\"height: 55vh\\\">\\r\\n          <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Data</th>\\r\\n                <th>Código</th>\\r\\n                <th>Depósito</th>\\r\\n                <th [hidden]=\\\"compressedTable\\\">Linha</th>\\r\\n                <th>Tipo</th>\\r\\n                <th style=\\\"width:250px\\\" nowrap>Auditor</th>\\r\\n                <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n                <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let inventario of inventarios let i = index\\\" class=\\\"hover\\\" \\r\\n                    [ngClass]=\\\"inventario.status ? 'bgRowTable' : ''\\\" (click)=\\\"getClassesInventario(inventario.idInventario, i); clickEvent(inventario)\\\"\\r\\n              >\\r\\n                <td [ngClass]=\\\"{\\r\\n                  'border-primary'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_APRO',\\r\\n                  'border-secondary'  : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST',\\r\\n                  'border-danger'     : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_CANC',\\r\\n                  'border-success'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_FINA',\\r\\n                  'border-warning'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_ABER'\\r\\n                }\\\"\\r\\n                > {{ inventario.dtInclusao  | date : 'dd/MM/yyyy HH:mm:ss'}} </td>\\r\\n                <td> {{ inventario.idInventario   | number:'6.0-0'}} </td>\\r\\n                <td> {{ inventario.dsDeposito | uppercase }} </td>\\r\\n                <td [hidden]=\\\"compressedTable\\\"> {{ inventario.dsLinha | uppercase }} </td>\\r\\n                <td> {{ inventario.dsTipoInventario | uppercase }} </td>\\r\\n                <td style=\\\"width:250px\\\" nowrap> {{ inventario.dsUsuario | uppercase }} </td> \\r\\n                <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n                  <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                    <button class=\\\"btn-icon-sm\\\" (click)=\\\"abrirInventario(inventario.idInventario)\\\">\\r\\n                      <i class=\\\"fas fa-search\\\"></i>\\r\\n                    </button>\\r\\n                  </span>\\r\\n                </td>\\r\\n                <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n                  <span tooltip=\\\"Imprimir\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                    <button class=\\\"btn-icon-sm\\\" (click)=\\\"abrirRelatorio(inventario.idInventario)\\\">\\r\\n                      <i class=\\\"fas fa-file-alt\\\"></i>\\r\\n                    </button>\\r\\n                  </span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"mt-3\\\" [hidden]=\\\"noResult\\\">\\r\\n            Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n          <pagination\\r\\n            [maxSize]=\\\"10\\\"\\r\\n            [totalItems]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <tabset class=\\\"col-3 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">          \\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onClose()\\\">\\r\\n          <i class=\\\"fas fa-times\\\"></i>\\r\\n        </button>\\r\\n        <tab heading=\\\"Detalhes - {{ infoIdInventario | number:'6.0-0' }}\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom border-top px-3 pt-3\\\">\\r\\n            <div class=\\\"form-row\\\" [hidden]=\\\"noLista\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <div class=\\\"text-nowrap\\\">\\r\\n                  <table class=\\\"table table-sm table-hover text-left table-fixed\\\">\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                      <tr>\\r\\n                        <th>Classe</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let infoClasse of infoClasses\\\">\\r\\n                        <td class=\\\"border-top-0\\\"> {{ infoClasse.dsClasse | uppercase }} </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                      <tr>\\r\\n                        <th>Linha</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td class=\\\"border-top-0\\\"> {{ infoLinha | uppercase }} </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div\\r\\n            class=\\\"d-flex align-items-center justify-content-center\\\"\\r\\n            style=\\\"width: 100%; height: 80%;\\\"\\r\\n            [hidden]=\\\"!noResultado\\\"\\r\\n            >\\r\\n              <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n            </div>\\r\\n            <div class=\\\"spinner-border text-primary justify-content-end positionSpinner loaderTab\\\" role=\\\"status\\\" [hidden]=\\\"!loaderNavbar\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"d-flex align-items-center justify-content-center\\\"\\r\\n      style=\\\"width: 100%; height: 80%;\\\"\\r\\n      [hidden]=\\\"!noResult\\\"\\r\\n      >\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \".border-left-green {\\n  border-left-color: green !important;\\n}\\n\\n.border-left-orange {\\n  border-left-color: orange !important;\\n}\\n\\n.modal-content {\\n  position: absolute;\\n  left: -50%;\\n  width: 1000px;\\n}\\n\\n.actions button {\\n  background-color: transparent;\\n  border: unset;\\n  color: #586464;\\n  font-weight: 500;\\n  line-height: 35px;\\n  padding: 0px 10px;\\n}\\n\\n.bg-active {\\n  background-color: #e9ecef;\\n}\\n\\ntr:hover {\\n  background-color: #f8fafb !important;\\n}\\n\\n.actions button:hover {\\n  color: #005fdc;\\n}\\n\\n.positionSpinner {\\n  margin-top: 19px;\\n  right: -20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUNBQUE7QUFDRjs7QUFFQTtFQUNFLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSw2QkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0Usb0NBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlci1sZWZ0LWdyZWVuIHtcclxuICBib3JkZXItbGVmdC1jb2xvcjogZ3JlZW4gIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJvcmRlci1sZWZ0LW9yYW5nZSB7XHJcbiAgYm9yZGVyLWxlZnQtY29sb3I6IG9yYW5nZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IC01MCU7XHJcbiAgd2lkdGg6IDEwMDBweDtcclxufVxyXG5cclxuLmFjdGlvbnMgYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXI6IHVuc2V0O1xyXG4gIGNvbG9yOiAjNTg2NDY0O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XHJcbiAgcGFkZGluZzogMHB4IDEwcHg7XHJcbn1cclxuXHJcbi5iZy1hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XHJcbn1cclxuXHJcbnRyOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmYWZiICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5hY3Rpb25zIGJ1dHRvbjpob3ZlciB7XHJcbiAgY29sb3I6ICMwMDVmZGM7XHJcbn1cclxuXHJcbi5wb3NpdGlvblNwaW5uZXIge1xyXG4gIG1hcmdpbi10b3A6IDE5cHg7XHJcbiAgcmlnaHQ6IC0yMCU7XHJcbn1cclxuIl19 */\";","import { LogisticaEstoqueInventarioFiltroService } from './filtro.service';\r\nimport { PNotifyService } from '../../../../../shared/services/core/pnotify.service';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { Router } from '@angular/router';\r\nimport { finalize, delay, retry } from 'rxjs/operators';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n  FormGroup\r\n} from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { string } from '@amcharts/amcharts4/core';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { elementEventFullName } from '@angular/compiler/src/view_compiler/view_compiler';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-inventario-filtro',\r\n  templateUrl: './filtro.component.html',\r\n  styleUrls: ['./filtro.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioFiltroComponent implements OnInit {\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\r\n  ativarCampos: any = false;\r\n  tipoInventario: number;\r\n  spinnerFullScreen: boolean = true;\r\n  loaderNavbar: boolean = false;\r\n  loading: boolean = true;\r\n  data: Date = new Date();\r\n  form: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  empresas: any = [];\r\n  depositos: any = [];\r\n  linhas: any = [];\r\n  classes: any = [];\r\n  materiais: any = [];\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Filtros'\r\n    }\r\n  ];\r\n  disabledBotoes: any = {\r\n    finalizar: false,\r\n    editar: false,\r\n    aprovar: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private notice: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private empresasService: LogisticaEstoqueInventarioFiltroService,\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      empresas: [null, Validators.required],\r\n      depositos: [null, Validators.required],\r\n      linhas: [null, Validators.required],\r\n      classes: [null],\r\n      materiais: [null],\r\n      dataInicial: [null],\r\n      dataFinal: [null]\r\n    });\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getPerfil();\r\n    /* INICIO FILTROS INICIAIS */\r\n    this.empresasService\r\n      .getEmpresas()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (Object.keys(response).length > 0) {\r\n          this.empresas = response;\r\n        }\r\n      });\r\n\r\n    this.empresasService\r\n      .getLinhas()\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe((response: any) => {\r\n        if (Object.keys(response).length > 0) {\r\n          this.linhas = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  /* INICIO ALTERA BOTÕES TIPO DE INVENTARIO */\r\n  setType(type: number) {\r\n    this.tipoInventario = type;\r\n  }\r\n\r\n  /* INICIO FUNÇÕES FILTROS COM PARÂMETROS */\r\n  getDepositos() {\r\n    this.loaderNavbar = true;\r\n\r\n    if (this.form.get('empresas').status === 'VALID') {\r\n      let idEmpresa = this.form.get('empresas').value;\r\n      this.empresasService\r\n        .getDepositos(idEmpresa)\r\n        .subscribe((response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            this.depositos = response;\r\n          }\r\n          this.loaderNavbar = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  getClasses() {\r\n    this.classes = [];\r\n    let descricaoLinhas = [];\r\n    this.loaderNavbar = true;\r\n\r\n    if (this.form.get('linhas').status === 'VALID') {\r\n      descricaoLinhas.push(this.form.get('linhas').value);\r\n      this.empresasService\r\n        .getClasses(descricaoLinhas)\r\n        .subscribe((response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            this.classes = response;\r\n          }\r\n          this.loaderNavbar = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  getMateriais(linhas, classes) {\r\n    this.materiais = [];\r\n    this.loaderNavbar = true;\r\n\r\n    if (\r\n      this.form.get('linhas').status === 'VALID' ||\r\n      this.form.get('classes').status === 'VALID'\r\n    ) {\r\n      let descricaoLinhas = this.form.get('linhas').value;\r\n      let idClasses = this.form.get('classes').value;\r\n      this.empresasService\r\n        .getMateriais(descricaoLinhas, idClasses)\r\n        .subscribe((response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            this.materiais = response.result;\r\n          }\r\n          this.loaderNavbar = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  /* INICIO CADASTRO DE INVENTÁRIO */\r\n  postCadastraInventario() {\r\n    if (\r\n      this.disabledBotoes.finalizar == false &&\r\n      this.disabledBotoes.editar == false &&\r\n      this.disabledBotoes.aprovar == false\r\n    ) {\r\n      this.notice.notice('Seu usuário não pode iniciar um inventário.');\r\n    } else {\r\n      if (\r\n        this.form.get('empresas').status === 'VALID' &&\r\n        this.form.get('depositos').status === 'VALID'\r\n      ) {\r\n        this.spinnerFullScreen = true;\r\n        let cdEmpresa = this.form.get('empresas').value;\r\n        let cdDeposito = this.form.get('depositos').value;\r\n\r\n        this.empresasService\r\n          .postCadastraInventario(\r\n            this.matriculaAuditor,\r\n            cdEmpresa,\r\n            cdDeposito,\r\n            this.tipoInventario\r\n          )\r\n          .subscribe(\r\n            (response: any) => {\r\n              if (response.status == 200) {\r\n                this.postMateriais(\r\n                  this.matriculaAuditor,\r\n                  response.body.idInventario\r\n                );\r\n              } else\r\n                this.notice.error('Houve um errro ao cadastrar o inventário.');\r\n            },\r\n            error => {\r\n              this.spinnerFullScreen = false;\r\n              if (error.status < 500) this.notice.notice(error.error.dsErro);\r\n              else this.notice.error('Ocorreu um erro!');\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  /* INICIO CADASTRO DE MATERIAIS */\r\n  /* postMateriais(matriculaAuditor, idInventario) {\r\n    let cdMateriais = [];\r\n\r\n    if (this.form.get('materiais').value == null)\r\n      this.materiais.forEach(element => {\r\n        cdMateriais.push(element.codigoMaterial);\r\n      });\r\n    else cdMateriais.push(this.form.get('materiais').value);\r\n    this.empresasService\r\n      .postMateriais(matriculaAuditor, idInventario, cdMateriais)\r\n      .pipe(finalize(() => (this.spinnerFullScreen = false)))\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status == 200) {\r\n            this.route.navigate([\r\n              `logistica/estoque/inventario/${idInventario}/contagem-materiais`\r\n            ]);\r\n          } else this.notice.error('Não há dados.');\r\n        },\r\n        error => {\r\n          if (error.status < 500) this.notice.notice(error.error.dsErro);\r\n          else this.notice.error('Ocorreu um erro!');\r\n        }\r\n      );\r\n  } */\r\n\r\n  postMateriais(matriculaAuditor, idInventario) {\r\n    let cdMateriais: any = [];\r\n\r\n    if (this.form.get('materiais').value == null)\r\n      this.materiais.forEach(element => {\r\n        cdMateriais.push(element.codigoMaterial);\r\n      });\r\n    else cdMateriais = this.form.get('materiais').value;\r\n\r\n    let particao = 50;\r\n    let qtEnvios = Math.ceil(cdMateriais.length / particao);\r\n    let mat: any = [];\r\n    for (let index = 0; index < qtEnvios; index++)\r\n      mat.push(\r\n        this.empresasService.postMateriais(\r\n          matriculaAuditor,\r\n          idInventario,\r\n          cdMateriais.slice(particao * index, particao * (index + 1))\r\n        )\r\n      );\r\n    forkJoin(mat)\r\n      .pipe(\r\n        retry(2),\r\n        finalize(() => (this.spinnerFullScreen = false))\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          let contador = 0;\r\n\r\n          response.forEach(element => {\r\n            if (element.status == 200) {\r\n              contador++;\r\n            }\r\n          });\r\n\r\n          if (contador === response.length) {\r\n            this.route.navigate([\r\n              `/logistica/estoque/inventario/${idInventario}/contagem-materiais`\r\n            ]);\r\n          } else {\r\n            this.notice.error('Não há dados.');\r\n          }\r\n        },\r\n        error => {\r\n          if (error.status < 500) this.notice.notice(error.error.dsErro);\r\n          else this.notice.error('Ocorreu um erro!');\r\n        }\r\n      );\r\n  }\r\n\r\n  /* INICIO CONSULTA DO INVENTARIO */\r\n  onSearch() {\r\n    this.route.navigate([`logistica/estoque/inventario/inventario`], {\r\n      queryParams: {\r\n        tipo: this.tipoInventario,\r\n        empresa: this.form.get('empresas').value,\r\n        deposito: this.form.get('depositos').value,\r\n        linha: this.form.get('linhas').value,\r\n        classe: this.form.get('classes').value,\r\n        dataInicial: this.form.get('dataInicial').value,\r\n        dataFinal: this.form.get('dataFinal').value\r\n      }\r\n    });\r\n  }\r\n\r\n  /* CONTROLE VALIDAÇÕES DOS CAMPOS */\r\n  resetForm() {\r\n    this.form.get('depositos').reset();\r\n    this.form.get('linhas').reset();\r\n    this.form.get('classes').reset();\r\n    this.form.get('materiais').reset();\r\n    this.form.get('empresas').reset();\r\n  }\r\n\r\n  mostrarCampos() {\r\n    if (this.tipoInventario == 1 || this.tipoInventario == 2)\r\n      this.ativarCampos = true;\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onVideoLoaded() {\r\n    window.open('https://youtu.be/pwxbnXJw0uo', '_blank');\r\n  }\r\n\r\n  getPerfil() {\r\n    this.empresasService\r\n      .getPerfil(this.matriculaAuditor)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.disabledBotoes = response['disabledBotoes'];\r\n        },\r\n        error => {\r\n          this.notice.notice(\r\n            'Não há vinculo de perfil para realizar inventário nesse usuário.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioListaService {\r\n  private readonly API: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLista(\r\n    idInventario,\r\n    matricula = '',\r\n    cdMaterial = '',\r\n    naoConsideraEstoqueZerado\r\n  ) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\r\n      {\r\n        params: {\r\n          idInventario: idInventario,\r\n          matricula: matricula,\r\n          cdMaterial: cdMaterial,\r\n          naoConsideraEstoqueZerado: naoConsideraEstoqueZerado\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getListaMateriaisParaFiltro(idInventario, matricula = '') {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\r\n      {\r\n        params: {\r\n          idInventario: idInventario,\r\n          matricula: matricula,\r\n          naoConsideraEstoqueZerado: '0',\r\n          qtPagina: '1000'\r\n        },\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  postSalvar(requisicao, idInventario) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais/lancamento`,\r\n      requisicao,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  atualizarInventario(\r\n    observacao = '',\r\n    idStatusInventario,\r\n    idInventario,\r\n    matriculaAuditor\r\n  ) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}`,\r\n      {\r\n        observacao: observacao,\r\n        idStatusInventario: idStatusInventario,\r\n        matriculaAuditor: matriculaAuditor\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getInfoInventario(idInventario) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}`\r\n    );\r\n  }\r\n\r\n  getNotasFiscais(idInventario, nrNotaFiscal) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        params: {\r\n          nrNotaFiscal: nrNotaFiscal\r\n        },\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriaisNotasFiscais(idInventario, notaFiscal) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/nota-fiscal/${notaFiscal}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  salvarNotasFiscais(idInventario, notasFiscais, matriculaAuditor) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        notasFiscais: notasFiscais,\r\n        matriculaAuditor: matriculaAuditor\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getNotasFiscaisRo(idInventario, nrNotaFiscalRo) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        params: {\r\n          nrNotaFiscalRo: nrNotaFiscalRo\r\n        },\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriaisNotasFiscaisRo(idInventario, notaFiscalRo) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/nota-fiscal/${notaFiscalRo}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  salvarNotasFiscaisRo(idInventario, notasFiscaisRo, matriculaAuditor) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        notasFiscaisRo: notasFiscaisRo,\r\n        matriculaAuditor: matriculaAuditor\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativo(idInventario, cdMaterial) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario-rotativo/${idInventario}/material/${cdMaterial}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  getPerfil(matricula = '') {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/usuarios/${matricula}/perfis/controle-acesso`\r\n    );\r\n  }\r\n\r\n  getTotal(idInventario) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/resultado`\r\n    );\r\n  }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { LogisticaEstoqueInventarioComponent } from './inventario.component';\r\nimport { LogisticaEstoqueInventarioFiltroComponent } from './filtro/filtro.component';\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaEstoqueInventarioListaComponent } from './lista/lista.component';\r\nimport { LogisticaEstoqueInventarioListaInventarioComponent } from './lista/inventario/inventario.component';\r\nimport { LogisticaEstoqueInventarioListaRelatorioComponent } from './lista/relatorio/relatorio.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaEstoqueInventarioComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'filtro',\r\n    component: LogisticaEstoqueInventarioFiltroComponent\r\n  },\r\n  {\r\n    path: 'inventario',\r\n    component: LogisticaEstoqueInventarioListaInventarioComponent\r\n  },\r\n  {\r\n    path: ':id/relatorio',\r\n    component: LogisticaEstoqueInventarioListaRelatorioComponent\r\n  },\r\n  {\r\n    path: ':id/contagem-materiais',\r\n    component: LogisticaEstoqueInventarioListaComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogisticaEstoqueInventarioRoutingModule { }","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <h1>Painel de inventário</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n      <button \\r\\n        (click)=\\\"postCadastraInventario()\\\"\\r\\n        [disabled]=\\\"form.status  == 'INVALID' || !tipoInventario\\\">\\r\\n        Novo\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"onSearch()\\\">\\r\\n        Pesquisar\\r\\n      </button>\\r\\n      <!-- <button (click)=\\\"onVideoLoaded()\\\">\\r\\n        Video\\r\\n      </button> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\" [hidden]=\\\"loading\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"col-12 p-0\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"col-6 justify-content-start\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"btn-group btn-group-sm w-100\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-light\\\"\\r\\n                  [ngClass]=\\\"{'active': tipoInventario == 1}\\\"\\r\\n                  (click)=\\\"setType( 1 ); resetForm(); mostrarCampos()\\\">\\r\\n                  <strong>Inventário oficial</strong>\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-light\\\"\\r\\n                  [ngClass]=\\\"{'active': tipoInventario == 2}\\\"\\r\\n                  (click)=\\\"setType( 2 ); resetForm(); mostrarCampos()\\\">\\r\\n                  <strong>Inventário rotativo</strong>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"empresa\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"empresa\\\"\\r\\n              bindLabel=\\\"nomeFantasia\\\"\\r\\n              bindValue=\\\"codigoEmpresa\\\"\\r\\n              placeholder=\\\"Selecione uma empresa\\\"\\r\\n              formControlName=\\\"empresas\\\"\\r\\n              (change) =\\\"getDepositos()\\\"\\r\\n              (focus) =\\\"resetForm()\\\"\\r\\n              [ngClass]=\\\"onFieldError('empresas') + ' ' + onFieldRequired('empresas')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('empresas')\\\"\\r\\n              message=\\\"Empresa é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"deposito\\\">Depósito</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"depositos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"deposito\\\"\\r\\n              bindLabel=\\\"depositoDescricao\\\"\\r\\n              bindValue=\\\"depositoId\\\"\\r\\n              placeholder=\\\"Selecione um deposito\\\"\\r\\n              formControlName=\\\"depositos\\\"\\r\\n              [ngClass]=\\\"onFieldError('depositos') + ' ' + onFieldRequired('depositos')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('depositos')\\\"\\r\\n              message=\\\"Despósito é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"linha\\\">Linha</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"linhas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"linha\\\"\\r\\n              bindLabel=\\\"linha\\\"\\r\\n              bindValue=\\\"linha\\\"\\r\\n              placeholder=\\\"Selecione uma linha\\\"\\r\\n              formControlName=\\\"linhas\\\"\\r\\n              (change) = \\\"getClasses(); getMateriais(linhas, '')\\\"\\r\\n              [ngClass]=\\\"onFieldError('linhas') + ' ' + onFieldRequired('linhas')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('linhas')\\\"\\r\\n              message=\\\"Linha é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"classe\\\">Classe</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"classes\\\"\\r\\n              [multiple]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"false\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"classe\\\"\\r\\n              bindLabel=\\\"classeDescricao\\\"\\r\\n              bindValue=\\\"classeId\\\"\\r\\n              placeholder=\\\"Selecione uma classe\\\"\\r\\n              formControlName=\\\"classes\\\"\\r\\n              (change) = \\\"getMateriais(linhas, classes)\\\"\\r\\n              [ngClass]=\\\"onFieldError('classes')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('classes')\\\"\\r\\n              message=\\\"Classe é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"material\\\">Material</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"materiais\\\"\\r\\n              [multiple]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"false\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"material\\\"\\r\\n              bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n              bindValue=\\\"codigoMaterial\\\"\\r\\n              placeholder=\\\"Selecione um material\\\"\\r\\n              formControlName=\\\"materiais\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"empresa\\\">Data inicial</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n              </div>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                [ngClass]=\\\"onFieldRequired('dataInicial')\\\"\\r\\n                formControlName=\\\"dataInicial\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data inicial é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"empresa\\\">Data final</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n              </div>\\r\\n              <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataFinal\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('dataFinal')\\\"\\r\\n              formControlName=\\\"dataFinal\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data final é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioFiltroService {\r\n  private readonly API: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmpresas() {\r\n    return this.http.get(`${this.API}/common/empresas`);\r\n  }\r\n\r\n  getDepositos(idEmpresa) {\r\n    return this.http.get(`${this.API}/common/depositos/${idEmpresa}`);\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/common/linhas`);\r\n  }\r\n\r\n  getClasses(descricaoLinhas) {\r\n    return this.http.get(`${this.API}/common/classes`, {\r\n      params: {\r\n        linhas: btoa(descricaoLinhas)\r\n      }\r\n    });\r\n  }\r\n\r\n  getMateriais(descricaoLinhas, idClasses) {\r\n    if (!idClasses) idClasses = '';\r\n\r\n    return this.http.get(`${this.API}/common/materiais`, {\r\n      params: {\r\n        linhas: btoa(descricaoLinhas),\r\n        classes: btoa(idClasses)\r\n      }\r\n    });\r\n  }\r\n\r\n  postCadastraInventario(\r\n    matriculaAuditor,\r\n    cdEmpresa,\r\n    cdDeposito,\r\n    tipoInventario\r\n  ) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/estoque/inventario`,\r\n      {\r\n        matriculaAuditor: matriculaAuditor,\r\n        cdEmpresa: cdEmpresa,\r\n        cdDeposito: cdDeposito,\r\n        tipoInventario: tipoInventario\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  postMateriais(matriculaAuditor, idInventario, cdMaterial) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\r\n      {\r\n        matriculaAuditor: matriculaAuditor,\r\n        idInventario: idInventario,\r\n        cdMaterial: cdMaterial\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getPerfil(matricula = '') {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/usuarios/${matricula}/perfis/controle-acesso`\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioComponent implements OnInit {\r\n  constructor(\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.navigate(['/logistica/estoque/inventario/filtro']);\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-5\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Lista de materiais</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-7 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n      <!-- acomodar botões -->\\r\\n      <button \\r\\n        (click)=\\\"onSearch()\\\"\\r\\n        >\\r\\n        Pesquisar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"openModalNotaFiscal()\\\"\\r\\n        *ngIf=\\\"ativNotaFiscal\\\"\\r\\n        >\\r\\n        Notas Fiscais\\r\\n      </button>\\r\\n      <!-- <button \\r\\n        (click)=\\\"openModalRo()\\\"\\r\\n        *ngIf=\\\"ativNotaFiscal\\\"\\r\\n        >\\r\\n        Notas Fiscais R.O\\r\\n      </button> -->\\r\\n      <button \\r\\n        (click)=\\\"exportarExcel()\\\"\\r\\n        [disabled]=\\\"!info || noResult\\\"\\r\\n        *ngIf=\\\"ativExport\\\"\\r\\n        >\\r\\n        Exportar\\r\\n      </button>\\r\\n      <button\\r\\n        class=\\\"hover\\\" \\r\\n        (click)=\\\"cancelar(template, 1)\\\"\\r\\n        *ngIf=\\\"ativCancelar\\\"\\r\\n        >\\r\\n        Cancelar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"habilitaCampos()\\\"\\r\\n        [disabled]=\\\"(habilita && !info) || inativBotoes || noResult\\\"\\r\\n        *ngIf=\\\"ativEditar\\\"\\r\\n        >\\r\\n        Editar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"postSalvar()\\\"\\r\\n        [disabled]=\\\"info || inativBotoes || noResult\\\"\\r\\n        *ngIf=\\\"ativSalvar\\\"\\r\\n        >\\r\\n        Salvar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"finalizar(template)\\\"\\r\\n        *ngIf=\\\"ativFinaliza\\\"\\r\\n        >\\r\\n        Finalizar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"atualizarInventario('',1)\\\"\\r\\n        *ngIf=\\\"ativReabrir\\\"\\r\\n        >\\r\\n        Reabrir\\r\\n      </button>\\r\\n      <button\\r\\n        class=\\\"hover\\\" \\r\\n        (click)=\\\"atualizarInventario('',5)\\\"\\r\\n        [disabled]=\\\"!ativAprovar\\\"\\r\\n        *ngIf=\\\"ativAprovar\\\"\\r\\n        >\\r\\n        Aprovar\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div>\\r\\n      <div class=\\\"d-flex justify-content-between align-items-center col-12 p-0\\\">\\r\\n        <div>\\r\\n          <strong style=\\\"font-size: 1.25rem\\\">Código do Inventário: {{ idInventario | number : '6.0-0'}} - {{ tipoInventario | uppercase }}</strong>\\r\\n          <div \\r\\n            class=\\\"d-flex justify-content-start align-items-center\\\" \\r\\n            style=\\\"cursor: pointer; font-size: 1rem\\\"\\r\\n            *ngIf=\\\"disabledBotoes.editar\\\"\\r\\n            >\\r\\n              <i [ngClass]=\\\"{'fa-toggle-off': considerarMaterialSemEstoque == 1, 'fa-toggle-on': considerarMaterialSemEstoque == 0}\\\" \\r\\n              class=\\\"fas pr-1\\\" \\r\\n              (click)=\\\"onToggleListaMateriais();\\\" \\r\\n              >\\r\\n            </i> Considerar materiais sem estoque\\r\\n          </div>\\r\\n        </div>\\r\\n        <form class=\\\"col-4 p-0\\\" [formGroup]=\\\"form\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-12\\\">\\r\\n              <label for=\\\"dsMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                  [items]= \\\"listaMateriaisFiltro\\\"\\r\\n                  [closeOnSelect]=\\\"true\\\"\\r\\n                  [hideSelected]=\\\"true\\\"\\r\\n                  bindLabel=\\\"dsMaterial\\\"\\r\\n                  bindValue=\\\"cdMaterial\\\"\\r\\n                  placeholder=\\\"Pesquise por um material\\\"\\r\\n                  formControlName=\\\"cdMaterial\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"noResult || spinnerFullScreen\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-sm table-hover border-left border-right border-bottom text-center table-fixed\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(1)\\\">Classe</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(2)\\\">Cod. material</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 350px;\\\" *ngIf=\\\"esconderColunas(3)\\\">Material</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(4)\\\">Endereço</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(5)\\\">Estoque (tons)</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(6)\\\">Peso por peça (Kg)</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(7)\\\">Qtd. peças</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(8)\\\">Peso físico (tons)</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(9)\\\">Total da contagem</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(10)\\\">Notas fiscais</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Saldo inventário</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(12) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Soma inventário rotativo</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\">Valor unitário</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(14) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Resultado inventário</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\">Resultado monetário</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\">\\r\\n                <td *ngIf=\\\"esconderColunas(1)\\\" class=\\\"align-middle\\\"> {{ lista.dsClasse | uppercase }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(2)\\\" class=\\\"align-middle\\\">{{ lista.cdMaterial }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(3)\\\" class=\\\"align-middle\\\" style=\\\"width: 350px;\\\">{{ lista.dsMaterial | uppercase }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(4)\\\" class=\\\"align-middle\\\">{{ lista.enderecoPatio | uppercase }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(5)\\\" class=\\\"align-middle\\\">{{ lista.qtPesoEstoque | number: '1.3-3'}}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(6)\\\" class=\\\"align-middle\\\">{{ lista.pesoPeca | number: '1.3-3'}}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(7)\\\" class=\\\"align-middle\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input \\r\\n                      class=\\\"form-control form-control-sm\\\" \\r\\n                      type=\\\"text\\\" \\r\\n                      [(ngModel)]=\\\"lista.qtPecaContagem\\\"\\r\\n                      [disabled]=\\\"info\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"esconderColunas(8)\\\" class=\\\"align-middle\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input \\r\\n                      class=\\\"form-control form-control-sm\\\" \\r\\n                      type=\\\"text\\\" \\r\\n                      [(ngModel)]=\\\"lista.qtPesoContagem\\\"\\r\\n                      [disabled]=\\\"info\\\"\\r\\n                      currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"esconderColunas(9)\\\" class=\\\"align-middle\\\">{{ getTotalContagem(lista) | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(10)\\\" class=\\\"align-middle\\\">{{ lista.qtMaterialNotaFiscal | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getSaldoInventario(lista) | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(12) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ lista.somaInventarioRotativo }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ lista.precoMinimo | currency:'BRL' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(14) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getResultadoInventario(lista) | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getResultadoMonetario(lista) | currency:'BRL' }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td class=\\\"pt-2\\\"><h6>TOTAL</h6></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPesoEstoque | number: '1.3-3' }}</h6></td>\\r\\n                <td ></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPecaLancamento }}</h6></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPesoLancamento | number: '1.3-3' }}</h6></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.saldoEstoqueLancamento | number: '1.3-3' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\"><h6>{{ listaInfo.saldoEstoque | number: '1.3-3' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\"><h6>{{ listaInfo.precoMinimo | currency:'BRL' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\"><h6>{{ listaInfo.saldoFinanceiro | currency:'BRL' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"mt-3 col-6\\\">\\r\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n            <pagination\\r\\n              [maxSize]=\\\"10\\\"\\r\\n              [totalItems]=\\\"totalItems\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"currentPage\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n          <div class=\\\"align-self-center d-flex mt-3 col-6\\\" *ngIf=\\\"!perfilLoaded\\\">\\r\\n            <ng-select\\r\\n              [items]= \\\"listaColunas\\\"\\r\\n              [multiple]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"false\\\"\\r\\n              [hideSelected]=\\\"true\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              placeholder=\\\"Selcione Colunas\\\"\\r\\n              [(ngModel)]=\\\"colunas\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div \\r\\n    class=\\\"d-flex align-items-center justify-content-center\\\"\\r\\n    style=\\\"width: 100%; height: 70%;\\\"\\r\\n    [hidden]=\\\"!noResult\\\">\\r\\n    <empty-result message=\\\"Não há materiais cadastrados para este inventário\\\"></empty-result>\\r\\n  </div>\\r\\n  \\r\\n  <ng-template #template>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"63\\\" rows=\\\"10\\\" #justificativa></textarea>\\r\\n      <button  \\r\\n        type=\\\"button\\\" \\r\\n        class=\\\"btn btn-primary justify-content-end \\\" \\r\\n        style=\\\"margin-left: 51vh\\\"\\r\\n        (click)=\\\"atualizarInventario(justificativa.value, 3); modalRef.hide()\\\"> Finalizar </button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n  <div bsModal #childModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\r\\n    <div class=\\\"modal-dialog modal-md\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header justify-content-end\\\">\\r\\n          <div class=\\\"actions d-flex\\\">\\r\\n            <button (click)=\\\"hideChildModal()\\\">\\r\\n              Fechar\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body d-flex\\\">\\r\\n          <div class=\\\"p-0\\\" [ngClass]=\\\"{'col-3': compressedTable}\\\">\\r\\n            <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 50px\\\"></th>\\r\\n                  <th>Nota Fiscal</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" >Data de Emissão</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px\\\"></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr class=\\\"hover\\\" *ngFor=\\\"let notaFiscal of notasFiscais | slice : beginP : endP; let i = index\\\" [ngClass]=\\\"{'bg-active': notaFiscalSelecionada == notaFiscal.notaFiscal}\\\">\\r\\n                  <td \\r\\n                  style=\\\"width: 50px\\\"\\r\\n                  [ngClass]=\\\"{ 'border-left-green': notaFiscal.situacao == 'Emitida',\\r\\n                  'border-left-orange': notaFiscal.situacao != 'Emitida'}\\\" >\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" \\r\\n                              [(ngModel)]=\\\"notaFiscal.check\\\" \\r\\n                              (change)=\\\"verificaCheck(notaFiscal)\\\" \\r\\n                              id=\\\"customCheck{{ i }}\\\" \\r\\n                              style=\\\"cursor: pointer;\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{ i }}\\\" style=\\\"cursor: pointer;\\\"></label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\">{{ notaFiscal.notaFiscal }}</td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\" [hidden]=\\\"compressedTable\\\">{{ notaFiscal.dtEmissao | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                  <td [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px; cursor: pointer;\\\" (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\"><i class=\\\"far fa-file-alt\\\"></i></td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"mt-3 col-6\\\"></div>\\r\\n            <div *ngIf=\\\"qtNotasFiscais >= itemsPerPage\\\">\\r\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > qtNotasFiscais ? qtNotasFiscais : currentPage*(itemsPerPage) }} de {{ qtNotasFiscais }}\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"qtNotasFiscais\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChangedProduct($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n          <tabset class=\\\"col-9 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onClose()\\\">\\r\\n              <i class=\\\"fas fa-times\\\"></i>\\r\\n            </button>\\r\\n            <tab [heading]=\\\"notaFiscalSelecionada\\\">\\r\\n                <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                      <th>Código</th>\\r\\n                      <th style=\\\"width: 50%\\\">Descrição</th>\\r\\n                      <th>Peso Liq.</th>\\r\\n                      <th>Valor</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let materialNotaFiscal of materiaisNotaFiscal; let i = index\\\">\\r\\n                      <td>{{ materialNotaFiscal.cdMaterial }}</td>\\r\\n                      <td style=\\\"width: 50%\\\">{{ materialNotaFiscal.dsMaterial  }}</td>\\r\\n                      <td>{{ materialNotaFiscal.pesoLiquido | number : '1.3-3' }}</td>\\r\\n                      <td>{{ materialNotaFiscal.vlTotal  | currency:'BRL':'symbol':'1.2-2'}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div bsModal #childModalRo=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"position: absolute; left: -100%;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <div class=\\\"d-flex position-relative\\\">\\r\\n            <div class=\\\"form-group justify-content-end mr-2 mb-0\\\">\\r\\n                <label for=\\\"cdNotaFiscalRo\\\"> Número Nota Fiscal RO </label>\\r\\n                <input \\r\\n                  id=\\\"cdNotaFiscalRo\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"DIGITE...\\\"\\r\\n                  [(ngModel)]=\\\"cdNotaFiscalRo\\\"\\r\\n                  (keyup.enter)=\\\"getListaExistenteRo()\\\"\\r\\n                >\\r\\n              </div>\\r\\n            <div class=\\\"spinner-border text-primary position-absolut positionSpinner\\\" role=\\\"status\\\" [hidden]=\\\"!loading\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"actions justify-content-end d-flex\\\">\\r\\n            <!-- <button (click)=\\\"salvarNotasFiscais()\\\">\\r\\n              Salvar\\r\\n            </button> -->\\r\\n            <button (click)=\\\"hideChildModalRo()\\\">\\r\\n              Fechar\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body d-flex\\\">\\r\\n          <div class=\\\"p-0\\\" [ngClass]=\\\"{'col-3': compressedTable}\\\">\\r\\n            <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 50px\\\"></th>\\r\\n                  <th>Nota Fiscal</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" >Data de Emissão</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px\\\"></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr class=\\\"hover\\\" *ngFor=\\\"let notaFiscal of notasFiscaisRo | slice : beginP : endP; let i = index\\\" [ngClass]=\\\"{'bg-active': notaFiscalSelecionada == notaFiscal.notaFiscal}\\\">\\r\\n                  <td \\r\\n                  style=\\\"width: 50px\\\"\\r\\n                  [ngClass]=\\\"{ 'border-left-green': notaFiscal.situacao == 'Emitida',\\r\\n                  'border-left-orange': notaFiscal.situacao != 'Emitida'}\\\" >\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" \\r\\n                              [(ngModel)]=\\\"notaFiscal.check\\\" \\r\\n                              (change)=\\\"verificaCheck(notaFiscal)\\\" \\r\\n                              id=\\\"customCheck{{ i }}\\\" \\r\\n                              style=\\\"cursor: pointer;\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{ i }}\\\" style=\\\"cursor: pointer;\\\"></label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\">{{ notaFiscal.notaFiscal }}</td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\" [hidden]=\\\"compressedTable\\\">{{ notaFiscal.dtEmissao | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                  <td [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px; cursor: pointer;\\\" (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\"><i class=\\\"far fa-file-alt\\\"></i></td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"mt-3 col-6\\\"></div>\\r\\n            <div *ngIf=\\\"qtNotasFiscaisRo >= itemsPerPage\\\">\\r\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > qtNotasFiscaisRo ? qtNotasFiscaisRo : currentPage*(itemsPerPage) }} de {{ qtNotasFiscaisRo }}\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"qtNotasFiscaisRo\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChangedProduct($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n          <tabset class=\\\"col-9 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onCloseRo()\\\">\\r\\n              <i class=\\\"fas fa-times\\\"></i>\\r\\n            </button>\\r\\n            <tab [heading]=\\\"notaFiscalSelecionadaRo\\\">\\r\\n                <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                      <th>Código</th>\\r\\n                      <th style=\\\"width: 50%\\\">Descrição</th>\\r\\n                      <th>Peso Liq.</th>\\r\\n                      <th>Valor</th>\\r\\n                      <th>Novo Peso</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let materialNotaFiscal of materiaisNotaFiscalRo; let i = index\\\">\\r\\n                      <td>{{ materialNotaFiscal.cdMaterial }}</td>\\r\\n                      <td style=\\\"width: 50%\\\">{{ materialNotaFiscal.dsMaterial  }}</td>\\r\\n                      <td>{{ materialNotaFiscal.pesoLiquido | number : '1.3-3' }}</td>\\r\\n                      <td>{{ materialNotaFiscal.vlTotal  | currency:'BRL':'symbol':'1.2-2'}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioListaInventarioService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient, private dateService: DateService) {}\r\n\r\n  getInventario(\r\n    page,\r\n    tipo,\r\n    empresa,\r\n    deposito,\r\n    linha,\r\n    classe,\r\n    dataInicial,\r\n    dataFinal,\r\n    cdInventario,\r\n    sigla\r\n  ) {\r\n    let di = dataInicial\r\n      ? this.dateService.convert2PhpDate(new Date(dataInicial))\r\n      : '';\r\n    let df = dataFinal\r\n      ? this.dateService.convert2PhpDate(new Date(dataFinal))\r\n      : '';\r\n    return this.http.get(`${this.BASE_URL}/logistica/estoque/inventario`, {\r\n      params: {\r\n        pagina: page ? page : '',\r\n        tipo: tipo,\r\n        empresa: empresa,\r\n        deposito: deposito,\r\n        linha: linha,\r\n        classe: classe,\r\n        dataInicial: di,\r\n        dataFinal: df,\r\n        cdInventario: cdInventario,\r\n        sigla: sigla\r\n      }\r\n    });\r\n  }\r\n\r\n  getClassesInventario(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario/classes/${idInventario}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"button,\\nbutton:focus {\\n  box-shadow: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2ZpbHRyby9maWx0cm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBR0UsMkJBQUE7QUFBRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VzdG9xdWUvaW52ZW50YXJpby9maWx0cm8vZmlsdHJvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uLFxyXG5idXR0b246Zm9jdXNcclxue1xyXG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioListaRelatorioService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLista(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario/${idInventario}/materiais`\r\n    );\r\n  }\r\n\r\n  getInfoInventario(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario/${idInventario}/resultado`\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativoGeral(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario-rotativo/${idInventario}`\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativo(idInventario, cdMaterial) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario-rotativo/${idInventario}/material/${cdMaterial}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { LogisticaEstoqueInventarioListaService } from './lista.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize, retry } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-inventario-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEstoqueInventarioListaComponent implements OnInit {\r\n  @ViewChild('childModal', { static: false }) childModal: ModalDirective;\r\n  @ViewChild('childModalRo', { static: false }) childModalRo: ModalDirective;\r\n\r\n  idInventario: number = this.activatedRoute.snapshot.params['id'];\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\r\n\r\n  form: FormGroup;\r\n\r\n  dateRef: Date;\r\n  dataNow: any;\r\n  cdNotaFiscal = '';\r\n  cdNotaFiscalRo = '';\r\n  tipoInventario = '';\r\n  status: any;\r\n  adminProfile = true;\r\n\r\n  perfilLoaded: boolean;\r\n  loaderNavbar = true;\r\n  spinnerFullScreen = true;\r\n  loading = false;\r\n  noResult = false;\r\n  compressedTable = false;\r\n  considerarMaterialSemEstoque = 1;\r\n  perfilTipo = '';\r\n\r\n  listaColunas: any;\r\n  listas = [];\r\n  listaInfo: any = {};\r\n  disabledBotoes = {\r\n    finalizar: false,\r\n    editar: false,\r\n    aprovar: false,\r\n    reabrir: false,\r\n  };\r\n  habilita = false;\r\n  info = false;\r\n  ativAprovar = false;\r\n  ativFinaliza = false;\r\n  ativReabrir = false;\r\n  ativCancelar = false;\r\n  ativEditar = false;\r\n  ativSalvar = false;\r\n  ativNotaFiscal = false;\r\n  ativExport = false;\r\n  inativBotoes = false;\r\n  desabilitarBotoes = true;\r\n  notaFiscalSelecionada: number;\r\n  notaFiscalSelecionadaRo: number;\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: true,\r\n  };\r\n\r\n  parametros = {};\r\n  breadCrumbTree = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro',\r\n    },\r\n    {\r\n      descricao: 'Inventario',\r\n      routerLink: '/logistica/estoque/inventario/inventario',\r\n    },\r\n    {\r\n      descricao: 'Inventário',\r\n    },\r\n  ];\r\n\r\n  colunas = [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n  beginP: number = 0;\r\n  endP: number = 10;\r\n  /* Paginação */\r\n\r\n  /* Seleção de Colunas */\r\n  itens: FormGroup;\r\n  selectedPeople = [];\r\n  listaMateriaisFiltro: any = [];\r\n  notasFiscais: any;\r\n  qtNotasFiscais: any;\r\n  tempNotasFiscais: any;\r\n  materiaisNotaFiscal: any = [];\r\n  notasFiscaisRo: any;\r\n  qtNotasFiscaisRo: any;\r\n  tempNotasFiscaisRo: any;\r\n  materiaisNotaFiscalRo: any = [];\r\n  /* Seleção de Colunas */\r\n\r\n  constructor(\r\n    private xlsxService: XlsxService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notice: PNotifyService,\r\n    private empresasService: LogisticaEstoqueInventarioListaService,\r\n    private dateSevice: DateService,\r\n    private route: Router,\r\n    private modalService: BsModalService,\r\n    private formBuilder: FormBuilder,\r\n    private atividadesService: AtividadesService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      cdMaterial: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getListaMateriaisParaFiltro();\r\n    this.changeColunas();\r\n    this.getInfoInventario();\r\n    this.onLoadAplication();\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getPerfil();\r\n  }\r\n\r\n  onLoadAplication() {\r\n    this.adminProfile = true;\r\n    this.loaderNavbar = true;\r\n    let params = {};\r\n\r\n    if (!this.adminProfile) {\r\n      setTimeout(() => {\r\n        this.perfilLoaded = true;\r\n        this.loaderNavbar = false;\r\n      }, 500);\r\n    } else if (this.adminProfile) {\r\n      setTimeout(() => {\r\n        this.perfilLoaded = false;\r\n        this.loaderNavbar = false;\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  onToggleListaMateriais() {\r\n    this.considerarMaterialSemEstoque =\r\n      this.considerarMaterialSemEstoque == 1 ? 0 : 1;\r\n    this.getLista('', this.considerarMaterialSemEstoque);\r\n  }\r\n\r\n  getLista(cdMaterial = '', considerarMaterialSemEstoque = 1) {\r\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\r\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\r\n      this.spinnerFullScreen = true;\r\n\r\n      this.listas = [];\r\n      this.totalItems = 0;\r\n      //Carrega a lista de materiais em inventário\r\n      this.empresasService\r\n        .getLista(\r\n          this.idInventario,\r\n          this.matriculaAuditor,\r\n          cdMaterial,\r\n          considerarMaterialSemEstoque\r\n        )\r\n        .pipe(\r\n          finalize(() => {\r\n            this.spinnerFullScreen = false;\r\n            this.loaderNavbar = false;\r\n            this.getTotal();\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            this.listas = response['materiais'];\r\n            this.totalItems = response['qtRegistros'];\r\n            this.noResult = false;\r\n            this.listas.forEach((element) => {\r\n              element.totalContagem =\r\n                element.qtPecaContagem * element.pesoPeca +\r\n                parseFloat(element.qtPesoContagem);\r\n              this.getInfoInventarioRotativo(element.cdMaterial).subscribe(\r\n                (response: any) => {\r\n                  if (response.status == 204)\r\n                    element.somaInventarioRotativo = 0;\r\n                  else\r\n                    element.somaInventarioRotativo = parseFloat(\r\n                      response.body.saldoEstoque\r\n                    );\r\n                  element.resultadoInventario =\r\n                    parseFloat(element.saldoEstoque) +\r\n                    element.somaInventarioRotativo;\r\n                }\r\n              );\r\n            });\r\n          },\r\n          (error) => {\r\n            this.notice.notice(\r\n              'Não há materiais cadastrados para esse inventário.'\r\n            );\r\n            this.noResult = true;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getListaMateriaisParaFiltro() {\r\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\r\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\r\n\r\n      //Carrega a lista de materiais para o filtro\r\n      this.empresasService\r\n        .getListaMateriaisParaFiltro(this.idInventario, this.matriculaAuditor)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe((response: any) => {\r\n          if (response['status'] === 200)\r\n            this.listaMateriaisFiltro = response['body']['materiais'];\r\n        });\r\n    }\r\n  }\r\n\r\n  postSalvar() {\r\n    let materiais = [];\r\n    let requisicao = {};\r\n    this.loaderNavbar = true;\r\n\r\n    this.listas.forEach((element) => {\r\n      if (element.qtPecaContagem != null || element.qtPesoContagem != null) {\r\n        materiais.push({\r\n          idInventarioMaterial: element.idInventarioMaterial,\r\n          qtPeca: element.qtPecaContagem ? element.qtPecaContagem : null,\r\n          qtPeso: element.qtPesoContagem ? element.qtPesoContagem : null,\r\n          cdMaterial: element.cdMaterial ? element.cdMaterial : null,\r\n        });\r\n      } else {\r\n        this.getLista();\r\n      }\r\n    });\r\n\r\n    if (materiais.length > 0) {\r\n      requisicao = {\r\n        matriculaAuditor: this.matriculaAuditor,\r\n        materiais,\r\n      };\r\n      this.empresasService\r\n        .postSalvar(requisicao, this.idInventario)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (response['body']['erros'].length === 0) {\r\n              this.notice.success('Registros atualizados com sucesso!');\r\n            } else {\r\n              this.notice.error('Alguns registros não puderam ser atualizados');\r\n            }\r\n            this.getLista();\r\n          },\r\n          (error: any) => {\r\n            this.notice.error('Erro ao salvar registros');\r\n          }\r\n        );\r\n    } else {\r\n      this.notice.notice('Inventário não teve alterações para ser salvo');\r\n      this.getLista();\r\n    }\r\n  }\r\n\r\n  finalizar(template) {\r\n    if (this.dateDiff(this.dateRef, new Date()) >= 7)\r\n      this.modalRef = this.modalService.show(template);\r\n    else {\r\n      let finaliza = confirm('Tem certeza que deseja finalizar o inventário?');\r\n\r\n      if (finaliza) this.atualizarInventario('', 2);\r\n    }\r\n  }\r\n\r\n  cancelar(template, valor) {\r\n    let cancela = confirm('Tem certeza que deseja cancelar o inventário?');\r\n    if (valor == 1)\r\n      if (cancela) this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  dateDiff(date1, date2) {\r\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  atualizarInventario(justificativa, statusInventario) {\r\n    this.loaderNavbar = true;\r\n    let finalizacao = {};\r\n\r\n    finalizacao = {\r\n      idStatusInventario: statusInventario,\r\n      matriculaAuditor: this.matriculaAuditor,\r\n      idInventario: this.idInventario,\r\n      observacao: justificativa,\r\n    };\r\n    this.empresasService\r\n      .atualizarInventario(\r\n        justificativa,\r\n        statusInventario,\r\n        this.idInventario,\r\n        this.matriculaAuditor\r\n      )\r\n      .pipe(\r\n        finalize(\r\n          () => (\r\n            (this.loaderNavbar = false),\r\n            this.getLista(),\r\n            this.getInfoInventario()\r\n          )\r\n        )\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response['status'] === 200)\r\n            this.notice.success(response['body']['message']);\r\n        },\r\n        (error) => {\r\n          this.notice.error(error.error.dsErro);\r\n        }\r\n      );\r\n  }\r\n\r\n  getInfoInventarioRotativo(cdMaterial) {\r\n    return this.empresasService.getInfoInventarioRotativo(\r\n      this.idInventario,\r\n      cdMaterial\r\n    );\r\n  }\r\n\r\n  /* TRATA HORA ATUAL */\r\n  RetornaDataHoraAtual() {\r\n    var dNow = new Date();\r\n    var localdate =\r\n      dNow.getDate() +\r\n      '/' +\r\n      (dNow.getMonth() + 1) +\r\n      '/' +\r\n      dNow.getFullYear() +\r\n      ' ' +\r\n      dNow.getHours() +\r\n      ':' +\r\n      dNow.getMinutes();\r\n    return (this.dataNow = localdate);\r\n  }\r\n\r\n  /* TRATA CAMPOS DE INPUT - DESABILITA EXIGINDO O CLICK NO BOTÃO EDITAR */\r\n  getInfoInventario() {\r\n    this.empresasService\r\n      .getInfoInventario(this.idInventario)\r\n      .subscribe((response: any) => {\r\n        this.dateRef = new Date(response.dtInclusao);\r\n        this.status = response.siglaStatusInventario;\r\n        this.tipoInventario = response.dsTipoInventario;\r\n        if (\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_ABER' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_FINA' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_APRO'\r\n        ) {\r\n          this.info = true;\r\n        } else {\r\n          this.info;\r\n        }\r\n\r\n        if (response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST') {\r\n          this.noResult = true;\r\n        }\r\n\r\n        this.controlaAcessoBotoes();\r\n      });\r\n  }\r\n\r\n  /* HABILITA CAMPOS PARA EDITAR */\r\n  habilitaCampos() {\r\n    if (this.listas !== null) {\r\n      this.info = false;\r\n      this.habilita = true;\r\n    }\r\n  }\r\n\r\n  changeColunas() {\r\n    let response = [\r\n      { id: 1, descricao: 'Classe' },\r\n      { id: 2, descricao: 'Código do Material' },\r\n      { id: 3, descricao: 'Descrição do Material' },\r\n      { id: 4, descricao: 'Endereço' },\r\n      { id: 5, descricao: 'Estoque (Tons)' },\r\n      { id: 6, descricao: 'Peso Por Peça' },\r\n      { id: 7, descricao: 'Quantidade de Peças' },\r\n      { id: 8, descricao: 'Peso físico (Tons)' },\r\n      { id: 9, descricao: 'Total da contagem' },\r\n      { id: 10, descricao: 'Notas Fiscais' },\r\n      { id: 11, descricao: 'Diferença Ajustada' },\r\n      { id: 12, descricao: 'Soma Inventário Rotativo' },\r\n      { id: 13, descricao: 'Valor Unitário' },\r\n      { id: 14, descricao: 'Resultado Inventário' },\r\n      { id: 15, descricao: 'Resultado Monetário' },\r\n    ];\r\n\r\n    this.listaColunas = response;\r\n  }\r\n\r\n  esconderColunas(titulo) {\r\n    return this.colunas.indexOf(titulo) !== -1;\r\n  }\r\n\r\n  exportarExcel() {\r\n    this.xlsxService.exportFile(this.listas, 'inventario');\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  /* Pesquisa a lista de materiais para popular o filtro */\r\n  onSearch() {\r\n    this.loaderNavbar = true;\r\n    if (this.form.get('cdMaterial').status == 'VALID')\r\n      this.getLista(this.form.get('cdMaterial').value, 0);\r\n    else this.getLista();\r\n  }\r\n  /* */\r\n\r\n  getMateriaisNotasFiscais(notaFiscal) {\r\n    this.loading = true;\r\n    this.materiaisNotaFiscal = [];\r\n    this.empresasService\r\n      .getMateriaisNotasFiscais(this.idInventario, notaFiscal)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe((data) => {\r\n        if (data['status'] === 200) {\r\n          this.materiaisNotaFiscal = data['body'];\r\n          this.compressedTable = true;\r\n          this.notaFiscalSelecionada = notaFiscal;\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriaisNotasFiscaisRo(notaFiscal) {\r\n    this.loading = true;\r\n    this.materiaisNotaFiscalRo = [];\r\n    this.empresasService\r\n      .getMateriaisNotasFiscaisRo(this.idInventario, notaFiscal)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe((data) => {\r\n        if (data['status'] === 200) {\r\n          this.materiaisNotaFiscalRo = data['body'];\r\n          this.compressedTable = true;\r\n          this.notaFiscalSelecionadaRo = notaFiscal;\r\n        }\r\n      });\r\n  }\r\n\r\n  /* Função para abertura de modal de Notas Fiscais */\r\n  openModalNotaFiscal() {\r\n    this.getListaExistente();\r\n    this.childModal.show();\r\n  }\r\n\r\n  /* Função para abertura de modal de Notas Fiscais relacionadas a R.O's */\r\n  openModalRo() {\r\n    this.getListaExistenteRo();\r\n    this.childModalRo.show();\r\n  }\r\n\r\n  /* Função que verifica se a lista já foi carregada e se a nf da consulta consta na lista */\r\n  getListaCarregadaMaisNotaFiscal() {\r\n    let containsNotaFiscal = false;\r\n    let isNotUndefined = typeof this.tempNotasFiscais !== 'undefined';\r\n\r\n    if (isNotUndefined) {\r\n      containsNotaFiscal = this.tempNotasFiscais.find(\r\n        (element) => element.notaFiscal === this.cdNotaFiscal\r\n      );\r\n    }\r\n\r\n    return isNotUndefined && containsNotaFiscal;\r\n  }\r\n\r\n  getListaCarregadaMaisNotaFiscalRo() {\r\n    let containsNotaFiscal = false;\r\n    let isNotUndefined = typeof this.tempNotasFiscais !== 'undefined';\r\n\r\n    if (isNotUndefined) {\r\n      containsNotaFiscal = this.tempNotasFiscais.find(\r\n        (element) => element.notaFiscal === this.cdNotaFiscalRo\r\n      );\r\n    }\r\n\r\n    return isNotUndefined && containsNotaFiscal;\r\n  }\r\n\r\n  /* Função que verifica se a lista já foi carregada e usa ela para pesquisa, sem a necessidade de consultar novamente */\r\n  getListaExistente() {\r\n    if (this.getListaCarregadaMaisNotaFiscal()) {\r\n      const val = this.cdNotaFiscal;\r\n\r\n      if (!val) {\r\n        this.notasFiscais = this.tempNotasFiscais;\r\n      }\r\n\r\n      const temp = this.tempNotasFiscais.filter((row) => {\r\n        return Object.keys(row).some((property) => {\r\n          return row[property] === null\r\n            ? null\r\n            : row[property].toString().indexOf(val) !== -1;\r\n        });\r\n      });\r\n\r\n      this.notasFiscais = temp;\r\n      this.loading = false;\r\n    } else this.getNotasFiscais();\r\n  }\r\n\r\n  getListaExistenteRo() {\r\n    if (this.getListaCarregadaMaisNotaFiscalRo()) {\r\n      const val = this.cdNotaFiscalRo;\r\n\r\n      if (!val) {\r\n        this.notasFiscaisRo = this.tempNotasFiscais;\r\n      }\r\n\r\n      const temp = this.tempNotasFiscais.filter((row) => {\r\n        return Object.keys(row).some((property) => {\r\n          return row[property] === null\r\n            ? null\r\n            : row[property].toString().indexOf(val) !== -1;\r\n        });\r\n      });\r\n\r\n      this.notasFiscaisRo = temp;\r\n      this.loading = false;\r\n    } else this.getNotasFiscaisRo();\r\n  }\r\n\r\n  /* Função consulta lista de notas fiscais, seja ela uma lista com 1 ou mais resultados */\r\n  getNotasFiscais() {\r\n    this.loading = true;\r\n    this.empresasService\r\n      .getNotasFiscais(this.idInventario, this.cdNotaFiscal)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data['status'] === 200) {\r\n            this.notasFiscais = data['body']['notasFiscais'];\r\n            this.tempNotasFiscais = data['body']['notasFiscais'];\r\n            this.qtNotasFiscais = data['body']['qtRegistros'];\r\n          } else this.notice.notice('Não houve retorno para sua consulta');\r\n        },\r\n        (error) => this.notice.error(error.message)\r\n      );\r\n  }\r\n\r\n  /* Função consulta lista de notas fiscais, seja ela uma lista com 1 ou mais resultados */\r\n  getNotasFiscaisRo() {\r\n    this.loading = true;\r\n    this.empresasService\r\n      .getNotasFiscaisRo(this.idInventario, this.cdNotaFiscalRo)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data['status'] === 200) {\r\n            this.notasFiscaisRo = data['body']['notasFiscais'];\r\n            this.tempNotasFiscaisRo = data['body']['notasFiscais'];\r\n            this.qtNotasFiscaisRo = data['body']['qtRegistros'];\r\n          } else this.notice.notice('Não houve retorno para sua consulta');\r\n        },\r\n        (error) => this.notice.error(error.message)\r\n      );\r\n  }\r\n\r\n  hideChildModal(): void {\r\n    this.childModal.hide();\r\n    this.postSalvar();\r\n  }\r\n\r\n  hideChildModalRo(): void {\r\n    this.childModalRo.hide();\r\n    this.postSalvar();\r\n  }\r\n\r\n  onClose() {\r\n    this.compressedTable = false;\r\n    this.notaFiscalSelecionada = 0;\r\n  }\r\n\r\n  onCloseRo() {\r\n    this.compressedTable = false;\r\n    this.notaFiscalSelecionadaRo = 0;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChangedProduct(event: PageChangedEvent): void {\r\n    this.beginP = (event.page - 1) * event.itemsPerPage;\r\n    this.endP = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  salvarNotasFiscais() {\r\n    let checkAlterado = [];\r\n    this.notasFiscais.forEach((element) => {\r\n      if (element.checkAlterado) {\r\n        checkAlterado.push(element);\r\n      }\r\n    });\r\n\r\n    let particao = 50;\r\n    let qtEnvios = Math.ceil(checkAlterado.length / particao);\r\n    let req: any = [];\r\n\r\n    this.loading = true;\r\n\r\n    for (let index = 0; index < qtEnvios; index++)\r\n      req.push(\r\n        this.empresasService.salvarNotasFiscais(\r\n          this.idInventario,\r\n          checkAlterado.slice(particao * index, particao * (index + 1)),\r\n          this.matriculaAuditor\r\n        )\r\n      );\r\n\r\n    forkJoin(req)\r\n      .pipe(\r\n        retry(2),\r\n        finalize(() => (this.loading = false))\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          let contador = 0;\r\n          data[0]['body'].forEach((element) => {\r\n            if (element['responseCode'] == 200) {\r\n              this.notice.success('Itens salvos com sucesso!');\r\n              contador++;\r\n            } else {\r\n              this.notice.error(element['response']);\r\n            }\r\n          });\r\n          if (contador === data.length) {\r\n          }\r\n        },\r\n        (error) => {\r\n          this.notice.error('Ocorreu um erro ao salvar os itens');\r\n        }\r\n      );\r\n  }\r\n\r\n  salvarNotasFiscaisRo() {\r\n    let checkAlterado = [];\r\n    this.notasFiscaisRo.forEach((element) => {\r\n      if (element.checkAlterado) {\r\n        checkAlterado.push(element);\r\n      }\r\n    });\r\n\r\n    let particao = 50;\r\n    let qtEnvios = Math.ceil(checkAlterado.length / particao);\r\n    let req: any = [];\r\n\r\n    this.loading = true;\r\n\r\n    for (let index = 0; index < qtEnvios; index++)\r\n      req.push(\r\n        this.empresasService.salvarNotasFiscaisRo(\r\n          this.idInventario,\r\n          checkAlterado.slice(particao * index, particao * (index + 1)),\r\n          this.matriculaAuditor\r\n        )\r\n      );\r\n\r\n    forkJoin(req)\r\n      .pipe(\r\n        retry(2),\r\n        finalize(() => (this.loading = false))\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          let contador = 0;\r\n\r\n          this.notice.success('Itens salvos com sucesso!');\r\n          data.forEach((element) => {\r\n            if (element['status'] == 200) {\r\n              contador++;\r\n            }\r\n          });\r\n          if (contador === data.length) {\r\n          }\r\n        },\r\n        (error) => {\r\n          this.notice.error('Ocorreu um erro ao salvar os itens');\r\n        }\r\n      );\r\n  }\r\n\r\n  verificaCheck(notaFiscal) {\r\n    notaFiscal.checkAlterado = !notaFiscal.checkAlterado;\r\n    this.salvarNotasFiscais();\r\n    this.getNotasFiscais();\r\n  }\r\n\r\n  getTotalContagem(material) {\r\n    return (\r\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\r\n      material.qtPesoContagem\r\n    );\r\n  }\r\n\r\n  getSaldoInventario(material) {\r\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\r\n      return undefined;\r\n    }\r\n\r\n    const pesoFisico =\r\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\r\n      material.qtPesoContagem;\r\n    const estoque = material.qtPesoEstoque;\r\n    const notasFiscais = parseFloat(material.qtMaterialNotaFiscal) ?? 0;\r\n    const saldo = pesoFisico - estoque + notasFiscais;\r\n    return saldo;\r\n  }\r\n\r\n  getResultadoInventario(material) {\r\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\r\n      return undefined;\r\n    }\r\n    return (\r\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\r\n      material.qtPesoContagem -\r\n      material.qtPesoEstoque +\r\n      material.somaInventarioRotativo\r\n    );\r\n  }\r\n\r\n  getResultadoMonetario(material) {\r\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\r\n      return undefined;\r\n    }\r\n    return (\r\n      ((material.pesoPeca / 1000) * material.qtPecaContagem +\r\n        material.qtPesoContagem -\r\n        material.qtPesoEstoque +\r\n        material.somaInventarioRotativo) *\r\n      material.precoMinimo\r\n    );\r\n  }\r\n\r\n  getPerfil() {\r\n    this.empresasService\r\n      .getPerfil(this.matriculaAuditor)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n          this.loaderNavbar = false;\r\n          this.getLista();\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.disabledBotoes = response['disabledBotoes'];\r\n          this.perfilTipo = response['perfilTipo'];\r\n          this.controlaAcessoBotoes();\r\n        },\r\n        (error) => {\r\n          this.notice.notice(\r\n            'Não há vinculo de perfil para realizar inventário nesse usuário.'\r\n          );\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getTotal() {\r\n    this.spinnerFullScreen = true;\r\n    this.empresasService\r\n      .getTotal(this.idInventario)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        this.listaInfo = response;\r\n      });\r\n  }\r\n\r\n  controlaAcessoBotoes() {\r\n    if (\r\n      this.perfilTipo == 'assistente' &&\r\n      this.status == 'LOGI_INVE_STAT_ABER'\r\n    ) {\r\n      this.ativExport = true;\r\n      this.ativEditar = true;\r\n      this.ativNotaFiscal = true;\r\n      this.ativSalvar = true;\r\n    } else if (this.perfilTipo == 'lider') {\r\n      this.ativFinaliza = true;\r\n      this.ativCancelar = true;\r\n      this.ativEditar = true;\r\n      this.ativNotaFiscal = true;\r\n      this.ativSalvar = true;\r\n      if (this.status == 'LOGI_INVE_STAT_ABER') this.ativExport = true;\r\n    } else if (this.perfilTipo == 'coordenador') {\r\n      if (this.status == 'LOGI_INVE_STAT_ABER') {\r\n        this.ativFinaliza = true;\r\n        this.ativReabrir = false;\r\n        this.ativAprovar = false;\r\n        this.ativCancelar = true;\r\n        this.ativEditar = true;\r\n        this.ativNotaFiscal = true;\r\n        this.ativSalvar = true;\r\n        this.ativExport = true;\r\n      }\r\n      if (this.status == 'LOGI_INVE_STAT_FINA') {\r\n        this.ativFinaliza = false;\r\n        this.ativReabrir = true;\r\n        this.ativAprovar = true;\r\n        this.ativCancelar = true;\r\n        this.ativEditar = false;\r\n        this.ativNotaFiscal = false;\r\n        this.ativSalvar = false;\r\n        this.ativExport = true;\r\n      }\r\n      if (this.status == 'LOGI_INVE_STAT_APRO') {\r\n        this.ativFinaliza = false;\r\n        this.ativReabrir = false;\r\n        this.ativAprovar = false;\r\n        this.ativCancelar = false;\r\n        this.ativEditar = false;\r\n        this.ativNotaFiscal = false;\r\n        this.ativSalvar = false;\r\n        this.ativExport = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Realtório de inventário</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n      <button \\r\\n        (click)=\\\"onDownload()\\\"\\r\\n        >\\r\\n        Imprimir relatório\\r\\n    </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div id=\\\"download\\\">\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"d-flex justify-content-between col-6 pl-5\\\">\\r\\n              <img class=\\\"\\\" src=\\\"../../../../../../../assets/images/logo/logo-manetoni.png\\\" height=\\\"100\\\" width=\\\"150\\\">\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"d-flex justify-content-end col-6 mt-2 pr-5\\\">\\r\\n              <img class=\\\"\\\" src=\\\"../../../../../../../assets/images/logo/Logo-MTcorp.png\\\" height=\\\"65\\\" width=\\\"220\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"espacamento250\\\">&nbsp;</div>\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"my-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h1>RELATÓRIO DE RESULTADOS DO INVENTÁRIO</h1>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <!-- INICIA ESPAÇAMENTO -->\\r\\n          <div class=\\\"espacamento150\\\">&nbsp;</div>\\r\\n          <div style=\\\"height: 170px\\\">&nbsp;</div>\\r\\n        <!-- FINALIZA ESPAÇAMENTO --> \\r\\n          <ul class=\\\"p-0\\\">\\r\\n            <li class=\\\"mx-3\\\">\\r\\n              <h6 class=\\\"card-header border\\\"> \\r\\n                Empresa: {{ listaInfo.dsEmpresa | uppercase }} / Depósito: {{ listaInfo.dsDeposito | uppercase }} / Linha: {{ infoLinha| uppercase }} / Classe: {{ infoClasse | uppercase }}\\r\\n              </h6>\\r\\n            </li>\\r\\n          </ul> \\r\\n          <ul class=\\\"d-flex p-0 col-12  my-5\\\">\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Estoque total ton.(Anterior) </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.qtPesoEstoque | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Estoque total ton.(Atual) </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.saldoEstoque | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <div class=\\\"espacamento20\\\">&nbsp;</div>\\r\\n          <ul class=\\\"d-flex p-0 col-12  mt-5\\\">\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Total geral da contagem </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.saldoEstoqueLancamento | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Diferença total ajustada </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>  \\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ resultadoDiferenca | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <div class=\\\"espacamento20\\\">&nbsp;</div>\\r\\n          <ul class=\\\"d-flex p-0 col-12  mt-5\\\">\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                  <h5 class=\\\"card-header text-center w-100\\\"> Resultado total do inventário </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ resultTotalInventario | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div> \\r\\n            </li>\\r\\n            <li class=\\\"col-6\\\">\\r\\n                <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                  <h5 class=\\\"card-header text-center w-100\\\"> Resultado monetário total </h5>\\r\\n                  <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                    <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                    <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                      <div class=\\\"col\\\"><h1> {{ listaInfo.saldoFinanceiro | currency:'BRL':'symbol':'1.2-2'}} </h1></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </li>\\r\\n          </ul>\\r\\n          <div class=\\\"espacamento25\\\">&nbsp;</div>\\r\\n          <ul class=\\\"p-0\\\">\\r\\n            <li class=\\\"px-1 pb-1 \\\" *ngFor=\\\"let lista of listas\\\" style=\\\"list-style: none;\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <h6 class=\\\"card-header\\\"> {{ lista.cdMaterial }} - {{ lista.dsMaterial }} </h6>\\r\\n                <div class=\\\"row card-body\\\">\\r\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Estoque ton.: {{ lista.qtPesoEstoque | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Qtd. peça físico: {{ lista.qtPecaContagem }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Peso físico ton.: {{ lista.qtPesoContagem | number : '1.3-3' }} </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Total da contagem: {{ lista.totalContagem | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Diferença ajustada: {{ lista.saldoEstoque | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Soma inventário rotativo: {{ lista.somaInventarioRotativo | number : '1.3-3' }} </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Resultado inventário: {{ lista.resultadoInventario | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Custo médio: {{ lista.precoMinimo | currency:'BRL':'symbol':'1.2-2' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Resultado monetário: {{ lista.saldoFinanceiro | currency:'BRL':'symbol':'1.2-2' }} </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>  \\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LogisticaEstoqueInventarioListaRelatorioService } from './relatorio.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'relatorio',\r\n  templateUrl: './relatorio.component.html',\r\n  styleUrls: ['./relatorio.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioListaRelatorioComponent\r\n  implements OnInit {\r\n  idInventario: number = this.activatedRoute.snapshot.params['id'];\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\r\n  spinnerFullScreen: boolean = true;\r\n  resultTotalInventario: number;\r\n  resultadoDiferenca: number;\r\n  resultadoContagem: number;\r\n  totalContagem: number;\r\n  qtPecaContagem: number;\r\n  qtPesoContagem: number;\r\n  inventarioRotativoTotal: any;\r\n  listas: any = [];\r\n  listaInfo: any = [];\r\n  infoLinha: any = '';\r\n  infoClasse: any = '';\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Filtro',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Inventários',\r\n      routerLink: '/logistica/estoque/inventario/inventario'\r\n    },\r\n    {\r\n      descricao: 'Relatório'\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private pdfService: PdfService,\r\n    private notice: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private empresasService: LogisticaEstoqueInventarioListaRelatorioService,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getLista();\r\n    this.getInfoInventario();\r\n    this.getInfoInventarioRotativoGeral();\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n  getLista() {\r\n    let infoMateriais = [];\r\n\r\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\r\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\r\n      this.empresasService\r\n        .getLista(this.idInventario)\r\n        .pipe(finalize(() => (this.spinnerFullScreen = false)))\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (Object.keys(response).length > 0) {\r\n              this.listas = response['materiais'];\r\n              /* this.infoLinha = this.listas[0].dsLinha.trim();\r\n              this.infoClasse = this.listas[0].dsClasse; */\r\n\r\n              this.listas.forEach(element => {\r\n                element.totalContagem =\r\n                  element.qtPecaContagem * element.pesoPeca +\r\n                  parseFloat(element.qtPesoContagem);\r\n\r\n                this.getInfoInventarioRotativo(element.cdMaterial).subscribe(\r\n                  (response: any) => {\r\n                    if (response.status == 204)\r\n                      element.somaInventarioRotativo = 0;\r\n                    else\r\n                      element.somaInventarioRotativo = parseFloat(\r\n                        response.body.saldoEstoque\r\n                      );\r\n                    element.resultadoInventario =\r\n                      parseFloat(element.saldoEstoque) +\r\n                      element.somaInventarioRotativo;\r\n                  }\r\n                );\r\n              });\r\n            }\r\n          },\r\n          error => {\r\n            this.notice.notice(\r\n              'Não há materiais cadastrados para esse inventário.'\r\n            );\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getInfoInventario() {\r\n    this.empresasService\r\n      .getInfoInventario(this.idInventario)\r\n      .subscribe((response: any) => {\r\n        this.listaInfo = response;\r\n        this.resultadoDiferenca =\r\n          parseFloat(this.listaInfo.saldoEstoque) -\r\n          parseFloat(this.listaInfo.qtPesoEstoque);\r\n      });\r\n  }\r\n\r\n  getInfoInventarioRotativo(cdMaterial) {\r\n    return this.empresasService.getInfoInventarioRotativo(\r\n      this.idInventario,\r\n      cdMaterial\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativoGeral() {\r\n    return this.empresasService\r\n      .getInfoInventarioRotativoGeral(this.idInventario)\r\n      .subscribe((response: any) => {\r\n        this.inventarioRotativoTotal = parseFloat(response.saldoEstoque);\r\n        this.resultTotalInventario =\r\n          parseFloat(this.listaInfo.saldoEstoque) +\r\n          parseFloat(this.inventarioRotativoTotal);\r\n      });\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.pdfService.download(\r\n        'download',\r\n        `${this.idInventario}_ResultadoInventario`\r\n      );\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}