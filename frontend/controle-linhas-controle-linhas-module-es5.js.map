{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/controle-linhas/formulario/formulario.component.scss","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/controle-linhas.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/termo-responsabilidade/termo-responsabilidade.component.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/formulario/formulario.component.html","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/controle-linhas-routing.module.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/termo-responsabilidade/termo-responsabilidade.component.html","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/termo-responsabilidade/termo-responsabilidade-resolver.guard.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/formulario/formulario.component.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/lista/lista.component.scss","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/controle-linhas.module.ts","webpack:///src/app/modules/tecnologia-informacao/controle-linhas/termo-responsabilidade/termo-responsabilidade.component.scss"],"names":["TecnologiaInformacaoControleLinhaListaComponent","localeService","activatedRoute","router","formBuilder","xlsxService","controleLinhasService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","dateService","loaderNavbar","breadCrumbTree","descricao","routerLink","subtitles","id","text","color","showDetailPanel","tableConfig","subtitleBorder","orderBy","orderType","compararData","situacoes","loadingSituacoes","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","setFormFilter","getFuncionariosSituacoes","setTitle","onDetailPanelEmitter","setLinhaSelecionado","formValue","checkRouterParams","form","group","numLinha","nomeUsuario","codEscritorio","codEmpresa","dsSituacao","nomeEmpresa","nomeEscritorio","codSituacao","numContrato","dataVencimentoInicial","dataVencimentoFinal","pagina","registros","required","checkOrder","matricula","dataContratoInicial","dataContratoFinal","activatedRouteSubscription","queryParams","subscribe","keys","length","params","atob","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","showDetailPanelSubscription","config","event","showing","value","linhaSelecionado","codLinha","valor","dataVencimentoContrato","codUsuario","dataCadastro","plano","gestorFun","conta","codChip","numConta","senha","status","documento","qtDocumentos","data","Date","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","field","onFieldInvalid","get","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","convertToUrlDate","getListaLinhas","pipe","response","hasOwnProperty","success","slice","error","mensagem","linha","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","show","loadedFinished","setTimeout","confirmDelete","asObservable","result","deleteLinha","console","log","showConfirm","controleLinha","save","selector","template","TecnologiaInformacaoControleLinhaFormularioResolverGuard","route","getDetalhes","codPatrimonio","situacao","providedIn","TecnologiaInformacaoControleLinhaService","http","genericService","API","empresas","getEmpresas","escritorios","getEscritorios","httpParams","param","append","post","put","updateLinha","saveLinha","document","observe","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","TecnologiaInformacaoControleLinhaTermoResponsabilidadeComponent","pdfService","location","MASKS","tipoVisao","bairroEmpresa","dataFicha","formChanged","loaderFullScreen","setBreadCrumb","setFormBuilder","getTermos","confirm","objetos","push","descricaoObj","quantidadeObj","valorObj","index","removeAt","notice","snapshot","detalhes","disabled","cnpjEmpresa","endEmpresa","cidEmpresa","estEmpresa","rgUsuario","cpfUsuario","endUsuario","bairroUsuario","cidUsuario","estUsuario","array","back","setFormObjetos","onAddObjeto","dataHoje","dataHojeC","getFullDate","formData","getRawValue","download","formGroup","onNestedFieldInvalid","formControl","controls","validationResult","nestedForm","patchValue","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","TecnologiaInformacaoControleLinhaRoutingModule","imports","forChild","exports","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","TecnologiaInformacaoControleLinhaTermoResponsabilidadeResolverGuard","TecnologiaInformacaoControleLinhaFormularioComponent","controleLinhaService","anexosLoaded","registrarAcesso","appTitle","maxLength","minLength","getDocumentos","pristine","submittingForm","reset","files","FormData","postDocument","documentos","body","confirm$","putDocumento","idDocumento","FormDeactivateGuard","state","formCanDeactivate","TecnologiaInformacaoControleLinhaModule","declarations","forRoot","providers"],"mappings":"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","file":"controle-linhas-controle-linhas-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyb2xlLWxpbmhhcy9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { TecnologiaInformacaoControleLinhaService } from '../controle-linhas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n// Interfaces\r\nimport { ControleLinha } from '../models/controle-linha';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-controle-linhas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoControleLinhaListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/tecnologia-informacao/home',\r\n    },\r\n    {\r\n      descricao: 'Controle de Linhas',\r\n    },\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Trabalhando',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Demitido',\r\n      color: 'red',\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Outro',\r\n      color: 'yellow',\r\n    },\r\n  ];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = { subtitleBorder: true };\r\n  form: FormGroup;\r\n  orderBy = 'nomeUsuario';\r\n  orderType = 'ASC';\r\n  compararData = null;\r\n  situacoes = [];\r\n  loadingSituacoes = true;\r\n  maxSize = 10;\r\n  itemsPerPage = 25;\r\n  currentPage = 1;\r\n  totalItems: any = [];\r\n\r\n  dados: Array<ControleLinha> = [];\r\n  dadosPagination: Array<ControleLinha> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  linhaSelecionado: ControleLinha;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private xlsxService: XlsxService,\r\n    private controleLinhasService: TecnologiaInformacaoControleLinhaService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormFilter();\r\n    this.getFuncionariosSituacoes();\r\n    this.titleService.setTitle('Controle de linhas');\r\n    this.onDetailPanelEmitter();\r\n    this.setLinhaSelecionado();\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      numLinha: [formValue.numLinha],\r\n      descricao: [formValue.descricao],\r\n      nomeUsuario: [formValue.nomeUsuario],\r\n      codEscritorio: [formValue.nomeUsuario],\r\n      codEmpresa: [formValue.nomeUsuario],\r\n      dsSituacao: [formValue.dsSituacao],\r\n      nomeEmpresa: [formValue.nomeEmpresa],\r\n      nomeEscritorio: [formValue.nomeEscritorio],\r\n      codSituacao: [formValue.codSituacao],\r\n      numContrato: [formValue.numContrato],\r\n      dataVencimentoInicial: [formValue.dataVencimentoInicial],\r\n      dataVencimentoFinal: [formValue.dataVencimentoFinal],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      numLinha: null,\r\n      matricula: null,\r\n      descricao: null,\r\n      nomeUsuario: null,\r\n      nomeEmpresa: null,\r\n      codEscritorio: null,\r\n      nomeEscritorio: null,\r\n      codSituacao: 1,\r\n      dsSituacao: null,\r\n      numContrato: null,\r\n      dataContratoInicial: null,\r\n      dataContratoFinal: null,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataVencimentoContrato') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setLinhaSelecionado(): void {\r\n    this.linhaSelecionado = {\r\n      codLinha: -1,\r\n      matricula: null,\r\n      numLinha: null,\r\n      descricao: null,\r\n      codEscritorio: null,\r\n      nomeEscritorio: null,\r\n      codEmpresa: null,\r\n      nomeEmpresa: null,\r\n      codSituacao: null,\r\n      dsSituacao: null,\r\n      valor: null,\r\n      numContrato: null,\r\n      dataVencimentoContrato: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null,\r\n      plano: null,\r\n      gestorFun: null,\r\n      dados: null,\r\n      conta: null,\r\n      codChip: null,\r\n      numConta: null,\r\n      senha: null,\r\n      status: '1',\r\n      documento: null,\r\n      qtDocumentos: null,\r\n    };\r\n  }\r\n\r\n  onExport(): void {\r\n    let data = new Date().toLocaleDateString().split('/'),\r\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\r\n\r\n    let listagemExport: any = [];\r\n\r\n    listagemExport = this.dados.concat(this.totalItems);\r\n\r\n    this.xlsxService.exportFile(listagemExport, `ControleLinhas_${dataExport}`);\r\n  }\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  comparaData() {\r\n    if (!this.form.get('dataVencimentoFinal').value) {\r\n      return false;\r\n    } else if (\r\n      this.form.get('dataVencimentoInicial').value >\r\n      this.form.get('dataVencimentoFinal').value\r\n    ) {\r\n      this.compararData = true;\r\n      return this.compararData;\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    if (this.form.value.nomeUsuario) {\r\n      params.nomeUsuario = this.form.value.nomeUsuario;\r\n    }\r\n\r\n    if (this.form.value.numLinha) {\r\n      params.numLinha = this.form.value.numLinha;\r\n    }\r\n    if (this.form.value.descricao) {\r\n      params.descricao = this.form.value.descricao;\r\n    }\r\n\r\n    if (this.form.value.numContrato) {\r\n      params.numContrato = this.form.value.numContrato;\r\n    }\r\n\r\n    if (this.form.value.nomeEmpresa) {\r\n      params.nomeEmpresa = this.form.value.nomeEmpresa;\r\n    }\r\n    if (this.form.value.nomeEscritorio) {\r\n      params.nomeEscritorio = this.form.value.nomeEscritorio;\r\n    }\r\n\r\n    if (this.form.value.dataVencimentoInicial) {\r\n      params.dataVencimentoInicial = this.dateService.convertToUrlDate(\r\n        this.form.value.dataVencimentoInicial\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataVencimentoFinal) {\r\n      params.dataVencimentoFinal = this.dateService.convertToUrlDate(\r\n        this.form.value.dataVencimentoFinal\r\n      );\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.controleLinhasService\r\n      .getListaLinhas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(linha: ControleLinha): string {\r\n    let borderClass: string;\r\n\r\n    if (linha.codSituacao == 1) {\r\n      borderClass = 'border-success';\r\n    } else if (linha.codSituacao == 7) {\r\n      borderClass = 'border-danger';\r\n    } else if ((linha.codSituacao /= 7)) {\r\n      borderClass = 'border-warning';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(linha: ControleLinha): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.linhaSelecionado = linha;\r\n    this.setLinhaSelecionado();\r\n    this.detailPanelService.loadedFinished(false);\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n    }, 500);\r\n  }\r\n\r\n  onEdit(linha: ControleLinha): void {\r\n    this.router.navigate(['../editar', linha.matricula], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onTermo(linha: ControleLinha): void {\r\n    this.router.navigate(['../termo', linha.matricula], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onDelete(linha: ControleLinha): void {\r\n    this.confirmDelete()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.deleteLinha(linha.matricula) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          setTimeout(() => {\r\n            this.onFilter();\r\n          }, 500);\r\n        },\r\n        (error: any) => {\r\n          console.log(error);\r\n          this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteLinha(matricula: number): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    let controleLinha = {\r\n      matricula: matricula,\r\n      status: '0',\r\n    };\r\n\r\n    return this.controleLinhasService.save(controleLinha as ControleLinha);\r\n  }\r\n\r\n  getFuncionariosSituacoes() {\r\n    this.controleLinhasService\r\n      .getFuncionariosSituacoes()\r\n      .pipe(finalize(() => (this.loadingSituacoes = false)))\r\n      .subscribe((response) => {\r\n        this.situacoes = response['data'];\r\n      });\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Controle de Linhas\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onExport()\\\"\\r\\n    [disabled]=\\\"!dadosPagination.length > 0\\\"\\r\\n    *ngIf=\\\"!dadosEmpty\\\">\\r\\n    Exportar\\r\\n  </button>\\r\\n\\r\\n  <!-- <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button> -->\\r\\n  \\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"numLinha\\\">Número da Linha</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"numLinha\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"nomeUsuario\\\">Usuário</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeUsuario\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"nomeEmpresa\\\">Empresa</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeEmpresa\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"nomeEscritorio\\\">Escritório</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeEscritorio\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"descricao\\\">Modelo do Aparelho</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"descricao\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"numContrato\\\">Núm. contrato</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"numContrato\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataVencimentoInicial\\\">Data inicial</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataVencimentoInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataVencimentoInicial\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dataVencimentoFinal\\\">Data final</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataVencimentoFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataVencimentoFinal\\\"\\r\\n              >\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"comparaData()\\\"\\r\\n                message=\\\"Data final deve ser maior que data inicial\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"dsSituacao\\\">Situação</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"situacoes\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                [loading]=\\\"loadingSituacoes\\\"\\r\\n                labelForId=\\\"dsSituacao\\\"\\r\\n                bindLabel=\\\"dsSituacao\\\"\\r\\n                bindValue=\\\"codSituacao\\\"\\r\\n                id=\\\"dsSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Número da linha</th>\\r\\n            <th scope=\\\"col\\\">Usuário</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">Plano</th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">Gestor</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let linha of dadosPagination\\\" [class.table-active]=\\\"linha.codLinha == linhaSelecionado.codLinha && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(linha)\\\"\\r\\n              (click)=\\\"onDetails(linha)\\\">\\r\\n              {{ linha.numLinha }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(linha)\\\">\\r\\n              {{ linha.nomeUsuario | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(linha)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ linha.plano | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(linha)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              {{ linha.gestorFun | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Excluir\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDelete(linha)\\\">\\r\\n                  <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(linha)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\" Gerar Termo\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onTermo(linha)\\\">\\r\\n                  <i class=\\\"text-warning fas fa-file mr-3\\\" *ngIf= \\\"linha.qtDocumentos > 0\\\"  placement=\\\"right\\\"></i>\\r\\n                  <i class=\\\"text-black fas fa-file mr-3\\\" *ngIf=\\\"linha.qtDocumentos == 0\\\"  placement=\\\"right\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel>\\r\\n        <div id=\\\"impressao\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Nome</label>\\r\\n              <div>{{ linhaSelecionado.nomeUsuario | uppercase}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Número da Linha</label>\\r\\n              <div>{{ linhaSelecionado.numLinha }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Empresa</label>\\r\\n              <div>{{ linhaSelecionado.nomeEmpresa | uppercase}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Escritório</label>\\r\\n              <div>{{ linhaSelecionado.nomeEscritorio | uppercase}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Modelo do Aparelho</label>\\r\\n              <div>{{ linhaSelecionado.descricao | uppercase }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Valor</label>\\r\\n              <div>{{ linhaSelecionado.valor  | currency:'BRL' }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Nº Contrato</label>\\r\\n              <div>{{ linhaSelecionado.numContrato }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Data de Vencimento do Contrato</label>\\r\\n              <div>{{ linhaSelecionado.dataVencimentoContrato | date: 'dd/MM/yyyy' }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Plano</label>\\r\\n              <div>{{ linhaSelecionado.plano | uppercase}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Dados</label>\\r\\n              <div>{{ linhaSelecionado.dados | uppercase }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Número da Conta</label>\\r\\n              <div>{{ linhaSelecionado.numConta }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Cód. Chip</label>\\r\\n              <div>{{ linhaSelecionado.codChip }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Situação</label>\\r\\n              <div>{{ linhaSelecionado.dsSituacao | uppercase }}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Gestor Responsável</label>\\r\\n              <div>{{ linhaSelecionado.gestorFun | uppercase}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Conta</label>\\r\\n              <div>{{ linhaSelecionado.conta}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label>Senha</label>\\r\\n              <div>{{ linhaSelecionado.senha}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { TecnologiaInformacaoControleLinhaService } from '../controle-linhas.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TecnologiaInformacaoControleLinhaFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private controleLinhasService: TecnologiaInformacaoControleLinhaService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.controleLinhasService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codLinha: null,\r\n        codPatrimonio: null,\r\n        descricao: null,\r\n        codEscritorio: null,\r\n        nomeEscritorio: null,\r\n        codEmpresa: null,\r\n        nomeEmpresa: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n        valor: null,\r\n        numContrato: null,\r\n        dataVencimentoContrato: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ComercialGestaoAssociacioesCoordenadoresEscritoriosModule } from './../../comercial/gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.module';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { GenericService } from 'src/app/shared/services/requests/generic.service';\r\n\r\n// Interfaces\r\nimport { ControleLinha } from './models/controle-linha';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TecnologiaInformacaoControleLinhaService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/tecnologia-informacao/controle-linhas`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private genericService: GenericService\r\n  ) {}\r\n\r\n  getFormFields(): Observable<any> {\r\n    const empresas = this.genericService.getEmpresas();\r\n    const escritorios = this.genericService.getEscritorios();\r\n\r\n    return forkJoin([empresas, escritorios]).pipe(take(1));\r\n  }\r\n\r\n  getListaLinhas(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codLinha: number): Observable<any> {\r\n    return this.http.get(`${this.API}/detalhes/${codLinha}`).pipe(take(1));\r\n  }\r\n\r\n  private saveLinha(controleLinha: ControleLinha) {\r\n    return this.http.post(`${this.API}/salvar`, controleLinha).pipe(take(1));\r\n  }\r\n\r\n  private updateLinha(controleLinha: ControleLinha) {\r\n    return this.http.put(`${this.API}/atualizar`, controleLinha).pipe(take(1));\r\n  }\r\n  getContadores() {\r\n    return this.http.get(`${this.API}/contadores`).pipe(take(1));\r\n  }\r\n  getStatus() {\r\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1));\r\n  }\r\n  save(controleLinha: ControleLinha): Observable<any> {\r\n    if (controleLinha.codLinha !== null) {\r\n      return this.updateLinha(controleLinha);\r\n    }\r\n\r\n    return this.saveLinha(controleLinha);\r\n  }\r\n  postDocument(document, codLinha) {\r\n    return this.http.post(\r\n      `${this.API}/documento?codLinha=${codLinha}`,\r\n      document\r\n    );\r\n  }\r\n\r\n  getTermos(matricula: number): Observable<any> {\r\n    return this.http.get(`${this.API}/termo/${matricula}`).pipe(take(1));\r\n  }\r\n\r\n  getFuncionariosSituacoes() {\r\n    return this.http.get(`${this.API}/funcionarios/situacoes`).pipe(take(1));\r\n  }\r\n  deleteLinha(codLinha: number): Observable<any> {\r\n    return this.http.delete(`${this.API}/excluir/${codLinha}`).pipe(take(1));\r\n  }\r\n\r\n  getDocumentos(params) {\r\n    return this.http.get(`${this.API}/documentos`, {\r\n      params: params,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  putDocumento(params) {\r\n    return this.http.put(`${this.API}/documento`, params, {\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { DateService } from './../../../../shared/services/core/date.service';\r\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\r\nimport { TecnologiaInformacaoControleLinhaService } from './../controle-linhas.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { PdfService } from './../../../../shared/services/core/pdf.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { ControleLinha } from '../models/controle-linha';\r\n\r\n@Component({\r\n  selector: 'termo-responsabilidade',\r\n  templateUrl: './termo-responsabilidade.component.html',\r\n  styleUrls: ['./termo-responsabilidade.component.scss']\r\n})\r\nexport class TecnologiaInformacaoControleLinhaTermoResponsabilidadeComponent\r\n  implements OnInit {\r\n  constructor(\r\n    private pdfService: PdfService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private location: Location,\r\n    private router: Router,\r\n    private pnotifyService: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private dateService: DateService,\r\n    private controleLinhasService: TecnologiaInformacaoControleLinhaService\r\n  ) {}\r\n\r\n  public MASKS = MASKS;\r\n\r\n  loaderNavbar: boolean = false;\r\n  tipoVisao: string = 'formulario';\r\n  breadCrumbTree: Array<any> = [];\r\n  appTitle: string;\r\n  bairroEmpresa: Array<ControleLinha> = [];\r\n  form: FormGroup;\r\n  nomeUsuario: string;\r\n  dataFicha: any = [];\r\n  formChanged: boolean = false;\r\n  loaderFullScreen = true;\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n    this.getTermos();\r\n  }\r\n\r\n  onInput() {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate() {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/tecnologia-informacao/home'\r\n      },\r\n      {\r\n        descricao: 'Controle de Linhas',\r\n        routerLink: `/tecnologia-informacao/controle-linhas/lista`\r\n      },\r\n      {\r\n        descricao: 'Termo de Responsabilidade'\r\n      }\r\n    ];\r\n  }\r\n\r\n  get objetos() {\r\n    return this.form.get('objetos') as FormArray;\r\n  }\r\n\r\n  onAddObjeto() {\r\n    this.objetos.push(\r\n      this.formBuilder.group({\r\n        descricaoObj: [null, [Validators.required]],\r\n        quantidadeObj: [null, [Validators.required]],\r\n        valorObj: [null, [Validators.required]]\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteObjeto(index: number) {\r\n    if (this.objetos.length > 1) {\r\n      this.objetos.removeAt(index);\r\n    } else {\r\n      this.pnotifyService.notice('Informe ao menos um Objeto.');\r\n    }\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: ControleLinha = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codLinha: [\r\n          { value: detalhes['codLinha'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        cnpjEmpresa: [\r\n          { value: detalhes['cnpjEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        endEmpresa: [\r\n          { value: detalhes['endEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        bairroEmpresa: [\r\n          { value: detalhes['bairroEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        cidEmpresa: [\r\n          { value: detalhes['cidEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        estEmpresa: [\r\n          { value: detalhes['estEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        nomeEmpresa: [\r\n          { value: detalhes['nomeEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        codEmpresa: [\r\n          { value: detalhes['codEmpresa'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        nomeUsuario: [\r\n          { value: detalhes['nomeUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        rgUsuario: [\r\n          { value: detalhes['rgUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        cpfUsuario: [\r\n          { value: detalhes['cpfUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        endUsuario: [\r\n          { value: detalhes['endUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        bairroUsuario: [\r\n          { value: detalhes['bairroUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        cidUsuario: [\r\n          { value: detalhes['cidUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        estUsuario: [\r\n          { value: detalhes['estUsuario'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n\r\n        objetos: this.formBuilder.array([])\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.setFormObjetos();\r\n  }\r\n  setFormObjetos() {\r\n    this.onAddObjeto();\r\n  }\r\n\r\n  onSubmit() {\r\n    let dataHoje = new Date();\r\n    let dataHojeC = this.dateService.getFullDate(dataHoje, null, false);\r\n\r\n    if (this.form.valid) {\r\n      this.loaderNavbar = true;\r\n      setTimeout(() => {\r\n        const formData = this.form.getRawValue();\r\n\r\n        this.tipoVisao = 'ficha';\r\n        this.dataFicha = {\r\n          nomeEmpresa: formData['nomeEmpresa'],\r\n          cnpjEmpresa: formData['cnpjEmpresa'],\r\n          endEmpresa: formData['endEmpresa'],\r\n          bairroEmpresa: formData['bairroEmpresa'],\r\n          cidEmpresa: formData['cidEmpresa'],\r\n          estEmpresa: formData['estEmpresa'],\r\n          nomeUsuario: formData['nomeUsuario'],\r\n          cpfUsuario: formData['cpfUsuario'],\r\n          rgUsuario: formData['rgUsuario'],\r\n          endUsuario: formData['endUsuario'],\r\n          bairroUsuario: formData['bairroUsuario'],\r\n          cidUsuario: formData['cidUsuario'],\r\n          estUsuario: formData['estUsuario'],\r\n          objetos: formData['objetos'],\r\n          dataHoje: [dataHojeC]\r\n        };\r\n\r\n        this.formChanged = false;\r\n        this.loaderNavbar = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    this.pdfService.download(\r\n      'termo-responsabilidade',\r\n      `termo-responsabilidade`\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.loaderNavbar = false;\r\n    }, 500);\r\n  }\r\n\r\n  onCancel() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.tipoVisao = 'formulario';\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onNestedFieldError(formGroup: string, index: number, field: string) {\r\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n    field = nestedForm.controls[index].get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n    let nestedForm: any = this.form.controls[formGroup];\r\n\r\n    if (nestedForm.controls[index].get(field).validator) {\r\n      let validationResult = nestedForm.controls[index]\r\n        .get(field)\r\n        .validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  getTermos() {\r\n    this.activatedRoute.params.subscribe(response => {\r\n      const matricula = response['id'];\r\n      this.controleLinhasService.getTermos(matricula).subscribe(\r\n        (response: any) => {\r\n          this.form.patchValue(response['data']);\r\n        },\r\n        (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label for=\\\"nomeUsuario\\\">Usuário</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeUsuario\\\"\\r\\n              formControlName=\\\"nomeUsuario\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeUsuario') + ' ' + onFieldRequired(form.controls.nomeUsuario)\\\"\\r\\n              >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeUsuario')\\\" message=\\\"Usuário é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"nomeEmpresa\\\">Empresa</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEmpresa\\\"\\r\\n              formControlName=\\\"nomeEmpresa\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeEmpresa') + ' ' + onFieldRequired(form.controls.nomeEmpresa)\\\"\\r\\n              >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"nomeEscritorio\\\">Escritório</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeEscritorio\\\"\\r\\n              formControlName=\\\"nomeEscritorio\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeEscritorio') + ' ' + onFieldRequired(form.controls.nomeEscritorio)\\\" \\r\\n              >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeEscritorio')\\\" message=\\\"Escritório é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"numLinha\\\">Número da Linha</label>\\r\\n            <input\\r\\n            telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numLinha\\\"\\r\\n              formControlName=\\\"numLinha\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('numLinha') + ' ' + onFieldRequired(form.controls.numLinha)\\\" >\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('numLinha')\\\" message=\\\"Numero da Linha é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dsSituacao\\\">Situação</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"true\\\"\\r\\n              [items]=\\\"situacoes\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              [loading]=\\\"loadingSituacoes\\\"\\r\\n              labelForId=\\\"dsSituacao\\\"\\r\\n              bindLabel=\\\"dsSituacao\\\"\\r\\n              bindValue=\\\"dsSituacao\\\"\\r\\n              id=\\\"dsSituacao\\\"\\r\\n              formControlName=\\\"dsSituacao\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"descricao\\\">Modelo do Aparelho</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"descricao\\\"\\r\\n              formControlName=\\\"descricao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('descricao') + ' ' + onFieldRequired(form.controls.descricao)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"gestorFun\\\">Gestor Responsável</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"gestorFun\\\"\\r\\n              formControlName=\\\"gestorFun\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('gestorFun') + ' ' + onFieldRequired(form.controls.gestorFun)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('gestorFun')\\\" message=\\\"Gestor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"plano\\\">Plano</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"plano\\\"\\r\\n              formControlName=\\\"plano\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('plano') + ' ' + onFieldRequired(form.controls.plano)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('plano')\\\" message=\\\"Plano é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dados\\\">Dados</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dados\\\"\\r\\n              formControlName=\\\"dados\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('dados') + ' ' + onFieldRequired(form.controls.dados)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dados')\\\" message=\\\"Dados é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"numConta\\\">Nº Conta</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numConta\\\"\\r\\n              formControlName=\\\"numConta\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('numConta') + ' ' + onFieldRequired(form.controls.numConta)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('numConta')\\\" message=\\\"Nº Conta é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codChip\\\">Cód Chip</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codChip\\\"\\r\\n              formControlName=\\\"codChip\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              pattern=\\\"[0-9]+$\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('codChip') + ' ' + onFieldRequired(form.controls.codChip)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codChip')\\\" message=\\\"Cód CHIP é obrigatório com 20 números \\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"numContrato\\\">Núm. contrato</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"numContrato\\\"\\r\\n              formControlName=\\\"numContrato\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('numContrato') + ' ' + onFieldRequired(form.controls.numContrato)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('numContrato')\\\" message=\\\"Número do contrato é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataVencimentoContrato\\\">Vencimento Contrato</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataVencimentoContrato\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataVencimentoContrato\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataVencimentoContrato') + ' ' + onFieldRequired(form.controls.dataVencimentoContrato)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataVencimentoContrato')\\\" message=\\\"Vencimento é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"conta\\\">Conta Gmail</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"conta\\\"\\r\\n              formControlName=\\\"conta\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('conta') + ' ' + onFieldRequired(form.controls.conta)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('conta')\\\" message=\\\"Conta é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"senha\\\">Senha Gmail</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"senha\\\"\\r\\n              formControlName=\\\"senha\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('senha') + ' ' + onFieldRequired(form.controls.senha)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('senha')\\\" message=\\\"Senha é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"valor\\\">Valor</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"valor\\\"\\r\\n              formControlName=\\\"valor\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n              [ngClass]=\\\"onFieldError('valor') + ' ' + onFieldRequired(form.controls.valor)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('valor')\\\" message=\\\"Valor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <div lass=\\\"form-group\\\">\\r\\n              <label for=\\\"documento\\\">Documento</label>\\r\\n              <input\\r\\n                id=\\\"documento\\\"\\r\\n                type=\\\"file\\\"\\r\\n                (change)=\\\"onFile($event.target.files)\\\"\\r\\n                >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div><br>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <div class=\\\"mtc-title\\\">Anexos</div>\\r\\n            <ul >\\r\\n              <li *ngFor=\\\"let item of documentos\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <div>\\r\\n                    <i class=\\\"far fa-file-pdf text-danger\\\"></i><strong class=\\\"ml-2\\\">{{ item.nomeDocumento }}</strong>\\r\\n                  </div>\\r\\n                  <div class=\\\"ml-4\\\">\\r\\n                    <a href=\\\"{{ item.link }}\\\" target=\\\"_blank\\\" class=\\\"btn-icon-sm\\\">\\r\\n                      <i class=\\\"fas fa-eye\\\"></i>\\r\\n                    </a>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-icon-sm ml-4\\\" (click)=\\\"onDelete(item)\\\">\\r\\n                      <i class=\\\"fas fa-trash\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div><hr></div>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { TecnologiaInformacaoControleLinhaTermoResponsabilidadeResolverGuard } from './termo-responsabilidade/termo-responsabilidade-resolver.guard';\r\nimport { TecnologiaInformacaoControleLinhaTermoResponsabilidadeComponent } from './termo-responsabilidade/termo-responsabilidade.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { TecnologiaInformacaoControleLinhaFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoControleLinhaListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoControleLinhaFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: TecnologiaInformacaoControleLinhaListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: TecnologiaInformacaoControleLinhaFormularioComponent,\r\n    resolve: {\r\n      detalhes: TecnologiaInformacaoControleLinhaFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: TecnologiaInformacaoControleLinhaFormularioComponent,\r\n    resolve: {\r\n      detalhes: TecnologiaInformacaoControleLinhaFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'termo/:id',\r\n    component: TecnologiaInformacaoControleLinhaTermoResponsabilidadeComponent,\r\n    resolve: {\r\n      detalhes: TecnologiaInformacaoControleLinhaTermoResponsabilidadeResolverGuard\r\n    }\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TecnologiaInformacaoControleLinhaRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Termo de Responsabilidade\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'formulario'\\\"\\r\\n    [disabled]=\\\"!form.valid\\\"\\r\\n    (click)=\\\"onSubmit()\\\">\\r\\n    Gerar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onCancel()\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    *ngIf=\\\"tipoVisao == 'ficha'\\\"\\r\\n    (click)=\\\"onDownload()\\\">\\r\\n    Download\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"tipoVisao == 'formulario'\\\">\\r\\n    <div class=\\\"col-6\\\" >\\r\\n      <h1>Termo de Responsabilidade</h1>\\r\\n      <form  [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Dados da Empresa</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"nomeEmpresa\\\">Nome</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nomeEmpresa\\\"\\r\\n            formControlName=\\\"nomeEmpresa\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"cnpjEmpresa\\\">CNPJ </label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cnpjEmpresa\\\"\\r\\n            formControlName=\\\"cnpjEmpresa\\\"\\r\\n            cnpj [textMask]=\\\"{ mask: MASKS.cnpj.textMask }\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"endEmpresa\\\">Endereço</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"endEmpresa\\\"\\r\\n            formControlName=\\\"endEmpresa\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"bairroEmpresa\\\">Bairro</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"bairroEmpresa\\\"\\r\\n            formControlName=\\\"bairroEmpresa\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"cidEmpresa\\\">Cidade</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cidEmpresa\\\"\\r\\n            formControlName=\\\"cidEmpresa\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"estEmpresa\\\">Estado</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"estEmpresa\\\"\\r\\n            formControlName=\\\"estEmpresa\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col mb-0\\\">\\r\\n            <hr class=\\\"mt-0\\\">\\r\\n            <div class=\\\"mtc-title\\\">Dados do Funcionario</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeUsuario\\\">Nome</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nomeUsuario\\\"\\r\\n            formControlName=\\\"nomeUsuario\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"cpfUsuario\\\">CPF</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cpfUsuario\\\"\\r\\n            formControlName=\\\"cpfUsuario\\\"\\r\\n            cpf [textMask]=\\\"{ mask: MASKS.cpf.textMask }\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"rgUsuario\\\">RG</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"rgUsuario\\\"\\r\\n            formControlName=\\\"rgUsuario\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"endUsuario\\\">Endereço</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"endUsuario\\\"\\r\\n            formControlName=\\\"endUsuario\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"bairroUsuario\\\">Bairro</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"bairroUsuario\\\"\\r\\n            formControlName=\\\"bairroUsuario\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"cidUsuario\\\">Cidade</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"cidUsuario\\\"\\r\\n            formControlName=\\\"cidUsuario\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"estUsuario\\\">Estado</label>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"estUsuario\\\"\\r\\n            formControlName=\\\"estUsuario\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"objetos\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <hr class=\\\"mt-0\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\r\\n              <div class=\\\"mtc-title\\\">Equipamentos/Linhas</div>\\r\\n              <div>\\r\\n                <a\\r\\n                  class=\\\"text-secondary\\\"\\r\\n                  (click)=\\\"onAddObjeto()\\\"\\r\\n                  href=\\\"javascript:void(0)\\\">\\r\\n                  <b>Adicionar</b>\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\"  *ngFor=\\\"let item of objetos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-6\\\">\\r\\n                  <label for=\\\"descricaoObj\\\">Descrição</label>\\r\\n                  <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"descricaoObj\\\"\\r\\n                  formControlName=\\\"descricaoObj\\\"\\r\\n                  (input)=\\\"onInput()\\\"\\r\\n                  [ngClass]=\\\"onNestedFieldError('objetos', i, 'descricaoObj') + ' ' + onNestedFieldRequired('objetos', i, 'descricaoObj')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-2\\\">\\r\\n                  <label for=\\\"quantidadeObj\\\">Quantidade</label>\\r\\n                  <input\\r\\n                    type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"quantidadeObj\\\"\\r\\n                    formControlName=\\\"quantidadeObj\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('objetos', i, 'quantidadeObj') + ' ' + onNestedFieldRequired('objetos', i, 'quantidadeObj')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-3\\\">\\r\\n                  <label for=\\\"valorObj\\\">Valor</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"valorObj\\\"\\r\\n                    formControlName=\\\"valorObj\\\"\\r\\n                    currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',' }\\\"\\r\\n                    (input)=\\\"onInput()\\\"\\r\\n                    [ngClass]=\\\"onNestedFieldError('objetos', i, 'valorObj') + ' ' + onNestedFieldRequired('objetos', i, 'valorObj')\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-1 pt-4 mt-1 d-flex justify-content-center\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon\\\"\\r\\n                    (click)=\\\"onDeleteObjeto(i)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row justify-content-center pt-5 uk-margin-top\\\" id=\\\"termo-responsabilidade\\\" *ngIf=\\\"tipoVisao == 'ficha'\\\" >\\r\\n    <div class=\\\" row justify-content-center col-10 \\\">\\r\\n      <h1 >TERMO DE RESPONSABILIDADE</h1><br>\\r\\n      <div>\\r\\n        <div class=\\\" mt-5 pt-5\\\">\\r\\n          Pelo presente instrumento particular e na melhor forma de direito, \\r\\n          as partes a seguir qualificadas de um lado, a empresa {{dataFicha.nomeEmpresa | uppercase}} \\r\\n          inscrita no CNPJ/MF sob. Nº {{dataFicha.cnpjEmpresa | cnpj }}, com sede social na, {{dataFicha.endEmpresa | uppercase }},\\r\\n          bairro {{dataFicha.bairroEmpresa | uppercase}}, na cidade de {{dataFicha.cidEmpresa | uppercase}}, Estado de São Paulo, neste ato, representada pelo seu responsável\\r\\n          legal, doravante, designada COMODANTE e de outro lado, {{dataFicha.nomeUsuario | uppercase}} , portador do CPF nº {{dataFicha.cpfUsuario}} e do\\r\\n          RG nº {{dataFicha.rgUsuario}} residente e domiciliado na {{dataFicha.endUsuario | uppercase}} , {{dataFicha.bairroUsuario | uppercase}} na \\r\\n          cidade de, {{dataFicha.cidUsuario | uppercase}} no Estado de {{dataFicha.estUsuario | uppercase}}, designado COMODATÁRIO, decidem celebrar o \\r\\n          presente CONTRATO DE COMODATO DE EQUIPAMENTO, comprometendo-se cada uma das partes perante a outra a cumprir\\r\\n          por si e seus sucessores e herdeiros as seguintes cláusulas e condições\\r\\n        </div><br>\\r\\n        <div>\\r\\n          1. DO OBJETO.\\r\\n        </div><br>\\r\\n        <div>\\r\\n          1.1  O presente contrato tem com objeto, a teor dos artigos 579 e seguintes do Código Civil\\r\\n          Brasileiro, o comodato do equipamento abaixo discriminado, que a COMODANTE cede ao COMODATÁRIO de forma gratuita, a saber: \\r\\n        </div><br>\\r\\n        <div>\\r\\n          <div *ngIf=\\\"dataFicha.objetos.length == 0\\\">NÃO INFORMADO</div>\\r\\n          <div *ngIf=\\\"dataFicha.objetos.length > 0\\\">\\r\\n            <div class=\\\"row mt-2 col-10\\\" *ngFor=\\\"let item of dataFicha.objetos\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <p class=\\\"mt-2 mb-0\\\">\\r\\n                  <strong class=\\\"mr-2\\\">Descrição:</strong>\\r\\n                  <span *ngIf=\\\"item.descricaoObj == null\\\">NÃO INFORMADO</span>\\r\\n                  <span *ngIf=\\\"item.descricaoObj != null\\\">{{ item.descricaoObj | uppercase }}</span>\\r\\n                </p>\\r\\n              </div>\\r\\n              <div class=\\\"col-3\\\">\\r\\n                <p class=\\\"mt-2 mb-2\\\">\\r\\n                  <strong class=\\\"mr-2\\\">Quantidade:</strong>\\r\\n                  <span *ngIf=\\\"item.quantidadeObj == null\\\">NÃO INFORMADO</span>\\r\\n                  <span *ngIf=\\\"item.quantidadeObj != null\\\">{{ item.quantidadeObj }}</span>\\r\\n                </p>\\r\\n              </div>\\r\\n              <div class=\\\"col-3\\\">\\r\\n                <p class=\\\"mt-2 mb-2\\\">\\r\\n                  <strong class=\\\"mr-2\\\">Valor:</strong>\\r\\n                  <span *ngIf=\\\"item.valorObj == null\\\">NÃO INFORMADO</span>\\r\\n                  <span *ngIf=\\\"item.valorObj != null\\\">{{ item.valorObj | currency:'BRL':'symbol':'1.2-2'}}</span>\\r\\n                </p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr width = “2” size = “100”>\\r\\n          </div>\\r\\n        </div><br>\\r\\n        <div>\\r\\n          1.2  O COMODATÁRIO declara, neste ato, ter recebido o equipamento acima\\r\\n          descrito em perfeito estado de funcionamento (novo), conservação e limpeza, obrigando-se, \\r\\n          assim, a conservá-lo e restituí-lo, ao término deste comodato, conforme disposto neste contrato.\\r\\n        </div><br>\\r\\n        <div>\\r\\n          1.3  A finalidade do presente comodato é a utilização do equipamento pelo COMODATÁRIO com \\r\\n          vistas a ser utilizado no desempenho das atividades previstas no cargo ocupado por este.\\r\\n        </div><br>\\r\\n        <div>\\r\\n          2. DA MANUTENÇÃO E PROTEÇÃO DO EQUIPAMENTO\\r\\n        </div><br>\\r\\n        <div>\\r\\n          2.1  O COMODATÁRIO será responsável pela guarda, uso e manutenção do equipamento, não \\r\\n          podendo vendê-lo, aliená-lo, alugá-lo ou emprestá-lo a terceiros, devendo comunicar \\r\\n          imediatamente a COMODANTE sobre eventuais necessidades de reparo que observar. \\r\\n        </div><br>\\r\\n        <div>\\r\\n          2.2  Nenhum outro destino será dado ao equipamento, a não ser aquele ora pactuado,\\r\\n           qual seja, o desempenho das atividades profissionais junto a COMODANTE.\\r\\n        </div><br>\\r\\n        <div>\\r\\n          2.3  O COMODATÁRIO obriga-se a manter o equipamento em perfeito estado de funcionamento,\\r\\n          conservação e limpeza, para que assim seja restituído quando findo ou rescindido este\\r\\n          contrato, sem direito à indenização e/ou retenção do mesmo.\\r\\n        </div><br>\\r\\n        <div>\\r\\n          3. Dentre as outras obrigações consignadas neste instrumento, obriga-se o COMODATÁRIO \\r\\n          especificamente a:\\r\\n        </div><br>\\r\\n        <div>\\r\\n          (a) restituir o equipamento, quando for o caso, nas mesmas condições que o mesmo se \\r\\n          encontrava quando do início do contrato;\\r\\n        </div><br>\\r\\n        <div>\\r\\n          (b) não ceder, locar ou emprestar o equipamento, sem autorização prévia e por escrito\\r\\n           da COMODANTE, sob pena de rescisão imediata do presente contrato;\\r\\n        </div><br>\\r\\n        <div>\\r\\n          (c) responsabilizar-se perante a COMODANTE, na hipótese de destruição, incêndio, ou de \\r\\n          qualquer outro fato ou evento que, por qualquer forma, impossibilite, prejudique ou \\r\\n          dificulte o exercício pleno da posse e propriedade sobre os bens, desde que decorrentes \\r\\n          de ato culposo ou doloso. \\r\\n        </div><br>\\r\\n        <div>\\r\\n          Parágrafo Primeiro - Diante do previsto no item (c), o COMODATÁRIO, desde já, autoriza \\r\\n          a COMODANTE a efetuar descontos em seus salários ou rescisão contratual relativos aos \\r\\n          prejuízos em valor correspondente ao integral previsto na clausula 1.1 ou valor \\r\\n          equivalente a manutenção ou reparo do dano. \\r\\n        </div><br>\\r\\n        <div>\\r\\n          4. DO PRAZO DE RESCISÃO\\r\\n        </div><br>\\r\\n        <div>\\r\\n          4.1  O presente contrato entrará em vigor a partir da entrega efetiva do equipamento ao \\r\\n          COMODATÁRIO e vigorará pelo período necessário ao desenvolvimento das atividades \\r\\n          previstas no cargo ocupado por este. \\r\\n        </div><br>\\r\\n        <div>\\r\\n          4.2  O presente contrato poderá ser rescindido nas seguintes hipóteses:\\r\\n        </div><br>\\r\\n        <div>\\r\\n          (a) término do vínculo empregatício;\\r\\n        </div><br>\\r\\n        <div>\\r\\n          (b) alteração de cargo do COMODATÁRIO, em consonância à política adotada pela COMODANTE. \\r\\n        </div><br>\\r\\n        <div>\\r\\n          4.3  Em qualquer das hipóteses previstas no item 4.1, haverá a devolução imediata pelo \\r\\n          COMODATÁRIO do equipamento descrito no item 1.1, no mesmo estado em que o recebeu, \\r\\n          ressalvando o desgaste decorrente do uso normal do mesmo, sob pena de serem aplicados \\r\\n          os descontos relativos aos valores em suas verbas rescisórias ou salariais.\\r\\n        </div><br>\\r\\n        <div>\\r\\n          5. DAS DISPOSIÇÕES GERAIS\\r\\n        </div><br>\\r\\n        <div>\\r\\n          5.1  O COMODATÁRIO não poderá, sem o consentimento prévio e por escrito da COMODANTE, \\r\\n          ceder, transferir ou emprestar a terceiros, no todo ou em parte, os direitos e \\r\\n          obrigações decorrentes do presente contrato, bem como o veículo, objeto deste instrumento. \\r\\n        </div><br>\\r\\n        <div>\\r\\n          5.2  A eventual tolerância das partes na exigência do fiel cumprimento de qualquer \\r\\n          obrigação prevista neste instrumento ou no exercício das prerrogativas dele decorrentes \\r\\n          será considerada mera liberalidade, não implicando em transação, novação, alteração do \\r\\n          pactuado, renúncia aos respectivos termos e condições, nem afetará o direito de à \\r\\n          parte exercê-lo a qualquer tempo, cado a COMODANTE revise o termo acima elaborado, o COMODATÁRIO\\r\\n          deverá assinar desde que esteja em acordo.\\r\\n        </div><br><br>\\r\\n      </div>\\r\\n      <div class=\\\"col-11 d-flex justify-content-end pt-5\\\">  </div>\\r\\n      <div class=\\\"col-11 d-flex justify-content-end pt-5\\\">  </div>\\r\\n      <div class=\\\"col-11 d-flex justify-content-end\\\">{{dataFicha.cidEmpresa | uppercase}}/{{dataFicha.estEmpresa | uppercase}}-{{dataFicha.dataHoje}} </div>\\r\\n      <div class=\\\"col-11 d-flex justify-content-end pt-5\\\">  </div>\\r\\n      <div class=\\\"col-11 d-flex justify-content-end pt-5\\\">_____________________________________________________</div>\\r\\n      <div class=\\\"col-11 d-flex justify-content-end\\\">{{dataFicha.nomeUsuario | uppercase}}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { TecnologiaInformacaoControleLinhaService } from '../controle-linhas.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TecnologiaInformacaoControleLinhaTermoResponsabilidadeResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private controleLinhasService: TecnologiaInformacaoControleLinhaService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.controleLinhasService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codLinha: null,\r\n        codPatrimonio: null,\r\n        descricao: null,\r\n        codEscritorio: null,\r\n        nomeEscritorio: null,\r\n        codEmpresa: null,\r\n        nomeEmpresa: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n        valor: null,\r\n        objetos: null,\r\n        numContrato: null,\r\n        dataVencimentoContrato: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DateService } from './../../../../shared/services/core/date.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize, switchMap, take } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { utilsBr } from 'js-brasil';\r\n// Services\r\nimport { TecnologiaInformacaoControleLinhaService } from '../controle-linhas.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { ControleLinha } from '../models/controle-linha';\r\nimport { ITenconologiaInformacaoControleLinhasDocumento } from '../models/documento';\r\nimport { EMPTY } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'tecnologia-informacao-controle-linha-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class TecnologiaInformacaoControleLinhaFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = utilsBr.MASKS;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n  loadingSituacoes = false;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  situacoes = [];\r\n  anexosLoaded: boolean = false;\r\n  documentos: Array<ITenconologiaInformacaoControleLinhasDocumento>;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private confirmModalService: ConfirmModalService,\r\n    private dateService: DateService,\r\n    private formBuilder: FormBuilder,\r\n    private controleLinhaService: TecnologiaInformacaoControleLinhaService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar linha';\r\n      } else {\r\n        this.appTitle = 'Novo linha';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/tecnologia-informacao/home',\r\n        },\r\n        {\r\n          descricao: 'Controle de linhas',\r\n          routerLink: `/tecnologia-informacao/controle-linhas`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: ControleLinha = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      const data: Date =\r\n        detalhes.dataVencimentoContrato === null\r\n          ? new Date()\r\n          : new Date(detalhes.dataVencimentoContrato);\r\n\r\n      this.form = this.formBuilder.group({\r\n        codLinha: [{ value: detalhes['codLinha'], disabled: false }],\r\n        matricula: [{ value: detalhes['matricula'], disabled: false }],\r\n        numLinha: [\r\n          { value: detalhes['numLinha'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        descricao: [\r\n          { value: detalhes['descricao'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        nomeUsuario: [\r\n          { value: detalhes['nomeUsuario'], disabled: true },\r\n          [Validators.required],\r\n        ],\r\n        codEscritorio: [{ value: detalhes['codEscritorio'], disabled: true }],\r\n        nomeEscritorio: [\r\n          { value: detalhes['nomeEscritorio'], disabled: true },\r\n          [Validators.required],\r\n        ],\r\n        codEmpresa: [{ value: detalhes['codEmpresa'], disabled: true }],\r\n        nomeEmpresa: [\r\n          { value: detalhes['nomeEmpresa'], disabled: true },\r\n          [Validators.required],\r\n        ],\r\n        dsSituacao: [\r\n          { value: detalhes['dsSituacao'], disabled: true },\r\n          [Validators.required],\r\n        ],\r\n        codSituacao: [\r\n          { value: detalhes['codSituacao'], disabled: true },\r\n          [Validators.required],\r\n        ],\r\n        valor: [\r\n          { value: detalhes['valor'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        numContrato: [\r\n          { value: detalhes['numContrato'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        dataVencimentoContrato: [\r\n          {\r\n            value: detalhes['dataVencimentoContrato']\r\n              ? this.dateService.convertStringToDate(\r\n                  detalhes['dataVencimentoContrato'],\r\n                  'usa'\r\n                )\r\n              : null,\r\n            disabled: false,\r\n          },\r\n          [Validators.required],\r\n        ],\r\n        plano: [\r\n          { value: detalhes['plano'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        gestorFun: [\r\n          { value: detalhes['gestorFun'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        dados: [\r\n          { value: detalhes['dados'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        conta: [\r\n          { value: detalhes['conta'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        codChip: [\r\n          { value: detalhes['codChip'], disabled: false },\r\n          [\r\n            Validators.required,\r\n            Validators.maxLength(20),\r\n            Validators.minLength(20),\r\n          ],\r\n        ],\r\n        numConta: [\r\n          { value: detalhes['numConta'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n        senha: [\r\n          { value: detalhes['senha'], disabled: false },\r\n          [Validators.required],\r\n        ],\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.getDocumentos();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.controleLinhaService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe(\r\n            (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  getFuncionariosSituacoes() {\r\n    this.controleLinhaService\r\n      .getFuncionariosSituacoes()\r\n      .pipe(finalize(() => (this.loadingSituacoes = false)))\r\n      .subscribe((response) => {\r\n        this.situacoes = response['data'];\r\n      });\r\n  }\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  //UPLOAD DE ARQUIVOS\r\n  onFile(files) {\r\n    if (files.length === 0) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n\r\n    const codLinha = this.form.get('codLinha').value;\r\n\r\n    this.controleLinhaService\r\n      .postDocument(formData, codLinha)\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  getDocumentos() {\r\n    if (!this.form.get('codLinha').value) return;\r\n\r\n    this.controleLinhaService\r\n      .getDocumentos({\r\n        codLinha: this.form.get('codLinha').value,\r\n      })\r\n      .subscribe((response) => {\r\n        this.documentos = response.body['data'];\r\n        console.log(this.documentos);\r\n      });\r\n  }\r\n\r\n  onDelete(documento: any) {\r\n    let confirm$ = this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do anexo?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n\r\n    confirm$\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.putDocumento(documento.idDocumento) : EMPTY\r\n        )\r\n      )\r\n      .subscribe(\r\n        (success) => {\r\n          this.pnotifyService.success();\r\n          this.documentos = [];\r\n          this.getDocumentos();\r\n        },\r\n        (error) => {\r\n          this.pnotifyService.error('Erro ao excluir anexo. Tente novamente!');\r\n        }\r\n      );\r\n  }\r\n\r\n  putDocumento(idDocumento: number) {\r\n    this.anexosLoaded = false;\r\n    return this.controleLinhaService.putDocumento({\r\n      idDocumento: idDocumento,\r\n      status: '0',\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyb2xlLWxpbmhhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { PipesModule } from './../../../shared/pipes/pipes.module';\r\nimport { TecnologiaInformacaoControleLinhaRoutingModule } from './controle-linhas-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { TecnologiaInformacaoControleLinhaListaComponent } from './lista/lista.component';\r\nimport { TecnologiaInformacaoControleLinhaFormularioComponent } from './formulario/formulario.component';\r\nimport { TecnologiaInformacaoControleLinhaTermoResponsabilidadeComponent } from './termo-responsabilidade/termo-responsabilidade.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TecnologiaInformacaoControleLinhaListaComponent,\r\n    TecnologiaInformacaoControleLinhaFormularioComponent,\r\n    TecnologiaInformacaoControleLinhaTermoResponsabilidadeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    CurrencyMaskModule,\r\n    TecnologiaInformacaoControleLinhaRoutingModule,\r\n    SharedModule,\r\n    PipesModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class TecnologiaInformacaoControleLinhaModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyb2xlLWxpbmhhcy90ZXJtby1yZXNwb25zYWJpbGlkYWRlL3Rlcm1vLXJlc3BvbnNhYmlsaWRhZGUuY29tcG9uZW50LnNjc3MifQ== */\";"]}