{"version":3,"sources":["webpack:///src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.html","webpack:///src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/tabela-precos.module.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.scss","webpack:///src/app/modules/comercial/gestao/tabela-precos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/tabela-precos.service.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.html","webpack:///src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.scss","webpack:///src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.scss","webpack:///src/app/modules/comercial/gestao/tabela-precos/tabela-precos-routing.module.ts","webpack:///src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.scss","webpack:///src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.html","webpack:///src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialGestaoTabelaPrecosFormularioComponent","formBuilder","activatedRoute","dateService","localeService","bsModalService","pnotifyService","confirmModalService","estadosService","location","tabelaPrecosService","router","MASKS","loaderFullScreen","modalValues","breadCrumbTree","formChanged","submittingForm","submitAssocGrupo","submittingFormPrecos","formPrecosIndex","dados","precosEstado","assocPrecos","unidades","editMode","dadosLoaded","dadosEmpty","toggleAll","searching","firstSearch","showGrupos","showMaterial","linhas","classes","tableConfigAssocGrupos","fixedHeader","bodyHeight","hover","tableConfigPrecos","maxSize","itemsPerPage","currentPage","totalItems","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","setFormBuilder","setFormFilter","setFormPrecos","setBreadCrumb","getUnidades","estados","getEstados","val","materiaisAssoc","forEach","element","materiaisAssoc2","i","item","enableEditIndex","valorMaterialAlterado","valorMaterial","params","subscribe","id","appTitle","action","descricao","routerLink","idSubModulo","resolver","snapshot","data","detalhes","form","group","codPreco","nomePreco","required","dataInicialVigencia","convertStringToDate","getToday","dataFinalVigencia","faixaDescontoComercial","faixaDescontoGerencial","assocGrupos","array","setGrupos","error","back","get","setValue","formFilter","grupo","situacao","formPrecos","codAssociacao","codEmpresa","nomeEmpresa","ufDestino","percentual","savePreco","getRawValue","pipe","loaderNavbar","response","hasOwnProperty","success","reset","mensagem","navigateTo","navigate","relativeTo","checkFormValidation","valid","value","length","saveTabelaPrecos","next","notice","isValid","template","index","codGrupo","grupoNome","nomeGrupo","searchValoresGrupo","modalRef","show","getDetailPanel","percent","split","confirmAdd","parseFloat","j","precos","valores","onAddPreco","grupos","onAddGrupo","manipulateForm","source","checkGrupoExists","push","setTimeout","markAsTouched","markAsDirty","some","el","preco","checkPrecosExists","controls","map","precosAux","precoAux","checkValorExists","hide","obj","confirmDelete","undefined","deleteAssociacaoPreco","indexPrecos","indexOf","splice","valorFound","filter","xx","searchEmpresa","precoAssociado","empresaFound","idEmpresa","limparGrupoPrincipal","onInput","codDescricao","codSituacao","dtInicioVigencia","dtFimVigencia","confirmDeleteGrupo","deleteGrupo","confirmCancel","onCancelFormValores","showConfirm","removeAt","deleteAssociacaoGrupo","material","checked","grupoAssociado","search","getGrupos","getEmpresas","responseCode","result","field","onFieldInvalid","errors","touched","formControl","validator","validationResult","dataInicial","dataFinal","patchValue","dataFimVigencia","Date","convertToUrlDate","selector","ComercialGestaoTabelaPrecosModule","declarations","imports","forRoot","providers","ComercialGestaoTabelaPrecoVisaoComercialComponent","service","routerService","materiaisGrupoService","detailPanelService","boolimpar","loading","loadingNavBar","showDetailPanel","materiais","dadosDetalhes","codigoSelecionado","materialSelecionado","orderBy","orderType","tableConfig","subtitleBorder","tabelas","begin","end","onBuildForm","onActiveRoute","onDetailPanelEmitter","getTabelas","getLinhas","$showDetailPanelSubscription","unsubscribe","$activatedRouteSubscription","tabela","codMaterial","nomeMaterial","codLinha","pagina","registros","timestamp","getTime","config","event","showing","queryParams","keys","_response","getBase64UrlParams","console","log","getMateriais","unshift","getFilterValues","codTabela","getMateriaisDetalhes","loadedFinished","_params","_obj","prop","Number","isNaN","parseInt","column","onFilter","setBase64UrlParams","getParams","borderClass","page","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialGestaoTabelaPrecosListaComponent","activateRoute","atividadesService","otherDados","otherDados2","dadosPagination","tabelaPreco","tableConfigMateriais","registrarAcesso","setGrupoSelecionado","activatedRouteSubscription","descTabela","getListaPrecos","slice","info","getDetalhes","element2","element3","detailPanelTitle","onCheckPreco","grupoSelecionado","showDetailPanelSubscription","confirmActivate","asObservable","activateGrupo","refreshMainData","inactivateGrupo","confirmInactive","clone","openModal","startItem","endItem","ComercialGestaoTabelaPrecosFormularioResolverGuard","route","nomeUsuario","dataCadastro","ComercialGestaoTabelaPrecosService","http","comercialService","API","httpParams","param","append","tipo","record","updateGrupo","saveGrupo","post","put","ComercialGestaoTabelaPrecosImportarCsvComponent","rows","empresas","elementsAdded","getTotalItems","getDepositos","idDeposito","codDeposito","nomeDeposito","headers","row","arr","Array","toUpperCase","populateModel","csvContent","e","join","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","fileInput","fileReaded","target","files","filename","name","fileExtension","substring","lastIndexOf","reader","FileReader","readAsText","onload","csvuploaded","toString","allTextLines","tarr","checkLines","last","at","saveDados","loadModal","clearValues","ComercialTabelaPrecoCloneComponent","pnotify","close","formValue","saving","changes","currentValue","setForm","codTabelaClonada","percentualAcrescimo","percentualDesconto","emit","acrescimo","desconto","onClose","disable","enable","routes","path","component","resolve","redirectTo","pathMatch","ComercialGestaoTabelaPrecosRoutingModule","forChild","exports","ComercialTidSoftwareService","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"tabela-precos-tabela-precos-module-es5.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4>Dados da tabela</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <message\\r\\n    *ngIf=\\\"loading\\\"\\r\\n    icon=\\\"fas fa-cog fa-spin\\\"\\r\\n    text=\\\"Carregando dados da tabela...\\\"\\r\\n  >\\r\\n  </message>\\r\\n  <div *ngIf=\\\"!loading\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-12\\\">\\r\\n          <label for=\\\"nomePreco\\\">Descrição da Tabela</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nomePreco\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"nomePreco\\\"\\r\\n            [ngClass]=\\\"onFieldError('nomePreco') + ' ' + onFieldRequired('nomePreco')\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nomePreco')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"dataInicialVigencia\\\">Data Inicio Vigência</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicialVigencia\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"dataInicialVigencia\\\"\\r\\n            bsDatepicker\\r\\n            [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"dataFinalVigencia\\\">Data Fim Vigência</label>\\r\\n          <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataFinalVigencia\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"dataFinalVigencia\\\"\\r\\n          bsDatepicker\\r\\n          [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n          <label for=\\\"percentualAcrescimo\\\">Percentual Acréscimo</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"0,00%\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            formControlName=\\\"percentualAcrescimo\\\"\\r\\n            (ngModelChange)=\\\"onDesativarDesconto()\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n          <label for=\\\"percentualDesconto\\\">Percentual Desconto</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"0,00%\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            formControlName=\\\"percentualDesconto\\\"\\r\\n            (ngModelChange)=\\\"onDesativarAcrescimo()\\\"\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n      <div>\\r\\n        <message\\r\\n          *ngIf=\\\"saving\\\"\\r\\n          icon=\\\"fas fa-cog fa-spin\\\"\\r\\n          text=\\\"Criando a tabela de preço...\\\"\\r\\n        >\\r\\n        </message>\\r\\n      </div>\\r\\n    <button \\r\\n    class=\\\"btn btn-outline-dark\\\" \\r\\n    (click)=\\\"saveTabelaPrecos(getParams())\\\"\\r\\n    >Cadastrar\\r\\n    </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { ComercialGestaoTabelaPrecosService } from './../tabela-precos.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { Component, Input, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormArray,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { assocTabela, precos } from './../models/tabela-precos';\r\n\r\n// Services\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-tabela-precos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialGestaoTabelaPrecosFormularioComponent implements OnInit {\r\n  public MASKS = MASKS;\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n\r\n  modalValues: assocTabela[] = [];\r\n  valorMaterialAlterado: number;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  formFilter: FormGroup;\r\n  formPrecos: FormGroup;\r\n\r\n  formChanged = false;\r\n  submittingForm = false;\r\n  submitAssocGrupo = false;\r\n  submittingFormPrecos = false;\r\n  enableEditIndex: number;\r\n\r\n  formPrecosIndex: number = null;\r\n\r\n  dados: Array<any> = [];\r\n  precosEstado: Array<precos> = [];\r\n  assocPrecos: Array<precos> = [];\r\n  unidades: Array<any> = [];\r\n  editMode: boolean = false;\r\n  codPreco: number;\r\n  codGrupo: number;\r\n  grupoNome: string;\r\n  estados: [];\r\n  materiaisAssoc: Array<any>;\r\n  materiaisAssoc2: Array<any>;\r\n  selection: Array<any>;\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  showGrupos = true;\r\n  showMaterial = false;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparGrupoPrincipal: boolean;\r\n\r\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigPrecos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private localeService: BsLocaleService,\r\n    private bsModalService: BsModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private estadosService: EstadosService,\r\n    private location: Location,\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\r\n    private router: Router\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n    this.setFormFilter();\r\n    this.setFormPrecos();\r\n    this.setBreadCrumb();\r\n    this.getUnidades();\r\n    this.estados = this.estadosService.getEstados();\r\n  }\r\n\r\n  // customSearchFn(term: string, item: any) {\r\n  //   term = term.toUpperCase();\r\n  //   item.nomeMaterial = item.nomeMaterial.toUpperCase();\r\n  //   if(item.nomeMaterial.startsWith(term)) {\r\n  //     return item.nomeMaterial.indexOf(term) > -1;\r\n  //   }\r\n  // }\r\n\r\n  changeFn(val) {\r\n\r\n    this.materiaisAssoc.forEach(element => {\r\n      if (element['codMaterial'] == val) {\r\n        this.showMaterial = true;\r\n        this.materiaisAssoc2 = [element];\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  enableEdition(i, item) {\r\n    this.editMode = true;\r\n    this.enableEditIndex = i;\r\n    this.valorMaterialAlterado = item.valorMaterial;\r\n\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar tabela de preços';\r\n        this.action = 'update';\r\n        this.submittingForm = true;\r\n        this.submitAssocGrupo = true;\r\n      } else {\r\n        this.appTitle = 'Nova tabela de preços';\r\n        this.action = 'create';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Tabela de Preços',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}/tabela-precos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  // Formulário Preenchido para edição ou novo formulário\r\n  setFormBuilder() {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver) {\r\n      const detalhes: any = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codPreco: [detalhes.codPreco],\r\n        nomePreco: [detalhes.nomePreco, [Validators.required]],\r\n        /* codSituacao: [detalhes.codSituacao], */\r\n\r\n        dataInicialVigencia: detalhes.dataInicialVigencia\r\n          ? [\r\n            this.dateService.convertStringToDate(\r\n              detalhes.dataInicialVigencia,\r\n              'usa'\r\n            ),\r\n            [Validators.required],\r\n          ]\r\n          : [this.dateService.getToday(), [Validators.required]],\r\n\r\n        dataFinalVigencia: detalhes.dataFinalVigencia\r\n          ? [\r\n            this.dateService.convertStringToDate(\r\n              detalhes.dataFinalVigencia,\r\n              'usa'\r\n            ),\r\n          ]\r\n          : '',\r\n\r\n        faixaDescontoComercial: detalhes.faixaDescontoComercial\r\n          ? [detalhes.faixaDescontoComercial]\r\n          : 0,\r\n\r\n        faixaDescontoGerencial: detalhes.faixaDescontoGerencial\r\n          ? [detalhes.faixaDescontoGerencial]\r\n          : 0,\r\n\r\n        assocGrupos: this.formBuilder.array([]),\r\n      });\r\n      this.loaderFullScreen = false;\r\n      this.setGrupos(detalhes.assocGrupos);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n      this.loaderFullScreen = false;\r\n\r\n      this.form.get('dataInicialVigencia').setValue(null);\r\n      this.form.get('dataFinalVigencia').setValue(null);\r\n    }\r\n  }\r\n\r\n  setFormFilter() {\r\n    this.formFilter = this.formBuilder.group({\r\n      grupo: '',\r\n      situacao: '',\r\n    });\r\n  }\r\n\r\n  setFormPrecos() {\r\n    this.formPrecos = this.formBuilder.group({\r\n      codAssociacao: [null],\r\n      codEmpresa: [null],\r\n      nomeEmpresa: [null],\r\n      ufDestino: [null],\r\n      valorMaterial: [null],\r\n      percentual: [null]\r\n    });\r\n  }\r\n\r\n\r\n  onSubmitPrecos() {\r\n    this.tabelaPrecosService\r\n      .savePreco(this.formPrecos.getRawValue())\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.submittingForm = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response.hasOwnProperty('success') && response.success === true) {\r\n          this.formPrecos.reset();\r\n          this.pnotifyService.success(response.mensagem);\r\n\r\n          this.activatedRoute.params.subscribe((params: any) => {\r\n            let navigateTo: string;\r\n\r\n            if (params.hasOwnProperty('id')) {\r\n              navigateTo = '../../lista';\r\n            } else {\r\n              navigateTo = '../lista';\r\n            }\r\n\r\n            this.router.navigate([navigateTo], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          });\r\n        } else if (\r\n          response.hasOwnProperty('success') &&\r\n          response.success === false\r\n        ) {\r\n          this.pnotifyService.error(response.mensagem);\r\n        } else {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  // Ação de Edição ou novo Formulário\r\n  onSubmit(): void {\r\n\r\n    // if (this.action === 'update' && this.form.pristine) {\r\n    //   this.location.back();\r\n    // } else {\r\n    if (this.checkFormValidation() && this.form.valid) {\r\n      if (this.form.value.assocGrupos.length > 0) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n        this.tabelaPrecosService\r\n          .saveTabelaPrecos(this.form.value, this.action)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  let navigateTo: string;\r\n\r\n                  if (params.hasOwnProperty('id')) {\r\n                    navigateTo = '../../lista';\r\n                  } else {\r\n                    navigateTo = '../lista';\r\n                  }\r\n\r\n                  this.router.navigate([navigateTo], {\r\n                    relativeTo: this.activatedRoute,\r\n                  });\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.error(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      } else {\r\n        this.pnotifyService.notice('Associe pelo menos um material.');\r\n      }\r\n    } else {\r\n      this.pnotifyService.notice('Selecione um material.');\r\n    }\r\n    // }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n    if (this.form.getRawValue().id === null) {\r\n      isValid = false;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  openModalPercent(template: TemplateRef<any>, index, item: any) {\r\n    this.codGrupo = item.value.codGrupo;\r\n    this.grupoNome = item.value.nomeGrupo;\r\n    this.searchValoresGrupo(index);\r\n    this.modalRef = this.bsModalService.show(template, index);\r\n\r\n  }\r\n\r\n  openModalMateriais(template: TemplateRef<any>, i: number, item: any) {\r\n    this.showMaterial = false;\r\n    this.loaderNavbar = true;\r\n    const params = {\r\n      codGrupo: item.value.codGrupo,\r\n    };\r\n    this.tabelaPrecosService\r\n      .getDetailPanel(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.materiaisAssoc = response.data;\r\n            this.modalRef = this.bsModalService.show(template, item);\r\n\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, index, item) {\r\n    this.submittingFormPrecos = false;\r\n    this.formPrecosIndex = null;\r\n    this.codPreco = null;\r\n    this.codGrupo = null;\r\n    this.grupoNome = null;\r\n\r\n    this.codPreco = this.form.value.codPreco;\r\n    this.codGrupo = item.value.codGrupo;\r\n    this.grupoNome = item.value.nomeGrupo;\r\n    this.searchValoresGrupo(index);\r\n    this.modalRef = this.bsModalService.show(template, index);\r\n  }\r\n\r\n\r\n  onUpdatePercentagem(percent) {\r\n    percent = percent.split('%');\r\n    this.confirmAdd().subscribe((response: boolean) => {\r\n      if (response == true) {\r\n        this.precosEstado.forEach(element => {\r\n          element.valorMaterial = element.valorMaterial + element.valorMaterial * (parseFloat(percent[0]) / 100);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdateValor(item, index, valorMaterialAlterado) {\r\n\r\n    item.valorMaterial = valorMaterialAlterado;\r\n    let j;\r\n    let i;\r\n    for (i = 0; i < this.form.value.assocGrupos.length; i++) {\r\n      j = 0;\r\n      this.form.value.assocGrupos[i].precos.forEach(element => {\r\n        if (item.codAssociacao == element.codAssociacao) {\r\n          this.form.value.assocGrupos[i].precos[j].valorMaterial = item.valorMaterial;\r\n        }\r\n        j++;\r\n      });\r\n    }\r\n  }\r\n\r\n  searchValoresGrupo(index) {\r\n    const valores = this.form.value.assocGrupos[index].precos;\r\n    this.formPrecosIndex = index;\r\n\r\n    this.precosEstado = [];\r\n    if (valores.length > 0) {\r\n      valores.forEach((element) => {\r\n        this.onAddPreco(element, false, 'application');\r\n      });\r\n    }\r\n  }\r\n\r\n  // Ações do Grupo de Materiais (ESQUERDA TELA)\r\n  setGrupos(grupos: assocTabela[]): void {\r\n    if (grupos.length > 0) {\r\n      for (let i = 0; i < grupos.length; i++) {\r\n        this.onAddGrupo(grupos[i], false, 'application');\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocGrupos(): FormArray {\r\n    return this.form.get('assocGrupos') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddGrupo(\r\n    grupo: assocTabela,\r\n    manipulateForm: boolean,\r\n    source: string\r\n  ): void {\r\n    if (this.checkGrupoExists(grupo) === false) {\r\n      this.assocGrupos.push(\r\n        this.formBuilder.group({\r\n          codGrupo: [grupo.codGrupo],\r\n          nomeGrupo: [grupo.nomeGrupo],\r\n          precos:\r\n            grupo.precos && grupo.precos.length > 0\r\n              ? [grupo.precos]\r\n              : this.formBuilder.array([]),\r\n          source: [source],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocGrupos.length > 9) {\r\n        ('');\r\n        if (this.tableConfigAssocGrupos.fixedHeader === false) {\r\n          this.showGrupos = false;\r\n          this.tableConfigAssocGrupos.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showGrupos = true;\r\n          }, 1);\r\n        }\r\n      }\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkGrupoExists(grupo: assocTabela): boolean {\r\n    return this.form.value.assocGrupos.some((el: any) => {\r\n      return el.codGrupo === grupo.codGrupo;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddPreco(preco: any, manipulateForm: boolean, source: string): void {\r\n    if (preco) {\r\n      if (this.checkPrecosExists(preco) === false) {\r\n        this.precosEstado.push(preco);\r\n\r\n        if (source === 'onAssociarPrecos') {\r\n          let grupos = this.form.controls.assocGrupos.value;\r\n          grupos = grupos.map((item: any) => {\r\n            if (item.codGrupo == this.codGrupo) {\r\n              let precosAux = item.precos.map(precoAux => {\r\n                return {\r\n                  codAssociacao: precoAux.codAssociacao,\r\n                  codEmpresa: precoAux.codEmpresa,\r\n                  nomeEmpresa: precoAux.nomeEmpresa,\r\n                  percentual: precoAux.percentual,\r\n                  ufDestino: precoAux.ufDestino,\r\n                  valorMaterial: precoAux.valorMaterial,\r\n                }\r\n              });\r\n              precosAux.push(preco);\r\n              item.precos = precosAux;\r\n            }\r\n            return item;\r\n          });\r\n        }\r\n\r\n        this.formPrecos.reset();\r\n      }\r\n\r\n      /* if (this.checkValorExists(preco) === false) {\r\n        this.form.value.assocGrupos[this.formPrecosIndex].precos.push(preco);\r\n      } */\r\n    }\r\n\r\n    if (manipulateForm) {\r\n      this.form.markAsTouched();\r\n      this.form.markAsDirty();\r\n    }\r\n  }\r\n\r\n  onSaveValores() {\r\n    this.editMode = false;\r\n    if (this.precosEstado.length > 0) {\r\n      this.submittingFormPrecos = true;\r\n      this.precosEstado.forEach((element) => {\r\n        if (this.checkValorExists(element) == false) {\r\n          this.form.value.assocGrupos[this.formPrecosIndex].precos.push(\r\n            element\r\n          );\r\n        }\r\n      });\r\n      this.precosEstado = [];\r\n    }\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  checkValorExists(obj: any) {\r\n    return this.form.value.assocGrupos[this.formPrecosIndex].precos.some(\r\n      (el: any) => {\r\n        return (\r\n          el.codEmpresa === obj.codEmpresa && el.ufDestino === obj.ufDestino\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  onDeleteValor(item: any, index: number) {\r\n    item.codPreco = this.codPreco;\r\n    item.codGrupo = this.codGrupo;\r\n    this.loaderNavbar = true;\r\n\r\n    this.confirmDelete().subscribe((response: boolean) => {\r\n      if (response) {\r\n        if (item.codAssociacao != null || item.codAssociacao != undefined) {\r\n          this.tabelaPrecosService\r\n            .deleteAssociacaoPreco(item)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n              })\r\n            )\r\n            .subscribe({\r\n              next: (response: JsonResponse) => {\r\n                if (response.success) {\r\n                  if (this.checkPrecosExists(item) == true) {\r\n                    let indexPrecos =\r\n                      this.form.value.assocGrupos[\r\n                        this.formPrecosIndex\r\n                      ].precos.indexOf(item);\r\n\r\n                    this.form.value.assocGrupos[\r\n                      this.formPrecosIndex\r\n                    ].precos.splice(indexPrecos, 1);\r\n                  }\r\n                  this.precosEstado.splice(index, 1);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              error: (error: any) => {\r\n                if (\r\n                  error.error.hasOwnProperty('mensagem') &&\r\n                  (error.mensagem !== null || error.mensagem !== '')\r\n                ) {\r\n                  this.pnotifyService.error(error.error.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              }\r\n            });\r\n        } else {\r\n          if (this.checkPrecosExists(item) == true) {\r\n            let indexPrecos =\r\n              this.form.value.assocGrupos[this.formPrecosIndex].precos.indexOf(\r\n                item\r\n              );\r\n\r\n            this.form.value.assocGrupos[this.formPrecosIndex].precos.splice(\r\n              indexPrecos,\r\n              1\r\n            );\r\n          }\r\n          this.precosEstado.splice(index, 1);\r\n          this.loaderNavbar = false;\r\n        }\r\n      }\r\n      this.loaderNavbar = false;\r\n    });\r\n  }\r\n\r\n  checkPrecosExists(preco: precos): boolean {\r\n    let valorFound = this.precosEstado.filter(\r\n      (xx) =>\r\n        xx.codEmpresa == preco.codEmpresa && xx.ufDestino == preco.ufDestino\r\n    );\r\n\r\n    if (valorFound.length > 0) return true;\r\n    else return false;\r\n  }\r\n\r\n  onAssociarPrecos(): void {\r\n    const precos = this.formPrecos.getRawValue() as precos;\r\n    precos.nomeEmpresa = this.searchEmpresa(precos.codEmpresa);\r\n    this.precoAssociado(precos);\r\n    this.submitAssocGrupo = true;\r\n  }\r\n\r\n  searchEmpresa(codEmpresa: number) {\r\n    let empresaFound = this.unidades.filter((xx) => xx.idEmpresa == codEmpresa);\r\n    return empresaFound[0]['nomeEmpresa'];\r\n  }\r\n\r\n  precoAssociado(preco: any): void {\r\n    this.onAddPreco(preco, true, 'onAssociarPrecos');\r\n  }\r\n\r\n  onLimparGrupoPrincipal(): void {\r\n    this.limparGrupoPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.form.controls.codDescricao.setValue(null);\r\n    this.form.controls.codSituacao.setValue(null);\r\n    this.form.controls.dtInicioVigencia.setValue(null);\r\n    this.form.controls.dtFimVigencia.setValue(null);\r\n\r\n    setTimeout(() => {\r\n      this.limparGrupoPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  onDeleteGrupo(index: number, item: any): void {\r\n    let codGrupo = item.value.codGrupo;\r\n    let nomeGrupo = item.value.nomeGrupo;\r\n\r\n    this.confirmDeleteGrupo(codGrupo, nomeGrupo).subscribe((response: boolean) =>\r\n      response ? this.deleteGrupo(index, codGrupo) : null\r\n    );\r\n\r\n    // }\r\n  }\r\n\r\n  closeModal(modalRef: TemplateRef<any>) {\r\n    if (this.submittingFormPrecos === false && this.precosEstado.length > 0) {\r\n      this.confirmCancel().subscribe((response: boolean) =>\r\n        response ? this.onCancelFormValores(modalRef) : null\r\n      );\r\n    } else {\r\n      this.modalRef.hide();\r\n    }\r\n  }\r\n\r\n  closeModalUpdate(modalRef: TemplateRef<any>) {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onCancelFormValores(modalRef: TemplateRef<any>) {\r\n    this.precosEstado = [];\r\n    this.modalRef.hide();\r\n  }\r\n\r\n\r\n  confirmAdd(): any {\r\n    this.editMode = false;\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'cancelar',\r\n      'Confirmar',\r\n      'Ao confirmar, você estará alterando os valores, deseja mesmo continuar?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmCancel(): any {\r\n    this.editMode = false;\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'cancelar',\r\n      'Confirmar Cancelamento',\r\n      'As informações que não foram salvas serão perdidas, deseja continuar ?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmDeleteGrupo(codGrupo: any, nomeGrupo: any): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do grupo ' + codGrupo + ' - ' + nomeGrupo + ' ?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n\r\n  deleteGrupo(index: number, codGrupo: number) {\r\n    if (this.form.value.assocGrupos[index].source === 'user') {\r\n      this.assocGrupos.removeAt(index);\r\n    } else if (this.form.value.assocGrupos[index].source === 'application') {\r\n      this.loaderNavbar = true;\r\n\r\n      this.activatedRoute.params.subscribe((params: any) => {\r\n        this.tabelaPrecosService\r\n          .deleteAssociacaoGrupo(this.form.value.codPreco, codGrupo)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: JsonResponse) => {\r\n              if (response.success) {\r\n                this.assocGrupos.removeAt(index);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              if (\r\n                error.error.hasOwnProperty('mensagem') &&\r\n                (error.mensagem !== null || error.mensagem !== '')\r\n              ) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  grupoAssociado(material: any): void {\r\n    this.onAddGrupo(material, true, 'user');\r\n  }\r\n\r\n  onAssociarGrupos(): void {\r\n    this.toggleAll = false;\r\n\r\n    for (let index = 0; index < this.dados.length; index++) {\r\n      if (this.dados[index].checked === 1) {\r\n        const grupo = {\r\n          codGrupo: this.dados[index].codGrupo,\r\n          nomeGrupo: this.dados[index].nomeGrupo,\r\n        };\r\n        this.grupoAssociado(grupo);\r\n        this.dados[index].checked = 0;\r\n        this.submittingForm = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.searching = true;\r\n\r\n    if (this.formFilter.valid) {\r\n      this.search(this.formFilter.getRawValue());\r\n    }\r\n  }\r\n\r\n  search(params): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.tabelaPrecosService\r\n      .getGrupos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n            this.searching = false;\r\n          } else if (response.success === false) {\r\n            this.dadosEmpty = true;\r\n            this.dadosLoaded = true;\r\n            this.searching = false;\r\n            this.firstSearch = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n            this.firstSearch = false;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = false;\r\n          this.searching = false;\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n\r\n    for (let index = 0; index < this.dados.length; index++) {\r\n      this.dados[index].checked = this.toggleAll === true ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  onCheckGrupo(index: number, grupo: any): void {\r\n    this.dados[index].checked = grupo.checked === 1 ? 0 : 1;\r\n  }\r\n\r\n  getUnidades() {\r\n    this.tabelaPrecosService.getEmpresas().subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.unidades = response.result;\r\n          // this.setFormBuilder();\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  geetParams(params: any): any {\r\n    let dataInicial = params['dataInicialVigencia'];\r\n    let dataFinal = params['dataFimVigencia'];\r\n\r\n    this.form.patchValue({\r\n      dataInicialVigencia: dataInicial,\r\n      dataFimVigencia: dataFinal,\r\n    });\r\n\r\n    if (dataInicial instanceof Date) {\r\n      dataInicial = this.dateService.convertToUrlDate(dataInicial);\r\n    }\r\n\r\n    if (dataFinal instanceof Date) {\r\n      dataFinal = this.dateService.convertToUrlDate(dataFinal);\r\n    }\r\n\r\n    return {\r\n      dataInicial: dataInicial,\r\n      dataFinal: dataFinal,\r\n    };\r\n  }\r\n}\r\n","import { ComercialTemplatesModule } from './../../templates/templates.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialGestaoTabelaPrecosRoutingModule } from './tabela-precos-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../cadastros/materiais/templates/templates.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ComercialGestaoTabelaPrecosListaComponent } from './lista/lista.component';\r\nimport { ComercialGestaoTabelaPrecosFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialGestaoTabelaPrecosService } from './tabela-precos.service';\r\nimport { ComercialTabelaPrecoCloneComponent } from './modais/clone/clone.component';\r\nimport { ComercialGestaoTabelaPrecoVisaoComercialComponent } from './visao-comercial/visao-comercial.component';\r\nimport { ComercialGestaoTabelaPrecosImportarCsvComponent } from './importar-csv/importar-csv.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialGestaoTabelaPrecosListaComponent,\r\n    ComercialGestaoTabelaPrecosFormularioComponent,\r\n    ComercialTabelaPrecoCloneComponent,\r\n    ComercialGestaoTabelaPrecoVisaoComercialComponent,\r\n    ComercialGestaoTabelaPrecosImportarCsvComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    TextMaskModule,\r\n    ComercialGestaoTabelaPrecosRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialTemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [PNotifyService, ComercialGestaoTabelaPrecosService],\r\n})\r\nexport class ComercialGestaoTabelaPrecosModule {}\r\n","import { EstadosService } from 'src/app/shared/services/requests/estados.service';\r\nimport { ComercialCadastrosMateriaisGrupoService } from './../../../cadastros/materiais/grupos/grupos.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n//Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-tabela-preco-visao-comercial',\r\n  templateUrl: './visao-comercial.component.html',\r\n  styleUrls: ['./visao-comercial.component.scss'],\r\n})\r\nexport class ComercialGestaoTabelaPrecoVisaoComercialComponent\r\n  implements OnInit\r\n{\r\n  dadosEmpty = true;\r\n  boolimpar = false;\r\n  dadosLoaded = false;\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  showDetailPanel = false;\r\n\r\n  materiais = [];\r\n  dados = [];\r\n  dadosDetalhes = [];\r\n\r\n  codigoSelecionado: number = 0;\r\n  materialSelecionado: string = '';\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeMaterial';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  linhas: Array<any> = [];\r\n  tabelas: Array<any> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n  $showDetailPanelSubscription: Subscription;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  appTitle = 'Tabela de Preços - Visão Comercial';\r\n\r\n  constructor(\r\n    private service: ComercialGestaoTabelaPrecosService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onBuildForm();\r\n    this.onActiveRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.setBreadCrumb();\r\n    this.getTabelas();\r\n    this.getLinhas();\r\n    setTimeout(() => {\r\n      this.loading = false;\r\n    }, 1500);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$showDetailPanelSubscription.unsubscribe();\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onBuildForm() {\r\n    this.form = this.formBuilder.group({\r\n      tabela: [0],\r\n      codMaterial: [null],\r\n      nomeMaterial: [null],\r\n      codLinha: [0],\r\n      orderBy: [null],\r\n      orderType: [null],\r\n      pagina: [null],\r\n      registros: [25, Validators.required],\r\n      timestamp: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.$showDetailPanelSubscription =\r\n      this.detailPanelService.config.subscribe((event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n        if (!this.showDetailPanel) {\r\n          this.codigoSelecionado = 0;\r\n          this.materialSelecionado = '';\r\n        }\r\n      });\r\n  }\r\n\r\n  onActiveRoute() {\r\n    this.$activatedRouteSubscription =\r\n      this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let _response = this.routerService.getBase64UrlParams(queryParams);\r\n          console.log(_response);\r\n          this.getMateriais(_response);\r\n          this.form.patchValue(_response);\r\n        }\r\n      });\r\n  }\r\n\r\n  getTabelas(): void {\r\n    this.service\r\n      .getTabelas()\r\n      .pipe(finalize(() => {}))\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.hasOwnProperty('success') && response.success === true) {\r\n          this.tabelas = response.data;\r\n          this.tabelas.unshift({\r\n            codPreco: 0,\r\n            nomePreco: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getLinhas(): void {\r\n    this.materiaisGrupoService\r\n      .getFilterValues()\r\n      .pipe(finalize(() => {}))\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n          this.linhas.unshift({\r\n            id: 0,\r\n            descricao: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriais(codMaterial: any) {\r\n    this.detailPanelService.hide();\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.dadosLoaded = false;\r\n\r\n    this.service\r\n      .getMateriais(codMaterial)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.boolimpar = false;\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosEmpty = false;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false &&\r\n            response.hasOwnProperty('mensagem') &&\r\n            response.mensagem !== null\r\n          ) {\r\n            this.dados = [];\r\n            this.dadosEmpty = true;\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.dados = [];\r\n            this.dadosEmpty = true;\r\n            this.pnotifyService.notice('Nenhuma informação encontrada');\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dados = [];\r\n          this.dadosEmpty = true;\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriaisDetalhes(item: any) {\r\n    this.detailPanelService.show();\r\n    this.loadingNavBar = true;\r\n    this.codigoSelecionado = 0;\r\n    this.codigoSelecionado = item.codMaterial;\r\n    this.materialSelecionado = '';\r\n    this.materialSelecionado = item.nomeMaterial;\r\n\r\n    let params: any = {};\r\n\r\n    params.codMaterial = this.codigoSelecionado;\r\n    params.codTabela = this.form.value.tabela;\r\n\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.service\r\n      .getMateriaisDetalhes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dadosDetalhes = response.data;\r\n            this.detailPanelService.loadedFinished(false);\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false &&\r\n            response.hasOwnProperty('mensagem') &&\r\n            response.mensagem !== null\r\n          ) {\r\n            this.dadosDetalhes = [];\r\n            this.detailPanelService.loadedFinished(true);\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.dadosDetalhes = [];\r\n            this.detailPanelService.loadedFinished(true);\r\n            this.pnotifyService.notice('Nenhuma informação encontrada');\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosDetalhes = [];\r\n          this.detailPanelService.loadedFinished(true);\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    // if (_obj?.material) {\r\n    //   (Number.isNaN(parseInt(_obj?.material))) ?\r\n    //     _params['nomeMaterial'] = _obj.material :\r\n    //     _params['codMaterial'] = _obj.material\r\n    // }\r\n\r\n    // if (_obj?.grupo) {\r\n    //   (Number.isNaN(parseInt(_obj?.grupo))) ?\r\n    //     _params['nomeGrupo'] = _obj.grupo :\r\n    //     _params['codGrupo'] = _obj.grupo;\r\n    // }\r\n\r\n    if (_obj?.tabela) {\r\n      Number.isNaN(parseInt(_obj?.tabela))\r\n        ? (_params['nomePreco'] = _obj.tabela)\r\n        : (_params['codPreco'] = _obj.tabela);\r\n    }\r\n\r\n    _params['orderBy'] = this.orderBy;\r\n    _params['orderType'] = this.orderType;\r\n    return _params;\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    this.itemsPerPage = this.form.value.registros;\r\n    this.currentPage = 1;\r\n    this.form.get('timestamp').setValue(new Date().getTime());\r\n    this.router.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  classStatusBorder(item): string {\r\n    let borderClass: string;\r\n\r\n    if (item.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (item.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onLimpar() {\r\n    this.onBuildForm();\r\n    this.boolimpar = true;\r\n    this.dados = [];\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  TemplateRef,\r\n  OnDestroy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\nimport { Subscription, EMPTY, Observable, of } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { descricaoTabela, assocTabela } from './../models/tabela-precos';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n@Component({\r\n  selector: 'comercial-tabela-precos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialGestaoTabelaPrecosListaComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n  \r\n  modalRef: BsModalRef;\r\n\r\n  codMaterial: number;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  dados: descricaoTabela[] = [];\r\n  otherDados: any[] = [];\r\n  otherDados2: any[] = [];\r\n  dadosPagination: Array<any> = [];\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n  detalhes: any;\r\n  detalhePreco: any;\r\n  detalhePrecoUf: any;\r\n\r\n  tabelaPreco = {};\r\n\r\n  grupoSelecionado: assocTabela;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codPreco';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private activateRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private detailPanelService: DetailPanelService,\r\n    private pnotifyService: PNotifyService,\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private atividadesService: AtividadesService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n    this.setFormFilter();\r\n    this.setBreadCrumb();\r\n    this.registrarAcesso();\r\n    this.onDetailPanelEmitter();\r\n    this.setGrupoSelecionado();\r\n    this.onActiveRoute();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Tabela de Preços',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onActiveRoute() {\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n        if (Object.keys(_response).length > 0) this.form.patchValue(_response);\r\n\r\n        this.search(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  // Formulário\r\n  setFormFilter(): void {\r\n    this.form = this.formBuilder.group({\r\n      codMaterial: null,\r\n      descTabela: [null],\r\n      dataInicialVigencia: '',\r\n      dataFinalVigencia: '',\r\n      codSituacao: [1],\r\n      orderBy: [null],\r\n      orderType: [null],\r\n      pagina: [null],\r\n      registros: [this.itemsPerPage],\r\n      timestamp: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    this.form.get('timestamp').setValue(new Date().getTime());\r\n\r\n    this.router.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n    this.itemsPerPage = this.form.value.registros;\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  // setRouterParams(params: any): void {\r\n  //   this.router.navigate([], {\r\n  //     relativeTo: this.activatedRoute,\r\n  //     queryParams: { q: btoa(JSON.stringify(params)) },\r\n  //   });\r\n  //   this.search(params);\r\n  // }\r\n\r\n  // verificaParams(): Object {\r\n  //   let params: any = {};\r\n\r\n  //   if (this.form.value.descTabela) {\r\n  //     params.descTabela = this.form.value.descTabela;\r\n  //   }\r\n\r\n  //   if (this.form.value.dataInicialVigencia) {\r\n  //     params.dataInicialVigencia = this.form.value.dataInicialVigencia;\r\n  //   }\r\n\r\n  //   if (this.form.value.dataFinalVigencia) {\r\n  //     params.dataFinalVigencia = this.form.value.dataFinalVigencia;\r\n  //   }\r\n\r\n  //   if (this.form.value.codSituacao) {\r\n  //     params.codSituacao = this.form.value.codSituacao;\r\n  //   }\r\n\r\n  //   params.pagina = this.form.value.pagina;\r\n  //   params.registros = this.form.value.registros;\r\n  //   params.orderBy = this.form.value.orderBy;\r\n  //   params.orderType = this.form.value.orderType;\r\n\r\n  //   return params;\r\n  // }\r\n\r\n  search(params: any): void {\r\n    if (!this.loaderFullScreen) this.loaderNavbar = true;\r\n\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.tabelaPrecosService\r\n      .getListaPrecos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.loaderFullScreen = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;  \r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;           \r\n            this.dadosLoaded = true;\r\n            // if(this.form.value.codMaterial){\r\n            //   let hasData = this.dados.find((cod) => {\r\n            //      return cod.codPreco == this.form.value.codMaterial;\r\n            //   })\r\n            //   if(!hasData){\r\n            //     this.dadosEmpty = true;\r\n            //   }\r\n            // }\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onCheckPreco() {   \r\n            let dados = {\r\n              info: null,\r\n              precos: null\r\n            }\r\n            let precos;\r\n            this.dados.forEach(element => {\r\n              this.tabelaPrecosService.getDetalhes(element.codPreco)\r\n              .pipe(\r\n                finalize(() => {               \r\n                    this.loaderNavbar = false;\r\n                    this.detailPanelService.loadedFinished(false); \r\n                })\r\n              )\r\n              .subscribe({\r\n              next: (response: any) => {\r\n                response.data.assocGrupos.forEach(element2 => {\r\n                      this.otherDados.forEach(element3 => {\r\n                          if(element2.codGrupo == element3.codGrupo){\r\n                            precos = element2.precos;                            \r\n                            dados.info = element3;\r\n                            dados.precos = precos;\r\n                            this.otherDados2.push({\r\n                              'info': dados.info,\r\n                              'precos': dados.precos\r\n                            }); \r\n                          }\r\n                      }); \r\n                });       \r\n              }\r\n          });\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n    _params['orderBy'] = this.orderBy;\r\n    _params['orderType'] = this.orderType;\r\n    _params['dataFinalVigencia'] = '';\r\n    return _params;\r\n  }\r\n\r\n  // Detail Panel\r\n  onDetails(item) {\r\n    this.detalhes = item;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados `;\r\n    this.setGrupoSelecionado();\r\n    // this.grupoSelecionado = grupo;\r\n    this.loaderNavbar = true;\r\n    this.otherDados = [];\r\n\r\n    const params = {\r\n      codGrupo: item.codGrupo,\r\n    };\r\n\r\n    this.tabelaPrecosService\r\n      .getDetailPanel(params)\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.otherDados = response.data;\r\n            this.otherDados2 = []; \r\n            this.onCheckPreco();\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  setGrupoSelecionado(): void {\r\n    this.grupoSelecionado = {\r\n      codGrupo: null,\r\n      nomeGrupo: null,\r\n      precos: [],\r\n    };\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  // Activate e Inactivate e borda Situação\r\n  onActivate(index: number, grupo: descricaoTabela): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateGrupo(index: number, grupo: any): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n    return this.tabelaPrecosService.activateGrupo(grupo.codPreco);\r\n  }\r\n\r\n  inactivateGrupo(index: number, grupo: any): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 2;\r\n    return this.tabelaPrecosService.inactivateGrupo(grupo.codPreco);\r\n  }\r\n\r\n  onInactivate(index: number, grupo: descricaoTabela): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  classStatusBorder(grupo: descricaoTabela): string {\r\n    let borderClass: string;\r\n\r\n    if (grupo.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (grupo.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onEdit(item: any): void {\r\n    this.router.navigate(['../editar', item.codPreco], {\r\n      relativeTo: this.activateRoute,\r\n    });\r\n  }\r\n\r\n  onCsv(item: any): void {\r\n    this.router.navigate(['../importar-csv', item.codPreco], {\r\n      relativeTo: this.activateRoute,\r\n    });\r\n  }\r\n\r\n  onClone(item: any, template): void {\r\n    this.tabelaPreco = item;\r\n    item.clone = true;\r\n    this.openModal(template);\r\n  }\r\n\r\n  // Outros\r\n  // onPageChanged(event: PageChangedEvent) {\r\n  //   if (this.form.value.pagina != event.page) {\r\n  //     this.detailPanelService.hide();\r\n  //     this.setGrupoSelecionado();\r\n  //     this.form.value.pagina = event.page;\r\n  //     this.onFilter();\r\n\r\n  //     this.scrollToFilter.nativeElement.scrollIntoView({\r\n  //       behavior: 'instant',\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    // this.scrollToFilter.nativeElement.scrollIntoView({\r\n    //   behavior: 'instant',\r\n    // });\r\n  }\r\n\r\n  refreshMainData(grupo: descricaoTabela): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (grupo.codPreco === this.dados[i].codPreco) {\r\n        this.dados[i].codSituacao = grupo.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n    });\r\n  }\r\n}\r\n","export default \"::ng-deep message {\\n  padding: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbW9kYWlzL2Nsb25lL2Nsb25lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UscUJBQUE7QUFBSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL21vZGFpcy9jbG9uZS9jbG9uZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcHtcclxuICBtZXNzYWdle1xyXG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxufSJdfQ== */\";","import { assocTabela } from './../models/tabela-precos';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialGestaoTabelaPrecosService } from './../tabela-precos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialGestaoTabelaPrecosFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.tabelaPrecosService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codPreco: null,\r\n        nomePreco: null,\r\n        codSituacao: null,\r\n        dataInicialVigencia: null,\r\n        dataFinalVigencia: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null,\r\n        assocGrupos: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { descricaoTabela, assocTabela } from './models/tabela-precos';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { take, tap, retry } from 'rxjs/operators';\r\n\r\n/* Services */\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\n/* Interfaces */\r\nimport { environment } from 'src/environments/environment';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialGestaoTabelaPrecosService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/gestao/tabela-precos`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService\r\n  ) {}\r\n\r\n  getListaPrecos(params: any = []): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(): Observable<Object | JsonResponse> {\r\n    return this.comercialService.getEmpresas({ idEmpresa: [4,6,18,55,77,79,83], tipo: 'search' });\r\n  }\r\n\r\n  getTabelas(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/tabelas`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codPreco: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codPreco}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  // getDetailPanel(codGrupo: number): Observable<Object | JsonResponse> {\r\n  //   return this.http\r\n  //     .get(`${this.API}/detail-panel/${codGrupo}`)\r\n  //     .pipe(take(1), retry(2));\r\n  // }\r\n\r\n  getDetailPanel(params: any = []): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/detail-panel`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getGrupos(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista/grupos`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesGrupos(\r\n    codGrupo: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista/grupos/${codGrupo}`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociados(): Observable<any> {\r\n    return this.http.get(`${this.API}/associados`).pipe(take(1));\r\n  }\r\n\r\n  deleteAssociacaoPreco(item: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/associacao-precos/remover/${item.codAssociacao}/${item.codPreco}/${item.codGrupo}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteAssociacaoGrupo(\r\n    codPreco: number,\r\n    codGrupo: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(`${this.API}/grupo/remover/${codGrupo}/${codPreco}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  saveTabelaPrecos(\r\n    record: descricaoTabela,\r\n    action: string\r\n  ): Observable<Object | JsonResponse> {\r\n    if (action === 'update') {\r\n      return this.updateGrupo(record);\r\n    }\r\n\r\n    return this.saveGrupo(record);\r\n  }\r\n\r\n  private saveGrupo(\r\n    record: descricaoTabela\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateGrupo(\r\n    record: descricaoTabela\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  // savePrecos(record: any, action: string): Observable<Object | JsonResponse> {\r\n  //   if (action === 'update') {\r\n  //     return this.updatePreco(record);\r\n  //   }\r\n\r\n  //   return this.savePreco(record);\r\n\r\n  // }\r\n\r\n  savePreco(record: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/precos/salvar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updatePreco(record: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/precos/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPreco(params: any = []) {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/precos/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codGrupo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/inativar`, codGrupo).pipe(take(1));\r\n  }\r\n\r\n  getMateriais(params): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/materiais`,\r\n    { params: params}).pipe(take(1));\r\n  }\r\n\r\n  getMateriaisDetalhes(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http.get(`${this.API}/materiais/detalhes`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { PNotifyService } from '../../../../../shared/services/core/pnotify.service';\r\n\r\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { isBreakOrContinueStatement } from 'typescript';\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-tabela-precos-importar-csv',\r\n  templateUrl: './importar-csv.component.html',\r\n  styleUrls: ['./importar-csv.component.scss']\r\n})\r\nexport class ComercialGestaoTabelaPrecosImportarCsvComponent implements OnInit {\r\n\r\n  appTitle: string = 'Importar CSV';\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n  fileReaded;\r\n  nomePreco = '';\r\n  rows = [];\r\n  headers: any;\r\n  content;\r\n  row: any;\r\n  dados: any;\r\n  empresas = [];\r\n  codPreco: any;\r\n  elementsAdded = [];\r\n  fileValue;\r\n\r\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigPrecos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private comercialService: ComercialService,\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\r\n    private pnotifyService: PNotifyService,\r\n    private bsModalService: BsModalService,\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTotalItems();\r\n    this.getEmpresas();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  // pega os valores dos depositos\r\n  getEmpresas(){\r\n    this.comercialService.getDepositos(null)\r\n    .subscribe({\r\n      next: (response: any) => {\r\n          response.result.forEach(element => {\r\n            if(element.idDeposito == 1 ||\r\n              element.idDeposito == 2 ||\r\n              element.idDeposito == 18 ||\r\n              element.idDeposito == 79 ||\r\n              element.idDeposito == 77 ||\r\n              element.idDeposito == 55){\r\n                this.empresas.push({codDeposito: element.idDeposito, nomeDeposito: element.nomeDeposito});\r\n              }\r\n          });      }\r\n    });\r\n  }\r\n\r\n  // limpa os\r\n  clearValues(){\r\n    this.content = null;\r\n    this.headers = null;\r\n    this.row = null;\r\n    this.rows = null;\r\n  }\r\n\r\n  // popula o CSV de modelo com todos os dados referente ao codigo do preco\r\n  populateModel(){\r\n    var arr = [];\r\n    arr.push(new Array('ID GRUPO','ID DEPOSITO','UF DESTINO','VALOR'));\r\n    this.dados.assocGrupos.forEach(element => {\r\n      let codGrupo = element.codGrupo;\r\n      element.precos.forEach(element2 => {\r\n        arr.push( new Array(codGrupo,element2.codEmpresa, element2.ufDestino.toUpperCase(),element2.valorMaterial));\r\n      });\r\n    });\r\n    this.rows = arr;\r\n  }\r\n\r\n  // pega todos os itens referente ao codigo de preco\r\n  getTotalItems(){\r\n    this.tabelaPrecosService\r\n      .getDetalhes(this.codPreco)\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.nomePreco = this.dados.nomePreco;\r\n            this.populateModel();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.codPreco = params.id;\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Tabela de Preços',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}/tabela-precos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  //cria arquivo de dowload separado por ponto e virgulas\r\n  downloadModel() {\r\n    let csvContent = \"data:text/csv;charset=utf-8,\" + this.rows.map(e => e.join(\";\")).join(\"\\n\");\r\n    var encodedUri = encodeURI(csvContent);\r\n    var link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"modelo-tabela-preco.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  changeListener(fileInput){\r\n    //le arquivo csv\r\n    this.fileReaded = fileInput.target.files[0];\r\n    let filename = fileInput.target.files[0].name;\r\n    let fileExtension = filename.substring(filename.lastIndexOf('.')+1, filename.length) || filename;\r\n    if(fileExtension == 'csv'){\r\n    let reader: FileReader = new FileReader();\r\n    reader.readAsText(this.fileReaded);\r\n\r\n      reader.onload = (e) => {\r\n      let csvuploaded = reader.result.toString();\r\n      let allTextLines = csvuploaded.split(/\\r|\\n|\\r/);\r\n\r\n\r\n        // headers = linhas de titulos\r\n        this.headers = allTextLines[0].split(';');\r\n        this.content = [];\r\n\r\n          for (let i = 1; i < allTextLines.length; i++) {\r\n            // divide por ponto e virgula\r\n            let data = allTextLines[i].split(';');\r\n            if (data.length === this.headers.length) {\r\n              let tarr = [];\r\n              for (let j = 0; j < this.headers.length; j++) {\r\n                tarr.push(data[j]);\r\n              }\r\n            // log em cada row para ver output\r\n            // console.log(tarr);\r\n            this.content.push(tarr);\r\n            this.checkLines();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.pnotifyService.error('É necessário subir um arquivo do tipo CSV!');\r\n    }\r\n    //reseta o input caso o usuario queira subir o mesmo arquivo\r\n    fileInput.target.value = null;\r\n  }\r\n\r\n  // checa em todas as linhas se o item ja está cadastrado ou não\r\n  checkLines(){\r\n    if(this.content.length > 0){\r\n      for(let i = 0; i < this.content.length; i++){\r\n        if(this.content[i] != undefined && this.content[i][2].length == 2){\r\n        this.content[i][4] = 'SEM CADASTRO';\r\n          this.dados.assocGrupos.forEach(element => {\r\n            if(element.codGrupo == this.content[i][0]){\r\n              element.precos.forEach(element2 => {\r\n                if(element2.codEmpresa == this.content[i][1]\r\n                  && element2.ufDestino.toUpperCase() == this.content[i][2]){\r\n                    this.content[i][4] = 'OK';\r\n                  }\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.loaderNavbar = false;\r\n          this.pnotifyService.error('Não foi encontrado nenhum item no arquivo CSV para exportação ou o modelo está incorreto.');\r\n          this.content = [];\r\n          break;\r\n        }\r\n      }\r\n      } else {\r\n        this.loaderNavbar = false;\r\n        this.pnotifyService.error('Não foi encontrado nenhum item no arquivo CSV para exportação ou o modelo está incorreto.');\r\n      }\r\n  }\r\n\r\n  //mostra os itens que foram atualizados e os novos itens cadastrados\r\n  loadModal(template: TemplateRef<any>){\r\n    this.bsModalService.show(template);\r\n  }\r\n\r\n  closeModal(){\r\n    this.bsModalService.hide(0);\r\n  }\r\n\r\n  // atualiza os dados já existentes e carrega os novos dados no objeto\r\n  updateValues(template: TemplateRef<any>) {\r\n  this.elementsAdded = [];\r\n  this.loaderNavbar = true;\r\n    if(this.content){\r\n      for(let i = 0; i <= this.content.length; i++){\r\n        if(this.content[i] != undefined){\r\n          this.dados.assocGrupos.forEach(element => {\r\n            if(element.codGrupo == this.content[i][0]){\r\n              element.precos.forEach(element2 => {\r\n                    var last = element.precos.at(-1);\r\n                    if(element2.ufDestino.toUpperCase() == this.content[i][2]\r\n                    && element2.codEmpresa == this.content[i][1]\r\n                    && this.content[i][4] == 'OK'){\r\n                      element2.valorMaterial = parseFloat(this.content[i][3]);\r\n                      this.elementsAdded.push({\r\n                        codGrupo: element.codGrupo,\r\n                        codEmpresa: element2.codEmpresa,\r\n                        ufDestino: element2.ufDestino.toUpperCase(),\r\n                        valorMaterial: parseFloat(element2.valorMaterial)});\r\n\r\n                    } else if(element.codGrupo == this.content[i][0]\r\n                    && this.content[i][4] == 'SEM CADASTRO'\r\n                    && element2 == last ) {\r\n                      let nomeEmpresa;\r\n                      this.empresas.forEach(element => {\r\n                        if(this.content[i][1] == element.codEmpresa){\r\n                          nomeEmpresa = element.nomeDeposito;\r\n                        }\r\n                      });\r\n                      element.precos.push({\r\n                        codAssociacao: null,\r\n                        codEmpresa: parseInt(this.content[i][1]),\r\n                        nomeEmpresa: nomeEmpresa,\r\n                        ufDestino: this.content[i][2],\r\n                        valorMaterial: parseFloat(this.content[i][3])\r\n\r\n                      });\r\n                      this.elementsAdded.push({\r\n                        codGrupo: element.codGrupo,\r\n                        codEmpresa: parseInt(this.content[i][1]),\r\n                        ufDestino: this.content[i][2].toUpperCase(),\r\n                        valorMaterial: parseFloat(this.content[i][3])});\r\n                    }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n      //salva os dados\r\n      this.saveDados(template);\r\n      } else {\r\n        this.loaderNavbar = false;\r\n        this.pnotifyService.error('Não foi encontrado nenhum arquivo CSV para exportação.');\r\n\r\n      }\r\n  }\r\n\r\n    saveDados(template){\r\n      if(this.elementsAdded.length > 0){\r\n      this.dados.dataInicialVigencia = new Date();\r\n      this.tabelaPrecosService.saveTabelaPrecos(this.dados, 'update')\r\n         .subscribe({\r\n          next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.loaderNavbar = false;\r\n            this.loadModal(template);\r\n            this.pnotifyService.success(response.mensagem);\r\n            this.headers = null;\r\n            this.content = null;\r\n\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }, error: (error) => {\r\n          this.pnotifyService.error(error.message);\r\n          this.loaderNavbar = false;\r\n        }\r\n        });\r\n    } else {\r\n      this.clearValues();\r\n      this.loaderNavbar = false;\r\n      this.pnotifyService.error('Nenhum item foi adicionado, cheque se os dados estão corretos e se a tabela está de acordo com a tabela de modelo.');\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { ComercialGestaoTabelaPrecosService } from '../../tabela-precos.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n@Component({\r\n  selector: 'comercial-tabela-preco-clone',\r\n  templateUrl: './clone.component.html',\r\n  styleUrls: ['./clone.component.scss'],\r\n})\r\nexport class ComercialTabelaPrecoCloneComponent implements OnInit, OnChanges {\r\n  public MASKS = MASKS;\r\n\r\n  @Output() close: EventEmitter<any> = new EventEmitter();\r\n  @Input() formValue = {};\r\n\r\n  form: FormGroup;\r\n\r\n  loading = true;\r\n  saving = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private service: ComercialGestaoTabelaPrecosService,\r\n    private dateService: DateService,\r\n    private pnotify: PNotifyService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /* this.setForm(); */\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!changes?.formValue) {\r\n      return;\r\n    }\r\n\r\n    let currentValue = changes?.formValue.currentValue;\r\n\r\n    if (!this.form) {\r\n      this.setForm();\r\n    }\r\n\r\n    this.getDetalhes(currentValue?.codPreco);\r\n  }\r\n\r\n  setForm() {\r\n    this.form = this.formBuilder.group({\r\n      codPreco: [null, [Validators.required]],\r\n      nomePreco: [null, [Validators.required]],\r\n      codTabelaClonada: [null],\r\n      dataInicialVigencia: [this.dateService.getToday(), [Validators.required]],\r\n      dataFinalVigencia: [null],\r\n      faixaDescontoComercial: [null],\r\n      faixaDescontoGerencial: [null],\r\n      percentualAcrescimo: [null],\r\n      percentualDesconto: [null],\r\n      assocGrupos: [null],\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.close.emit(true);\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  saveTabelaPrecos(params) {\r\n    if (\r\n      params.dataFinalVigencia == '' ||\r\n      params.dataFinalVigencia == null ||\r\n      params.dataFinalVigencia == undefined\r\n    ) {\r\n      params['dataFinalVigencia'] = '';\r\n    }\r\n\r\n    if (params.percentualAcrescimo == 0) {\r\n      params.percentualAcrescimo = null;\r\n    }\r\n\r\n    if (params.percentualDesconto == 0) {\r\n      params.percentualDesconto = null;\r\n    }\r\n\r\n    params['codTabelaClonada'] = params?.codPreco?.toString()?.slice();\r\n\r\n    delete params['codPreco'];\r\n\r\n    const acrescimo = params?.percentualAcrescimo;\r\n    const desconto = params?.percentualDesconto;\r\n\r\n    if (acrescimo > 0) {\r\n      params?.assocGrupos?.forEach((element) => {\r\n        element.precos.forEach((preco) => {\r\n          preco.valorMaterial *= 1 + acrescimo / 100;\r\n        });\r\n      });\r\n    }\r\n\r\n    if (desconto > 0) {\r\n      params?.assocGrupos?.forEach((element) => {\r\n        element.precos.forEach((preco) => {\r\n          preco.valorMaterial *= 1 - desconto / 100;\r\n        });\r\n      });\r\n    }\r\n\r\n    this.saving = true;\r\n    this.service\r\n      .saveTabelaPrecos(params, 'insert')\r\n      .pipe(\r\n        finalize(() => {\r\n          this.saving = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['success'] == true) {\r\n            this.pnotify.success('Tabela criada com sucesso!');\r\n            this.onClose();\r\n          } else {\r\n            this.pnotify.error('Falha ao criar a tabela');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error('Ocorreu um erro ao processar a solicitação.');\r\n        }\r\n      });\r\n  }\r\n\r\n  onDesativarAcrescimo() {\r\n    if (this.form.value.percentualDesconto > 0) {\r\n      this.form.controls.percentualAcrescimo.disable();\r\n    } else if (\r\n      this.form.value.percentualDesconto == 0 ||\r\n      this.form.value.percentualDesconto == null\r\n    ) {\r\n      this.form.controls.percentualAcrescimo.enable();\r\n    }\r\n  }\r\n\r\n  onDesativarDesconto() {\r\n    if (this.form.value.percentualAcrescimo > 0) {\r\n      this.form.controls.percentualDesconto.disable();\r\n    } else if (\r\n      this.form.value.percentualAcrescimo == 0 ||\r\n      this.form.value.percentualAcrescimo == null\r\n    ) {\r\n      this.form.controls.percentualDesconto.enable();\r\n    }\r\n  }\r\n\r\n  getDetalhes(codTabela) {\r\n    this.loading = true;\r\n    this.service\r\n      .getDetalhes(codTabela)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['success']) {\r\n            let data = response['data'];\r\n\r\n            data.dataInicialVigencia = this.dateService.getToday();\r\n            data.dataFinalVigencia = data?.dataFinalVigencia\r\n              ? new Date(data.dataFinalVigencia)\r\n              : '';\r\n            data.codTabelaClonada = data.codPreco?.toString()?.slice();\r\n\r\n            data?.assocGrupos?.map((grupo) => {\r\n              grupo?.precos?.map((preco) => {\r\n                preco.codAssociacao = '';\r\n              });\r\n            });\r\n\r\n            // delete data.codPreco;\r\n            delete data.nomeUsuario;\r\n\r\n            this.form.patchValue(data);\r\n          } else {\r\n            this.pnotify.error('Falha ao consultar os dados da tabela.');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error('Ocorreu um erro ao processar a solicitação.');\r\n        }\r\n      });\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"\\\"\\r\\n    (click)=\\\"onLimpar()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"tabela\\\">Tabela</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [closeOnSelect]=\\\"true\\\"\\r\\n                [items]=\\\"tabelas\\\"\\r\\n                formControlName=\\\"tabela\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tabela\\\"\\r\\n                bindValue=\\\"codPreco\\\"\\r\\n                bindLabel=\\\"nomePreco\\\"\\r\\n                >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">cód. material</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"codMaterial\\\" type=\\\"text\\\" formControlName=\\\"codMaterial\\\"\\r\\n                placeholder=\\\"Código material...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">nome material</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"nomeMaterial\\\" type=\\\"text\\\" formControlName=\\\"nomeMaterial\\\"\\r\\n                placeholder=\\\"nome material...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [closeOnSelect]=\\\"true\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                >\\r\\n                <!-- (change)=\\\"onChangeLinha($event.id)\\\" -->\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!dadosEmpty && !boolimpar\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-6 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codMaterial'\\\" [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter value=\\\"Material\\\" [active]=\\\"orderBy == 'nomeMaterial'\\\" [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dados\\\" [class.table-active]=\\\"item.codMaterial == codigoSelecionado\\\">\\r\\n            <td nowrap class=\\\"hover text-left\\\" [ngClass]=\\\"classStatusBorder(item)\\\" (click)=\\\"getMateriaisDetalhes(item)\\\">{{ item.codMaterial }}</td>\\r\\n            <td nowrap class=\\\"hover text-left\\\" (click)=\\\"getMateriaisDetalhes(item)\\\">{{ item.nomeMaterial }}</td>\\r\\n            <td></td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"dados.length > maxSize\\\">\\r\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"{{materialSelecionado}}\\\">\\r\\n        <custom-table *ngIf=\\\"dadosDetalhes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Empresa</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">UF</th>\\r\\n              <th scope=\\\"col\\\">Valor</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of dadosDetalhes\\\">\\r\\n              <td>{{ item.nomeEmpresa | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.ufDestino | uppercase }}</td>\\r\\n              <td>{{ item.valorMaterial | currency:'BRL' }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded && !boolimpar\\\"></empty-result>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL2ltcG9ydGFyLWNzdi9pbXBvcnRhci1jc3YuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL3Zpc2FvLWNvbWVyY2lhbC92aXNhby1jb21lcmNpYWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialGestaoTabelaPrecosFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialGestaoTabelaPrecosListaComponent } from './lista/lista.component';\r\nimport { ComercialGestaoTabelaPrecosFormularioComponent } from './formulario/formulario.component';\r\nimport { ComercialGestaoTabelaPrecoVisaoComercialComponent } from './visao-comercial/visao-comercial.component';\r\nimport { ComercialGestaoTabelaPrecosImportarCsvComponent } from './importar-csv/importar-csv.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista', component: ComercialGestaoTabelaPrecosListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialGestaoTabelaPrecosFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialGestaoTabelaPrecosFormularioResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialGestaoTabelaPrecosFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialGestaoTabelaPrecosFormularioResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'visao-comercial', component: ComercialGestaoTabelaPrecoVisaoComercialComponent\r\n  },\r\n  {\r\n    path: 'importar-csv/:id',\r\n    component: ComercialGestaoTabelaPrecosImportarCsvComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialGestaoTabelaPrecosRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || !submittingForm || !submitAssocGrupo\\\" >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"mtc-title mb-2\\\">Dados da tabela</div>\\r\\n        <hr>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label for=\\\"nomePreco\\\">Descrição da Tabela</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"email\\\"\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"nomePreco\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomePreco') + ' ' + onFieldRequired('nomePreco')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomePreco')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataInicialVigencia\\\">Dt Inicio Vigência</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataInicialVigencia\\\"\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"dataInicialVigencia\\\"\\r\\n              bsDatepicker\\r\\n              [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataFinalVigencia\\\">Dt Fim Vigência</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinalVigencia\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"dataFinalVigencia\\\"\\r\\n            bsDatepicker\\r\\n            [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"faixaDescontoComercial\\\">Faixa de Desconto Comercial</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"faixaDescontoComercial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"faixaDescontoComercial\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"faixaDescontoGerencial\\\">Faixa de Desconto Gerencial</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"faixaDescontoGerencial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"faixaDescontoGerencial\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n        <div class='mt-3' *ngIf=\\\"showGrupos && form.value.assocGrupos.length > 0\\\" formArrayName=\\\"assocGrupos\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Grupos associados</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocGrupos\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 90%\\\"></th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let item of assocGrupos.controls; let i = index\\\" [formGroupName]=\\\"i\\\" \\r\\n                  onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\r\\n                    <td style=\\\"width: 80%\\\">\\r\\n                      {{ form.value.assocGrupos[i].codGrupo }} - {{ form.value.assocGrupos[i].nomeGrupo | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Alterar valores do grupo\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalPercent(percentmateriais, i, item)\\\">\\r\\n                        <i class=\\\"fas fa-percent\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Materiais associados\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalMateriais(templatemateriais, i, item)\\\">\\r\\n                        <i class=\\\"fas fa-question\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Editar\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(template, i, item)\\\">\\r\\n                        <i class=\\\"fas fa-edit\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 5%\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"  placement=\\\"left\\\" (click)=\\\"onDeleteGrupo(i, item)\\\" tooltip=\\\"Excluir\\\">\\r\\n                        <i class=\\\"fas fa-trash\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showGrupos && form.value.assocGrupos.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col-lg-9\\\">\\r\\n          <div class=\\\"mtc-title\\\">Pesquisa grupos para associação</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"onFilter()\\\"\\r\\n              [disabled]=\\\"searching === true\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              <span>Pesquisar</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)='onFilter()'>Pesquisar</button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formFilter\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-9\\\">\\r\\n              <label for=\\\"grupo\\\">Descrição do grupo</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"idnomePreco\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"grupo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"situacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"situacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n\\r\\n      <div>\\r\\n        <div>\\r\\n          <div *ngIf=\\\"dados.length > 0\\\">\\r\\n            <div class=\\\"row mb-2\\\" >\\r\\n              <div class=\\\"col mt-auto\\\">\\r\\n                <div class=\\\"mtc-title mb-0\\\">Seleção de grupos</div>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"d-flex justify-content-end\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                    (click)=\\\"onAssociarGrupos()\\\"\\r\\n                    [disabled]=\\\"searching === true\\\">\\r\\n                    <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                    <span>Associar</span>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n                  <ng-template #thead let-thead>\\r\\n                    <tr>\\r\\n                      <th\\r\\n                        scope=\\\"col\\\"\\r\\n                        class=\\\"text-center\\\"\\r\\n                        style=\\\"width: 5%\\\">\\r\\n                        <btn-icon\\r\\n                          [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                          size=\\\"small\\\"\\r\\n                          (click)=\\\"onToggleAll()\\\">\\r\\n                        </btn-icon>\\r\\n                      </th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Grupo</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr *ngFor=\\\"let item of dados; let i = index;\\\">\\r\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <btn-icon\\r\\n                          [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                          size=\\\"small\\\"\\r\\n                          (click)=\\\"onCheckGrupo(i, item)\\\">\\r\\n                        </btn-icon>\\r\\n                      </td>\\r\\n                      <td\\r\\n                        class=\\\"hover\\\"\\r\\n                        style=\\\"width: 95%\\\"\\r\\n                        (click)=\\\"onCheckGrupo(i, item)\\\">\\r\\n                        {{ item.nomeGrupo | uppercase }}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <message\\r\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\r\\n                  text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n                </message>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"searching === false\\\">\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <message\\r\\n                    icon=\\\"fas fa-box-open\\\"\\r\\n                    text=\\\"Nenhuma informação encontrada\\\">\\r\\n                  </message>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"dados.length === 0 && !firstSearch\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <message\\r\\n                    icon=\\\"fas fa-search\\\"\\r\\n                    text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n                  </message>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    {{ this.codGrupo }} - {{ this.grupoNome }}\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModalUpdate(template)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form class=\\\"form-row mb-2\\\" [formGroup]=\\\"formPrecos\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"codEmpresa\\\">Empresa</label>\\r\\n        <ng-select\\r\\n          type='text'\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"unidades\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          [hideSelected]=\\\"true\\\"\\r\\n          [closeOnSelect]=\\\"true\\\"\\r\\n          placeholder=\\\"Selecione...\\\"\\r\\n          bindLabel=\\\"nomeEmpresa\\\"\\r\\n          bindValue=\\\"idEmpresa\\\"\\r\\n          formControlName=\\\"codEmpresa\\\"\\r\\n          >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"ufDestino\\\">UF Destino</label>\\r\\n        <ng-select\\r\\n        type=\\\"text\\\"\\r\\n        [searchable]=\\\"true\\\"\\r\\n        [clearable]=\\\"false\\\"\\r\\n        [items]=\\\"estados\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        [hideSelected]=\\\"true\\\"\\r\\n        [closeOnSelect]=\\\"true\\\"\\r\\n        placeholder=\\\"Selecione...\\\"\\r\\n        bindLabel=\\\"sigla\\\"\\r\\n        bindValue=\\\"sigla\\\"\\r\\n        formControlName=\\\"ufDestino\\\"\\r\\n        >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-3\\\">\\r\\n        <label for=\\\"valorMaterial\\\">Valor</label>\\r\\n        <input\\r\\n          style=\\\"text-align: center;\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"valorMaterial\\\"\\r\\n          currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 2 }\\\"\\r\\n          >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-1 d-flex justify-content-center align-self-center mt-3\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon-sm d-flex justify-content-center align-middle\\\" (click)=\\\"onAssociarPrecos()\\\" tooltip=\\\"Adicionar Valor\\\">\\r\\n        <i class=\\\"fas fa-plus\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n    <custom-table [config]=\\\"tableConfigPrecos\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Empresa</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">UF Destino</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of precosEstado; let i = index\\\">\\r\\n          <td style=\\\"width: 30%\\\" >\\r\\n            {{ item.nomeEmpresa | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            {{ item.ufDestino | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            <span *ngIf=\\\"enableEditIndex != i || editMode == false\\\">{{ item.valorMaterial | number:'1.2-2' }}</span>\\r\\n            <input *ngIf=\\\"editMode && enableEditIndex == i\\\" [(ngModel)]=\\\"valorMaterialAlterado\\\"\\r\\n            currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 2 }\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            style=\\\"width: 100%\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <button *ngIf=\\\"enableEditIndex != i || editMode == false\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"editMode = true;\\\" (click)=\\\"enableEdition(i, item)\\\" tooltip=\\\"Editar\\\">\\r\\n              <i class=\\\"fas fa-edit\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button *ngIf=\\\"editMode && enableEditIndex == i\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onUpdateValor(item, i, valorMaterialAlterado); editMode = false\\\" tooltip=\\\"Adicionar\\\">\\r\\n              <i class=\\\"fas fa-check\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button *ngIf=\\\"editMode && enableEditIndex == i\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"editMode = false\\\" tooltip=\\\"Cancelar\\\">\\r\\n              <i class=\\\"fas fa-times\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDeleteValor(item, i)\\\" tooltip=\\\"Excluir\\\">\\r\\n              <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #templatemateriais>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    Materiais associados\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(templatemateriais)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\" style=\\\"height:350px; overflow-x: hidden; overflow-y: scroll;\\\" (onClose)=\\\"select.handleClearClick()\\\">\\r\\n    <label for=\\\"assocGrupos\\\">Pesquisa:</label>\\r\\n    <ng-select\\r\\n        type=\\\"text\\\"\\r\\n        [searchable]=\\\"true\\\"\\r\\n        [clearable]=\\\"true\\\"\\r\\n        [items]=\\\"materiaisAssoc\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        [hideSelected]=\\\"false\\\"\\r\\n        [closeOnSelect]=\\\"true\\\"\\r\\n        (change)=\\\"changeFn(selection)\\\" \\r\\n        [(ngModel)]=\\\"selection\\\"\\r\\n        placeholder=\\\"Selecione...\\\"\\r\\n        bindLabel=\\\"nomeMaterial\\\"\\r\\n        bindValue=\\\"codMaterial\\\"\\r\\n        >\\r\\n        </ng-select>\\r\\n    <custom-table [config]=\\\"tableConfigPrecos\\\" class=\\\"m-3\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\">Código</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 50%\\\">Material</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Linha</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Classe</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody *ngIf=\\\"!showMaterial\\\">\\r\\n        <tr *ngFor=\\\"let item of materiaisAssoc; let i = index\\\">\\r\\n          <td>\\r\\n            {{ item.codMaterial }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 50%\\\">\\r\\n            {{ item.nomeMaterial | uppercase }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeLinha | uppercase}}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            {{ item.nomeClasse | uppercase }}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody *ngIf=\\\"showMaterial\\\">\\r\\n        <tr *ngFor=\\\"let item of materiaisAssoc2; let i = index\\\">\\r\\n          <td>\\r\\n            {{ item.codMaterial }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeMaterial | uppercase }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeLinha | uppercase }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeClasse | uppercase }}\\r\\n          </td>\\r\\n        </tr>       \\r\\n      </ng-template>\\r\\n    </custom-table>    \\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #percentmateriais>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    {{ this.codGrupo }} - {{ this.grupoNome }}\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModalUpdate(percentmateriais)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form class=\\\"form-row mb-2\\\" [formGroup]=\\\"formPrecos\\\" autocomplete=\\\"off\\\"> \\r\\n      <div class=\\\"col-lg-3\\\">\\r\\n      </div>      \\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"percent\\\">Digite a porcentagem:</label>        \\r\\n        <input\\r\\n          #percent\\r\\n          formControlName=\\\"percentual\\\"\\r\\n          style=\\\"text-align: center;\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          placeholder=\\\"0.0%\\\"\\r\\n          currencyMask [options]=\\\"{ align: 'center', prefix: '', suffix:'%', precision: 1, allowNegative: false }\\\"\\r\\n          >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-3 justify-content-center align-self-center mt-3\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon d-flex justify-content-center align-middle ml-1\\\" (click)=\\\"onUpdatePercentagem(percent.value)\\\" tooltip=\\\"Aumentar porcentagem de valor dos itens\\\">\\r\\n        <i class=\\\"fas fa-redo\\\"></i>\\r\\n        </button>\\r\\n      </div>      \\r\\n      <div class=\\\"col-lg-3\\\"></div>\\r\\n    </form>   \\r\\n    <custom-table [config]=\\\"tableConfigPrecos\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Empresa</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">UF Destino</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of precosEstado; let i = index\\\">\\r\\n          <td style=\\\"width: 30%\\\" >\\r\\n            {{ item.nomeEmpresa | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            {{ item.ufDestino | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            <span>{{ item.valorMaterial | number:'1.2-2' }}</span>           \\r\\n          </td>          \\r\\n          <td></td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>        \\r\\n  </div>\\r\\n   \\r\\n</ng-template>\";","export default \"::ng-deep .tooltip-inner {\\n  max-width: 700px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLnRvb2x0aXAtaW5uZXJ7XHJcbiAgICBtYXgtd2lkdGg6IDcwMHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tabela de Preços\\\">\\r\\n  <!-- <button type=\\\"button\\\" [routerLink]=\\\"['../exportar-csv']\\\" style=\\\"color: #090;\\\">\\r\\n    Exportar CSV\\r\\n  </button> -->\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"descTabela\\\">Descrição da Tabela</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"descTabela\\\" type=\\\"text\\\" formControlName=\\\"descTabela\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descTabela')\\\" message=\\\"Descrição é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"dataInicialVigencia\\\">Dt Inicio Vigência</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"dataInicialVigencia\\\" type=\\\"text\\\" formControlName=\\\"dataInicialVigencia\\\"\\r\\n                bsDatepicker\\r\\n                [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"dataFinalVigencia\\\">Dt Fim Vigência</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"dataFinalVigencia\\\" type=\\\"text\\\" formControlName=\\\"dataFinalVigencia\\\"\\r\\n                bsDatepicker [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Filtro de material</label>\\r\\n              <input class=\\\"form-control\\\"type=\\\"text\\\" id=\\\"codMaterial\\\" formControlName=\\\"codMaterial\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select class=\\\"form-control custom-select\\\" id=\\\"codSituacao\\\" formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"2\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codPreco'\\\" [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codPreco')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\">Descrição</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Dt Inicial</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Dt Final</th>\\r\\n\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              Usuário\\r\\n            </th>\\r\\n\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosPagination; let i = index;\\\"\\r\\n          onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\r\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n              {{ item.codPreco }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.nomePreco | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.dataInicialVigencia | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.dataFinalVigencia | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.nomeUsuario | uppercase }}\\r\\n\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <!-- <span  class=\\\"mr-3\\\" tooltip=\\\"Tabela Clonada, exibir detalhes.\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\r\\n                  <i class=\\\"far fa-clone\\\"></i>\\r\\n                </button>\\r\\n              </span> -->\\r\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Importar CSV\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onCsv(item)\\\">\\r\\n                  <i class=\\\"fas fa-table\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"item.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, item)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(item)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"tolTemplate\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <ng-template #tolTemplate>\\r\\n                  <span *ngIf=\\\"!item.codTabelaClonada\\\">\\r\\n                    <strong>Tabela não clonada</strong>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"item.codTabelaClonada\\\">\\r\\n                    <table>\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <td colspan=\\\"2\\\">Tabela Clonada</td>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr>\\r\\n                          <th class=\\\"text-left\\\">Percentual de Acréscimo:&nbsp;</th>\\r\\n                          <td> {{ item.percentualAcrescimo / 100 | percent : '0.2-2' }}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th class=\\\"text-left\\\">Percentual de Desconto:&nbsp;</th>\\r\\n                          <td> {{ item.percentualDesconto / 100 | percent : '0.2-2' }}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                  <i class=\\\"far fa-clone\\\" [ngClass]=\\\"{'text-warning': item.codTabelaClonada}\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Clonar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onClone(item, modalClone)\\\">\\r\\n                  <i class=\\\"fas fa-clone\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>        \\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      \\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <div class=\\\"d-flex w-100\\\" *ngIf=\\\"otherDados2.length == 0\\\">\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n          <strong>Carregando itens...</strong>\\r\\n        </div>\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"otherDados2.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód Grupo</th>\\r\\n              <th scope=\\\"col\\\">Grupo</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód Material</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor='let item of otherDados2'>\\r\\n              <td class=\\\"text-center\\\">{{ item.info.codGrupo }}</td>\\r\\n              <td>{{ item.info.nomeGrupo }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.info.codMaterial }}</td>\\r\\n              <td>{{ item.info.nomeMaterial }}</td>\\r\\n              <td>\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                  <i class=\\\"fas fa-money-bill-wave\\\" placement=\\\"left\\\" id=\\\"tooltip-preco\\\"        \\r\\n                  [tooltip]=\\\"tooltip\\\">\\r\\n                  <ng-template #tooltip>\\r\\n                  <div style=\\\"width: 100px;\\\">\\r\\n                    <span *ngFor=\\\"let item2 of item.precos; let i = index;\\\">\\r\\n                      {{ item2.ufDestino + ': R$ '}} {{  item2.valorMaterial | number:'1.2-2'  }}<br>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  </ng-template>\\r\\n                  </i>\\r\\n                </button>              \\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #modalClone>\\r\\n  <comercial-tabela-preco-clone (close)=\\\"modalRef.hide()\\\" [formValue]=\\\"tabelaPreco\\\"></comercial-tabela-preco-clone>\\r\\n</ng-template>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\"> \\r\\n<button type=\\\"button\\\">\\r\\n    <i class=\\\"fas fa-building\\\" placement=\\\"bottom\\\"   \\r\\n    [tooltip]=\\\"tooltip\\\">\\r\\n    <ng-template #tooltip>\\r\\n    <div style=\\\"width: 190px !important; font-size:0.60rem; text-align: center;\\\">\\r\\n      <span *ngFor=\\\"let empresa of empresas; let i = index;\\\">\\r\\n        {{ 'ID '+ empresa.codDeposito }} {{ ' - ' + empresa.nomeDeposito }}<br>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!empresas > 0\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando itens...</strong>\\r\\n    </div>\\r\\n    </ng-template>\\r\\n    </i>\\r\\n  </button>             \\r\\n<button type=\\\"button\\\" (click)=\\\"downloadModel()\\\">\\r\\n    Baixar arquivo de modelo\\r\\n</button>\\r\\n\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">   \\r\\n  <div class=\\\"row\\\">    \\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <div class=\\\"text-center\\\" *ngIf=\\\"!nomePreco\\\">\\r\\n        <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2 text-center\\\"></div>\\r\\n      </div>\\r\\n      <h3 *ngIf=\\\"nomePreco\\\">{{ codPreco }} - {{ nomePreco | uppercase}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-1\\\">\\r\\n        <label\\r\\n          for=\\\"novoCsv\\\"\\r\\n          class=\\\"d-flex justify-content-start align-items-center\\\"\\r\\n          style=\\\"cursor: pointer\\\">\\r\\n          <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\r\\n            <i class=\\\"fas fa-plus\\\"></i>\\r\\n            <span>Enviar</span>\\r\\n          </p>\\r\\n        </label>\\r\\n        <input            \\r\\n            id=\\\"novoCsv\\\"\\r\\n            type=\\\"file\\\" \\r\\n            class=\\\"d-none\\\" \\r\\n            accept=\\\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\\\"\\r\\n            (change)=\\\"changeListener($event)\\\"/>       \\r\\n      </div>\\r\\n      <div class=\\\"col-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n        <i class=\\\"fas fa-question-circle\\\" placement=\\\"top\\\" [tooltip]=\\\"tooltip\\\">\\r\\n          <ng-template #tooltip>\\r\\n            <div style=\\\"width: 190px !important; font-size:0.63rem; text-align: center;\\\">\\r\\n              <span *ngFor=\\\"let empresa of empresas; let i = index;\\\">\\r\\n                {{ 'ID '+ empresa.codDeposito }} {{ ' - ' + empresa.nomeDeposito }}<br>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!empresas > 0\\\">\\r\\n              <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n              <strong>Carregando itens...</strong>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n      </div>      \\r\\n      <div class=\\\"col-2\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">         \\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"clearValues()\\\" [disabled]=\\\"!content\\\">\\r\\n            Limpar\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!content\\\" (click)=\\\"updateValues(template)\\\">\\r\\n            Importar\\r\\n            </button>                \\r\\n        </div>         \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">              \\r\\n              <custom-table [config]=\\\"tableConfigAssocGrupos\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\">Grupos associados</th>    \\r\\n                    <th class=\\\"text-center\\\">Informações</th>       \\r\\n                  </tr>                        \\r\\n                </ng-template>                \\r\\n                <ng-template #tbody let-tbody *ngIf=\\\"dados\\\">\\r\\n                  <tr *ngFor=\\\"let item of dados.assocGrupos; let i = index\\\"\\r\\n                  onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\r\\n                    <td>\\r\\n                      {{ item.codGrupo }} - {{ item.nomeGrupo | uppercase }}\\r\\n                    </td>    \\r\\n                    <td class=\\\"text-center\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                        <i class=\\\"fas fa-money-bill-wave\\\" placement=\\\"left\\\" id=\\\"tooltip-preco\\\"        \\r\\n                        [tooltip]=\\\"tooltip\\\">\\r\\n                        <ng-template #tooltip>\\r\\n                        <div style=\\\"width: 190px; font-size: 0.57rem\\\">\\r\\n                          <span *ngFor=\\\"let item2 of item.precos; let i = index;\\\">\\r\\n                            {{ item2.nomeEmpresa | uppercase  }} - {{ item2.ufDestino + ': R$ '}} {{  item2.valorMaterial | number:'1.2-2'  }}<br>\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        </ng-template>\\r\\n                        </i>\\r\\n                      </button>              \\r\\n                    </td>                                                \\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>          \\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-6\\\">\\r\\n      <custom-table *ngIf=\\\"headers\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>            \\r\\n            <th scope=\\\"col\\\">Código</th>\\r\\n            <th scope=\\\"col\\\">Depósito</th>\\r\\n            <th scope=\\\"col\\\">UF</th> \\r\\n            <th scope=\\\"col\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\">Situação \\r\\n              <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"> \\r\\n              <i class=\\\"fas fa-exclamation-circle\\\" placement=\\\"left\\\" [tooltip]=\\\"tooltip2\\\">\\r\\n              <ng-template #tooltip2>\\r\\n                <div>\\r\\n                  <span>\\r\\n                    Mostrará se o código do grupo já está cadastrado (OK) ou não (SEM CADASTRO)\\r\\n                  </span>\\r\\n                </div>           \\r\\n              </ng-template>\\r\\n              </i>\\r\\n            </button>\\r\\n            </th>                    \\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody *ngIf=\\\"content\\\">\\r\\n            <tr *ngFor=\\\"let row of content\\\">\\r\\n                <td *ngFor=\\\"let col of row\\\">\\r\\n                  {{ col }}\\r\\n                </td>              \\r\\n              </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    Registros atualizados do item {{ codPreco }} - {{ nomePreco }} \\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\" style=\\\"height:350px; overflow-x: hidden; overflow-y: scroll;\\\" (onClose)=\\\"select.handleClearClick()\\\">  \\r\\n    <div *ngIf=\\\"elementsAdded.length == 0\\\">\\r\\n      <p>Nenhum item foi atualizado.</p>\\r\\n    </div>  \\r\\n      <custom-table [config]=\\\"tableConfigPrecos\\\" class=\\\"m-3\\\" *ngIf=\\\"elementsAdded.length > 0\\\">    \\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Código</th>\\r\\n            <th scope=\\\"col\\\">Depósito</th>\\r\\n            <th scope=\\\"col\\\">UF</th>\\r\\n            <th scope=\\\"col\\\">Valor</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody *ngIf=\\\"elementsAdded.length > 0\\\">\\r\\n          <tr  *ngFor=\\\"let a of elementsAdded;\\\">\\r\\n            <td> \\r\\n             {{ a.codGrupo }}\\r\\n            </td>  \\r\\n            <td> \\r\\n              {{ a.codEmpresa }}\\r\\n             </td> \\r\\n             <td> \\r\\n              {{ a.ufDestino }}\\r\\n             </td> \\r\\n             <td> \\r\\n              {{ a.valorMaterial | number:'1.2-2'}}\\r\\n             </td>       \\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>    \\r\\n    </div>\\r\\n</ng-template>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}