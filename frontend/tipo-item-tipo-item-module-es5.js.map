{"version":3,"sources":["webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/lista/lista.component.html","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/cadastro/cadastro.component.html","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/lista/lista.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/tipo-item.module.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/tipo-item-routing.module.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/cadastro/cadastro.component.scss","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/lista/lista.component.ts","webpack:///src/app/modules/tecnologia-informacao/contratos/tipo-item/cadastro/cadastro.component.ts"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","TecnologiaInformacaoTipoItemModule","declarations","imports","forRoot","providers","provide","useValue","routes","path","component","TecnologiaInformacaoCadastrosTipoItemModuleRoutingModule","forChild","exports","TecnologiaInformacaoCadastrosTipoItemListaComponent","route","pnotify","activatedRoute","tipoItemService","formBuilder","confirmModalService","routerService","dateService","tipoItems","loading","loadingNavBar","tipos","cod","nome","subtitles","id","text","color","itemsPerPage","currentPage","begin","end","buildForm","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","getTipoItem","getParams","group","ID_TECN_INFO_ITEM_TIPO","NM_ITEM_TIPO","IN_STAT","PAGI","TIME","Date","getTime","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","get","setValue","navigate","relativeTo","setBase64UrlParams","pipe","status","body","totalItems","noResult","error","tipoItem","stat","confirmChange","asObservable","result","postTipoItem","success","showConfirm","event","page","_params","_obj","value","prop","convertToUrlDate","selector","template","TecnologiaInformacaoCadastrosTipoItemCadastroComponent","router","titleService","atividadesService","registrarAcesso","setFormBuilder","appTitle","setTitle","required","DS_OBSE","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","reset"],"mappings":"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","file":"tipo-item-tipo-item-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Tipo de Item\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"ID_TECN_INFO_ITEM_TIPO\\\">ID</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n                formControlName=\\\"ID_TECN_INFO_ITEM_TIPO\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"NM_ITEM_TIPO\\\">Tipo de Item</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_ITEM_TIPO\\\"\\n                formControlName=\\\"NM_ITEM_TIPO\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n              <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\"> {{item.nome}}\\n              </ng-template>\\n            </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <table  class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">ID </th>\\n            <th scope=\\\"col\\\">Tipo de Item</th>\\n            <th scope=\\\"col\\\" style=\\\"width:80px\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let tipoItem of tipoItems | slice : begin : end; let i = index\\\">\\n            <td [ngClass]=\\\"tipoItem.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n            {{tipoItem.ID_TECN_INFO_ITEM_TIPO}}\\n            </td>\\n            <td>{{ tipoItem.NM_ITEM_TIPO | uppercase }}</td>\\n            <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"tipoItem.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(tipoItem)\\\">\\n                  <i [ngClass]=\\\"tipoItem.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openRegister(tipoItem)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Cadastro de Tipo de Item\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false\\\"\\n    (click)=\\\"postTipoItem()\\\"\\n    >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <fieldset  class=\\\"col-12\\\">\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n        <legend>Dados do Tipo de Item</legend>\\n        <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col-8 pl-0\\\">\\n            <label for=\\\"NM_ITEM_TIPO\\\">Tipo de Item</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_ITEM_TIPO\\\"\\n              formControlName=\\\"NM_ITEM_TIPO\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('NM_ITEM_TIPO') + ' ' + onFieldRequired('NM_ITEM_TIPO')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('NM_ITEM_TIPO')\\\" message=\\\"Tipo de item é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-4 pl-0\\\">\\n            <label for=\\\"IN_STAT\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"IN_STAT\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              [ngClass]=\\\"onFieldRequired('IN_STAT')\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('IN_STAT')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </fieldset>\\n      <br>\\n      <br>\\n      <fieldset class=\\\"border rounded shadow-sm col-6 pt-2 mx-auto\\\">\\n            <legend>Observação</legend>\\n            <div class=\\\"form-row justify-content-center\\\">\\n              <div class=\\\"form-group col\\\">\\n                <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n            <br>\\n      </fieldset>\\n    </fieldset>\\n  </form>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyYXRvcy90aXBvLWl0ZW0vbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport ptBr from '@angular/common/locales/pt';\nimport { defineLocale, ptBrLocale, BsDatepickerModule } from 'ngx-bootstrap';\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// Modules\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { TecnologiaInformacaoCadastrosTipoItemListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoCadastrosTipoItemModuleRoutingModule } from './tipo-item-routing.module';\nimport { TecnologiaInformacaoCadastrosTipoItemCadastroComponent } from './cadastro/cadastro.component';\n\n@NgModule({\n  declarations: [\n    TecnologiaInformacaoCadastrosTipoItemListaComponent,\n    TecnologiaInformacaoCadastrosTipoItemCadastroComponent,\n  ],\n  imports: [\n    TecnologiaInformacaoCadastrosTipoItemModuleRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-br' }],\n})\nexport class TecnologiaInformacaoTipoItemModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { TecnologiaInformacaoCadastrosTipoItemListaComponent } from './lista/lista.component';\nimport { TecnologiaInformacaoCadastrosTipoItemCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TecnologiaInformacaoCadastrosTipoItemListaComponent,\n  },\n  {\n    path: 'novo',\n    component: TecnologiaInformacaoCadastrosTipoItemCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: TecnologiaInformacaoCadastrosTipoItemCadastroComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TecnologiaInformacaoCadastrosTipoItemModuleRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVjbm9sb2dpYS1pbmZvcm1hY2FvL2NvbnRyYXRvcy90aXBvLWl0ZW0vY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { TecnologiaInformacaoCadastroTipoItemService } from '../services/tipo-item.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\nimport { ITecnologiaInformacaoTipoItem } from './../models/tipoItem';\nimport { PageChangedEvent } from 'ngx-bootstrap';\n@Component({\n  selector: 'tecnologia-informacao-cadastros-tipo-item-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class TecnologiaInformacaoCadastrosTipoItemListaComponent\n  implements OnInit, OnDestroy {\n  breadCrumbTree: Array<Breadcrumb>;\n\n  idSubModulo: number;\n  tipoItems: ITecnologiaInformacaoTipoItem[] = [];\n  noResult: boolean;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n\n  $activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  // Tipos de Situação dos Tipos de Items (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '0',\n      nome: 'Inativos',\n    },\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage: number = 10;\n  totalItems: number;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = 10;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private tipoItemService: TecnologiaInformacaoCadastroTipoItemService,\n    private formBuilder: FormBuilder,\n    private confirmModalService: ConfirmModalService,\n    private routerService: RouterService,\n    private dateService: DateService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        this.getTipoItem(this.getParams());\n      }\n    );\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_TECN_INFO_ITEM_TIPO: [null],\n      NM_ITEM_TIPO: [null],\n      IN_STAT: [null],\n      PAGI: [1],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/tecnologia-informacao/home`,\n      },\n      {\n        descricao: 'Contratos',\n        routerLink: `/tecnologia-informacao/contratos/${id}`,\n      },\n      {\n        descricao: 'Tipo de Item',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getTipoItem(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.tipoItemService\n      .getTipoItem(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.tipoItems = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.tipoItems = [];\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  changeType(tipoItem: ITecnologiaInformacaoTipoItem) {\n    const stat = tipoItem.IN_STAT == '1' ? '0' : '1';\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          tipoItem.IN_STAT = stat;\n          return this.tipoItemService.postTipoItem(tipoItem);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n          //tipoContrato.IN_STAT = stat;\n        },\n        (error: any) => {\n          tipoItem.IN_STAT = tipoItem.IN_STAT == '1' ? '0' : '1';\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == '1')\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  openRegister(tipoItem: ITecnologiaInformacaoTipoItem) {\n    this.route.navigate(['../', tipoItem.ID_TECN_INFO_ITEM_TIPO], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(tipoItem),\n    });\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","import { ITecnologiaInformacaoTipoItem } from './../models/tipoItem';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap';\nimport { finalize } from 'rxjs/operators';\n\nimport { TecnologiaInformacaoCadastroTipoItemService } from '../services/tipo-item.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  AbstractControl,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n//interfaces\n\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'tecnologia-informacao-cadastros-tipo-item-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class TecnologiaInformacaoCadastrosTipoItemCadastroComponent\n  implements OnInit, OnDestroy {\n  noResult: boolean;\n  loading = false;\n  loadingNavBar = false;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  tipoItems: Array<ITecnologiaInformacaoTipoItem>;\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private routerService: RouterService,\n    private titleService: TitleService,\n    private atividadesService: AtividadesService,\n    private tipoItemService: TecnologiaInformacaoCadastroTipoItemService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/tecnologia-informacao/home',\n      },\n      {\n        descricao: 'Contratos',\n        routerLink: `/tecnologia-informacao/contratos/${id}`,\n      },\n      {\n        descricao: 'Tipo de Item',\n        routerLink: `./../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  //Consumir informações que estão na rota para editar\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n      }\n    );\n  }\n\n  //formulario\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      ID_TECN_INFO_ITEM_TIPO: [null],\n      NM_ITEM_TIPO: [null, [Validators.required]],\n      IN_STAT: ['1'],\n      DS_OBSE: [null],\n    });\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postTipoItem() {\n    this.loadingNavBar = true;\n    this.tipoItemService\n      .postTipoItem(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          this.pnotify.error();\n        }\n      );\n  }\n}\n"]}