{"version":3,"sources":["./src/app/modules/comercial/cadastros/concorrentes/formulario/formulario.component.html","./src/app/modules/comercial/cadastros/concorrentes/lista/lista.component.ts","./src/app/modules/comercial/cadastros/concorrentes/concorrentes.module.ts","./src/app/modules/comercial/cadastros/concorrentes/concorrentes.service.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/concorrentes/lista/lista.component.scss","./src/app/modules/comercial/cadastros/concorrentes/concorrentes-routing.module.ts","./src/app/modules/comercial/cadastros/concorrentes/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/concorrentes/lista/lista.component.html","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/concorrentes/formulario/formulario.component.scss","./src/app/modules/comercial/cadastros/concorrentes/formulario/formulario.component.ts"],"names":[],"mappings":"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","file":"concorrentes-concorrentes-module-es2015.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nomeConcorrente\\\">Nome do concorrente</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeConcorrente\\\"\\n              formControlName=\\\"nomeConcorrente\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('nomeConcorrente') + ' ' + onFieldRequired(form.controls.nomeConcorrente)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeConcorrente')\\\" message=\\\"Nome do concorrente é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nomeMarcaAco\\\">Nome da marca de aço</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeMarcaAco\\\"\\n              formControlName=\\\"nomeMarcaAco\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value='1'>Ativo</option>\\n              <option value='0'>Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosConcorrenteService } from '../concorrentes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { Concorrente } from './../models/concorrente';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n\n@Component({\n  selector: 'comercial-cadastros-concorrente-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosConcorrenteListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar: boolean;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'nomeConcorrente';\n  orderType = 'ASC';\n\n  showAdvancedFilter = true;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems: number;\n\n  dados: Array<Concorrente> = [];\n  dadosPagination: Array<Concorrente> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  concorrenteSelecionado: Concorrente;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private concorrenteService: ComercialCadastrosConcorrenteService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Concorrentes');\n    this.onDetailPanelEmitter();\n    this.setConcorrenteSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Concorrentes',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      codConcorrenteTid: [formValue.codConcorrenteTid],\n      nomeConcorrente: [formValue.nomeConcorrente],\n      nomeMarcaAco: [formValue.nomeMarcaAco],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      codConcorrenteTid: null,\n      nomeConcorrente: null,\n      nomeMarcaAco: null,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    this.detailPanelService.hide();\n    this.itemsPerPage = this.form.value.registros;\n    this.currentPage = 1;\n    this.setRouterParams(this.verificaParams());\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.codConcorrenteTid) {\n      params.codConcorrenteTid = this.form.value.codConcorrenteTid;\n    }\n\n    if (this.form.value.nomeConcorrente) {\n      params.nomeConcorrente = this.form.value.nomeConcorrente;\n    }\n\n    if (this.form.value.nomeMarcaAco) {\n      params.nomeMarcaAco = this.form.value.nomeMarcaAco;\n    }\n\n    if (this.form.value.nomeMarcaAco) {\n      params.nomeMarcaAco = this.form.value.nomeMarcaAco;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  onAdvancedFilter(): void {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  onInput(field: string): void {\n    if (field === 'codConcorrenteTid') {\n      if (this.form.value.codConcorrenteTid.length > 0) {\n        this.form.controls.nomeConcorrente.setValue(null);\n        this.form.controls.nomeConcorrente.disable();\n        this.form.controls.nomeMarcaAco.setValue(null);\n        this.form.controls.nomeMarcaAco.disable();\n      } else {\n        this.form.controls.nomeConcorrente.enable();\n        this.form.controls.nomeMarcaAco.enable();\n      }\n    } else if (field === 'nomeConcorrente' || field === 'nomeMarcaAco') {\n      if (\n        (field === 'nomeConcorrente' &&\n          this.form.value.nomeConcorrente.length > 0) ||\n        (field === 'nomeMarcaAco' && this.form.value.nomeMarcaAco.length > 0)\n      ) {\n        this.form.controls.codConcorrenteTid.setValue(null);\n        this.form.controls.codConcorrenteTid.disable();\n      } else {\n        this.form.controls.codConcorrenteTid.enable();\n      }\n    }\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.concorrenteService\n      .getListaConcorrentes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            console.log(this.dados)\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  viewRegister(concorrente: Concorrente): void {\n    this.router.navigate(['../editar', concorrente.codConcorrenteTid], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  setConcorrenteSelecionado(){\n    this.concorrenteSelecionado = {\n      codConcorrente: null,\n      codConcorrenteTid: null,\n      nomeConcorrente: null,\n      nomeMarcaAco: null,\n      codSituacao: null,\n      codUsuarioCadastro: null,\n      nomeUsuarioCadastro: null,\n      dataCadastro: null,\n    }\n  }\n\n  onDetails(concorrente: Concorrente): void {\n    if(concorrente.codConcorrente != null){\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setConcorrenteSelecionado();\n    this.concorrenteSelecionado = concorrente;\n    this.alteracoes = [];\n\n    this.concorrenteService\n      .getAlteracoes(concorrente.codConcorrente)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n\n            for (let i = 0; i < this.alteracoes.length; i++) {\n              if (this.alteracoes[i].nomeCampo == \"Situação\") {\n                if (this.alteracoes[i].de == 1){\n                  this.alteracoes[i].de = \"Ativo\"\n                } else if (this.alteracoes[i].de == 0){\n                  this.alteracoes[i].de = \"Inativo\"\n                }\n\n                if (this.alteracoes[i].para == 1){\n                  this.alteracoes[i].para = \"Ativo\"\n                } else if (this.alteracoes[i].para == 0){\n                  this.alteracoes[i].para = \"Inativo\"\n                }\n              }\n            }\n\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n    } else {\n      this.detailPanelService.show();\n      this.alteracoes = [];\n      this.detailPanelService.loadedFinished(true);\n    }\n  }\n\n  onActivate(index: number, concorrente: Concorrente): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateConcorrente(index, concorrente) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(concorrente);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateConcorrente(index: number, concorrente: Concorrente): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.concorrenteService.activateConcorrente(concorrente.codConcorrenteTid);\n  }\n\n  onInactivate(index: number, concorrente: Concorrente): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateConcorrente(index, concorrente) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(concorrente);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateConcorrente(index: number, concorrente: Concorrente): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.concorrenteService.inactivateConcorrente(concorrente.codConcorrenteTid);\n  }\n\n  refreshMainData(concorrente: Concorrente): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (concorrente.codConcorrenteTid === this.dados[i].codConcorrenteTid) {\n        this.dados[i].codSituacao = concorrente.codSituacao;\n        return;\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosConcorrenteRoutingModule } from './concorrentes-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosConcorrenteListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosConcorrenteFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosConcorrenteListaComponent,\n    ComercialCadastrosConcorrenteFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosConcorrenteRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialCadastrosConcorrenteModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { Concorrente } from './models/concorrente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosConcorrenteService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/concorrentes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaConcorrentes(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getConcorrente(codConcorrenteTid: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codConcorrenteTid}`)\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codCnae: number): Observable<any> {\n    return this.http.get(`${this.API}/alteracoes/${codCnae}`).pipe(take(1));\n  }\n\n  private saveConcorrente(record: any) {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  private updateConcorrente(record: any) {\n    return this.http.put(`${this.API}/atualizar`, record).pipe(take(1));\n  }\n\n  save(record: Concorrente): Observable<any> {\n    if (record.codConcorrenteTid !== null) {\n      return this.updateConcorrente(record);\n    }\n\n    return this.saveConcorrente(record);\n  }\n\n  activateConcorrente(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateConcorrente(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb25jb3JyZW50ZXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosTransportadoraFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosConcorrenteListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosConcorrenteFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosConcorrenteListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosConcorrenteFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTransportadoraFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosConcorrenteFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTransportadoraFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialCadastrosConcorrenteRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosConcorrenteService } from '../concorrentes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosTransportadoraFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private concorrenteService: ComercialCadastrosConcorrenteService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.concorrenteService.getConcorrente(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codConcorrenteTid: null,\n        nomeConcorrente: null,\n        nomeMarcaAco: null,\n        codSituacao: null\n      }\n    });\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Concorrentes\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n              <label for=\\\"codConcorrenteTid\\\">Código do concorrente</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"codConcorrenteTid\\\"\\n                (input)=\\\"onInput('codConcorrenteTid')\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4 mb-lg-0\\\">\\n              <label for=\\\"nomeConcorrente\\\">Nome do concorrente</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"nomeConcorrente\\\"\\n                (input)=\\\"onInput('nomeConcorrente')\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4 mb-lg-0\\\">\\n              <label for=\\\"nomeMarcaAco\\\">Nome da marca de aço</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"nomeMarcaAco\\\"\\n                (input)=\\\"onInput('nomeMarcaAco')\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <ng-template #tooltipUltimaAlteracaoTemplate>\\n        <p class=\\\"text-nowrap mb-0\\\">Última alteração</p>\\n      </ng-template>\\n      <custom-table *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codConcorrente'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codConcorrenteTid')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome concorrente\\\"\\n                [active]=\\\"orderBy == 'nomeConcorrente'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeConcorrente')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Marca de aço</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span class=\\\"mr-1\\\">Usuário</span>\\n              <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipUltimaAlteracaoTemplate\\\"></i>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span class=\\\"mr-1\\\">data última atualização</span>\\n            </th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let concorrente of dadosPagination; let i = index\\\" [class.table-active]=\\\"concorrente.codConcorrenteTid == concorrenteSelecionado.codConcorrenteTid\\\">\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onDetails(concorrente)\\\">{{ concorrente.codConcorrenteTid }}</td>\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(concorrente)\\\">{{ concorrente.nomeConcorrente | uppercase }}</td>\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(concorrente)\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"concorrente.nomeMarcaAco == null || concorrente.nomeMarcaAco ==''\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"concorrente.nomeMarcaAco != null\\\">{{ concorrente.nomeMarcaAco | uppercase }}</span>\\n            </td>\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(concorrente)\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"concorrente.nomeUsuarioCadastro == null || concorrente.nomeUsuarioCadastro ==''\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"concorrente.nomeUsuarioCadastro != null\\\">{{ concorrente.nomeUsuarioCadastro | uppercase }}</span>\\n            </td>\\n            <td class=\\\"text-center hover\\\" (click)=\\\"onDetails(concorrente)\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"concorrente.dataCadastro == null || concorrente.dataCadastro == ''\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"concorrente.dataCadastro != null\\\">{{ concorrente.dataCadastro | date: 'dd/MM/yyyy' }}</span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"concorrente.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, concorrente)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"concorrente.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, concorrente)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"viewRegister(concorrente)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\n        <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\">Usuário</th>\\n              <th scope=\\\"col\\\">Tipo</th>\\n              <th scope=\\\"col\\\">Campo</th>\\n              <th scope=\\\"col\\\">de</th>\\n              <th scope=\\\"col\\\">para</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n              <td class=\\\"text-center\\\">{{ alteracao.dataCadastro | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n              <td>{{ alteracao.nomeTipoOperacao | uppercase }}</td>\\n              <td>{{ alteracao.nomeCampo | uppercase }}</td>\\n              <td>{{ alteracao.de | uppercase }}</td>\\n              <td>{{ alteracao.para | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9jb25jb3JyZW50ZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosConcorrenteService } from '../concorrentes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Concorrente } from '../models/concorrente';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-cadastros-concorrente-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosConcorrenteFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private concorrenteService: ComercialCadastrosConcorrenteService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.titleService.setTitle('Cadastro de concorrente');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar concorrente';\n      } else {\n        this.appTitle = 'Novo concorrente';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Concorrentes',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}/concorrentes/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: Concorrente = this.activatedRoute.snapshot.data.detalhes\n        .data;\n\n      this.form = this.formBuilder.group({\n        codConcorrenteTid: [detalhes.codConcorrenteTid],\n        nomeConcorrente: [\n          detalhes.nomeConcorrente,\n          [Validators.required, Validators.maxLength(40)],\n        ],\n        nomeMarcaAco: [detalhes.nomeMarcaAco, [Validators.maxLength(100)]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.concorrenteService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n"],"sourceRoot":"webpack:///"}