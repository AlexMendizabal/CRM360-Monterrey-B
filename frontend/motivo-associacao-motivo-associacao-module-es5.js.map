{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/motivo-associacao/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/motivo-associacao.module.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/motivo-associacao-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario.component.scss"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosMotivoAssociacaoListaComponent","activatedRoute","router","location","formBuilder","motivoAssociacaoService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","motivosAssociacao","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setMotivoAssociacaoSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","motivoAssociacao","codMotivoAssociacao","codSituacao","pagina","registros","required","checkOrder","nomeEscritorio","codEmpresa","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","motivoAssociacaoSelecionado","codCarteira","situacao","codUsuario","nomeUsuario","dataCadastro","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaMotivosAssociacao","pipe","next","response","hasOwnProperty","success","data","slice","error","mensagem","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateMotivoAssociacao","refreshMainData","showConfirm","confirmInactive","inactivateMotivoAssociacao","i","selector","template","ComercialCadastrosMotivoAssociacaoFormularioResolverGuard","route","getDetalhes","ComercialCadastrosMotivoAssociacaoModule","declarations","imports","forRoot","providers","ComercialCadastrosMotivoAssociacaoFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMotivoAssociacaoModuleRoutingModule","forChild","exports","FormDeactivateGuard","state","formCanDeactivate"],"mappings":"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","file":"motivo-associacao-motivo-associacao-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Motivo de associação\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n     <div class=\\\"row\\\" #scrollToFilter>\\r\\n      <div class=\\\"col\\\">\\r\\n        <advanced-filter>\\r\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-7\\\">\\r\\n                <label for=\\\"motivoAssociacao\\\">Motivo da Associação</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"motivoAssociacao\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-3\\\">\\r\\n                <label for=\\\"codSituacao\\\">Situação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"codSituacao\\\"\\r\\n                  formControlName=\\\"codSituacao\\\">\\r\\n                  <option value=\\\"0\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Ativos</option>\\r\\n                  <option value=\\\"2\\\">Inativos</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"registros\\\">Registros</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"registros\\\"\\r\\n                  formControlName=\\\"registros\\\">\\r\\n                  <option>25</option>\\r\\n                  <option>50</option>\\r\\n                  <option>100</option>\\r\\n                  <option>200</option>\\r\\n                  <option>300</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </advanced-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <subtitles\\r\\n          [data]=\\\"subtitles\\\"\\r\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        </subtitles>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Motivo de Associação</th>\\r\\n              <!-- <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th> -->\\r\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let motivoAssociacao of dadosPagination; let i = index\\\" [class.table-active]=\\\"motivoAssociacao.codMotivoAssociacao == motivoAssociacaoSelecionado.codMotivoAssociacao\\\">\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                [ngClass]=\\\"classStatusBorder(motivoAssociacao)\\\"\\r\\n                (click)=\\\"onDetails(motivoAssociacao)\\\">\\r\\n                {{ motivoAssociacao.motivoAssociacao | uppercase }}\\r\\n              </td>\\r\\n              <!-- <td\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"onDetails(motivoAssociacao)\\\">\\r\\n                {{ motivoAssociacao.situacao | uppercase }}\\r\\n              </td> -->\\r\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span *ngIf=\\\"motivoAssociacao.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, motivoAssociacao)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"motivoAssociacao.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, motivoAssociacao)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(motivoAssociacao)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\r\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\">Usuário</th>\\r\\n                <th scope=\\\"col\\\">Alteração</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosMotivoAssociacaoService } from '../motivo-associacao.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { MotivoAssociacao } from '../models/motivo-associacao';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-motivo-associacao-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialCadastrosMotivoAssociacaoListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codMotivoAssociacao';\r\n  orderType = 'ASC';\r\n\r\n  motivosAssociacao: Array<any> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<MotivoAssociacao> = [];\r\n  dadosPagination: Array<MotivoAssociacao> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  motivoAssociacaoSelecionado: MotivoAssociacao;\r\n  alteracoes: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private motivoAssociacaoService: ComercialCadastrosMotivoAssociacaoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Motivo de Associação');\r\n    this.onDetailPanelEmitter();\r\n    this.setMotivoAssociacaoSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Motivos de Associação'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      motivoAssociacao: [formValue.motivoAssociacao],\r\n      codMotivoAssociacao: [formValue.codMotivoAssociacao],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required]\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      nomeEscritorio: null,\r\n      codEmpresa: 0,\r\n      codSituacao: 1,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setMotivoAssociacaoSelecionado(): void {\r\n    this.motivoAssociacaoSelecionado = {\r\n      codMotivoAssociacao: -1,\r\n      motivoAssociacao: null,\r\n      codCarteira: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.motivoAssociacao) {\r\n      params.motivoAssociacao = this.form.value.motivoAssociacao;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.motivoAssociacaoService\r\n      .getListaMotivosAssociacao(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(motivoAssociacao: MotivoAssociacao): string {\r\n    let borderClass: string;\r\n\r\n    if (motivoAssociacao.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (motivoAssociacao.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onDetails(motivoAssociacao: MotivoAssociacao): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setMotivoAssociacaoSelecionado();\r\n    this.motivoAssociacaoSelecionado = motivoAssociacao;\r\n    this.alteracoes = [];\r\n\r\n    this.motivoAssociacaoService\r\n      .getAlteracoes(motivoAssociacao.codMotivoAssociacao)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(motivoAssociacao: MotivoAssociacao): void {\r\n    this.router.navigate(['../editar', motivoAssociacao.codMotivoAssociacao], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, motivoAssociacao: MotivoAssociacao): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result\r\n            ? this.activateMotivoAssociacao(index, motivoAssociacao)\r\n            : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(motivoAssociacao);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateMotivoAssociacao(\r\n    index: number,\r\n    motivoAssociacao: MotivoAssociacao\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.motivoAssociacaoService.activateMotivoAssociacao(\r\n      motivoAssociacao.codMotivoAssociacao\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, motivoAssociacao: MotivoAssociacao): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result\r\n            ? this.inactivateMotivoAssociacao(index, motivoAssociacao)\r\n            : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(motivoAssociacao);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateMotivoAssociacao(\r\n    index: number,\r\n    motivoAssociacao: MotivoAssociacao\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.motivoAssociacaoService.inactivateMotivoAssociacao(\r\n      motivoAssociacao.codMotivoAssociacao\r\n    );\r\n  }\r\n\r\n  refreshMainData(motivoAssociacao: MotivoAssociacao): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (\r\n        motivoAssociacao.codMotivoAssociacao ===\r\n        this.dados[i].codMotivoAssociacao\r\n      ) {\r\n        this.dados[i].codSituacao = motivoAssociacao.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tb3Rpdm8tYXNzb2NpYWNhby9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMotivoAssociacaoService } from '../motivo-associacao.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosMotivoAssociacaoFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private motivoAssociacaoService: ComercialCadastrosMotivoAssociacaoService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.motivoAssociacaoService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codMotivoAssociacao: null,\r\n        motivoAssociacao: null,\r\n        codCarteira: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"motivoAssociacao\\\">Motivo de Associação</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"motivoAssociacao\\\"\\r\\n              formControlName=\\\"motivoAssociacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('motivoAssociacao') + ' ' + onFieldRequired(form.controls.motivoAssociacao)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('motivoAssociacao')\\\" message=\\\"Nome do escritório é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <!-- <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              formControlName=\\\"codEmpresa\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"nomeEmpresa\\\"\\r\\n              bindValue=\\\"idEmpresa\\\"\\r\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired(form.controls.codEmpresa)\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMotivoAssociacaoModuleRoutingModule } from './motivo-associacao-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMotivoAssociacaoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMotivoAssociacaoFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMotivoAssociacaoListaComponent,\r\n    ComercialCadastrosMotivoAssociacaoFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosMotivoAssociacaoModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosMotivoAssociacaoModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMotivoAssociacaoService } from '../motivo-associacao.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { MotivoAssociacao } from '../models/motivo-associacao';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-motivo-associacao-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialCadastrosMotivoAssociacaoFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private motivoAssociacaoService: ComercialCadastrosMotivoAssociacaoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Motivo de Associação';\r\n      } else {\r\n        this.appTitle = 'Novo Motivo de Associação';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Motivo Associação',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/motivo-associacao/lista`\r\n        },\r\n        {\r\n          descricao: this.appTitle\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: MotivoAssociacao = this.activatedRoute.snapshot.data\r\n        .detalhes.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codMotivoAssociacao: [detalhes.codMotivoAssociacao],\r\n        motivoAssociacao: [detalhes.motivoAssociacao, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.motivoAssociacaoService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMotivoAssociacaoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMotivoAssociacaoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMotivoAssociacaoFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosMotivoAssociacaoListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMotivoAssociacaoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMotivoAssociacaoFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMotivoAssociacaoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMotivoAssociacaoFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosMotivoAssociacaoModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tb3Rpdm8tYXNzb2NpYWNhby9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";"]}