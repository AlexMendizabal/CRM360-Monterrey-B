{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/motivo-associacao/lista/lista.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/motivo-associacao.module.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/motivo-associacao-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/motivo-associacao/formulario/formulario.component.scss"],"names":["ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialCadastrosMotivoAssociacaoListaComponent","activatedRoute","router","location","formBuilder","motivoAssociacaoService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","motivosAssociacao","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setMotivoAssociacaoSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","motivoAssociacao","codMotivoAssociacao","codSituacao","pagina","registros","required","checkOrder","nomeEscritorio","codEmpresa","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","motivoAssociacaoSelecionado","codCarteira","situacao","codUsuario","nomeUsuario","dataCadastro","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaMotivosAssociacao","pipe","next","response","hasOwnProperty","success","data","slice","error","mensagem","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","setTimeout","loadedFinished","index","confirmActivate","asObservable","result","activateMotivoAssociacao","refreshMainData","showConfirm","confirmInactive","inactivateMotivoAssociacao","i","selector","template","ComercialCadastrosMotivoAssociacaoFormularioResolverGuard","route","getDetalhes","ComercialCadastrosMotivoAssociacaoModule","declarations","imports","forRoot","providers","ComercialCadastrosMotivoAssociacaoFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMotivoAssociacaoModuleRoutingModule","forChild","exports","FormDeactivateGuard","state","formCanDeactivate"],"mappings":"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","file":"motivo-associacao-motivo-associacao-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Motivo de associação\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-7\\\">\\n                <label for=\\\"motivoAssociacao\\\">Motivo da Associação</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"motivoAssociacao\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"codSituacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"codSituacao\\\"\\n                  formControlName=\\\"codSituacao\\\">\\n                  <option value=\\\"0\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"2\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-2\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Motivo de Associação</th>\\n              <!-- <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th> -->\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let motivoAssociacao of dadosPagination; let i = index\\\" [class.table-active]=\\\"motivoAssociacao.codMotivoAssociacao == motivoAssociacaoSelecionado.codMotivoAssociacao\\\">\\n              <td\\n                class=\\\"hover\\\"\\n                [ngClass]=\\\"classStatusBorder(motivoAssociacao)\\\"\\n                (click)=\\\"onDetails(motivoAssociacao)\\\">\\n                {{ motivoAssociacao.motivoAssociacao | uppercase }}\\n              </td>\\n              <!-- <td\\n                class=\\\"text-center hover\\\"\\n                (click)=\\\"onDetails(motivoAssociacao)\\\">\\n                {{ motivoAssociacao.situacao | uppercase }}\\n              </td> -->\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"motivoAssociacao.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, motivoAssociacao)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"motivoAssociacao.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, motivoAssociacao)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(motivoAssociacao)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Histórico de alterações\\\">\\n          <custom-table *ngIf=\\\"alteracoes.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\">Usuário</th>\\n                <th scope=\\\"col\\\">Alteração</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n                <td class=\\\"text-center\\\">{{ alteracao.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n                <td>{{ alteracao.mensagem | uppercase }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosMotivoAssociacaoService } from '../motivo-associacao.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { MotivoAssociacao } from '../models/motivo-associacao';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-motivo-associacao-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialCadastrosMotivoAssociacaoListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codMotivoAssociacao';\n  orderType = 'ASC';\n\n  motivosAssociacao: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<MotivoAssociacao> = [];\n  dadosPagination: Array<MotivoAssociacao> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  motivoAssociacaoSelecionado: MotivoAssociacao;\n  alteracoes: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private motivoAssociacaoService: ComercialCadastrosMotivoAssociacaoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Motivo de Associação');\n    this.onDetailPanelEmitter();\n    this.setMotivoAssociacaoSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Motivos de Associação'\n        }\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      motivoAssociacao: [formValue.motivoAssociacao],\n      codMotivoAssociacao: [formValue.codMotivoAssociacao],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required]\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      nomeEscritorio: null,\n      codEmpresa: 0,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setMotivoAssociacaoSelecionado(): void {\n    this.motivoAssociacaoSelecionado = {\n      codMotivoAssociacao: -1,\n      motivoAssociacao: null,\n      codCarteira: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      dataCadastro: null\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.motivoAssociacao) {\n      params.motivoAssociacao = this.form.value.motivoAssociacao;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.motivoAssociacaoService\n      .getListaMotivosAssociacao(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(motivoAssociacao: MotivoAssociacao): string {\n    let borderClass: string;\n\n    if (motivoAssociacao.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (motivoAssociacao.codSituacao === 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onDetails(motivoAssociacao: MotivoAssociacao): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setMotivoAssociacaoSelecionado();\n    this.motivoAssociacaoSelecionado = motivoAssociacao;\n    this.alteracoes = [];\n\n    this.motivoAssociacaoService\n      .getAlteracoes(motivoAssociacao.codMotivoAssociacao)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(motivoAssociacao: MotivoAssociacao): void {\n    this.router.navigate(['../editar', motivoAssociacao.codMotivoAssociacao], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  onActivate(index: number, motivoAssociacao: MotivoAssociacao): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result\n            ? this.activateMotivoAssociacao(index, motivoAssociacao)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(motivoAssociacao);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateMotivoAssociacao(\n    index: number,\n    motivoAssociacao: MotivoAssociacao\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.motivoAssociacaoService.activateMotivoAssociacao(\n      motivoAssociacao.codMotivoAssociacao\n    );\n  }\n\n  onInactivate(index: number, motivoAssociacao: MotivoAssociacao): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result\n            ? this.inactivateMotivoAssociacao(index, motivoAssociacao)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(motivoAssociacao);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateMotivoAssociacao(\n    index: number,\n    motivoAssociacao: MotivoAssociacao\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.motivoAssociacaoService.inactivateMotivoAssociacao(\n      motivoAssociacao.codMotivoAssociacao\n    );\n  }\n\n  refreshMainData(motivoAssociacao: MotivoAssociacao): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (\n        motivoAssociacao.codMotivoAssociacao ===\n        this.dados[i].codMotivoAssociacao\n      ) {\n        this.dados[i].codSituacao = motivoAssociacao.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tb3Rpdm8tYXNzb2NpYWNhby9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMotivoAssociacaoService } from '../motivo-associacao.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosMotivoAssociacaoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private motivoAssociacaoService: ComercialCadastrosMotivoAssociacaoService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.motivoAssociacaoService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codMotivoAssociacao: null,\n        motivoAssociacao: null,\n        codCarteira: null,\n        codSituacao: null,\n        situacao: null,\n        codUsuario: null,\n        nomeUsuario: null,\n        dataCadastro: null\n      }\n    });\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"motivoAssociacao\\\">Motivo de Associação</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"motivoAssociacao\\\"\\n              formControlName=\\\"motivoAssociacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('motivoAssociacao') + ' ' + onFieldRequired(form.controls.motivoAssociacao)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('motivoAssociacao')\\\" message=\\\"Nome do escritório é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <!-- <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"empresas\\\"\\n              formControlName=\\\"codEmpresa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"nomeEmpresa\\\"\\n              bindValue=\\\"idEmpresa\\\"\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired(form.controls.codEmpresa)\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n          </div> -->\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"2\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMotivoAssociacaoModuleRoutingModule } from './motivo-associacao-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMotivoAssociacaoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMotivoAssociacaoFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMotivoAssociacaoListaComponent,\n    ComercialCadastrosMotivoAssociacaoFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosMotivoAssociacaoModuleRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialCadastrosMotivoAssociacaoModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMotivoAssociacaoService } from '../motivo-associacao.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { MotivoAssociacao } from '../models/motivo-associacao';\n\n@Component({\n  selector: 'comercial-cadastros-motivo-associacao-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialCadastrosMotivoAssociacaoFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private motivoAssociacaoService: ComercialCadastrosMotivoAssociacaoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Motivo de Associação';\n      } else {\n        this.appTitle = 'Novo Motivo de Associação';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\n        },\n        {\n          descricao: 'Motivo Associação',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/motivo-associacao/lista`\n        },\n        {\n          descricao: this.appTitle\n        }\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: MotivoAssociacao = this.activatedRoute.snapshot.data\n        .detalhes.data;\n\n      this.form = this.formBuilder.group({\n        codMotivoAssociacao: [detalhes.codMotivoAssociacao],\n        motivoAssociacao: [detalhes.motivoAssociacao, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]]\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n    this.loaderFullScreen = false;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.motivoAssociacaoService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMotivoAssociacaoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMotivoAssociacaoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMotivoAssociacaoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosMotivoAssociacaoListaComponent\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMotivoAssociacaoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMotivoAssociacaoFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMotivoAssociacaoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMotivoAssociacaoFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialCadastrosMotivoAssociacaoModuleRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tb3Rpdm8tYXNzb2NpYWNhby9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";"]}