{"version":3,"sources":["webpack:///src/app/modules/logistica/estoque/inventario/inventario.module.ts","webpack:///src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.ts","webpack:///src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.scss","webpack:///src/app/modules/logistica/estoque/inventario/inventario.component.html","webpack:///src/app/modules/logistica/estoque/inventario/inventario.component.scss","webpack:///src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.scss","webpack:///src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.component.html","webpack:///src/app/modules/logistica/estoque/inventario/lista/lista.component.scss","webpack:///src/app/modules/logistica/estoque/inventario/filtro/filtro.component.ts","webpack:///src/app/modules/logistica/estoque/inventario/lista/lista.service.ts","webpack:///src/app/modules/logistica/estoque/inventario/inventario-routing.module.ts","webpack:///src/app/modules/logistica/estoque/inventario/filtro/filtro.component.html","webpack:///src/app/modules/logistica/estoque/inventario/filtro/filtro.service.ts","webpack:///src/app/modules/logistica/estoque/inventario/inventario.component.ts","webpack:///src/app/modules/logistica/estoque/inventario/lista/lista.component.html","webpack:///src/app/modules/logistica/estoque/inventario/lista/inventario/inventario.service.ts","webpack:///src/app/modules/logistica/estoque/inventario/filtro/filtro.component.scss","webpack:///src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.service.ts","webpack:///src/app/modules/logistica/estoque/inventario/lista/lista.component.ts","webpack:///src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.html","webpack:///src/app/modules/logistica/estoque/inventario/lista/relatorio/relatorio.component.ts"],"names":["LogisticaEstoqueInventarioModule","declarations","imports","forRoot","providers","provide","useValue","LogisticaEstoqueInventarioListaInventarioComponent","inventarioService","activatedRoute","notice","route","atividadesService","listaInventarios","inventarios","loaderNavbar","spinnerFullScreen","ultimoStatusEnviado","noResult","noResultado","noLista","inve","compressedTable","infoClasses","infoLinha","infoIdInventario","cdInventario","parametro","checked","breadCrumbTree","descricao","routerLink","itemsPerPage","currentPage","tipo","empresa","deposito","linha","classe","dataInicial","dataFinal","sigla","registrarAcesso","subscribe","getInventario","page","pipe","data","lancamentos","forEach","element","push","informacoes","totalItems","error","idInventario","i","getClassesInventario","response","body","dsClasse","dsLinha","event","idStatusInventario","navigate","queryParams","index","inventario","status","selector","template","LogisticaEstoqueInventarioFiltroComponent","formBuilder","localeService","empresasService","currentUser","JSON","parse","localStorage","getItem","matriculaAuditor","ativarCampos","loading","Date","empresas","depositos","linhas","classes","materiais","disabledBotoes","finalizar","editar","aprovar","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","form","group","required","getPerfil","getEmpresas","keys","length","getLinhas","type","tipoInventario","get","idEmpresa","value","getDepositos","descricaoLinhas","getClasses","idClasses","getMateriais","result","cdEmpresa","cdDeposito","postCadastraInventario","postMateriais","dsErro","cdMateriais","codigoMaterial","particao","qtEnvios","Math","ceil","mat","slice","contador","reset","field","onFieldInvalid","touched","formControl","controls","validator","validationResult","window","open","LogisticaEstoqueInventarioListaService","http","API","matricula","cdMaterial","naoConsideraEstoqueZerado","params","qtPagina","observe","requisicao","post","observacao","put","nrNotaFiscal","notaFiscal","notasFiscais","nrNotaFiscalRo","notaFiscalRo","notasFiscaisRo","providedIn","routes","path","component","redirectTo","pathMatch","LogisticaEstoqueInventarioRoutingModule","forChild","exports","LogisticaEstoqueInventarioFiltroService","btoa","LogisticaEstoqueInventarioComponent","LogisticaEstoqueInventarioListaInventarioService","dateService","BASE_URL","di","convert2PhpDate","df","pagina","LogisticaEstoqueInventarioListaRelatorioService","LogisticaEstoqueInventarioListaComponent","xlsxService","dateSevice","modalService","snapshot","cdNotaFiscal","cdNotaFiscalRo","adminProfile","considerarMaterialSemEstoque","perfilTipo","listas","listaInfo","reabrir","habilita","info","ativAprovar","ativFinaliza","ativReabrir","ativCancelar","ativEditar","ativSalvar","ativNotaFiscal","ativExport","inativBotoes","desabilitarBotoes","config","animated","parametros","colunas","begin","end","beginP","endP","selectedPeople","listaMateriaisFiltro","materiaisNotaFiscal","materiaisNotaFiscalRo","getListaMateriaisParaFiltro","changeColunas","getInfoInventario","onLoadAplication","setTimeout","perfilLoaded","getLista","getTotal","totalContagem","qtPecaContagem","pesoPeca","parseFloat","qtPesoContagem","getInfoInventarioRotativo","somaInventarioRotativo","saldoEstoque","resultadoInventario","idInventarioMaterial","qtPeca","qtPeso","postSalvar","success","dateDiff","dateRef","modalRef","show","finaliza","confirm","atualizarInventario","valor","cancela","date1","date2","diffTime","abs","getTime","diffDays","justificativa","statusInventario","finalizacao","dNow","localdate","getDate","getMonth","getFullYear","getHours","getMinutes","dataNow","dtInclusao","siglaStatusInventario","dsTipoInventario","controlaAcessoBotoes","id","listaColunas","titulo","indexOf","exportFile","getMateriaisNotasFiscais","notaFiscalSelecionada","getMateriaisNotasFiscaisRo","notaFiscalSelecionadaRo","getListaExistente","childModal","getListaExistenteRo","childModalRo","containsNotaFiscal","isNotUndefined","tempNotasFiscais","find","getListaCarregadaMaisNotaFiscal","val","temp","filter","row","some","property","toString","getNotasFiscais","getListaCarregadaMaisNotaFiscalRo","getNotasFiscaisRo","qtNotasFiscais","message","tempNotasFiscaisRo","qtNotasFiscaisRo","hide","checkAlterado","req","salvarNotasFiscais","salvarNotasFiscaisRo","material","undefined","pesoFisico","estoque","qtPesoEstoque","qtMaterialNotaFiscal","saldo","precoMinimo","LogisticaEstoqueInventarioListaRelatorioComponent","pdfService","infoClasse","getInfoInventarioRotativoGeral","infoMateriais","resultadoDiferenca","inventarioRotativoTotal","resultTotalInventario","download"],"mappings":"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","file":"estoque-inventario-inventario-module-es5.js","sourcesContent":["import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\nimport { LogisticaEstoqueInventarioComponent } from './inventario.component';\r\nimport { LogisticaEstoqueInventarioFiltroComponent } from './filtro/filtro.component';\r\nimport { LogisticaEstoqueInventarioRoutingModule } from './inventario-routing.module';\r\nimport { LogisticaEstoqueInventarioListaComponent } from './lista/lista.component';\r\nimport { LogisticaEstoqueInventarioListaInventarioComponent } from './lista/inventario/inventario.component';\r\nimport { LogisticaEstoqueInventarioListaRelatorioComponent } from './lista/relatorio/relatorio.component';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaEstoqueInventarioComponent,\r\n    LogisticaEstoqueInventarioFiltroComponent,\r\n    LogisticaEstoqueInventarioListaComponent,\r\n    LogisticaEstoqueInventarioListaInventarioComponent,\r\n    LogisticaEstoqueInventarioListaRelatorioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FilterPipeModule,\r\n    ModalModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    LogisticaEstoqueInventarioRoutingModule,\r\n    NotFoundModule,\r\n    SharedModule\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-PT' }]\r\n})\r\nexport class LogisticaEstoqueInventarioModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LogisticaEstoqueInventarioListaInventarioService } from './inventario.service';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-lista-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioListaInventarioComponent\r\n  implements OnInit {\r\n  listaInventarios: any = [];\r\n  inventarios: any = [];\r\n  totalItems: number;\r\n  loaderNavbar: boolean = false;\r\n  spinnerFullScreen: boolean = true;\r\n  ultimoStatusEnviado: any = null;\r\n  noResult: boolean = true;\r\n  noResultado: boolean = true;\r\n  noLista: boolean = true;\r\n  $subscription: Subscription;\r\n  inve: any = [];\r\n  compressedTable = false;\r\n  idInventario: number;\r\n  infoClasses = '';\r\n  infoLinha = '';\r\n  infoIdInventario = '';\r\n\r\n  /* Parametros para filtros */\r\n  tipo: any;\r\n  empresa: any;\r\n  deposito: any;\r\n  linha: any;\r\n  classe: any;\r\n  dataInicial: any;\r\n  dataFinal: any;\r\n  cdInventario = '';\r\n  sigla: any;\r\n  informacoes: any;\r\n  parametro: boolean = false;\r\n  checked: boolean = true;\r\n  /* Parametros para filtros */\r\n\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Filtro',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Lista para consulta de inventários'\r\n    }\r\n  ];\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  currentPage: number = 1;\r\n  /* Paginação */\r\n\r\n  constructor(\r\n    private inventarioService: LogisticaEstoqueInventarioListaInventarioService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notice: PNotifyService,\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tipo = '';\r\n    this.empresa = '';\r\n    this.deposito = '';\r\n    this.linha = '';\r\n    this.classe = '';\r\n    this.dataInicial = '';\r\n    this.dataFinal = '';\r\n    this.cdInventario = '';\r\n    this.sigla = '';\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getInventario('');\r\n  }\r\n\r\n  getInventario(sigla = '', page = 1) {\r\n    this.loaderNavbar = true;\r\n    this.sigla = sigla;\r\n    this.checked = !this.checked;\r\n    if (this.checked == false) {\r\n      sigla = '';\r\n    }\r\n\r\n    this.inventarioService\r\n      .getInventario(\r\n        page,\r\n        this.tipo,\r\n        this.empresa,\r\n        this.deposito,\r\n        this.linha,\r\n        this.classe,\r\n        this.dataInicial,\r\n        this.dataFinal,\r\n        this.cdInventario,\r\n        sigla\r\n      )\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        data => {\r\n          this.noResult = false;\r\n          this.inve = data['inventarios'];\r\n          this.inventarios = data['inventarios'];\r\n          this.loaderNavbar = false;\r\n          let lancamentos = [];\r\n          this.inventarios.forEach(element => {\r\n            if (element.empresa || element.deposito) {\r\n              lancamentos.push({\r\n                empresa: element.empresa,\r\n                deposito: element.deposito\r\n              });\r\n            }\r\n          });\r\n\r\n          this.informacoes = lancamentos;\r\n\r\n          if (!this.totalItems) {\r\n            this.totalItems = data['qtRegistros'];\r\n          }\r\n        },\r\n        error => {\r\n          this.notice.notice(\r\n            'Não há inventários cadastrados para esse status.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  getClassesInventario(idInventario, i) {\r\n    this.noLista = true;\r\n    this.loaderNavbar = true;\r\n    this.noResultado = false;\r\n    this.inventarioService\r\n      .getClassesInventario(idInventario)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response['status'] === 200) {\r\n          response.body.forEach(element => {\r\n            if (element.dsClasse == null) {\r\n              this.noResultado = true;\r\n            } else {\r\n              this.noLista = false;\r\n              this.infoClasses = response.body;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    this.compressedTable = true;\r\n    this.infoLinha = this.inve[i].dsLinha;\r\n    this.infoIdInventario = this.inve[i].idInventario;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.getInventario('', event.page);\r\n  }\r\n  /* Paginação */\r\n\r\n  abrirInventario(idInventario, idStatusInventario) {\r\n    this.route.navigate(\r\n      [`logistica/estoque/inventario/${idInventario}/contagem-materiais`],\r\n      {\r\n        queryParams: {\r\n          tipo: this.tipo,\r\n          empresa: this.empresa,\r\n          deposito: this.deposito,\r\n          linha: this.linha,\r\n          classe: this.classe,\r\n          dataInicial: this.dataInicial,\r\n          dataFinal: this.dataFinal,\r\n          sigla: this.sigla\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  abrirRelatorio(idInventario, idStatusInventario) {\r\n    this.route.navigate(\r\n      [`logistica/estoque/inventario/${idInventario}/relatorio`],\r\n      {\r\n        queryParams: {\r\n          tipo: this.tipo,\r\n          empresa: this.empresa,\r\n          deposito: this.deposito,\r\n          linha: this.linha,\r\n          classe: this.classe,\r\n          dataInicial: this.dataInicial,\r\n          dataFinal: this.dataFinal,\r\n          sigla: this.sigla,\r\n          informacoes: this.informacoes\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(index) {\r\n    this.idInventario = this.inventarios[index].idInventario;\r\n    this.compressedTable = true;\r\n  }\r\n\r\n  onClose() {\r\n    this.compressedTable = false;\r\n  }\r\n\r\n  clickEvent(inventario) {\r\n    this.inventarios.forEach(element => {\r\n      if (element.idInventario != inventario.idInventario) {\r\n        element.status = false;\r\n      } else if (inventario.status == true) {\r\n        inventario.status = true;\r\n      } else {\r\n        inventario.status = !inventario.status;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"ul li {\\n  list-style-type: none;\\n}\\n\\n.bgdValueList {\\n  background-color: #e9ecef;\\n}\\n\\n.textUpper {\\n  font-size: -webkit-xxx-large;\\n}\\n\\n.espacamento50 {\\n  height: 50px;\\n}\\n\\n.espacamento20 {\\n  height: 20px;\\n}\\n\\n.espacamento25 {\\n  height: 25px;\\n}\\n\\n.espacamento150 {\\n  height: 150px;\\n}\\n\\n.espacamento250 {\\n  height: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL3JlbGF0b3Jpby9yZWxhdG9yaW8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLDRCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS9lc3RvcXVlL2ludmVudGFyaW8vbGlzdGEvcmVsYXRvcmlvL3JlbGF0b3Jpby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIGxpe1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG5cclxuLmJnZFZhbHVlTGlzdHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllY2VmO1xyXG59XHJcblxyXG4udGV4dFVwcGVye1xyXG4gIGZvbnQtc2l6ZTogLXdlYmtpdC14eHgtbGFyZ2U7XHJcbn1cclxuXHJcbi5lc3BhY2FtZW50bzUwe1xyXG4gIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuLmVzcGFjYW1lbnRvMjB7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4uZXNwYWNhbWVudG8yNXtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbn1cclxuXHJcbi5lc3BhY2FtZW50bzE1MHtcclxuICBoZWlnaHQ6IDE1MHB4O1xyXG59XHJcblxyXG4uZXNwYWNhbWVudG8yNTB7XHJcbiAgaGVpZ2h0OiAxNTBweDtcclxufSJdfQ== */\";","export default \"\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VzdG9xdWUvaW52ZW50YXJpby9pbnZlbnRhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \".bgRowTable {\\n  background-color: #b6b8b9;\\n}\\n\\n.loaderTab {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2ludmVudGFyaW8vaW52ZW50YXJpby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2ludmVudGFyaW8vaW52ZW50YXJpby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iZ1Jvd1RhYmxlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjZiOGI5O1xyXG59XHJcblxyXG4ubG9hZGVyVGFiIHtcclxuICB3aWR0aDogMS41cmVtO1xyXG4gIGhlaWdodDogMS41cmVtO1xyXG59XHJcbiJdfQ== */\";","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Consulta de inventários</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Início dos Filtros -->\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\" [hidden]=\\\"spinnerFullScreen\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"row justify-content-between mb-2\\\">\\r\\n      <div class=\\\"col-6 pt-4\\\">\\r\\n        <div class=\\\"d-flex\\\">\\r\\n          <div class=\\\"legend yellow hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_ABER' }\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_ABER')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">EM ABERTO</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend red hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_CANC'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_CANC')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">CANCELADO</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend gray hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_CANC_SIST'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_CANC_SIST')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">CANCELADO PELO SISTEMA</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend green hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_FINA'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_FINA')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">FINALIZADO</div>\\r\\n          </div>\\r\\n          <div class=\\\"legend blue hover\\\" [ngClass]=\\\"{'active': sigla == 'LOGI_INVE_STAT_APRO'}\\\" (click)=\\\"getInventario('LOGI_INVE_STAT_APRO')\\\">\\r\\n            <div class=\\\"square\\\"></div>\\r\\n            <div class=\\\"text\\\">APROVADO</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-3 justify-content-end\\\">\\r\\n        <label for=\\\"cdInventario\\\"> Código do inventário </label>\\r\\n        <input \\r\\n          id=\\\"cdInventario\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"DIGITE...\\\"\\r\\n          [(ngModel)]=\\\"cdInventario\\\"\\r\\n          (keyup.enter)=\\\"getInventario()\\\"\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 p-0\\\" [hidden]=\\\"noResult\\\" class=\\\"d-flex\\\">\\r\\n      <div>\\r\\n        <div style=\\\"height: 55vh\\\">\\r\\n          <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th>Data</th>\\r\\n                <th>Código</th>\\r\\n                <th>Depósito</th>\\r\\n                <th [hidden]=\\\"compressedTable\\\">Linha</th>\\r\\n                <th>Tipo</th>\\r\\n                <th style=\\\"width:250px\\\" nowrap>Auditor</th>\\r\\n                <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n                <th class=\\\"align-middle\\\" style=\\\"width:70px\\\"></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let inventario of inventarios let i = index\\\" class=\\\"hover\\\" \\r\\n                    [ngClass]=\\\"inventario.status ? 'bgRowTable' : ''\\\" (click)=\\\"getClassesInventario(inventario.idInventario, i); clickEvent(inventario)\\\"\\r\\n              >\\r\\n                <td [ngClass]=\\\"{\\r\\n                  'border-primary'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_APRO',\\r\\n                  'border-secondary'  : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST',\\r\\n                  'border-danger'     : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_CANC',\\r\\n                  'border-success'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_FINA',\\r\\n                  'border-warning'    : inventario.siglaStatusInventario == 'LOGI_INVE_STAT_ABER'\\r\\n                }\\\"\\r\\n                > {{ inventario.dtInclusao  | date : 'dd/MM/yyyy HH:mm:ss'}} </td>\\r\\n                <td> {{ inventario.idInventario   | number:'6.0-0'}} </td>\\r\\n                <td> {{ inventario.dsDeposito | uppercase }} </td>\\r\\n                <td [hidden]=\\\"compressedTable\\\"> {{ inventario.dsLinha | uppercase }} </td>\\r\\n                <td> {{ inventario.dsTipoInventario | uppercase }} </td>\\r\\n                <td style=\\\"width:250px\\\" nowrap> {{ inventario.dsUsuario | uppercase }} </td> \\r\\n                <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n                  <span tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                    <button class=\\\"btn-icon-sm\\\" (click)=\\\"abrirInventario(inventario.idInventario)\\\">\\r\\n                      <i class=\\\"fas fa-search\\\"></i>\\r\\n                    </button>\\r\\n                  </span>\\r\\n                </td>\\r\\n                <td class=\\\"align-middle\\\" style=\\\"width:70px\\\">\\r\\n                  <span tooltip=\\\"Imprimir\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                    <button class=\\\"btn-icon-sm\\\" (click)=\\\"abrirRelatorio(inventario.idInventario)\\\">\\r\\n                      <i class=\\\"fas fa-file-alt\\\"></i>\\r\\n                    </button>\\r\\n                  </span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"mt-3\\\" [hidden]=\\\"noResult\\\">\\r\\n            Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n          <pagination\\r\\n            [maxSize]=\\\"10\\\"\\r\\n            [totalItems]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <tabset class=\\\"col-3 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">          \\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onClose()\\\">\\r\\n          <i class=\\\"fas fa-times\\\"></i>\\r\\n        </button>\\r\\n        <tab heading=\\\"Detalhes - {{ infoIdInventario | number:'6.0-0' }}\\\">\\r\\n          <div class=\\\"border-right border-left border-bottom border-top px-3 pt-3\\\">\\r\\n            <div class=\\\"form-row\\\" [hidden]=\\\"noLista\\\">\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <div class=\\\"text-nowrap\\\">\\r\\n                  <table class=\\\"table table-sm table-hover text-left table-fixed\\\">\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                      <tr>\\r\\n                        <th>Classe</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let infoClasse of infoClasses\\\">\\r\\n                        <td class=\\\"border-top-0\\\"> {{ infoClasse.dsClasse | uppercase }} </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                    <thead class=\\\"thead-light\\\">\\r\\n                      <tr>\\r\\n                        <th>Linha</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td class=\\\"border-top-0\\\"> {{ infoLinha | uppercase }} </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div\\r\\n            class=\\\"d-flex align-items-center justify-content-center\\\"\\r\\n            style=\\\"width: 100%; height: 80%;\\\"\\r\\n            [hidden]=\\\"!noResultado\\\"\\r\\n            >\\r\\n              <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n            </div>\\r\\n            <div class=\\\"spinner-border text-primary justify-content-end positionSpinner loaderTab\\\" role=\\\"status\\\" [hidden]=\\\"!loaderNavbar\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </tab>\\r\\n      </tabset>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"d-flex align-items-center justify-content-center\\\"\\r\\n      style=\\\"width: 100%; height: 80%;\\\"\\r\\n      [hidden]=\\\"!noResult\\\"\\r\\n      >\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \".border-left-green {\\n  border-left-color: green !important;\\n}\\n\\n.border-left-orange {\\n  border-left-color: orange !important;\\n}\\n\\n.modal-content {\\n  position: absolute;\\n  left: -50%;\\n  width: 1000px;\\n}\\n\\n.actions button {\\n  background-color: transparent;\\n  border: unset;\\n  color: #586464;\\n  font-weight: 500;\\n  line-height: 35px;\\n  padding: 0px 10px;\\n}\\n\\n.bg-active {\\n  background-color: #e9ecef;\\n}\\n\\ntr:hover {\\n  background-color: #f8fafb !important;\\n}\\n\\n.actions button:hover {\\n  color: #005fdc;\\n}\\n\\n.positionSpinner {\\n  margin-top: 19px;\\n  right: -20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUNBQUE7QUFDRjs7QUFFQTtFQUNFLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSw2QkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0Usb0NBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlci1sZWZ0LWdyZWVuIHtcclxuICBib3JkZXItbGVmdC1jb2xvcjogZ3JlZW4gIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJvcmRlci1sZWZ0LW9yYW5nZSB7XHJcbiAgYm9yZGVyLWxlZnQtY29sb3I6IG9yYW5nZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IC01MCU7XHJcbiAgd2lkdGg6IDEwMDBweDtcclxufVxyXG5cclxuLmFjdGlvbnMgYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXI6IHVuc2V0O1xyXG4gIGNvbG9yOiAjNTg2NDY0O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XHJcbiAgcGFkZGluZzogMHB4IDEwcHg7XHJcbn1cclxuXHJcbi5iZy1hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XHJcbn1cclxuXHJcbnRyOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmYWZiICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5hY3Rpb25zIGJ1dHRvbjpob3ZlciB7XHJcbiAgY29sb3I6ICMwMDVmZGM7XHJcbn1cclxuXHJcbi5wb3NpdGlvblNwaW5uZXIge1xyXG4gIG1hcmdpbi10b3A6IDE5cHg7XHJcbiAgcmlnaHQ6IC0yMCU7XHJcbn1cclxuIl19 */\";","import { LogisticaEstoqueInventarioFiltroService } from './filtro.service';\r\nimport { PNotifyService } from '../../../../../shared/services/core/pnotify.service';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { Router } from '@angular/router';\r\nimport { finalize, delay, retry } from 'rxjs/operators';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n  FormGroup\r\n} from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { string } from '@amcharts/amcharts4/core';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { elementEventFullName } from '@angular/compiler/src/view_compiler/view_compiler';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-inventario-filtro',\r\n  templateUrl: './filtro.component.html',\r\n  styleUrls: ['./filtro.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioFiltroComponent implements OnInit {\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\r\n  ativarCampos: any = false;\r\n  tipoInventario: number;\r\n  spinnerFullScreen: boolean = true;\r\n  loaderNavbar: boolean = false;\r\n  loading: boolean = true;\r\n  data: Date = new Date();\r\n  form: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  empresas: any = [];\r\n  depositos: any = [];\r\n  linhas: any = [];\r\n  classes: any = [];\r\n  materiais: any = [];\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Filtros'\r\n    }\r\n  ];\r\n  disabledBotoes: any = {\r\n    finalizar: false,\r\n    editar: false,\r\n    aprovar: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private notice: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private empresasService: LogisticaEstoqueInventarioFiltroService,\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      empresas: [null, Validators.required],\r\n      depositos: [null, Validators.required],\r\n      linhas: [null, Validators.required],\r\n      classes: [null],\r\n      materiais: [null],\r\n      dataInicial: [null],\r\n      dataFinal: [null]\r\n    });\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getPerfil();\r\n    /* INICIO FILTROS INICIAIS */\r\n    this.empresasService\r\n      .getEmpresas()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (Object.keys(response).length > 0) {\r\n          this.empresas = response;\r\n        }\r\n      });\r\n\r\n    this.empresasService\r\n      .getLinhas()\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe((response: any) => {\r\n        if (Object.keys(response).length > 0) {\r\n          this.linhas = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  /* INICIO ALTERA BOTÕES TIPO DE INVENTARIO */\r\n  setType(type: number) {\r\n    this.tipoInventario = type;\r\n  }\r\n\r\n  /* INICIO FUNÇÕES FILTROS COM PARÂMETROS */\r\n  getDepositos() {\r\n    this.loaderNavbar = true;\r\n\r\n    if (this.form.get('empresas').status === 'VALID') {\r\n      let idEmpresa = this.form.get('empresas').value;\r\n      this.empresasService\r\n        .getDepositos(idEmpresa)\r\n        .subscribe((response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            this.depositos = response;\r\n          }\r\n          this.loaderNavbar = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  getClasses() {\r\n    this.classes = [];\r\n    let descricaoLinhas = [];\r\n    this.loaderNavbar = true;\r\n\r\n    if (this.form.get('linhas').status === 'VALID') {\r\n      descricaoLinhas.push(this.form.get('linhas').value);\r\n      this.empresasService\r\n        .getClasses(descricaoLinhas)\r\n        .subscribe((response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            this.classes = response;\r\n          }\r\n          this.loaderNavbar = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  getMateriais(linhas, classes) {\r\n    this.materiais = [];\r\n    this.loaderNavbar = true;\r\n\r\n    if (\r\n      this.form.get('linhas').status === 'VALID' ||\r\n      this.form.get('classes').status === 'VALID'\r\n    ) {\r\n      let descricaoLinhas = this.form.get('linhas').value;\r\n      let idClasses = this.form.get('classes').value;\r\n      this.empresasService\r\n        .getMateriais(descricaoLinhas, idClasses)\r\n        .subscribe((response: any) => {\r\n          if (Object.keys(response).length > 0) {\r\n            this.materiais = response.result;\r\n          }\r\n          this.loaderNavbar = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  /* INICIO CADASTRO DE INVENTÁRIO */\r\n  postCadastraInventario() {\r\n    if (\r\n      this.disabledBotoes.finalizar == false &&\r\n      this.disabledBotoes.editar == false &&\r\n      this.disabledBotoes.aprovar == false\r\n    ) {\r\n      this.notice.notice('Seu usuário não pode iniciar um inventário.');\r\n    } else {\r\n      if (\r\n        this.form.get('empresas').status === 'VALID' &&\r\n        this.form.get('depositos').status === 'VALID'\r\n      ) {\r\n        this.spinnerFullScreen = true;\r\n        let cdEmpresa = this.form.get('empresas').value;\r\n        let cdDeposito = this.form.get('depositos').value;\r\n\r\n        this.empresasService\r\n          .postCadastraInventario(\r\n            this.matriculaAuditor,\r\n            cdEmpresa,\r\n            cdDeposito,\r\n            this.tipoInventario\r\n          )\r\n          .subscribe(\r\n            (response: any) => {\r\n              if (response.status == 200) {\r\n                this.postMateriais(\r\n                  this.matriculaAuditor,\r\n                  response.body.idInventario\r\n                );\r\n              } else\r\n                this.notice.error('Houve um errro ao cadastrar o inventário.');\r\n            },\r\n            error => {\r\n              this.spinnerFullScreen = false;\r\n              if (error.status < 500) this.notice.notice(error.error.dsErro);\r\n              else this.notice.error('Ocorreu um erro!');\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  /* INICIO CADASTRO DE MATERIAIS */\r\n  /* postMateriais(matriculaAuditor, idInventario) {\r\n    let cdMateriais = [];\r\n\r\n    if (this.form.get('materiais').value == null)\r\n      this.materiais.forEach(element => {\r\n        cdMateriais.push(element.codigoMaterial);\r\n      });\r\n    else cdMateriais.push(this.form.get('materiais').value);\r\n    this.empresasService\r\n      .postMateriais(matriculaAuditor, idInventario, cdMateriais)\r\n      .pipe(finalize(() => (this.spinnerFullScreen = false)))\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.status == 200) {\r\n            this.route.navigate([\r\n              `logistica/estoque/inventario/${idInventario}/contagem-materiais`\r\n            ]);\r\n          } else this.notice.error('Não há dados.');\r\n        },\r\n        error => {\r\n          if (error.status < 500) this.notice.notice(error.error.dsErro);\r\n          else this.notice.error('Ocorreu um erro!');\r\n        }\r\n      );\r\n  } */\r\n\r\n  postMateriais(matriculaAuditor, idInventario) {\r\n    let cdMateriais: any = [];\r\n\r\n    if (this.form.get('materiais').value == null)\r\n      this.materiais.forEach(element => {\r\n        cdMateriais.push(element.codigoMaterial);\r\n      });\r\n    else cdMateriais = this.form.get('materiais').value;\r\n\r\n    let particao = 50;\r\n    let qtEnvios = Math.ceil(cdMateriais.length / particao);\r\n    let mat: any = [];\r\n    for (let index = 0; index < qtEnvios; index++)\r\n      mat.push(\r\n        this.empresasService.postMateriais(\r\n          matriculaAuditor,\r\n          idInventario,\r\n          cdMateriais.slice(particao * index, particao * (index + 1))\r\n        )\r\n      );\r\n    forkJoin(mat)\r\n      .pipe(\r\n        retry(2),\r\n        finalize(() => (this.spinnerFullScreen = false))\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          let contador = 0;\r\n\r\n          response.forEach(element => {\r\n            if (element.status == 200) {\r\n              contador++;\r\n            }\r\n          });\r\n\r\n          if (contador === response.length) {\r\n            this.route.navigate([\r\n              `/logistica/estoque/inventario/${idInventario}/contagem-materiais`\r\n            ]);\r\n          } else {\r\n            this.notice.error('Não há dados.');\r\n          }\r\n        },\r\n        error => {\r\n          if (error.status < 500) this.notice.notice(error.error.dsErro);\r\n          else this.notice.error('Ocorreu um erro!');\r\n        }\r\n      );\r\n  }\r\n\r\n  /* INICIO CONSULTA DO INVENTARIO */\r\n  onSearch() {\r\n    this.route.navigate([`logistica/estoque/inventario/inventario`], {\r\n      queryParams: {\r\n        tipo: this.tipoInventario,\r\n        empresa: this.form.get('empresas').value,\r\n        deposito: this.form.get('depositos').value,\r\n        linha: this.form.get('linhas').value,\r\n        classe: this.form.get('classes').value,\r\n        dataInicial: this.form.get('dataInicial').value,\r\n        dataFinal: this.form.get('dataFinal').value\r\n      }\r\n    });\r\n  }\r\n\r\n  /* CONTROLE VALIDAÇÕES DOS CAMPOS */\r\n  resetForm() {\r\n    this.form.get('depositos').reset();\r\n    this.form.get('linhas').reset();\r\n    this.form.get('classes').reset();\r\n    this.form.get('materiais').reset();\r\n    this.form.get('empresas').reset();\r\n  }\r\n\r\n  mostrarCampos() {\r\n    if (this.tipoInventario == 1 || this.tipoInventario == 2)\r\n      this.ativarCampos = true;\r\n  }\r\n\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  onVideoLoaded() {\r\n    window.open('https://youtu.be/pwxbnXJw0uo', '_blank');\r\n  }\r\n\r\n  getPerfil() {\r\n    this.empresasService\r\n      .getPerfil(this.matriculaAuditor)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.disabledBotoes = response['disabledBotoes'];\r\n        },\r\n        error => {\r\n          this.notice.notice(\r\n            'Não há vinculo de perfil para realizar inventário nesse usuário.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioListaService {\r\n  private readonly API: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLista(\r\n    idInventario,\r\n    matricula = '',\r\n    cdMaterial = '',\r\n    naoConsideraEstoqueZerado\r\n  ) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\r\n      {\r\n        params: {\r\n          idInventario: idInventario,\r\n          matricula: matricula,\r\n          cdMaterial: cdMaterial,\r\n          naoConsideraEstoqueZerado: naoConsideraEstoqueZerado\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getListaMateriaisParaFiltro(idInventario, matricula = '') {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\r\n      {\r\n        params: {\r\n          idInventario: idInventario,\r\n          matricula: matricula,\r\n          naoConsideraEstoqueZerado: '0',\r\n          qtPagina: '1000'\r\n        },\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  postSalvar(requisicao, idInventario) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais/lancamento`,\r\n      requisicao,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  atualizarInventario(\r\n    observacao = '',\r\n    idStatusInventario,\r\n    idInventario,\r\n    matriculaAuditor\r\n  ) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}`,\r\n      {\r\n        observacao: observacao,\r\n        idStatusInventario: idStatusInventario,\r\n        matriculaAuditor: matriculaAuditor\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getInfoInventario(idInventario) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}`\r\n    );\r\n  }\r\n\r\n  getNotasFiscais(idInventario, nrNotaFiscal) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        params: {\r\n          nrNotaFiscal: nrNotaFiscal\r\n        },\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriaisNotasFiscais(idInventario, notaFiscal) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/nota-fiscal/${notaFiscal}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  salvarNotasFiscais(idInventario, notasFiscais, matriculaAuditor) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        notasFiscais: notasFiscais,\r\n        matriculaAuditor: matriculaAuditor\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getNotasFiscaisRo(idInventario, nrNotaFiscalRo) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        params: {\r\n          nrNotaFiscalRo: nrNotaFiscalRo\r\n        },\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  getMateriaisNotasFiscaisRo(idInventario, notaFiscalRo) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/nota-fiscal/${notaFiscalRo}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  salvarNotasFiscaisRo(idInventario, notasFiscaisRo, matriculaAuditor) {\r\n    return this.http.put(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/notas-fiscais`,\r\n      {\r\n        notasFiscaisRo: notasFiscaisRo,\r\n        matriculaAuditor: matriculaAuditor\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativo(idInventario, cdMaterial) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario-rotativo/${idInventario}/material/${cdMaterial}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n\r\n  getPerfil(matricula = '') {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/usuarios/${matricula}/perfis/controle-acesso`\r\n    );\r\n  }\r\n\r\n  getTotal(idInventario) {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/resultado`\r\n    );\r\n  }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { LogisticaEstoqueInventarioComponent } from './inventario.component';\r\nimport { LogisticaEstoqueInventarioFiltroComponent } from './filtro/filtro.component';\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\nimport { LogisticaEstoqueInventarioListaComponent } from './lista/lista.component';\r\nimport { LogisticaEstoqueInventarioListaInventarioComponent } from './lista/inventario/inventario.component';\r\nimport { LogisticaEstoqueInventarioListaRelatorioComponent } from './lista/relatorio/relatorio.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaEstoqueInventarioComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'filtro',\r\n    component: LogisticaEstoqueInventarioFiltroComponent\r\n  },\r\n  {\r\n    path: 'inventario',\r\n    component: LogisticaEstoqueInventarioListaInventarioComponent\r\n  },\r\n  {\r\n    path: ':id/relatorio',\r\n    component: LogisticaEstoqueInventarioListaRelatorioComponent\r\n  },\r\n  {\r\n    path: ':id/contagem-materiais',\r\n    component: LogisticaEstoqueInventarioListaComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogisticaEstoqueInventarioRoutingModule { }","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <h1>Painel de inventário</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n      <button \\r\\n        (click)=\\\"postCadastraInventario()\\\"\\r\\n        [disabled]=\\\"form.status  == 'INVALID' || !tipoInventario\\\">\\r\\n        Novo\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"onSearch()\\\">\\r\\n        Pesquisar\\r\\n      </button>\\r\\n      <!-- <button (click)=\\\"onVideoLoaded()\\\">\\r\\n        Video\\r\\n      </button> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\" [hidden]=\\\"loading\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"col-12 p-0\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"col-6 justify-content-start\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"btn-group btn-group-sm w-100\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-light\\\"\\r\\n                  [ngClass]=\\\"{'active': tipoInventario == 1}\\\"\\r\\n                  (click)=\\\"setType( 1 ); resetForm(); mostrarCampos()\\\">\\r\\n                  <strong>Inventário oficial</strong>\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-light\\\"\\r\\n                  [ngClass]=\\\"{'active': tipoInventario == 2}\\\"\\r\\n                  (click)=\\\"setType( 2 ); resetForm(); mostrarCampos()\\\">\\r\\n                  <strong>Inventário rotativo</strong>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"empresa\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"empresa\\\"\\r\\n              bindLabel=\\\"nomeFantasia\\\"\\r\\n              bindValue=\\\"codigoEmpresa\\\"\\r\\n              placeholder=\\\"Selecione uma empresa\\\"\\r\\n              formControlName=\\\"empresas\\\"\\r\\n              (change) =\\\"getDepositos()\\\"\\r\\n              (focus) =\\\"resetForm()\\\"\\r\\n              [ngClass]=\\\"onFieldError('empresas') + ' ' + onFieldRequired('empresas')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('empresas')\\\"\\r\\n              message=\\\"Empresa é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"deposito\\\">Depósito</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"depositos\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"deposito\\\"\\r\\n              bindLabel=\\\"depositoDescricao\\\"\\r\\n              bindValue=\\\"depositoId\\\"\\r\\n              placeholder=\\\"Selecione um deposito\\\"\\r\\n              formControlName=\\\"depositos\\\"\\r\\n              [ngClass]=\\\"onFieldError('depositos') + ' ' + onFieldRequired('depositos')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('depositos')\\\"\\r\\n              message=\\\"Despósito é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"linha\\\">Linha</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"linhas\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"linha\\\"\\r\\n              bindLabel=\\\"linha\\\"\\r\\n              bindValue=\\\"linha\\\"\\r\\n              placeholder=\\\"Selecione uma linha\\\"\\r\\n              formControlName=\\\"linhas\\\"\\r\\n              (change) = \\\"getClasses(); getMateriais(linhas, '')\\\"\\r\\n              [ngClass]=\\\"onFieldError('linhas') + ' ' + onFieldRequired('linhas')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('linhas')\\\"\\r\\n              message=\\\"Linha é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"classe\\\">Classe</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"classes\\\"\\r\\n              [multiple]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"false\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"classe\\\"\\r\\n              bindLabel=\\\"classeDescricao\\\"\\r\\n              bindValue=\\\"classeId\\\"\\r\\n              placeholder=\\\"Selecione uma classe\\\"\\r\\n              formControlName=\\\"classes\\\"\\r\\n              (change) = \\\"getMateriais(linhas, classes)\\\"\\r\\n              [ngClass]=\\\"onFieldError('classes')\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n            <invalid-form-control\\r\\n              [show]=\\\"onFieldInvalid('classes')\\\"\\r\\n              message=\\\"Classe é obrigatório.\\\">\\r\\n            </invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"material\\\">Material</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"materiais\\\"\\r\\n              [multiple]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"false\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"material\\\"\\r\\n              bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n              bindValue=\\\"codigoMaterial\\\"\\r\\n              placeholder=\\\"Selecione um material\\\"\\r\\n              formControlName=\\\"materiais\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row justify-content-center\\\" *ngIf=\\\"ativarCampos\\\">\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"empresa\\\">Data inicial</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n              </div>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                [ngClass]=\\\"onFieldRequired('dataInicial')\\\"\\r\\n                formControlName=\\\"dataInicial\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data inicial é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"empresa\\\">Data final</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n              </div>\\r\\n              <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataFinal\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              [ngClass]=\\\"onFieldRequired('dataFinal')\\\"\\r\\n              formControlName=\\\"dataFinal\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data final é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioFiltroService {\r\n  private readonly API: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEmpresas() {\r\n    return this.http.get(`${this.API}/common/empresas`);\r\n  }\r\n\r\n  getDepositos(idEmpresa) {\r\n    return this.http.get(`${this.API}/common/depositos/${idEmpresa}`);\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/common/linhas`);\r\n  }\r\n\r\n  getClasses(descricaoLinhas) {\r\n    return this.http.get(`${this.API}/common/classes`, {\r\n      params: {\r\n        linhas: btoa(descricaoLinhas)\r\n      }\r\n    });\r\n  }\r\n\r\n  getMateriais(descricaoLinhas, idClasses) {\r\n    if (!idClasses) idClasses = '';\r\n\r\n    return this.http.get(`${this.API}/common/materiais`, {\r\n      params: {\r\n        linhas: btoa(descricaoLinhas),\r\n        classes: btoa(idClasses)\r\n      }\r\n    });\r\n  }\r\n\r\n  postCadastraInventario(\r\n    matriculaAuditor,\r\n    cdEmpresa,\r\n    cdDeposito,\r\n    tipoInventario\r\n  ) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/estoque/inventario`,\r\n      {\r\n        matriculaAuditor: matriculaAuditor,\r\n        cdEmpresa: cdEmpresa,\r\n        cdDeposito: cdDeposito,\r\n        tipoInventario: tipoInventario\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  postMateriais(matriculaAuditor, idInventario, cdMaterial) {\r\n    return this.http.post(\r\n      `${this.API}/logistica/estoque/inventario/${idInventario}/materiais`,\r\n      {\r\n        matriculaAuditor: matriculaAuditor,\r\n        idInventario: idInventario,\r\n        cdMaterial: cdMaterial\r\n      },\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  getPerfil(matricula = '') {\r\n    return this.http.get(\r\n      `${this.API}/logistica/estoque/inventario/usuarios/${matricula}/perfis/controle-acesso`\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioComponent implements OnInit {\r\n  constructor(\r\n    private route: Router,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.navigate(['/logistica/estoque/inventario/filtro']);\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen [hidden]=\\\"!spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-5\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Lista de materiais</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-7 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n      <!-- acomodar botões -->\\r\\n      <button \\r\\n        (click)=\\\"onSearch()\\\"\\r\\n        >\\r\\n        Pesquisar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"openModalNotaFiscal()\\\"\\r\\n        *ngIf=\\\"ativNotaFiscal\\\"\\r\\n        >\\r\\n        Notas Fiscais\\r\\n      </button>\\r\\n      <!-- <button \\r\\n        (click)=\\\"openModalRo()\\\"\\r\\n        *ngIf=\\\"ativNotaFiscal\\\"\\r\\n        >\\r\\n        Notas Fiscais R.O\\r\\n      </button> -->\\r\\n      <button \\r\\n        (click)=\\\"exportarExcel()\\\"\\r\\n        [disabled]=\\\"!info || noResult\\\"\\r\\n        *ngIf=\\\"ativExport\\\"\\r\\n        >\\r\\n        Exportar\\r\\n      </button>\\r\\n      <button\\r\\n        class=\\\"hover\\\" \\r\\n        (click)=\\\"cancelar(template, 1)\\\"\\r\\n        *ngIf=\\\"ativCancelar\\\"\\r\\n        >\\r\\n        Cancelar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"habilitaCampos()\\\"\\r\\n        [disabled]=\\\"(habilita && !info) || inativBotoes || noResult\\\"\\r\\n        *ngIf=\\\"ativEditar\\\"\\r\\n        >\\r\\n        Editar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"postSalvar()\\\"\\r\\n        [disabled]=\\\"info || inativBotoes || noResult\\\"\\r\\n        *ngIf=\\\"ativSalvar\\\"\\r\\n        >\\r\\n        Salvar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"finalizar(template)\\\"\\r\\n        *ngIf=\\\"ativFinaliza\\\"\\r\\n        >\\r\\n        Finalizar\\r\\n      </button>\\r\\n      <button \\r\\n        (click)=\\\"atualizarInventario('',1)\\\"\\r\\n        *ngIf=\\\"ativReabrir\\\"\\r\\n        >\\r\\n        Reabrir\\r\\n      </button>\\r\\n      <button\\r\\n        class=\\\"hover\\\" \\r\\n        (click)=\\\"atualizarInventario('',5)\\\"\\r\\n        [disabled]=\\\"!ativAprovar\\\"\\r\\n        *ngIf=\\\"ativAprovar\\\"\\r\\n        >\\r\\n        Aprovar\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div>\\r\\n      <div class=\\\"d-flex justify-content-between align-items-center col-12 p-0\\\">\\r\\n        <div>\\r\\n          <strong style=\\\"font-size: 1.25rem\\\">Código do Inventário: {{ idInventario | number : '6.0-0'}} - {{ tipoInventario | uppercase }}</strong>\\r\\n          <div \\r\\n            class=\\\"d-flex justify-content-start align-items-center\\\" \\r\\n            style=\\\"cursor: pointer; font-size: 1rem\\\"\\r\\n            *ngIf=\\\"disabledBotoes.editar\\\"\\r\\n            >\\r\\n              <i [ngClass]=\\\"{'fa-toggle-off': considerarMaterialSemEstoque == 1, 'fa-toggle-on': considerarMaterialSemEstoque == 0}\\\" \\r\\n              class=\\\"fas pr-1\\\" \\r\\n              (click)=\\\"onToggleListaMateriais();\\\" \\r\\n              >\\r\\n            </i> Considerar materiais sem estoque\\r\\n          </div>\\r\\n        </div>\\r\\n        <form class=\\\"col-4 p-0\\\" [formGroup]=\\\"form\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-12\\\">\\r\\n              <label for=\\\"dsMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                  [items]= \\\"listaMateriaisFiltro\\\"\\r\\n                  [closeOnSelect]=\\\"true\\\"\\r\\n                  [hideSelected]=\\\"true\\\"\\r\\n                  bindLabel=\\\"dsMaterial\\\"\\r\\n                  bindValue=\\\"cdMaterial\\\"\\r\\n                  placeholder=\\\"Pesquise por um material\\\"\\r\\n                  formControlName=\\\"cdMaterial\\\"\\r\\n              >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"noResult || spinnerFullScreen\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-sm table-hover border-left border-right border-bottom text-center table-fixed\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(1)\\\">Classe</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(2)\\\">Cod. material</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 350px;\\\" *ngIf=\\\"esconderColunas(3)\\\">Material</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(4)\\\">Endereço</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(5)\\\">Estoque (tons)</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(6)\\\">Peso por peça (Kg)</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(7)\\\">Qtd. peças</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(8)\\\">Peso físico (tons)</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(9)\\\">Total da contagem</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(10)\\\">Notas fiscais</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Saldo inventário</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(12) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Soma inventário rotativo</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\">Valor unitário</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(14) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\">Resultado inventário</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 150px;\\\" *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\">Resultado monetário</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\">\\r\\n                <td *ngIf=\\\"esconderColunas(1)\\\" class=\\\"align-middle\\\"> {{ lista.dsClasse | uppercase }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(2)\\\" class=\\\"align-middle\\\">{{ lista.cdMaterial }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(3)\\\" class=\\\"align-middle\\\" style=\\\"width: 350px;\\\">{{ lista.dsMaterial | uppercase }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(4)\\\" class=\\\"align-middle\\\">{{ lista.enderecoPatio | uppercase }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(5)\\\" class=\\\"align-middle\\\">{{ lista.qtPesoEstoque | number: '1.3-3'}}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(6)\\\" class=\\\"align-middle\\\">{{ lista.pesoPeca | number: '1.3-3'}}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(7)\\\" class=\\\"align-middle\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input \\r\\n                      class=\\\"form-control form-control-sm\\\" \\r\\n                      type=\\\"text\\\" \\r\\n                      [(ngModel)]=\\\"lista.qtPecaContagem\\\"\\r\\n                      [disabled]=\\\"info\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"esconderColunas(8)\\\" class=\\\"align-middle\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input \\r\\n                      class=\\\"form-control form-control-sm\\\" \\r\\n                      type=\\\"text\\\" \\r\\n                      [(ngModel)]=\\\"lista.qtPesoContagem\\\"\\r\\n                      [disabled]=\\\"info\\\"\\r\\n                      currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"esconderColunas(9)\\\" class=\\\"align-middle\\\">{{ getTotalContagem(lista) | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(10)\\\" class=\\\"align-middle\\\">{{ lista.qtMaterialNotaFiscal | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getSaldoInventario(lista) | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(12) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ lista.somaInventarioRotativo }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ lista.precoMinimo | currency:'BRL' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(14) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getResultadoInventario(lista) | number: '1.3-3' }}</td>\\r\\n                <td *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\" class=\\\"align-middle\\\">{{ getResultadoMonetario(lista) | currency:'BRL' }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td class=\\\"pt-2\\\"><h6>TOTAL</h6></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPesoEstoque | number: '1.3-3' }}</h6></td>\\r\\n                <td ></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPecaLancamento }}</h6></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.qtPesoLancamento | number: '1.3-3' }}</h6></td>\\r\\n                <td class=\\\"pt-2\\\"><h6>{{ listaInfo.saldoEstoqueLancamento | number: '1.3-3' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(11) && disabledBotoes.finalizar || disabledBotoes.aprovar\\\"><h6>{{ listaInfo.saldoEstoque | number: '1.3-3' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(13) && disabledBotoes.aprovar\\\"><h6>{{ listaInfo.precoMinimo | currency:'BRL' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td class=\\\"pt-2\\\" *ngIf=\\\"esconderColunas(15) && disabledBotoes.aprovar\\\"><h6>{{ listaInfo.saldoFinanceiro | currency:'BRL' }}</h6></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"mt-3 col-6\\\">\\r\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n            <pagination\\r\\n              [maxSize]=\\\"10\\\"\\r\\n              [totalItems]=\\\"totalItems\\\"\\r\\n              (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n              [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n              [boundaryLinks]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"currentPage\\\"\\r\\n              previousText=\\\"&lsaquo;\\\"\\r\\n              nextText=\\\"&rsaquo;\\\"\\r\\n              firstText=\\\"&laquo;\\\"\\r\\n              lastText=\\\"&raquo;\\\">\\r\\n            </pagination>\\r\\n          </div>\\r\\n          <div class=\\\"align-self-center d-flex mt-3 col-6\\\" *ngIf=\\\"!perfilLoaded\\\">\\r\\n            <ng-select\\r\\n              [items]= \\\"listaColunas\\\"\\r\\n              [multiple]=\\\"true\\\"\\r\\n              [closeOnSelect]=\\\"false\\\"\\r\\n              [hideSelected]=\\\"true\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              placeholder=\\\"Selcione Colunas\\\"\\r\\n              [(ngModel)]=\\\"colunas\\\"\\r\\n              >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div \\r\\n    class=\\\"d-flex align-items-center justify-content-center\\\"\\r\\n    style=\\\"width: 100%; height: 70%;\\\"\\r\\n    [hidden]=\\\"!noResult\\\">\\r\\n    <empty-result message=\\\"Não há materiais cadastrados para este inventário\\\"></empty-result>\\r\\n  </div>\\r\\n  \\r\\n  <ng-template #template>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"63\\\" rows=\\\"10\\\" #justificativa></textarea>\\r\\n      <button  \\r\\n        type=\\\"button\\\" \\r\\n        class=\\\"btn btn-primary justify-content-end \\\" \\r\\n        style=\\\"margin-left: 51vh\\\"\\r\\n        (click)=\\\"atualizarInventario(justificativa.value, 3); modalRef.hide()\\\"> Finalizar </button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n  <div bsModal #childModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\r\\n    <div class=\\\"modal-dialog modal-md\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header justify-content-end\\\">\\r\\n          <div class=\\\"actions d-flex\\\">\\r\\n            <button (click)=\\\"hideChildModal()\\\">\\r\\n              Fechar\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body d-flex\\\">\\r\\n          <div class=\\\"p-0\\\" [ngClass]=\\\"{'col-3': compressedTable}\\\">\\r\\n            <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 50px\\\"></th>\\r\\n                  <th>Nota Fiscal</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" >Data de Emissão</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px\\\"></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr class=\\\"hover\\\" *ngFor=\\\"let notaFiscal of notasFiscais | slice : beginP : endP; let i = index\\\" [ngClass]=\\\"{'bg-active': notaFiscalSelecionada == notaFiscal.notaFiscal}\\\">\\r\\n                  <td \\r\\n                  style=\\\"width: 50px\\\"\\r\\n                  [ngClass]=\\\"{ 'border-left-green': notaFiscal.situacao == 'Emitida',\\r\\n                  'border-left-orange': notaFiscal.situacao != 'Emitida'}\\\" >\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" \\r\\n                              [(ngModel)]=\\\"notaFiscal.check\\\" \\r\\n                              (change)=\\\"verificaCheck(notaFiscal)\\\" \\r\\n                              id=\\\"customCheck{{ i }}\\\" \\r\\n                              style=\\\"cursor: pointer;\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{ i }}\\\" style=\\\"cursor: pointer;\\\"></label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\">{{ notaFiscal.notaFiscal }}</td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\" [hidden]=\\\"compressedTable\\\">{{ notaFiscal.dtEmissao | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                  <td [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px; cursor: pointer;\\\" (click)=\\\"getMateriaisNotasFiscais(notaFiscal.notaFiscal)\\\"><i class=\\\"far fa-file-alt\\\"></i></td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"mt-3 col-6\\\"></div>\\r\\n            <div *ngIf=\\\"qtNotasFiscais >= itemsPerPage\\\">\\r\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > qtNotasFiscais ? qtNotasFiscais : currentPage*(itemsPerPage) }} de {{ qtNotasFiscais }}\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"qtNotasFiscais\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChangedProduct($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n          <tabset class=\\\"col-9 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onClose()\\\">\\r\\n              <i class=\\\"fas fa-times\\\"></i>\\r\\n            </button>\\r\\n            <tab [heading]=\\\"notaFiscalSelecionada\\\">\\r\\n                <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                      <th>Código</th>\\r\\n                      <th style=\\\"width: 50%\\\">Descrição</th>\\r\\n                      <th>Peso Liq.</th>\\r\\n                      <th>Valor</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let materialNotaFiscal of materiaisNotaFiscal; let i = index\\\">\\r\\n                      <td>{{ materialNotaFiscal.cdMaterial }}</td>\\r\\n                      <td style=\\\"width: 50%\\\">{{ materialNotaFiscal.dsMaterial  }}</td>\\r\\n                      <td>{{ materialNotaFiscal.pesoLiquido | number : '1.3-3' }}</td>\\r\\n                      <td>{{ materialNotaFiscal.vlTotal  | currency:'BRL':'symbol':'1.2-2'}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div bsModal #childModalRo=\\\"bs-modal\\\" class=\\\"modal fade\\\" [config]=\\\"{backdrop: 'static', keyboard: false}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"position: absolute; left: -100%;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <div class=\\\"d-flex position-relative\\\">\\r\\n            <div class=\\\"form-group justify-content-end mr-2 mb-0\\\">\\r\\n                <label for=\\\"cdNotaFiscalRo\\\"> Número Nota Fiscal RO </label>\\r\\n                <input \\r\\n                  id=\\\"cdNotaFiscalRo\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"DIGITE...\\\"\\r\\n                  [(ngModel)]=\\\"cdNotaFiscalRo\\\"\\r\\n                  (keyup.enter)=\\\"getListaExistenteRo()\\\"\\r\\n                >\\r\\n              </div>\\r\\n            <div class=\\\"spinner-border text-primary position-absolut positionSpinner\\\" role=\\\"status\\\" [hidden]=\\\"!loading\\\">\\r\\n              <span class=\\\"sr-only\\\">Loading...</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"actions justify-content-end d-flex\\\">\\r\\n            <!-- <button (click)=\\\"salvarNotasFiscais()\\\">\\r\\n              Salvar\\r\\n            </button> -->\\r\\n            <button (click)=\\\"hideChildModalRo()\\\">\\r\\n              Fechar\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body d-flex\\\">\\r\\n          <div class=\\\"p-0\\\" [ngClass]=\\\"{'col-3': compressedTable}\\\">\\r\\n            <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 50px\\\"></th>\\r\\n                  <th>Nota Fiscal</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" >Data de Emissão</th>\\r\\n                  <th [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px\\\"></th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr class=\\\"hover\\\" *ngFor=\\\"let notaFiscal of notasFiscaisRo | slice : beginP : endP; let i = index\\\" [ngClass]=\\\"{'bg-active': notaFiscalSelecionada == notaFiscal.notaFiscal}\\\">\\r\\n                  <td \\r\\n                  style=\\\"width: 50px\\\"\\r\\n                  [ngClass]=\\\"{ 'border-left-green': notaFiscal.situacao == 'Emitida',\\r\\n                  'border-left-orange': notaFiscal.situacao != 'Emitida'}\\\" >\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\" style=\\\"cursor: pointer;\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" \\r\\n                              [(ngModel)]=\\\"notaFiscal.check\\\" \\r\\n                              (change)=\\\"verificaCheck(notaFiscal)\\\" \\r\\n                              id=\\\"customCheck{{ i }}\\\" \\r\\n                              style=\\\"cursor: pointer;\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck{{ i }}\\\" style=\\\"cursor: pointer;\\\"></label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\">{{ notaFiscal.notaFiscal }}</td>\\r\\n                  <td (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\" [hidden]=\\\"compressedTable\\\">{{ notaFiscal.dtEmissao | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                  <td [hidden]=\\\"compressedTable\\\" style=\\\"width: 50px; cursor: pointer;\\\" (click)=\\\"getMateriaisNotasFiscaisRo(notaFiscal.notaFiscal)\\\"><i class=\\\"far fa-file-alt\\\"></i></td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"mt-3 col-6\\\"></div>\\r\\n            <div *ngIf=\\\"qtNotasFiscaisRo >= itemsPerPage\\\">\\r\\n              Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > qtNotasFiscaisRo ? qtNotasFiscaisRo : currentPage*(itemsPerPage) }} de {{ qtNotasFiscaisRo }}\\r\\n              <pagination\\r\\n                [maxSize]=\\\"10\\\"\\r\\n                [totalItems]=\\\"qtNotasFiscaisRo\\\"\\r\\n                [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n                (pageChanged)=\\\"onPageChangedProduct($event)\\\"\\r\\n                [boundaryLinks]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"currentPage\\\"\\r\\n                previousText=\\\"&lsaquo;\\\"\\r\\n                nextText=\\\"&rsaquo;\\\"\\r\\n                firstText=\\\"&laquo;\\\"\\r\\n                lastText=\\\"&raquo;\\\">\\r\\n              </pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n          <tabset class=\\\"col-9 pr-0 tabsetCustom\\\" [hidden]=\\\"!compressedTable\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn-icon close position-absolute\\\" (click)=\\\"onCloseRo()\\\">\\r\\n              <i class=\\\"fas fa-times\\\"></i>\\r\\n            </button>\\r\\n            <tab [heading]=\\\"notaFiscalSelecionadaRo\\\">\\r\\n                <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                      <th>Código</th>\\r\\n                      <th style=\\\"width: 50%\\\">Descrição</th>\\r\\n                      <th>Peso Liq.</th>\\r\\n                      <th>Valor</th>\\r\\n                      <th>Novo Peso</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let materialNotaFiscal of materiaisNotaFiscalRo; let i = index\\\">\\r\\n                      <td>{{ materialNotaFiscal.cdMaterial }}</td>\\r\\n                      <td style=\\\"width: 50%\\\">{{ materialNotaFiscal.dsMaterial  }}</td>\\r\\n                      <td>{{ materialNotaFiscal.pesoLiquido | number : '1.3-3' }}</td>\\r\\n                      <td>{{ materialNotaFiscal.vlTotal  | currency:'BRL':'symbol':'1.2-2'}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioListaInventarioService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient, private dateService: DateService) {}\r\n\r\n  getInventario(\r\n    page,\r\n    tipo,\r\n    empresa,\r\n    deposito,\r\n    linha,\r\n    classe,\r\n    dataInicial,\r\n    dataFinal,\r\n    cdInventario,\r\n    sigla\r\n  ) {\r\n    let di = dataInicial\r\n      ? this.dateService.convert2PhpDate(new Date(dataInicial))\r\n      : '';\r\n    let df = dataFinal\r\n      ? this.dateService.convert2PhpDate(new Date(dataFinal))\r\n      : '';\r\n    return this.http.get(`${this.BASE_URL}/logistica/estoque/inventario`, {\r\n      params: {\r\n        pagina: page ? page : '',\r\n        tipo: tipo,\r\n        empresa: empresa,\r\n        deposito: deposito,\r\n        linha: linha,\r\n        classe: classe,\r\n        dataInicial: di,\r\n        dataFinal: df,\r\n        cdInventario: cdInventario,\r\n        sigla: sigla\r\n      }\r\n    });\r\n  }\r\n\r\n  getClassesInventario(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario/classes/${idInventario}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"button,\\nbutton:focus {\\n  box-shadow: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZXN0b3F1ZS9pbnZlbnRhcmlvL2ZpbHRyby9maWx0cm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBR0UsMkJBQUE7QUFBRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2VzdG9xdWUvaW52ZW50YXJpby9maWx0cm8vZmlsdHJvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uLFxyXG5idXR0b246Zm9jdXNcclxue1xyXG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaEstoqueInventarioListaRelatorioService {\r\n  private readonly BASE_URL: string = `https://crm360.monterrey.com.bo/api`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLista(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario/${idInventario}/materiais`\r\n    );\r\n  }\r\n\r\n  getInfoInventario(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario/${idInventario}/resultado`\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativoGeral(idInventario) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario-rotativo/${idInventario}`\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativo(idInventario, cdMaterial) {\r\n    return this.http.get(\r\n      `${this.BASE_URL}/logistica/estoque/inventario-rotativo/${idInventario}/material/${cdMaterial}`,\r\n      {\r\n        observe: 'response'\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  BsModalService,\r\n  BsModalRef,\r\n  ModalDirective,\r\n} from 'ngx-bootstrap/modal';\r\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { LogisticaEstoqueInventarioListaService } from './lista.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize, retry } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'logistica-estoque-inventario-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class LogisticaEstoqueInventarioListaComponent implements OnInit {\r\n  @ViewChild('childModal', { static: false }) childModal: ModalDirective;\r\n  @ViewChild('childModalRo', { static: false }) childModalRo: ModalDirective;\r\n\r\n  idInventario: number = this.activatedRoute.snapshot.params['id'];\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\r\n\r\n  form: FormGroup;\r\n\r\n  dateRef: Date;\r\n  dataNow: any;\r\n  cdNotaFiscal = '';\r\n  cdNotaFiscalRo = '';\r\n  tipoInventario = '';\r\n  status: any;\r\n  adminProfile = true;\r\n\r\n  perfilLoaded: boolean;\r\n  loaderNavbar = true;\r\n  spinnerFullScreen = true;\r\n  loading = false;\r\n  noResult = false;\r\n  compressedTable = false;\r\n  considerarMaterialSemEstoque = 1;\r\n  perfilTipo = '';\r\n\r\n  listaColunas: any;\r\n  listas = [];\r\n  listaInfo: any = {};\r\n  disabledBotoes = {\r\n    finalizar: false,\r\n    editar: false,\r\n    aprovar: false,\r\n    reabrir: false,\r\n  };\r\n  habilita = false;\r\n  info = false;\r\n  ativAprovar = false;\r\n  ativFinaliza = false;\r\n  ativReabrir = false;\r\n  ativCancelar = false;\r\n  ativEditar = false;\r\n  ativSalvar = false;\r\n  ativNotaFiscal = false;\r\n  ativExport = false;\r\n  inativBotoes = false;\r\n  desabilitarBotoes = true;\r\n  notaFiscalSelecionada: number;\r\n  notaFiscalSelecionadaRo: number;\r\n\r\n  modalRef: BsModalRef;\r\n  config = {\r\n    animated: true,\r\n  };\r\n\r\n  parametros = {};\r\n  breadCrumbTree = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro',\r\n    },\r\n    {\r\n      descricao: 'Inventario',\r\n      routerLink: '/logistica/estoque/inventario/inventario',\r\n    },\r\n    {\r\n      descricao: 'Inventário',\r\n    },\r\n  ];\r\n\r\n  colunas = [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n\r\n  /* Paginação */\r\n  itemsPerPage: number = 10;\r\n  totalItems: number;\r\n  currentPage: number = 1;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n  beginP: number = 0;\r\n  endP: number = 10;\r\n  /* Paginação */\r\n\r\n  /* Seleção de Colunas */\r\n  itens: FormGroup;\r\n  selectedPeople = [];\r\n  listaMateriaisFiltro: any = [];\r\n  notasFiscais: any;\r\n  qtNotasFiscais: any;\r\n  tempNotasFiscais: any;\r\n  materiaisNotaFiscal: any = [];\r\n  notasFiscaisRo: any;\r\n  qtNotasFiscaisRo: any;\r\n  tempNotasFiscaisRo: any;\r\n  materiaisNotaFiscalRo: any = [];\r\n  /* Seleção de Colunas */\r\n\r\n  constructor(\r\n    private xlsxService: XlsxService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private notice: PNotifyService,\r\n    private empresasService: LogisticaEstoqueInventarioListaService,\r\n    private dateSevice: DateService,\r\n    private route: Router,\r\n    private modalService: BsModalService,\r\n    private formBuilder: FormBuilder,\r\n    private atividadesService: AtividadesService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      cdMaterial: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getListaMateriaisParaFiltro();\r\n    this.changeColunas();\r\n    this.getInfoInventario();\r\n    this.onLoadAplication();\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.getPerfil();\r\n  }\r\n\r\n  onLoadAplication() {\r\n    this.adminProfile = true;\r\n    this.loaderNavbar = true;\r\n    let params = {};\r\n\r\n    if (!this.adminProfile) {\r\n      setTimeout(() => {\r\n        this.perfilLoaded = true;\r\n        this.loaderNavbar = false;\r\n      }, 500);\r\n    } else if (this.adminProfile) {\r\n      setTimeout(() => {\r\n        this.perfilLoaded = false;\r\n        this.loaderNavbar = false;\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  onToggleListaMateriais() {\r\n    this.considerarMaterialSemEstoque =\r\n      this.considerarMaterialSemEstoque == 1 ? 0 : 1;\r\n    this.getLista('', this.considerarMaterialSemEstoque);\r\n  }\r\n\r\n  getLista(cdMaterial = '', considerarMaterialSemEstoque = 1) {\r\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\r\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\r\n      this.spinnerFullScreen = true;\r\n\r\n      this.listas = [];\r\n      this.totalItems = 0;\r\n      //Carrega a lista de materiais em inventário\r\n      this.empresasService\r\n        .getLista(\r\n          this.idInventario,\r\n          this.matriculaAuditor,\r\n          cdMaterial,\r\n          considerarMaterialSemEstoque\r\n        )\r\n        .pipe(\r\n          finalize(() => {\r\n            this.spinnerFullScreen = false;\r\n            this.loaderNavbar = false;\r\n            this.getTotal();\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            this.listas = response['materiais'];\r\n            this.totalItems = response['qtRegistros'];\r\n            this.noResult = false;\r\n            this.listas.forEach((element) => {\r\n              element.totalContagem =\r\n                element.qtPecaContagem * element.pesoPeca +\r\n                parseFloat(element.qtPesoContagem);\r\n              this.getInfoInventarioRotativo(element.cdMaterial).subscribe(\r\n                (response: any) => {\r\n                  if (response.status == 204)\r\n                    element.somaInventarioRotativo = 0;\r\n                  else\r\n                    element.somaInventarioRotativo = parseFloat(\r\n                      response.body.saldoEstoque\r\n                    );\r\n                  element.resultadoInventario =\r\n                    parseFloat(element.saldoEstoque) +\r\n                    element.somaInventarioRotativo;\r\n                }\r\n              );\r\n            });\r\n          },\r\n          (error) => {\r\n            this.notice.notice(\r\n              'Não há materiais cadastrados para esse inventário.'\r\n            );\r\n            this.noResult = true;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getListaMateriaisParaFiltro() {\r\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\r\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\r\n\r\n      //Carrega a lista de materiais para o filtro\r\n      this.empresasService\r\n        .getListaMateriaisParaFiltro(this.idInventario, this.matriculaAuditor)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe((response: any) => {\r\n          if (response['status'] === 200)\r\n            this.listaMateriaisFiltro = response['body']['materiais'];\r\n        });\r\n    }\r\n  }\r\n\r\n  postSalvar() {\r\n    let materiais = [];\r\n    let requisicao = {};\r\n    this.loaderNavbar = true;\r\n\r\n    this.listas.forEach((element) => {\r\n      if (element.qtPecaContagem != null || element.qtPesoContagem != null) {\r\n        materiais.push({\r\n          idInventarioMaterial: element.idInventarioMaterial,\r\n          qtPeca: element.qtPecaContagem ? element.qtPecaContagem : null,\r\n          qtPeso: element.qtPesoContagem ? element.qtPesoContagem : null,\r\n          cdMaterial: element.cdMaterial ? element.cdMaterial : null,\r\n        });\r\n      } else {\r\n        this.getLista();\r\n      }\r\n    });\r\n\r\n    if (materiais.length > 0) {\r\n      requisicao = {\r\n        matriculaAuditor: this.matriculaAuditor,\r\n        materiais,\r\n      };\r\n      this.empresasService\r\n        .postSalvar(requisicao, this.idInventario)\r\n        .pipe(finalize(() => (this.loaderNavbar = false)))\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (response['body']['erros'].length === 0) {\r\n              this.notice.success('Registros atualizados com sucesso!');\r\n            } else {\r\n              this.notice.error('Alguns registros não puderam ser atualizados');\r\n            }\r\n            this.getLista();\r\n          },\r\n          (error: any) => {\r\n            this.notice.error('Erro ao salvar registros');\r\n          }\r\n        );\r\n    } else {\r\n      this.notice.notice('Inventário não teve alterações para ser salvo');\r\n      this.getLista();\r\n    }\r\n  }\r\n\r\n  finalizar(template) {\r\n    if (this.dateDiff(this.dateRef, new Date()) >= 7)\r\n      this.modalRef = this.modalService.show(template);\r\n    else {\r\n      let finaliza = confirm('Tem certeza que deseja finalizar o inventário?');\r\n\r\n      if (finaliza) this.atualizarInventario('', 2);\r\n    }\r\n  }\r\n\r\n  cancelar(template, valor) {\r\n    let cancela = confirm('Tem certeza que deseja cancelar o inventário?');\r\n    if (valor == 1)\r\n      if (cancela) this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  dateDiff(date1, date2) {\r\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  atualizarInventario(justificativa, statusInventario) {\r\n    this.loaderNavbar = true;\r\n    let finalizacao = {};\r\n\r\n    finalizacao = {\r\n      idStatusInventario: statusInventario,\r\n      matriculaAuditor: this.matriculaAuditor,\r\n      idInventario: this.idInventario,\r\n      observacao: justificativa,\r\n    };\r\n    this.empresasService\r\n      .atualizarInventario(\r\n        justificativa,\r\n        statusInventario,\r\n        this.idInventario,\r\n        this.matriculaAuditor\r\n      )\r\n      .pipe(\r\n        finalize(\r\n          () => (\r\n            (this.loaderNavbar = false),\r\n            this.getLista(),\r\n            this.getInfoInventario()\r\n          )\r\n        )\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response['status'] === 200)\r\n            this.notice.success(response['body']['message']);\r\n        },\r\n        (error) => {\r\n          this.notice.error(error.error.dsErro);\r\n        }\r\n      );\r\n  }\r\n\r\n  getInfoInventarioRotativo(cdMaterial) {\r\n    return this.empresasService.getInfoInventarioRotativo(\r\n      this.idInventario,\r\n      cdMaterial\r\n    );\r\n  }\r\n\r\n  /* TRATA HORA ATUAL */\r\n  RetornaDataHoraAtual() {\r\n    var dNow = new Date();\r\n    var localdate =\r\n      dNow.getDate() +\r\n      '/' +\r\n      (dNow.getMonth() + 1) +\r\n      '/' +\r\n      dNow.getFullYear() +\r\n      ' ' +\r\n      dNow.getHours() +\r\n      ':' +\r\n      dNow.getMinutes();\r\n    return (this.dataNow = localdate);\r\n  }\r\n\r\n  /* TRATA CAMPOS DE INPUT - DESABILITA EXIGINDO O CLICK NO BOTÃO EDITAR */\r\n  getInfoInventario() {\r\n    this.empresasService\r\n      .getInfoInventario(this.idInventario)\r\n      .subscribe((response: any) => {\r\n        this.dateRef = new Date(response.dtInclusao);\r\n        this.status = response.siglaStatusInventario;\r\n        this.tipoInventario = response.dsTipoInventario;\r\n        if (\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_ABER' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_FINA' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST' ||\r\n          response.siglaStatusInventario == 'LOGI_INVE_STAT_APRO'\r\n        ) {\r\n          this.info = true;\r\n        } else {\r\n          this.info;\r\n        }\r\n\r\n        if (response.siglaStatusInventario == 'LOGI_INVE_STAT_CANC_SIST') {\r\n          this.noResult = true;\r\n        }\r\n\r\n        this.controlaAcessoBotoes();\r\n      });\r\n  }\r\n\r\n  /* HABILITA CAMPOS PARA EDITAR */\r\n  habilitaCampos() {\r\n    if (this.listas !== null) {\r\n      this.info = false;\r\n      this.habilita = true;\r\n    }\r\n  }\r\n\r\n  changeColunas() {\r\n    let response = [\r\n      { id: 1, descricao: 'Classe' },\r\n      { id: 2, descricao: 'Código do Material' },\r\n      { id: 3, descricao: 'Descrição do Material' },\r\n      { id: 4, descricao: 'Endereço' },\r\n      { id: 5, descricao: 'Estoque (Tons)' },\r\n      { id: 6, descricao: 'Peso Por Peça' },\r\n      { id: 7, descricao: 'Quantidade de Peças' },\r\n      { id: 8, descricao: 'Peso físico (Tons)' },\r\n      { id: 9, descricao: 'Total da contagem' },\r\n      { id: 10, descricao: 'Notas Fiscais' },\r\n      { id: 11, descricao: 'Diferença Ajustada' },\r\n      { id: 12, descricao: 'Soma Inventário Rotativo' },\r\n      { id: 13, descricao: 'Valor Unitário' },\r\n      { id: 14, descricao: 'Resultado Inventário' },\r\n      { id: 15, descricao: 'Resultado Monetário' },\r\n    ];\r\n\r\n    this.listaColunas = response;\r\n  }\r\n\r\n  esconderColunas(titulo) {\r\n    return this.colunas.indexOf(titulo) !== -1;\r\n  }\r\n\r\n  exportarExcel() {\r\n    this.xlsxService.exportFile(this.listas, 'inventario');\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  /* Pesquisa a lista de materiais para popular o filtro */\r\n  onSearch() {\r\n    this.loaderNavbar = true;\r\n    if (this.form.get('cdMaterial').status == 'VALID')\r\n      this.getLista(this.form.get('cdMaterial').value, 0);\r\n    else this.getLista();\r\n  }\r\n  /* */\r\n\r\n  getMateriaisNotasFiscais(notaFiscal) {\r\n    this.loading = true;\r\n    this.materiaisNotaFiscal = [];\r\n    this.empresasService\r\n      .getMateriaisNotasFiscais(this.idInventario, notaFiscal)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe((data) => {\r\n        if (data['status'] === 200) {\r\n          this.materiaisNotaFiscal = data['body'];\r\n          this.compressedTable = true;\r\n          this.notaFiscalSelecionada = notaFiscal;\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriaisNotasFiscaisRo(notaFiscal) {\r\n    this.loading = true;\r\n    this.materiaisNotaFiscalRo = [];\r\n    this.empresasService\r\n      .getMateriaisNotasFiscaisRo(this.idInventario, notaFiscal)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe((data) => {\r\n        if (data['status'] === 200) {\r\n          this.materiaisNotaFiscalRo = data['body'];\r\n          this.compressedTable = true;\r\n          this.notaFiscalSelecionadaRo = notaFiscal;\r\n        }\r\n      });\r\n  }\r\n\r\n  /* Função para abertura de modal de Notas Fiscais */\r\n  openModalNotaFiscal() {\r\n    this.getListaExistente();\r\n    this.childModal.show();\r\n  }\r\n\r\n  /* Função para abertura de modal de Notas Fiscais relacionadas a R.O's */\r\n  openModalRo() {\r\n    this.getListaExistenteRo();\r\n    this.childModalRo.show();\r\n  }\r\n\r\n  /* Função que verifica se a lista já foi carregada e se a nf da consulta consta na lista */\r\n  getListaCarregadaMaisNotaFiscal() {\r\n    let containsNotaFiscal = false;\r\n    let isNotUndefined = typeof this.tempNotasFiscais !== 'undefined';\r\n\r\n    if (isNotUndefined) {\r\n      containsNotaFiscal = this.tempNotasFiscais.find(\r\n        (element) => element.notaFiscal === this.cdNotaFiscal\r\n      );\r\n    }\r\n\r\n    return isNotUndefined && containsNotaFiscal;\r\n  }\r\n\r\n  getListaCarregadaMaisNotaFiscalRo() {\r\n    let containsNotaFiscal = false;\r\n    let isNotUndefined = typeof this.tempNotasFiscais !== 'undefined';\r\n\r\n    if (isNotUndefined) {\r\n      containsNotaFiscal = this.tempNotasFiscais.find(\r\n        (element) => element.notaFiscal === this.cdNotaFiscalRo\r\n      );\r\n    }\r\n\r\n    return isNotUndefined && containsNotaFiscal;\r\n  }\r\n\r\n  /* Função que verifica se a lista já foi carregada e usa ela para pesquisa, sem a necessidade de consultar novamente */\r\n  getListaExistente() {\r\n    if (this.getListaCarregadaMaisNotaFiscal()) {\r\n      const val = this.cdNotaFiscal;\r\n\r\n      if (!val) {\r\n        this.notasFiscais = this.tempNotasFiscais;\r\n      }\r\n\r\n      const temp = this.tempNotasFiscais.filter((row) => {\r\n        return Object.keys(row).some((property) => {\r\n          return row[property] === null\r\n            ? null\r\n            : row[property].toString().indexOf(val) !== -1;\r\n        });\r\n      });\r\n\r\n      this.notasFiscais = temp;\r\n      this.loading = false;\r\n    } else this.getNotasFiscais();\r\n  }\r\n\r\n  getListaExistenteRo() {\r\n    if (this.getListaCarregadaMaisNotaFiscalRo()) {\r\n      const val = this.cdNotaFiscalRo;\r\n\r\n      if (!val) {\r\n        this.notasFiscaisRo = this.tempNotasFiscais;\r\n      }\r\n\r\n      const temp = this.tempNotasFiscais.filter((row) => {\r\n        return Object.keys(row).some((property) => {\r\n          return row[property] === null\r\n            ? null\r\n            : row[property].toString().indexOf(val) !== -1;\r\n        });\r\n      });\r\n\r\n      this.notasFiscaisRo = temp;\r\n      this.loading = false;\r\n    } else this.getNotasFiscaisRo();\r\n  }\r\n\r\n  /* Função consulta lista de notas fiscais, seja ela uma lista com 1 ou mais resultados */\r\n  getNotasFiscais() {\r\n    this.loading = true;\r\n    this.empresasService\r\n      .getNotasFiscais(this.idInventario, this.cdNotaFiscal)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data['status'] === 200) {\r\n            this.notasFiscais = data['body']['notasFiscais'];\r\n            this.tempNotasFiscais = data['body']['notasFiscais'];\r\n            this.qtNotasFiscais = data['body']['qtRegistros'];\r\n          } else this.notice.notice('Não houve retorno para sua consulta');\r\n        },\r\n        (error) => this.notice.error(error.message)\r\n      );\r\n  }\r\n\r\n  /* Função consulta lista de notas fiscais, seja ela uma lista com 1 ou mais resultados */\r\n  getNotasFiscaisRo() {\r\n    this.loading = true;\r\n    this.empresasService\r\n      .getNotasFiscaisRo(this.idInventario, this.cdNotaFiscalRo)\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data['status'] === 200) {\r\n            this.notasFiscaisRo = data['body']['notasFiscais'];\r\n            this.tempNotasFiscaisRo = data['body']['notasFiscais'];\r\n            this.qtNotasFiscaisRo = data['body']['qtRegistros'];\r\n          } else this.notice.notice('Não houve retorno para sua consulta');\r\n        },\r\n        (error) => this.notice.error(error.message)\r\n      );\r\n  }\r\n\r\n  hideChildModal(): void {\r\n    this.childModal.hide();\r\n    this.postSalvar();\r\n  }\r\n\r\n  hideChildModalRo(): void {\r\n    this.childModalRo.hide();\r\n    this.postSalvar();\r\n  }\r\n\r\n  onClose() {\r\n    this.compressedTable = false;\r\n    this.notaFiscalSelecionada = 0;\r\n  }\r\n\r\n  onCloseRo() {\r\n    this.compressedTable = false;\r\n    this.notaFiscalSelecionadaRo = 0;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChangedProduct(event: PageChangedEvent): void {\r\n    this.beginP = (event.page - 1) * event.itemsPerPage;\r\n    this.endP = event.page * event.itemsPerPage;\r\n  }\r\n  /* Paginação */\r\n\r\n  salvarNotasFiscais() {\r\n    let checkAlterado = [];\r\n    this.notasFiscais.forEach((element) => {\r\n      if (element.checkAlterado) {\r\n        checkAlterado.push(element);\r\n      }\r\n    });\r\n\r\n    let particao = 50;\r\n    let qtEnvios = Math.ceil(checkAlterado.length / particao);\r\n    let req: any = [];\r\n\r\n    this.loading = true;\r\n\r\n    for (let index = 0; index < qtEnvios; index++)\r\n      req.push(\r\n        this.empresasService.salvarNotasFiscais(\r\n          this.idInventario,\r\n          checkAlterado.slice(particao * index, particao * (index + 1)),\r\n          this.matriculaAuditor\r\n        )\r\n      );\r\n\r\n    forkJoin(req)\r\n      .pipe(\r\n        retry(2),\r\n        finalize(() => (this.loading = false))\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          let contador = 0;\r\n          data[0]['body'].forEach((element) => {\r\n            if (element['responseCode'] == 200) {\r\n              this.notice.success('Itens salvos com sucesso!');\r\n              contador++;\r\n            } else {\r\n              this.notice.error(element['response']);\r\n            }\r\n          });\r\n          if (contador === data.length) {\r\n          }\r\n        },\r\n        (error) => {\r\n          this.notice.error('Ocorreu um erro ao salvar os itens');\r\n        }\r\n      );\r\n  }\r\n\r\n  salvarNotasFiscaisRo() {\r\n    let checkAlterado = [];\r\n    this.notasFiscaisRo.forEach((element) => {\r\n      if (element.checkAlterado) {\r\n        checkAlterado.push(element);\r\n      }\r\n    });\r\n\r\n    let particao = 50;\r\n    let qtEnvios = Math.ceil(checkAlterado.length / particao);\r\n    let req: any = [];\r\n\r\n    this.loading = true;\r\n\r\n    for (let index = 0; index < qtEnvios; index++)\r\n      req.push(\r\n        this.empresasService.salvarNotasFiscaisRo(\r\n          this.idInventario,\r\n          checkAlterado.slice(particao * index, particao * (index + 1)),\r\n          this.matriculaAuditor\r\n        )\r\n      );\r\n\r\n    forkJoin(req)\r\n      .pipe(\r\n        retry(2),\r\n        finalize(() => (this.loading = false))\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          let contador = 0;\r\n\r\n          this.notice.success('Itens salvos com sucesso!');\r\n          data.forEach((element) => {\r\n            if (element['status'] == 200) {\r\n              contador++;\r\n            }\r\n          });\r\n          if (contador === data.length) {\r\n          }\r\n        },\r\n        (error) => {\r\n          this.notice.error('Ocorreu um erro ao salvar os itens');\r\n        }\r\n      );\r\n  }\r\n\r\n  verificaCheck(notaFiscal) {\r\n    notaFiscal.checkAlterado = !notaFiscal.checkAlterado;\r\n    this.salvarNotasFiscais();\r\n    this.getNotasFiscais();\r\n  }\r\n\r\n  getTotalContagem(material) {\r\n    return (\r\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\r\n      material.qtPesoContagem\r\n    );\r\n  }\r\n\r\n  getSaldoInventario(material) {\r\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\r\n      return undefined;\r\n    }\r\n\r\n    const pesoFisico =\r\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\r\n      material.qtPesoContagem;\r\n    const estoque = material.qtPesoEstoque;\r\n    const notasFiscais = parseFloat(material.qtMaterialNotaFiscal) ?? 0;\r\n    const saldo = pesoFisico - estoque + notasFiscais;\r\n    return saldo;\r\n  }\r\n\r\n  getResultadoInventario(material) {\r\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\r\n      return undefined;\r\n    }\r\n    return (\r\n      (material.pesoPeca / 1000) * material.qtPecaContagem +\r\n      material.qtPesoContagem -\r\n      material.qtPesoEstoque +\r\n      material.somaInventarioRotativo\r\n    );\r\n  }\r\n\r\n  getResultadoMonetario(material) {\r\n    if (!material.qtPecaContagem && !material.qtPesoContagem) {\r\n      return undefined;\r\n    }\r\n    return (\r\n      ((material.pesoPeca / 1000) * material.qtPecaContagem +\r\n        material.qtPesoContagem -\r\n        material.qtPesoEstoque +\r\n        material.somaInventarioRotativo) *\r\n      material.precoMinimo\r\n    );\r\n  }\r\n\r\n  getPerfil() {\r\n    this.empresasService\r\n      .getPerfil(this.matriculaAuditor)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n          this.loaderNavbar = false;\r\n          this.getLista();\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          this.disabledBotoes = response['disabledBotoes'];\r\n          this.perfilTipo = response['perfilTipo'];\r\n          this.controlaAcessoBotoes();\r\n        },\r\n        (error) => {\r\n          this.notice.notice(\r\n            'Não há vinculo de perfil para realizar inventário nesse usuário.'\r\n          );\r\n          this.noResult = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  getTotal() {\r\n    this.spinnerFullScreen = true;\r\n    this.empresasService\r\n      .getTotal(this.idInventario)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.spinnerFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        this.listaInfo = response;\r\n      });\r\n  }\r\n\r\n  controlaAcessoBotoes() {\r\n    if (\r\n      this.perfilTipo == 'assistente' &&\r\n      this.status == 'LOGI_INVE_STAT_ABER'\r\n    ) {\r\n      this.ativExport = true;\r\n      this.ativEditar = true;\r\n      this.ativNotaFiscal = true;\r\n      this.ativSalvar = true;\r\n    } else if (this.perfilTipo == 'lider') {\r\n      this.ativFinaliza = true;\r\n      this.ativCancelar = true;\r\n      this.ativEditar = true;\r\n      this.ativNotaFiscal = true;\r\n      this.ativSalvar = true;\r\n      if (this.status == 'LOGI_INVE_STAT_ABER') this.ativExport = true;\r\n    } else if (this.perfilTipo == 'coordenador') {\r\n      if (this.status == 'LOGI_INVE_STAT_ABER') {\r\n        this.ativFinaliza = true;\r\n        this.ativReabrir = false;\r\n        this.ativAprovar = false;\r\n        this.ativCancelar = true;\r\n        this.ativEditar = true;\r\n        this.ativNotaFiscal = true;\r\n        this.ativSalvar = true;\r\n        this.ativExport = true;\r\n      }\r\n      if (this.status == 'LOGI_INVE_STAT_FINA') {\r\n        this.ativFinaliza = false;\r\n        this.ativReabrir = true;\r\n        this.ativAprovar = true;\r\n        this.ativCancelar = true;\r\n        this.ativEditar = false;\r\n        this.ativNotaFiscal = false;\r\n        this.ativSalvar = false;\r\n        this.ativExport = true;\r\n      }\r\n      if (this.status == 'LOGI_INVE_STAT_APRO') {\r\n        this.ativFinaliza = false;\r\n        this.ativReabrir = false;\r\n        this.ativAprovar = false;\r\n        this.ativCancelar = false;\r\n        this.ativEditar = false;\r\n        this.ativNotaFiscal = false;\r\n        this.ativSalvar = false;\r\n        this.ativExport = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<div class=\\\"row\\\" id=\\\"application-header\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div id=\\\"title\\\">\\r\\n      <back-button></back-button>\\r\\n      <h1>Realtório de inventário</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 d-flex justify-content-end\\\">\\r\\n    <div id=\\\"actions\\\">\\r\\n      <button \\r\\n        (click)=\\\"onDownload()\\\"\\r\\n        >\\r\\n        Imprimir relatório\\r\\n    </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"application-body\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <breadcrumb [tree]=\\\"breadCrumbTree\\\"></breadcrumb>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div id=\\\"download\\\">\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"d-flex justify-content-between col-6 pl-5\\\">\\r\\n              <img class=\\\"\\\" src=\\\"../../../../../../../assets/images/logo/logo-manetoni.png\\\" height=\\\"100\\\" width=\\\"150\\\">\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"d-flex justify-content-end col-6 mt-2 pr-5\\\">\\r\\n              <img class=\\\"\\\" src=\\\"../../../../../../../assets/images/logo/Logo-MTcorp.png\\\" height=\\\"65\\\" width=\\\"220\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"espacamento250\\\">&nbsp;</div>\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"my-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center\\\">\\r\\n                <h1>RELATÓRIO DE RESULTADOS DO INVENTÁRIO</h1>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <!-- INICIA ESPAÇAMENTO -->\\r\\n          <div class=\\\"espacamento150\\\">&nbsp;</div>\\r\\n          <div style=\\\"height: 170px\\\">&nbsp;</div>\\r\\n        <!-- FINALIZA ESPAÇAMENTO --> \\r\\n          <ul class=\\\"p-0\\\">\\r\\n            <li class=\\\"mx-3\\\">\\r\\n              <h6 class=\\\"card-header border\\\"> \\r\\n                Empresa: {{ listaInfo.dsEmpresa | uppercase }} / Depósito: {{ listaInfo.dsDeposito | uppercase }} / Linha: {{ infoLinha| uppercase }} / Classe: {{ infoClasse | uppercase }}\\r\\n              </h6>\\r\\n            </li>\\r\\n          </ul> \\r\\n          <ul class=\\\"d-flex p-0 col-12  my-5\\\">\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Estoque total ton.(Anterior) </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.qtPesoEstoque | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Estoque total ton.(Atual) </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.saldoEstoque | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <div class=\\\"espacamento20\\\">&nbsp;</div>\\r\\n          <ul class=\\\"d-flex p-0 col-12  mt-5\\\">\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Total geral da contagem </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ listaInfo.saldoEstoqueLancamento | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                <h5 class=\\\"card-header text-center w-100\\\"> Diferença total ajustada </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>  \\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ resultadoDiferenca | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <div class=\\\"espacamento20\\\">&nbsp;</div>\\r\\n          <ul class=\\\"d-flex p-0 col-12  mt-5\\\">\\r\\n            <li class=\\\"col-6\\\">\\r\\n              <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                  <h5 class=\\\"card-header text-center w-100\\\"> Resultado total do inventário </h5>\\r\\n                <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                    <div class=\\\"col\\\"><h1> {{ resultTotalInventario | number:'1.3-3' }} </h1></div>\\r\\n                  </div>\\r\\n                  <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                </div>\\r\\n              </div> \\r\\n            </li>\\r\\n            <li class=\\\"col-6\\\">\\r\\n                <div class=\\\"card justify-content-center align-items-center\\\">\\r\\n                  <h5 class=\\\"card-header text-center w-100\\\"> Resultado monetário total </h5>\\r\\n                  <div class=\\\"card-body font-weight-bold w-100 bgdValueList\\\">\\r\\n                    <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                    <div class=\\\"d-flex text-center col-12 large\\\">\\r\\n                      <div class=\\\"col\\\"><h1> {{ listaInfo.saldoFinanceiro | currency:'BRL':'symbol':'1.2-2'}} </h1></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"espacamento50\\\">&nbsp;</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </li>\\r\\n          </ul>\\r\\n          <div class=\\\"espacamento25\\\">&nbsp;</div>\\r\\n          <ul class=\\\"p-0\\\">\\r\\n            <li class=\\\"px-1 pb-1 \\\" *ngFor=\\\"let lista of listas\\\" style=\\\"list-style: none;\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <h6 class=\\\"card-header\\\"> {{ lista.cdMaterial }} - {{ lista.dsMaterial }} </h6>\\r\\n                <div class=\\\"row card-body\\\">\\r\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Estoque ton.: {{ lista.qtPesoEstoque | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Qtd. peça físico: {{ lista.qtPecaContagem }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Peso físico ton.: {{ lista.qtPesoContagem | number : '1.3-3' }} </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Total da contagem: {{ lista.totalContagem | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Diferença ajustada: {{ lista.saldoEstoque | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Soma inventário rotativo: {{ lista.somaInventarioRotativo | number : '1.3-3' }} </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"list-group list-group-flush col-4\\\">\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Resultado inventário: {{ lista.resultadoInventario | number : '1.3-3' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Custo médio: {{ lista.precoMinimo | currency:'BRL':'symbol':'1.2-2' }} </div>\\r\\n                    <div class=\\\"list-group-item border-0\\\"> Resultado monetário: {{ lista.saldoFinanceiro | currency:'BRL':'symbol':'1.2-2' }} </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>  \\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LogisticaEstoqueInventarioListaRelatorioService } from './relatorio.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PdfService } from 'src/app/shared/services/core/pdf.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n@Component({\r\n  selector: 'relatorio',\r\n  templateUrl: './relatorio.component.html',\r\n  styleUrls: ['./relatorio.component.scss']\r\n})\r\nexport class LogisticaEstoqueInventarioListaRelatorioComponent\r\n  implements OnInit {\r\n  idInventario: number = this.activatedRoute.snapshot.params['id'];\r\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\r\n  matriculaAuditor: any = this.currentUser['info']['matricula'];\r\n  spinnerFullScreen: boolean = true;\r\n  resultTotalInventario: number;\r\n  resultadoDiferenca: number;\r\n  resultadoContagem: number;\r\n  totalContagem: number;\r\n  qtPecaContagem: number;\r\n  qtPesoContagem: number;\r\n  inventarioRotativoTotal: any;\r\n  listas: any = [];\r\n  listaInfo: any = [];\r\n  infoLinha: any = '';\r\n  infoClasse: any = '';\r\n  loaderNavbar: boolean = false;\r\n  breadCrumbTree: any = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Filtro',\r\n      routerLink: '/logistica/estoque/inventario/filtro'\r\n    },\r\n    {\r\n      descricao: 'Inventários',\r\n      routerLink: '/logistica/estoque/inventario/inventario'\r\n    },\r\n    {\r\n      descricao: 'Relatório'\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private pdfService: PdfService,\r\n    private notice: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private empresasService: LogisticaEstoqueInventarioListaRelatorioService,\r\n    private atividadesService: AtividadesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getLista();\r\n    this.getInfoInventario();\r\n    this.getInfoInventarioRotativoGeral();\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n  }\r\n\r\n  getLista() {\r\n    let infoMateriais = [];\r\n\r\n    if (this.activatedRoute.snapshot.params['id'] > 0) {\r\n      this.idInventario = this.activatedRoute.snapshot.params['id'];\r\n      this.empresasService\r\n        .getLista(this.idInventario)\r\n        .pipe(finalize(() => (this.spinnerFullScreen = false)))\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (Object.keys(response).length > 0) {\r\n              this.listas = response['materiais'];\r\n              /* this.infoLinha = this.listas[0].dsLinha.trim();\r\n              this.infoClasse = this.listas[0].dsClasse; */\r\n\r\n              this.listas.forEach(element => {\r\n                element.totalContagem =\r\n                  element.qtPecaContagem * element.pesoPeca +\r\n                  parseFloat(element.qtPesoContagem);\r\n\r\n                this.getInfoInventarioRotativo(element.cdMaterial).subscribe(\r\n                  (response: any) => {\r\n                    if (response.status == 204)\r\n                      element.somaInventarioRotativo = 0;\r\n                    else\r\n                      element.somaInventarioRotativo = parseFloat(\r\n                        response.body.saldoEstoque\r\n                      );\r\n                    element.resultadoInventario =\r\n                      parseFloat(element.saldoEstoque) +\r\n                      element.somaInventarioRotativo;\r\n                  }\r\n                );\r\n              });\r\n            }\r\n          },\r\n          error => {\r\n            this.notice.notice(\r\n              'Não há materiais cadastrados para esse inventário.'\r\n            );\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getInfoInventario() {\r\n    this.empresasService\r\n      .getInfoInventario(this.idInventario)\r\n      .subscribe((response: any) => {\r\n        this.listaInfo = response;\r\n        this.resultadoDiferenca =\r\n          parseFloat(this.listaInfo.saldoEstoque) -\r\n          parseFloat(this.listaInfo.qtPesoEstoque);\r\n      });\r\n  }\r\n\r\n  getInfoInventarioRotativo(cdMaterial) {\r\n    return this.empresasService.getInfoInventarioRotativo(\r\n      this.idInventario,\r\n      cdMaterial\r\n    );\r\n  }\r\n\r\n  getInfoInventarioRotativoGeral() {\r\n    return this.empresasService\r\n      .getInfoInventarioRotativoGeral(this.idInventario)\r\n      .subscribe((response: any) => {\r\n        this.inventarioRotativoTotal = parseFloat(response.saldoEstoque);\r\n        this.resultTotalInventario =\r\n          parseFloat(this.listaInfo.saldoEstoque) +\r\n          parseFloat(this.inventarioRotativoTotal);\r\n      });\r\n  }\r\n\r\n  onDownload() {\r\n    this.loaderNavbar = true;\r\n    setTimeout(() => {\r\n      this.pdfService.download(\r\n        'download',\r\n        `${this.idInventario}_ResultadoInventario`\r\n      );\r\n      this.loaderNavbar = false;\r\n    }, 1000);\r\n  }\r\n}\r\n"]}