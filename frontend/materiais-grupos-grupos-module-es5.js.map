{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/grupos/grupos-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/grupos.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisGrupoRoutingModule","imports","forChild","exports","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialService","http","API","params","httpParams","param","append","get","pipe","ComercialCadastrosMateriaisGrupoFormularioComponent","activatedRoute","router","location","formBuilder","materiaisGrupoService","pnotifyService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","tableConfigMateriais","codClasse","formChanged","showMateriais","linhas","classes","filteredClasses","materiais","toggleAll","searching","firstSearch","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","setFormMateriais","setTitle","subscribe","id","appTitle","descricao","routerLink","idSubModulo","response","responseCode","result","error","back","resolver","snapshot","data","success","form","group","codGrupo","nomeGrupo","required","precoGrupo","codSituacao","assocMateriais","array","setMateriais","formMateriais","codLinha","codMaterial","length","i","onAddMaterial","material","manipulateForm","checkMaterialExists","push","nomeMaterial","value","setTimeout","markAsTouched","markAsDirty","notice","some","el","clear","index","confirmDelete","deleteMaterial","showConfirm","removeAt","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","filter","idLinha","getMateriais","materiaisLoader","situacao","hasOwnProperty","unshift","codigoMaterial","codigoDescricaoMaterial","mensagem","valid","loaderNavbar","Object","assign","map","o","checked","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","submittingForm","save","navigateTo","navigate","relativeTo","confirm","selector","template","FormDeactivateGuard","route","state","formCanDeactivate","ComercialCadastrosMateriaisGrupoModule","declarations","providers","ComercialCadastrosMateriaisGrupoFormularioResolverGuard","materiaisGruposService","getDetalhes","ComercialCadastrosMateriaisGrupoListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setGrupoSelecionado","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","grupo","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","grupoSelecionado","codUsuario","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaGrupos","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","loadedFinished","confirmActivate","asObservable","activateGrupo","refreshMainData","confirmInactive","inactivateGrupo","ComercialTidSoftwareService","empresas","getEmpresas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","post"],"mappings":"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","file":"materiais-grupos-grupos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMateriaisGrupoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisGrupoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisGrupoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosMateriaisGrupoListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisGrupoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisGrupoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisGrupoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisGrupoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisGrupoRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"mtc-title\\\">Dados do grupo</div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"nomeGrupo\\\">Nome</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeGrupo\\\"\\n              formControlName=\\\"nomeGrupo\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('nomeGrupo') + ' ' + onFieldRequired(form.controls.nomeGrupo)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeGrupo')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"precoGrupo\\\">Preço</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"precoGrupo\\\"\\n              formControlName=\\\"precoGrupo\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',', precision: 2 }\\\"\\n              [ngClass]=\\\"onFieldError('precoGrupo') + ' ' + onFieldRequired(form.controls.precoGrupo)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('precoGrupo')\\\" message=\\\"Preço é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n              <option value=\\\"1\\\">Ativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Materiais associados ao grupo</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparAssociacoes()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 95%\\\">\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col mt-auto\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de materiais</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"onFilterMateriais()\\\"\\n              [disabled]=\\\"searching === true\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n              <span>Pesquisar</span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codClasse\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                (change)=\\\"onChangeClasse($event.idClasse)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codMaterial\\\">Material</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"materiais\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codMaterial\\\"\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\n                bindValue=\\\"codigoMaterial\\\"\\n                [loading]=\\\"materiaisLoader\\\"\\n                loadingText=\\\"Carregando...\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div *ngIf=\\\"materiaisLista.length > 0\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarMateriais()\\\"\\n                [disabled]=\\\"searching === true\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span>Associar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll()\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"material.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onCheckMaterial(i, material)\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 95%\\\"\\n                    (click)=\\\"onCheckMaterial(i, material)\\\">\\n                    {{ material.codigoDescricaoMaterial | uppercase }}\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"searching === false\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"Nenhuma informação encontrada\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-search\\\"\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Grupos de materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"grupo\\\">\\n                <span class=\\\"mr-1\\\">Grupo</span>\\n                <ng-template #tooltipLabelGrupoTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do grupo</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelGrupoTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"grupo\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"material\\\">\\n                <span class=\\\"mr-1\\\">Material</span>\\n                <ng-template #tooltipLabelMaterialTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do material</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelMaterialTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"material\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codGrupo'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codGrupo')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome grupo\\\"\\n                [active]=\\\"orderBy == 'nomeGrupo'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeGrupo')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Preço</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let grupo of dadosPagination; let i = index;\\\" [class.table-active]=\\\"grupo.codGrupo == grupoSelecionado.codGrupo && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(grupo)\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.codGrupo }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.nomeGrupo | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\">\\n              {{ grupo.precoGrupo | currency:'BRL':'symbol':'1.2-2' }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(grupo)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"grupo.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"grupo.nomeUsuario !== null\\\">\\n                {{ grupo.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"grupo.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, grupo)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"grupo.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, grupo)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(grupo)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiais\\\">\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IGrupo } from '../models/grupo';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-grupos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisGrupoFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  codClasse: number = null;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  showMateriais = true;\n\n  formMateriais: FormGroup;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  toggleAll = false;\n  searching = false;\n  firstSearch = false;\n\n  materiaisLista: Array<any> = [];\n  materiaisListaLoaded = false;\n  materiaisListaEmpty = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n    this.setFormMateriais();\n    this.titleService.setTitle('Cadastro de grupo de materiais');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar grupo de materiais';\n      } else {\n        this.appTitle = 'Novo grupo de materiais';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Grupos de materiais',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/grupos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.materiaisGrupoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: IGrupo = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codGrupo: [detalhes.codGrupo],\n        nomeGrupo: [detalhes.nomeGrupo, [Validators.required]],\n        precoGrupo: [detalhes.precoGrupo, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        assocMateriais: this.formBuilder.array([]),\n      });\n\n      this.setMateriais(detalhes.materiais);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  setFormMateriais(): void {\n    this.formMateriais = this.formBuilder.group({\n      codLinha: [null, [Validators.required]],\n      codClasse: [null, [Validators.required]],\n      codMaterial: [null, [Validators.required]],\n    });\n  }\n\n  setMateriais(materiais: any): void {\n    if (materiais.length > 0) {\n      for (let i = 0; i < materiais.length; i++) {\n        this.onAddMaterial(materiais[i]);\n      }\n    }\n  }\n\n  get assocMateriais(): FormArray {\n    return this.form.get('assocMateriais') as FormArray;\n  }\n\n  onAddMaterial(material: any, manipulateForm?: boolean): void {\n    if (this.codClasse === null) {\n      this.codClasse = material.codClasse;\n    }\n\n    if (this.codClasse === material.codClasse) {\n      if (this.checkMaterialExists(material) === false) {\n        this.assocMateriais.push(\n          this.formBuilder.group({\n            codMaterial: [material.codMaterial],\n            nomeMaterial: [material.nomeMaterial],\n            codClasse: [material.codClasse],\n          })\n        );\n\n        if (this.form.value.assocMateriais.length > 9) {\n          if (this.tableConfigAssocMateriais.fixedHeader === false) {\n            this.showMateriais = false;\n            this.tableConfigAssocMateriais.fixedHeader = true;\n\n            setTimeout(() => {\n              this.showMateriais = true;\n            }, 1);\n          }\n        }\n\n        if (manipulateForm) {\n          this.form.markAsTouched();\n          this.form.markAsDirty();\n        }\n      }\n    } else {\n      this.pnotifyService.notice('Associe apenas materiais da mesma classe.');\n    }\n  }\n\n  checkMaterialExists(material: any): boolean {\n    return this.form.value.assocMateriais.some((el: any) => {\n      return el.codMaterial === material.codMaterial;\n    });\n  }\n\n  onLimparAssociacoes(): void {\n    const assocMateriais = this.form.get('assocMateriais') as FormArray;\n    assocMateriais.clear();\n    this.codClasse = null;\n  }\n\n  onDeleteMaterial(index: number): void {\n    this.confirmDelete().subscribe((response: boolean) =>\n      response ? this.deleteMaterial(index) : null\n    );\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteMaterial(index: number) {\n    this.assocMateriais.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  onChangeLinha(codLinha: number) {\n    this.formMateriais.controls.codClasse.reset();\n    this.formMateriais.controls.codClasse.setValue(null);\n    this.formMateriais.controls.codClasse.enable();\n    this.formMateriais.controls.codClasse.setValidators([Validators.required]);\n    this.formMateriais.controls.codClasse.updateValueAndValidity();\n\n    this.formMateriais.controls.codMaterial.reset();\n    this.formMateriais.controls.codMaterial.disable();\n    this.formMateriais.controls.codMaterial.setValue(null);\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n  }\n\n  onChangeClasse(codClasse: number) {\n    this.formMateriais.controls.codMaterial.reset();\n    this.formMateriais.controls.codMaterial.enable();\n    this.formMateriais.controls.codMaterial.setValue(null);\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\n\n    this.getMateriais(codClasse);\n  }\n\n  getMateriais(codClasse: number): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      this.comercialService\n        .getMateriais({\n          codClasse: codClasse,\n          situacao: 'A'\n        })\n        .pipe(\n          finalize(() => {\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n\n              this.formMateriais.controls.codMaterial.setValue(0);\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onFilterMateriais(): void {\n    if (this.formMateriais.valid) {\n      this.loaderNavbar = true;\n      this.searching = true;\n      this.materiaisLista = [];\n      this.materiaisListaLoaded = false;\n      this.materiaisListaEmpty = false;\n\n      let params = {\n        codClasse: this.formMateriais.value.codClasse,\n      };\n\n      if (this.formMateriais.value.codMaterial !== 0) {\n        Object.assign(params, {\n          codMaterial: this.formMateriais.value.codMaterial,\n        });\n      }\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            this.firstSearch = true;\n            this.searching = false;\n            this.loaderNavbar = false;\n            this.materiaisListaLoaded = true;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiaisLista = response.data.map(function (el: any) {\n                var o = Object.assign({}, el);\n                o.checked = 0;\n                return o;\n              });\n\n              if (this.materiaisLista.length > 9) {\n                this.tableConfigMateriais.fixedHeader = true;\n              } else {\n                this.tableConfigMateriais.fixedHeader = false;\n              }\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n              this.materiaisListaEmpty = true;\n            } else {\n              this.pnotifyService.error();\n              this.materiaisListaEmpty = true;\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n\n    for (let index = 0; index < this.materiaisLista.length; index++) {\n      this.materiaisLista[index].checked = this.toggleAll === true ? 1 : 0;\n    }\n  }\n\n  onCheckMaterial(index: number, material: any): void {\n    this.materiaisLista[index].checked = material.checked == 0 ? 1 : 0;\n  }\n\n  onAssociarMateriais(): void {\n    this.toggleAll = false;\n\n    for (let index = 0; index < this.materiaisLista.length; index++) {\n      if (this.materiaisLista[index].checked === 1) {\n        const material = {\n          codMaterial: this.materiaisLista[index].codigoMaterial,\n          nomeMaterial: this.materiaisLista[index].descricao,\n          codClasse: this.materiaisLista[index].codClasse,\n        };\n\n        this.onAddMaterial(material, true);\n        this.materiaisLista[index].checked = 0;\n      }\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        if (this.form.value.assocMateriais.length > 0) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.materiaisGrupoService\n            .save(this.form.value)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n              })\n            )\n            .subscribe(\n              (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success(response.mensagem);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              (error: any) => {\n                this.pnotifyService.error();\n              }\n            );\n        } else {\n          this.pnotifyService.notice('Associe pelo menos um material.');\n        }\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisGrupoRoutingModule } from './grupos-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisGrupoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisGrupoFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from './grupos.service';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisGrupoListaComponent,\n    ComercialCadastrosMateriaisGrupoFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosMateriaisGrupoRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService, ComercialCadastrosMateriaisGrupoService],\n})\nexport class ComercialCadastrosMateriaisGrupoModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisGrupoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisGruposService: ComercialCadastrosMateriaisGrupoService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.materiaisGruposService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codGrupo: null,\n        nomeGrupo: null,\n        precoGrupo: null,\n        codSituacao: '',\n        materiais: [],\n      },\n    });\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IGrupo } from '../models/grupo';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-grupos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisGrupoListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'nomeGrupo';\n  orderType = 'ASC';\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IGrupo> = [];\n  dadosPagination: Array<IGrupo> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  grupoSelecionado: IGrupo;\n  materiais: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Grupos de materiais');\n    this.onDetailPanelEmitter();\n    this.setGrupoSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Grupos de materiais',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      grupo: [formValue.grupo],\n      material: [formValue.material],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      grupo: null,\n      material: null,\n      codSituacao: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setGrupoSelecionado(): void {\n    this.grupoSelecionado = {\n      codGrupo: null,\n      nomeGrupo: null,\n      precoGrupo: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      materiais: [],\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.grupo) {\n      params.grupo = this.form.value.grupo;\n    }\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.materiaisGrupoService\n      .getListaGrupos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(grupo: IGrupo): string {\n    let borderClass: string;\n\n    if (grupo.codSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (grupo.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(grupo: IGrupo): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados (${grupo.nomeGrupo})`;\n    this.setGrupoSelecionado();\n    this.grupoSelecionado = grupo;\n    this.materiais = [];\n\n    this.materiaisGrupoService\n      .getAssociacoesMateriais(grupo.codGrupo)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.materiais = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(grupo: IGrupo): void {\n    this.router.navigate(['../editar', grupo.codGrupo], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, grupo: IGrupo): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateGrupo(index: number, grupo: IGrupo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.materiaisGrupoService.activateGrupo(grupo.codGrupo);\n  }\n\n  onInactivate(index: number, grupo: IGrupo): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateGrupo(index: number, grupo: IGrupo): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.materiaisGrupoService.inactivateGrupo(grupo.codGrupo);\n  }\n\n  refreshMainData(grupo: IGrupo): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (grupo.codGrupo === this.dados[i].codGrupo) {\n        this.dados[i].codSituacao = grupo.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}