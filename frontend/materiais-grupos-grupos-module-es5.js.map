{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/grupos/grupos-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.html","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario.component.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/grupos.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/grupos/lista/lista.component.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["routes","path","component","resolve","detalhes","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisGrupoRoutingModule","imports","forChild","exports","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","ComercialService","http","API","params","httpParams","param","append","get","pipe","id","codCliente","ComercialCadastrosMateriaisGrupoFormularioComponent","activatedRoute","router","location","formBuilder","materiaisGrupoService","pnotifyService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","tableConfigMateriais","codClasse","formChanged","showMateriais","linhas","classes","filteredClasses","materiais","toggleAll","searching","firstSearch","materiaisLista","materiaisListaLoaded","materiaisListaEmpty","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","setFormMateriais","setTitle","subscribe","appTitle","descricao","routerLink","idSubModulo","response","responseCode","result","error","back","resolver","snapshot","data","success","form","group","codGrupo","nomeGrupo","required","precoGrupo","codSituacao","assocMateriais","array","setMateriais","formMateriais","codLinha","codMaterial","length","i","onAddMaterial","material","manipulateForm","checkMaterialExists","push","nomeMaterial","value","setTimeout","markAsTouched","markAsDirty","notice","some","el","clear","index","confirmDelete","deleteMaterial","showConfirm","removeAt","controls","reset","setValue","enable","setValidators","updateValueAndValidity","disable","filter","idLinha","getMateriais","materiaisLoader","situacao","hasOwnProperty","unshift","codigoMaterial","codigoDescricaoMaterial","mensagem","valid","loaderNavbar","Object","assign","map","o","checked","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","submittingForm","save","navigateTo","navigate","relativeTo","confirm","selector","template","FormDeactivateGuard","route","state","formCanDeactivate","ComercialCadastrosMateriaisGrupoModule","declarations","providers","ComercialCadastrosMateriaisGrupoFormularioResolverGuard","materiaisGruposService","getDetalhes","ComercialCadastrosMateriaisGrupoListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setGrupoSelecionado","showDetailPanelSubscription","config","event","showing","formValue","checkRouterParams","grupo","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","grupoSelecionado","codUsuario","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaGrupos","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","loadedFinished","confirmActivate","asObservable","activateGrupo","refreshMainData","confirmInactive","inactivateGrupo","ComercialTidSoftwareService","empresas","getEmpresas","getLinhas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","post"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAGA;AAIA;;;AAIA,UAAMA,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OADqB,EAErB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE,oHAFb;AAGEC,eAAO,EAAE;AACPC,kBAAQ,EAAE;AADH,SAHX;AAMEC,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAFqB,EAUrB;AACEJ,YAAI,EAAE,YADR;AAEEC,iBAAS,EAAE,oHAFb;AAGEC,eAAO,EAAE;AACPC,kBAAQ,EAAE;AADH,SAHX;AAMEC,qBAAa,EAAE,CAAC,wFAAD;AANjB,OAVqB,EAkBrB;AACEJ,YAAI,EAAE,EADR;AAEEK,kBAAU,EAAE,OAFd;AAGEC,iBAAS,EAAE;AAHb,OAlBqB,CAAvB;;UA6BaC,6CAA6C;AAAA;AAAA,Q;;AAA7CA,mDAA6C,6DAJzD,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBV,MAAtB,CAAD,CADD;AAERW,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIyD,GAA7CH,6CAA6C,CAA7C;;;;;;;;;;;;;;;;ACxCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCGf;;;UAMaI,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,iBAG9B,qBACEC,IADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,SAJF,EAKEC,KALF,EAKgB;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,sCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVe,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBf,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFgB,gBAAgB;AAG3B,kCAAsBC,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAE0B;;AAHhB;AAAA;AAAA,iBAK3B,qBAAYC,MAAZ,EAAwB;AACtB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,gBACwB;AAC3BC,oBAAM,EAAEC;AADmB,aADxB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAjB0B;AAAA;AAAA,iBAmB3B,sBAAaL,MAAb,EAAwB;AACtB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,iBACyB;AAC5BC,oBAAM,EAAEC;AADoB,aADzB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA/B0B;AAAA;AAAA,iBAiC3B,oBAAWL,MAAX,EAAuB;AACrB,mBAAO,KAAKF,IAAL,CACJM,GADI,WACG,KAAKL,GADR,eAEJM,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AArC0B;AAAA;AAAA,iBAsC3B,qBAAYC,EAAZ,EAAqB;AACnB,mBAAO,KAAKR,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,qBAAoCO,EAApC,GAA0CD,IAA1C,CAA+C,4DAAK,CAAL,CAA/C,EAAwD,6DAAM,CAAN,CAAxD,CAAP;AACD;AAxC0B;AAAA;AAAA,iBA0C3B,wBAAeC,EAAf,EAAwB;AACtB,mBAAO,KAAKR,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,wBAAuCO,EAAvC,GAA6CD,IAA7C,CAAkD,4DAAK,CAAL,CAAlD,EAA2D,6DAAM,CAAN,CAA3D,CAAP;AACD;AA5C0B;AAAA;AAAA,iBA8C3B,iCAAwB;AACtB,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,mBAAyCM,IAAzC,CAA8C,4DAAK,CAAL,CAA9C,EAAuD,6DAAM,CAAN,CAAvD,CAAP;AACD;AAhD0B;AAAA;AAAA,iBAiD3B,uBAAcL,MAAd,EAA2B;AACzB,mBAAO,KAAKF,IAAL,CACJM,GADI,WAEA,KAAKL,GAFL,kBAEuB;AAC1BC,oBAAM,EAAEA;AADkB,aAFvB,EAKJK,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AAxD0B;AAAA;AAAA,iBAyD3B,4BAAmBL,MAAnB,EAAgC;AAC9B,mBAAO,KAAKF,IAAL,CACJM,GADI,WAEA,KAAKL,GAFL,wBAE6B;AAChCC,oBAAM,EAAEA;AADwB,aAF7B,EAKJK,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AAhE0B;AAAA;AAAA,iBAoE3B,6BAAoBL,MAApB,EAAiC;AAC/B,mBAAO,KAAKF,IAAL,CACJM,GADI,WAEA,KAAKL,GAFL,+BAEoC;AACvCC,oBAAM,EAAEA;AAD+B,aAFpC,EAKJK,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AA3E0B;AAAA;AAAA,iBA4E3B,qCAA4BL,MAA5B,EAAyC;AACvC,mBAAO,KAAKF,IAAL,CACJM,GADI,WAEA,KAAKL,GAFL,wCAE6C;AAChDC,oBAAM,EAAEA;AADwC,aAF7C,EAKJK,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AAnF0B;AAAA;AAAA,iBAoF3B,mBAAUL,MAAV,EAAqB;AACnB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,cACsB;AACzBC,oBAAM,EAAEC;AADiB,aADtB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AAhG0B;AAAA;AAAA,iBAkG3B,oBAAWL,MAAX,EAAsB;AACpB,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,eACuB;AAC1BC,oBAAM,EAAEC;AADkB,aADvB,EAIJI,IAJI,CAIC,4DAAK,CAAL,CAJD,EAIU,6DAAM,CAAN,CAJV,CAAP;AAKD;AA9G0B;AAAA;AAAA,iBAgH3B,wBAA6B;AAAA,gBAAhBL,MAAgB,uEAAF,EAAE;AAC3B,gBAAIC,UAAU,GAAG,IAAI,+DAAJ,EAAjB;;AAEA,iBAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxBC,wBAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBD,KAAlB,EAAyBF,MAAM,CAACE,KAAD,CAA/B,CAAb;AACD;;AAED,mBAAO,KAAKJ,IAAL,CACJM,GADI,WACG,KAAKL,GADR,iBACyB;AAAEC,oBAAM,EAAEC;AAAV,aADzB,EAEJI,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA1H0B;AAAA;AAAA,iBA4H3B,qBAAS;AACP,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,cAAoCM,IAApC,CAAyC,4DAAK,CAAL,CAAzC,EAAkD,6DAAM,CAAN,CAAlD,CAAP;AACD;AA9H0B;AAAA;AAAA,iBAgI3B,0BAAc;AACZ,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,mBAAyCM,IAAzC,CAA8C,4DAAK,CAAL,CAA9C,EAAuD,6DAAM,CAAN,CAAvD,CAAP;AACD;AAlI0B;AAAA;AAAA,iBAmI3B,mCAAuB;AACrB,mBAAO,KAAKP,IAAL,CACJM,GADI,WACG,KAAKL,GADR,+BAEJM,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAvI0B;AAAA;AAAA,iBAyI3B,oBAAWE,UAAX,EAAuB;AACrB,mBAAO,KAAKT,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,gCAA+CQ,UAA/C,GAA6DF,IAA7D,CAAkE,4DAAK,CAAL,CAAlE,CAAP;AACD;AA3I0B;AAAA;AAAA,iBA6I3B,4BAAmB;AACjB,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,6BACNM,IADM,CACD,4DAAK,CAAL,CADC,EACQ,6DAAM,CAAN,CADR,CAAP;AAED;AAhJ0B;AAAA;AAAA,iBAkJ3B,8BAAqB;AACnB,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,4BACNM,IADM,CACD,4DAAK,CAAL,CADC,EACQ,6DAAM,CAAN,CADR,CAAP;AAED;AArJ0B;AAAA;AAAA,iBAsJ3B,gCAAoB;AAClB,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,iCAAP;AACD;AAxJ0B;;AAAA;AAAA,S;;;;gBAZpB;;;;AAYIF,sBAAgB,6DAH5B,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAG4B,E,+EAGC,+D,EAHD,GAAhBC,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCYf;AAMA;;;UAmBaW,mDAAmD;AA6C9D,qEACUC,cADV,EAEUC,MAFV,EAGUC,QAHV,EAIUC,WAJV,EAKUC,qBALV,EAMUC,cANV,EAOUC,iBAPV,EAQUC,YARV,EASUC,gBATV,EAUUC,mBAVV,EAUkD;AAAA;;AATxC,eAAAT,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AArDH,eAAAC,KAAA,GAAQ,+CAAR;AAEP,eAAAC,gBAAA,GAAmB,IAAnB;AAIA,eAAAC,cAAA,GAAoC,EAApC;AAEA,eAAAC,yBAAA,GAAwD;AACtDC,uBAAW,EAAE,KADyC;AAEtDC,sBAAU,EAAE,GAF0C;AAGtDC,iBAAK,EAAE;AAH+C,WAAxD;AAMA,eAAAC,oBAAA,GAAmD;AACjDH,uBAAW,EAAE,KADoC;AAEjDC,sBAAU,EAAE;AAFqC,WAAnD;AAKA,eAAAG,SAAA,GAAoB,IAApB;AAGA,eAAAC,WAAA,GAAc,KAAd;AAGA,eAAAC,aAAA,GAAgB,IAAhB;AAIA,eAAAC,MAAA,GAAqB,EAArB;AACA,eAAAC,OAAA,GAAsB,EAAtB;AACA,eAAAC,eAAA,GAA8B,EAA9B;AACA,eAAAC,SAAA,GAAwB,EAAxB;AAGA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,WAAA,GAAc,KAAd;AAEA,eAAAC,cAAA,GAA6B,EAA7B;AACA,eAAAC,oBAAA,GAAuB,KAAvB;AACA,eAAAC,mBAAA,GAAsB,KAAtB;AAcE,eAAKzB,cAAL,CAAoB0B,UAApB;AACD;;AA1D6D;AAAA;AAAA,iBA4D9D,oBAAQ;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,eAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,gBAAL;AACA,iBAAK7B,YAAL,CAAkB8B,QAAlB,CAA2B,gCAA3B;AACD;AAnE6D;AAAA;AAAA,iBAqE9D,2BAAe;AACb,iBAAK/B,iBAAL,CAAuB0B,eAAvB,GAAyCM,SAAzC;AACD;AAvE6D;AAAA;AAAA,iBAyE9D,yBAAa;AAAA;;AACX,iBAAKtC,cAAL,CAAoBT,MAApB,CAA2B+C,SAA3B,CAAqC,UAAC/C,MAAD,EAAiB;AACpD,kBAAIA,MAAM,CAACM,EAAX,EAAe;AACb,qBAAI,CAAC0C,QAAL,GAAgB,2BAAhB;AACD,eAFD,MAEO;AACL,qBAAI,CAACA,QAAL,GAAgB,yBAAhB;AACD;;AAED,mBAAI,CAAC3B,cAAL,GAAsB,CACpB;AACE4B,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0BlD,MAAM,CAACmD,WAAjC;AAFZ,eALoB,EASpB;AACEF,yBAAS,EAAE,qBADb;AAEEC,0BAAU,iCAA0BlD,MAAM,CAACmD,WAAjC;AAFZ,eAToB,EAapB;AACEF,yBAAS,EAAE,KAAI,CAACD;AADlB,eAboB,CAAtB;AAiBD,aAxBD;AAyBD;AAnG6D;AAAA;AAAA,iBAqG9D,2BAAe;AAAA;;AACb,iBAAKnC,qBAAL,CACG8B,eADH,GAEGtC,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAACe,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOG2B,SAPH,CAOa,UAACK,QAAD,EAAmB;AAC5B,kBAAIA,QAAQ,CAAC,CAAD,CAAR,CAAYC,YAAZ,KAA6B,GAAjC,EAAsC;AACpC,sBAAI,CAACvB,MAAL,GAAcsB,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAA1B;AACD,eAFD,MAEO;AACL,sBAAI,CAACxC,cAAL,CAAoByC,KAApB;;AACA,sBAAI,CAAC5C,QAAL,CAAc6C,IAAd;AACD;;AAED,kBAAIJ,QAAQ,CAAC,CAAD,CAAR,CAAYC,YAAZ,KAA6B,GAAjC,EAAsC;AACpC,sBAAI,CAACtB,OAAL,GAAeqB,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAA3B;AACD,eAFD,MAEO;AACL,sBAAI,CAACxC,cAAL,CAAoByC,KAApB;;AACA,sBAAI,CAAC5C,QAAL,CAAc6C,IAAd;AACD;AACF,aArBH;AAsBD;AA5H6D;AAAA;AAAA,iBA8H9D,0BAAc;AACZ,gBAAMC,QAAQ,GAAG,KAAKhD,cAAL,CAAoBiD,QAApB,CAA6BC,IAA7B,CAAkCtF,QAAnD;;AAEA,gBAAIoF,QAAQ,CAACG,OAAT,KAAqB,IAAzB,EAA+B;AAC7B,kBAAMvF,QAAQ,GAAWoF,QAAQ,CAACE,IAAlC;AAEA,mBAAKE,IAAL,GAAY,KAAKjD,WAAL,CAAiBkD,KAAjB,CAAuB;AACjCC,wBAAQ,EAAE,CAAC1F,QAAQ,CAAC0F,QAAV,CADuB;AAEjCC,yBAAS,EAAE,CAAC3F,QAAQ,CAAC2F,SAAV,EAAqB,CAAC,0DAAWC,QAAZ,CAArB,CAFsB;AAGjCC,0BAAU,EAAE,CAAC7F,QAAQ,CAAC6F,UAAV,EAAsB,CAAC,0DAAWD,QAAZ,CAAtB,CAHqB;AAIjCE,2BAAW,EAAE,CAAC9F,QAAQ,CAAC8F,WAAV,EAAuB,CAAC,0DAAWF,QAAZ,CAAvB,CAJoB;AAKjCG,8BAAc,EAAE,KAAKxD,WAAL,CAAiByD,KAAjB,CAAuB,EAAvB;AALiB,eAAvB,CAAZ;AAQA,mBAAKC,YAAL,CAAkBjG,QAAQ,CAAC4D,SAA3B;AACD,aAZD,MAYO;AACL,mBAAKnB,cAAL,CAAoByC,KAApB;AACA,mBAAK5C,QAAL,CAAc6C,IAAd;AACD;AACF;AAjJ6D;AAAA;AAAA,iBAmJ9D,4BAAgB;AACd,iBAAKe,aAAL,GAAqB,KAAK3D,WAAL,CAAiBkD,KAAjB,CAAuB;AAC1CU,sBAAQ,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWP,QAAZ,CAAP,CADgC;AAE1CtC,uBAAS,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWsC,QAAZ,CAAP,CAF+B;AAG1CQ,yBAAW,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWR,QAAZ,CAAP;AAH6B,aAAvB,CAArB;AAKD;AAzJ6D;AAAA;AAAA,iBA2J9D,sBAAahC,SAAb,EAA2B;AACzB,gBAAIA,SAAS,CAACyC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,SAAS,CAACyC,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzC,qBAAKC,aAAL,CAAmB3C,SAAS,CAAC0C,CAAD,CAA5B;AACD;AACF;AACF;AAjK6D;AAAA;AAAA,eAmK9D,eAAkB;AAChB,mBAAO,KAAKd,IAAL,CAAUzD,GAAV,CAAc,gBAAd,CAAP;AACD;AArK6D;AAAA;AAAA,iBAuK9D,uBAAcyE,QAAd,EAA6BC,cAA7B,EAAqD;AAAA;;AACnD,gBAAI,KAAKnD,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,mBAAKA,SAAL,GAAiBkD,QAAQ,CAAClD,SAA1B;AACD;;AAED,gBAAI,KAAKA,SAAL,KAAmBkD,QAAQ,CAAClD,SAAhC,EAA2C;AACzC,kBAAI,KAAKoD,mBAAL,CAAyBF,QAAzB,MAAuC,KAA3C,EAAkD;AAChD,qBAAKT,cAAL,CAAoBY,IAApB,CACE,KAAKpE,WAAL,CAAiBkD,KAAjB,CAAuB;AACrBW,6BAAW,EAAE,CAACI,QAAQ,CAACJ,WAAV,CADQ;AAErBQ,8BAAY,EAAE,CAACJ,QAAQ,CAACI,YAAV,CAFO;AAGrBtD,2BAAS,EAAE,CAACkD,QAAQ,CAAClD,SAAV;AAHU,iBAAvB,CADF;;AAQA,oBAAI,KAAKkC,IAAL,CAAUqB,KAAV,CAAgBd,cAAhB,CAA+BM,MAA/B,GAAwC,CAA5C,EAA+C;AAC7C,sBAAI,KAAKpD,yBAAL,CAA+BC,WAA/B,KAA+C,KAAnD,EAA0D;AACxD,yBAAKM,aAAL,GAAqB,KAArB;AACA,yBAAKP,yBAAL,CAA+BC,WAA/B,GAA6C,IAA7C;AAEA4D,8BAAU,CAAC,YAAM;AACf,4BAAI,CAACtD,aAAL,GAAqB,IAArB;AACD,qBAFS,EAEP,CAFO,CAAV;AAGD;AACF;;AAED,oBAAIiD,cAAJ,EAAoB;AAClB,uBAAKjB,IAAL,CAAUuB,aAAV;AACA,uBAAKvB,IAAL,CAAUwB,WAAV;AACD;AACF;AACF,aA1BD,MA0BO;AACL,mBAAKvE,cAAL,CAAoBwE,MAApB,CAA2B,2CAA3B;AACD;AACF;AAzM6D;AAAA;AAAA,iBA2M9D,6BAAoBT,QAApB,EAAiC;AAC/B,mBAAO,KAAKhB,IAAL,CAAUqB,KAAV,CAAgBd,cAAhB,CAA+BmB,IAA/B,CAAoC,UAACC,EAAD,EAAa;AACtD,qBAAOA,EAAE,CAACf,WAAH,KAAmBI,QAAQ,CAACJ,WAAnC;AACD,aAFM,CAAP;AAGD;AA/M6D;AAAA;AAAA,iBAiN9D,+BAAmB;AACjB,gBAAML,cAAc,GAAG,KAAKP,IAAL,CAAUzD,GAAV,CAAc,gBAAd,CAAvB;AACAgE,0BAAc,CAACqB,KAAf;AACA,iBAAK9D,SAAL,GAAiB,IAAjB;AACD;AArN6D;AAAA;AAAA,iBAuN9D,0BAAiB+D,KAAjB,EAA8B;AAAA;;AAC5B,iBAAKC,aAAL,GAAqB5C,SAArB,CAA+B,UAACK,QAAD;AAAA,qBAC7BA,QAAQ,GAAG,MAAI,CAACwC,cAAL,CAAoBF,KAApB,CAAH,GAAgC,IADX;AAAA,aAA/B;AAGD;AA3N6D;AAAA;AAAA,iBA6N9D,yBAAa;AACX,mBAAO,KAAKxE,mBAAL,CAAyB2E,WAAzB,CACL,QADK,EAEL,oBAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AArO6D;AAAA;AAAA,iBAuO9D,wBAAeH,KAAf,EAA8B;AAC5B,iBAAKtB,cAAL,CAAoB0B,QAApB,CAA6BJ,KAA7B;AACA,iBAAK7B,IAAL,CAAUuB,aAAV;AACA,iBAAKvB,IAAL,CAAUwB,WAAV;AACD;AA3O6D;AAAA;AAAA,iBA6O9D,uBAAcb,QAAd,EAAgC;AAC9B,iBAAKD,aAAL,CAAmBwB,QAAnB,CAA4BpE,SAA5B,CAAsCqE,KAAtC;AACA,iBAAKzB,aAAL,CAAmBwB,QAAnB,CAA4BpE,SAA5B,CAAsCsE,QAAtC,CAA+C,IAA/C;AACA,iBAAK1B,aAAL,CAAmBwB,QAAnB,CAA4BpE,SAA5B,CAAsCuE,MAAtC;AACA,iBAAK3B,aAAL,CAAmBwB,QAAnB,CAA4BpE,SAA5B,CAAsCwE,aAAtC,CAAoD,CAAC,0DAAWlC,QAAZ,CAApD;AACA,iBAAKM,aAAL,CAAmBwB,QAAnB,CAA4BpE,SAA5B,CAAsCyE,sBAAtC;AAEA,iBAAK7B,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwCuB,KAAxC;AACA,iBAAKzB,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwC4B,OAAxC;AACA,iBAAK9B,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwCwB,QAAxC,CAAiD,IAAjD;AACA,iBAAK1B,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwC2B,sBAAxC;AAEA,iBAAKpE,eAAL,GAAuB,KAAKD,OAAL,CAAauE,MAAb,CACrB,UAACpB,KAAD;AAAA,qBAAgBA,KAAK,CAACqB,OAAN,IAAiB/B,QAAjC;AAAA,aADqB,CAAvB;AAGD;AA5P6D;AAAA;AAAA,iBA8P9D,wBAAe7C,SAAf,EAAkC;AAChC,iBAAK4C,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwCuB,KAAxC;AACA,iBAAKzB,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwCyB,MAAxC;AACA,iBAAK3B,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwCwB,QAAxC,CAAiD,IAAjD;AACA,iBAAK1B,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwC2B,sBAAxC;AAEA,iBAAKI,YAAL,CAAkB7E,SAAlB;AACD;AArQ6D;AAAA;AAAA,iBAuQ9D,sBAAaA,SAAb,EAA8B;AAAA;;AAC5B,gBAAI,OAAOA,SAAP,KAAqB,WAArB,IAAoCA,SAAS,KAAK,IAAtD,EAA4D;AAC1D,mBAAK8E,eAAL,GAAuB,IAAvB;AACA,mBAAKxE,SAAL,GAAiB,EAAjB;AAEA,mBAAKhB,gBAAL,CACGuF,YADH,CACgB;AACZ7E,yBAAS,EAAEA,SADC;AAEZ+E,wBAAQ,EAAE;AAFE,eADhB,EAKGrG,IALH,CAMI,gEAAS,YAAM;AACb,sBAAI,CAACoG,eAAL,GAAuB,KAAvB;AACD,eAFD,CANJ,EAUG1D,SAVH,CAWI,UAACK,QAAD,EAA4B;AAC1B,oBACEA,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,IAFvB,EAGE;AACA,wBAAI,CAAC3B,SAAL,GAAiBmB,QAAQ,CAACO,IAA1B;;AAEA,wBAAI,CAAC1B,SAAL,CAAe2E,OAAf,CAAuB;AACrBC,kCAAc,EAAE,CADK;AAErBC,2CAAuB,EAAE;AAFJ,mBAAvB;;AAKA,wBAAI,CAACvC,aAAL,CAAmBwB,QAAnB,CAA4BtB,WAA5B,CAAwCwB,QAAxC,CAAiD,CAAjD;AACD,iBAZD,MAYO,IACL7C,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,KADrB,IAEAR,QAAQ,CAACuD,cAAT,CAAwB,UAAxB,CAHK,EAIL;AACA,wBAAI,CAAC7F,cAAL,CAAoByC,KAApB,CAA0BH,QAAQ,CAAC2D,QAAnC;AACD,iBANM,MAMA;AACL,wBAAI,CAACjG,cAAL,CAAoByC,KAApB;AACD;AACF,eAjCL,EAkCI,UAACA,KAAD,EAAgB;AACd,oBAAIA,KAAK,CAAC,OAAD,CAAL,CAAeoD,cAAf,CAA8B,UAA9B,CAAJ,EAA+C;AAC7C,wBAAI,CAAC7F,cAAL,CAAoByC,KAApB,CAA0BA,KAAK,CAACA,KAAN,CAAYwD,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAACjG,cAAL,CAAoByC,KAApB;AACD;AACF,eAxCL;AA0CD;AACF;AAvT6D;AAAA;AAAA,iBAyT9D,6BAAiB;AAAA;;AACf,gBAAI,KAAKgB,aAAL,CAAmByC,KAAvB,EAA8B;AAC5B,mBAAKC,YAAL,GAAoB,IAApB;AACA,mBAAK9E,SAAL,GAAiB,IAAjB;AACA,mBAAKE,cAAL,GAAsB,EAAtB;AACA,mBAAKC,oBAAL,GAA4B,KAA5B;AACA,mBAAKC,mBAAL,GAA2B,KAA3B;AAEA,kBAAIvC,MAAM,GAAG;AACX2B,yBAAS,EAAE,KAAK4C,aAAL,CAAmBW,KAAnB,CAAyBvD;AADzB,eAAb;;AAIA,kBAAI,KAAK4C,aAAL,CAAmBW,KAAnB,CAAyBT,WAAzB,KAAyC,CAA7C,EAAgD;AAC9CyC,sBAAM,CAACC,MAAP,CAAcnH,MAAd,EAAsB;AACpByE,6BAAW,EAAE,KAAKF,aAAL,CAAmBW,KAAnB,CAAyBT;AADlB,iBAAtB;AAGD;;AAED,mBAAKxD,gBAAL,CACGuF,YADH,CACgBxG,MADhB,EAEGK,IAFH,CAGI,gEAAS,YAAM;AACb,sBAAI,CAAC+B,WAAL,GAAmB,IAAnB;AACA,sBAAI,CAACD,SAAL,GAAiB,KAAjB;AACA,sBAAI,CAAC8E,YAAL,GAAoB,KAApB;AACA,sBAAI,CAAC3E,oBAAL,GAA4B,IAA5B;AACD,eALD,CAHJ,EAUGS,SAVH,CAWI,UAACK,QAAD,EAA4B;AAC1B,oBACEA,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,IAFvB,EAGE;AACA,wBAAI,CAACvB,cAAL,GAAsBe,QAAQ,CAACO,IAAT,CAAcyD,GAAd,CAAkB,UAAU5B,EAAV,EAAmB;AACzD,wBAAI6B,CAAC,GAAGH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB3B,EAAlB,CAAR;AACA6B,qBAAC,CAACC,OAAF,GAAY,CAAZ;AACA,2BAAOD,CAAP;AACD,mBAJqB,CAAtB;;AAMA,sBAAI,MAAI,CAAChF,cAAL,CAAoBqC,MAApB,GAA6B,CAAjC,EAAoC;AAClC,0BAAI,CAAChD,oBAAL,CAA0BH,WAA1B,GAAwC,IAAxC;AACD,mBAFD,MAEO;AACL,0BAAI,CAACG,oBAAL,CAA0BH,WAA1B,GAAwC,KAAxC;AACD;AACF,iBAfD,MAeO,IACL6B,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,KADrB,IAEAR,QAAQ,CAACuD,cAAT,CAAwB,UAAxB,CAHK,EAIL;AACA,wBAAI,CAAC7F,cAAL,CAAoByC,KAApB,CAA0BH,QAAQ,CAAC2D,QAAnC;;AACA,wBAAI,CAACxE,mBAAL,GAA2B,IAA3B;AACD,iBAPM,MAOA;AACL,wBAAI,CAACzB,cAAL,CAAoByC,KAApB;;AACA,wBAAI,CAAChB,mBAAL,GAA2B,IAA3B;AACD;AACF,eAtCL,EAuCI,UAACgB,KAAD,EAAgB;AACd,oBAAIA,KAAK,CAAC,OAAD,CAAL,CAAeoD,cAAf,CAA8B,UAA9B,CAAJ,EAA+C;AAC7C,wBAAI,CAAC7F,cAAL,CAAoByC,KAApB,CAA0BA,KAAK,CAACA,KAAN,CAAYwD,QAAtC;AACD,iBAFD,MAEO;AACL,wBAAI,CAACjG,cAAL,CAAoByC,KAApB;AACD;AACF,eA7CL;AA+CD;AACF;AA3X6D;AAAA;AAAA,iBA6X9D,uBAAc;AACZ,iBAAKrB,SAAL,GAAiB,CAAC,KAAKA,SAAvB;;AAEA,iBAAK,IAAIwD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKrD,cAAL,CAAoBqC,MAAhD,EAAwDgB,KAAK,EAA7D,EAAiE;AAC/D,mBAAKrD,cAAL,CAAoBqD,KAApB,EAA2B4B,OAA3B,GAAqC,KAAKpF,SAAL,KAAmB,IAAnB,GAA0B,CAA1B,GAA8B,CAAnE;AACD;AACF;AAnY6D;AAAA;AAAA,iBAqY9D,yBAAgBwD,KAAhB,EAA+Bb,QAA/B,EAA4C;AAC1C,iBAAKxC,cAAL,CAAoBqD,KAApB,EAA2B4B,OAA3B,GAAqCzC,QAAQ,CAACyC,OAAT,IAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAAjE;AACD;AAvY6D;AAAA;AAAA,iBAyY9D,+BAAmB;AACjB,iBAAKpF,SAAL,GAAiB,KAAjB;;AAEA,iBAAK,IAAIwD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKrD,cAAL,CAAoBqC,MAAhD,EAAwDgB,KAAK,EAA7D,EAAiE;AAC/D,kBAAI,KAAKrD,cAAL,CAAoBqD,KAApB,EAA2B4B,OAA3B,KAAuC,CAA3C,EAA8C;AAC5C,oBAAMzC,QAAQ,GAAG;AACfJ,6BAAW,EAAE,KAAKpC,cAAL,CAAoBqD,KAApB,EAA2BmB,cADzB;AAEf5B,8BAAY,EAAE,KAAK5C,cAAL,CAAoBqD,KAApB,EAA2BzC,SAF1B;AAGftB,2BAAS,EAAE,KAAKU,cAAL,CAAoBqD,KAApB,EAA2B/D;AAHvB,iBAAjB;AAMA,qBAAKiD,aAAL,CAAmBC,QAAnB,EAA6B,IAA7B;AACA,qBAAKxC,cAAL,CAAoBqD,KAApB,EAA2B4B,OAA3B,GAAqC,CAArC;AACD;AACF;AACF;AAxZ6D;AAAA;AAAA,iBA0Z9D,sBAAaC,KAAb,EAA0B;AACxB,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AAha6D;AAAA;AAAA,iBAka9D,wBAAeA,KAAf,EAAyB;AACvBA,iBAAK,GAAG,KAAK1D,IAAL,CAAUzD,GAAV,CAAcmH,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACE,MAAN,IAAgB,SAAhB,IAA6BF,KAAK,CAACG,OAA1C;AACD;AAta6D;AAAA;AAAA,iBAwa9D,yBACEC,eADF,EAEEC,oBAFF,EAE+B;AAE7B,gBAAID,eAAe,CAACE,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGF,eAAe,CAACE,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAAC5D,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAI2D,oBAAJ,EAA0B;AACxB,mBAAK,IAAME,WAAX,IAA0BH,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBJ,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAArB,KACAA,WAAW,IAAIF,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AAjc6D;AAAA;AAAA,iBAmc9D,oBAAQ;AAAA;;AACN,gBAAI,KAAK/D,IAAL,CAAUmE,QAAd,EAAwB;AACtB,mBAAKrH,QAAL,CAAc6C,IAAd;AACD,aAFD,MAEO;AACL,kBAAI,KAAKK,IAAL,CAAUmD,KAAd,EAAqB;AACnB,oBAAI,KAAKnD,IAAL,CAAUqB,KAAV,CAAgBd,cAAhB,CAA+BM,MAA/B,GAAwC,CAA5C,EAA+C;AAC7C,uBAAKuC,YAAL,GAAoB,IAApB;AACA,uBAAKgB,cAAL,GAAsB,IAAtB;AAEA,uBAAKpH,qBAAL,CACGqH,IADH,CACQ,KAAKrE,IAAL,CAAUqB,KADlB,EAEG7E,IAFH,CAGI,gEAAS,YAAM;AACb,0BAAI,CAAC4G,YAAL,GAAoB,KAApB;AACA,0BAAI,CAACgB,cAAL,GAAsB,KAAtB;AACD,mBAHD,CAHJ,EAQGlF,SARH,CASI,UAACK,QAAD,EAAmB;AACjB,wBACEA,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,IAFvB,EAGE;AACA,4BAAI,CAACC,IAAL,CAAUmC,KAAV;;AACA,4BAAI,CAACpE,WAAL,GAAmB,KAAnB;;AACA,4BAAI,CAACd,cAAL,CAAoB8C,OAApB,CAA4BR,QAAQ,CAAC2D,QAArC;;AAEA,4BAAI,CAACtG,cAAL,CAAoBT,MAApB,CAA2B+C,SAA3B,CAAqC,UAAC/C,MAAD,EAAiB;AACpD,4BAAImI,UAAJ;;AAEA,4BAAInI,MAAM,CAAC2G,cAAP,CAAsB,IAAtB,CAAJ,EAAiC;AAC/BwB,oCAAU,GAAG,aAAb;AACD,yBAFD,MAEO;AACLA,oCAAU,GAAG,UAAb;AACD;;AAED,8BAAI,CAACzH,MAAL,CAAY0H,QAAZ,CAAqB,CAACD,UAAD,CAArB,EAAmC;AACjCE,oCAAU,EAAE,MAAI,CAAC5H;AADgB,yBAAnC;AAGD,uBAZD;AAaD,qBArBD,MAqBO,IACL2C,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,KAFhB,EAGL;AACA,4BAAI,CAAC9C,cAAL,CAAoByC,KAApB,CAA0BH,QAAQ,CAAC2D,QAAnC;AACD,qBALM,MAKA;AACL,4BAAI,CAACjG,cAAL,CAAoByC,KAApB;AACD;AACF,mBAvCL,EAwCI,UAACA,KAAD,EAAgB;AACd,0BAAI,CAACzC,cAAL,CAAoByC,KAApB;AACD,mBA1CL;AA4CD,iBAhDD,MAgDO;AACL,uBAAKzC,cAAL,CAAoBwE,MAApB,CAA2B,iCAA3B;AACD;AACF;AACF;AACF;AA7f6D;AAAA;AAAA,iBA+f9D,oBAAQ;AACN,iBAAK3E,QAAL,CAAc6C,IAAd;AACD;AAjgB6D;AAAA;AAAA,iBAmgB9D,mBAAO;AACL,iBAAK5B,WAAL,GAAmB,IAAnB;AACD;AArgB6D;AAAA;AAAA,iBAugB9D,6BAAiB;AACf,gBAAI,KAAKA,WAAT,EAAsB;AACpB,kBAAI0G,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACzD,uBAAO,IAAP;AACD,eAFD,MAEO;AACL,uBAAO,KAAP;AACD;AACF;;AACD,mBAAO,IAAP;AACD;AAhhB6D;;AAAA;AAAA,S;;;;gBApCvD;;gBAAgB;;gBAChB;;gBAGP;;gBAcO;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;AAaI9H,yDAAmD,6DAL/D,gEAAU;AACT+H,gBAAQ,EAAE,iDADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAK+D,E,+EA8CpC,8D,EACR,sD,EACE,wD,EACG,0D,EACU,uF,EACP,4F,EACG,sG,EACL,wF,EACI,6F,EACG,+G,EAvD+B,GAAnDhI,mDAAmD,CAAnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtBAiI,mBAAmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAC9B,uBACEtK,SADF,EAEEuK,KAFF,EAGEC,KAHF,EAG4B;AAM1B,mBAAOxK,SAAS,CAACyK,iBAAV,EAAP;AACD;AAX6B;;AAAA;AAAA,S;;AAAnBH,yBAAmB,6DAH/B,iEAAW;AACV7I,kBAAU,EAAE;AADF,OAAX,CAG+B,GAAnB6I,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCXb;AAIA;AAGA;AAGA;AAGA;AAKA;AAIA;;;UAsBaI,sCAAsC;AAAA;AAAA,Q;;AAAtCA,4CAAsC,6DAnBlD,+DAAS;AACRC,oBAAY,EAAE,CACZ,sGADY,EAEZ,qHAFY,CADN;AAKRpK,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,yEAJO,EAKP,mEALO,EAMP,mEANO,EAOP,oEAPO,EAQP,oGARO,EASP,kFATO,EAUP,0FAVO,CALD;AAiBRqK,iBAAS,EAAE,CAAC,2FAAD,EAAiB,wFAAjB;AAjBH,OAAT,CAmBkD,GAAtCF,sCAAsC,CAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC5Cb;;;UAMaG,uDAAuD;AAElE,yEACUC,sBADV,EACyE;AAAA;;AAA/D,eAAAA,sBAAA,GAAAA,sBAAA;AACN;;AAJ8D;AAAA;AAAA,iBAMlE,iBAAQP,KAAR,EAAqC;AACnC,gBAAIA,KAAK,CAAC1I,MAAN,IAAgB0I,KAAK,CAAC1I,MAAN,CAAaM,EAAjC,EAAqC;AACnC,qBAAO,KAAK2I,sBAAL,CAA4BC,WAA5B,CAAwCR,KAAK,CAAC1I,MAAN,CAAaM,EAArD,CAAP;AACD,aAHkC,CAKnC;;;AACA,mBAAO,gDAAG;AACRsD,qBAAO,EAAE,IADD;AAERmD,sBAAQ,EAAE,IAFF;AAGRpD,kBAAI,EAAE;AACJI,wBAAQ,EAAE,IADN;AAEJC,yBAAS,EAAE,IAFP;AAGJE,0BAAU,EAAE,IAHR;AAIJC,2BAAW,EAAE,EAJT;AAKJlC,yBAAS,EAAE;AALP;AAHE,aAAH,CAAP;AAWD;AAvBiE;;AAAA;AAAA,S;;;;gBAL3D;;;;AAKI+G,6DAAuD,6DAHnE,iEAAW;AACVpJ,kBAAU,EAAE;AADF,OAAX,CAGmE,E,+EAGhC,uF,EAHgC,GAAvDoJ,uDAAuD,CAAvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCIb;;;UAoBaG,8CAA8C;AAmDzD,gEACU1I,cADV,EAEUC,MAFV,EAGUE,WAHV,EAIUC,qBAJV,EAKUC,cALV,EAMUC,iBANV,EAOUC,YAPV,EAQUE,mBARV,EASUkI,kBATV,EASgD;AAAA;;AARtC,eAAA3I,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAE,WAAA,GAAAA,WAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAE,mBAAA,GAAAA,mBAAA;AACA,eAAAkI,kBAAA,GAAAA,kBAAA;AAzDV,eAAAnC,YAAA,GAAe,KAAf;AAEA,eAAA5F,cAAA,GAAoC,EAApC;AAEA,eAAAgI,SAAA,GAA8B,CAC5B;AACE/I,cAAE,EAAE,CADN;AAEEgJ,gBAAI,EAAE,OAFR;AAGEC,iBAAK,EAAE;AAHT,WAD4B,EAM5B;AACEjJ,cAAE,EAAE,CADN;AAEEgJ,gBAAI,EAAE,SAFR;AAGEC,iBAAK,EAAE;AAHT,WAN4B,CAA9B;AAaA,eAAAC,WAAA,GAA0C;AACxCC,0BAAc,EAAE;AADwB,WAA1C;AAIA,eAAA/H,oBAAA,GAAmD;AACjDD,iBAAK,EAAE;AAD0C,WAAnD;AAOA,eAAAiI,eAAA,GAAkB,KAAlB;AAIA,eAAAC,OAAA,GAAU,WAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,YAAA,GAAe,GAAf;AACA,eAAAC,WAAA,GAAc,CAAd;AACA,eAAAC,UAAA,GAAa,CAAb;AAEA,eAAAC,KAAA,GAAuB,EAAvB;AACA,eAAAC,eAAA,GAAiC,EAAjC;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAAnI,SAAA,GAAwB,EAAxB;AAaE,eAAKnB,cAAL,CAAoB0B,UAApB;AACD;;AA/DwD;AAAA;AAAA,iBAiEzD,oBAAQ;AACN,iBAAKC,eAAL;AACA,iBAAKC,aAAL;AACA,iBAAK2H,aAAL;AACA,iBAAKrJ,YAAL,CAAkB8B,QAAlB,CAA2B,qBAA3B;AACA,iBAAKwH,oBAAL;AACA,iBAAKC,mBAAL;AACD;AAxEwD;AAAA;AAAA,iBA0EzD,2BAAe;AACb,iBAAKxJ,iBAAL,CAAuB0B,eAAvB,GAAyCM,SAAzC;AACD;AA5EwD;AAAA;AAAA,iBA8EzD,yBAAa;AAAA;;AACX,iBAAKtC,cAAL,CAAoBT,MAApB,CAA2B+C,SAA3B,CAAqC,UAAC/C,MAAD,EAAiB;AACpD,oBAAI,CAACqB,cAAL,GAAsB,CACpB;AACE4B,yBAAS,EAAE,MADb;AAEEC,0BAAU,EAAE;AAFd,eADoB,EAKpB;AACED,yBAAS,EAAE,WADb;AAEEC,0BAAU,iCAA0BlD,MAAM,CAACmD,WAAjC;AAFZ,eALoB,EASpB;AACEF,yBAAS,EAAE;AADb,eAToB,CAAtB;AAaD,aAdD;AAeD;AA9FwD;AAAA;AAAA,iBAgGzD,gCAAoB;AAAA;;AAClB,iBAAKuH,2BAAL,GAAmC,KAAKpB,kBAAL,CAAwBqB,MAAxB,CAA+B1H,SAA/B,CACjC,UAAC2H,KAAD,EAAgB;AACd,oBAAI,CAAChB,eAAL,GAAuBgB,KAAK,CAACC,OAA7B;AACD,aAHgC,CAAnC;AAKD;AAtGwD;AAAA;AAAA,iBAwGzD,yBAAa;AACX,gBAAMC,SAAS,GAAQ,KAAKC,iBAAL,EAAvB;AAEA,iBAAKhH,IAAL,GAAY,KAAKjD,WAAL,CAAiBkD,KAAjB,CAAuB;AACjCgH,mBAAK,EAAE,CAACF,SAAS,CAACE,KAAX,CAD0B;AAEjCjG,sBAAQ,EAAE,CAAC+F,SAAS,CAAC/F,QAAX,CAFuB;AAGjCV,yBAAW,EAAE,CAACyG,SAAS,CAACzG,WAAX,CAHoB;AAIjCwF,qBAAO,EAAE,CAACiB,SAAS,CAACjB,OAAX,CAJwB;AAKjCC,uBAAS,EAAE,CAACgB,SAAS,CAAChB,SAAX,CALsB;AAMjCmB,oBAAM,EAAE,CAACH,SAAS,CAACG,MAAX,CANyB;AAOjCC,uBAAS,EAAE,CAACJ,SAAS,CAACI,SAAX,EAAsB,0DAAW/G,QAAjC;AAPsB,aAAvB,CAAZ;AAUA,iBAAKgH,UAAL;AACD;AAtHwD;AAAA;AAAA,iBAwHzD,6BAAiB;AAAA;;AACf,gBAAIL,SAAS,GAAG;AACdE,mBAAK,EAAE,IADO;AAEdjG,sBAAQ,EAAE,IAFI;AAGdV,yBAAW,EAAE,EAHC;AAIdwF,qBAAO,EAAE,KAAKA,OAJA;AAKdC,uBAAS,EAAE,KAAKA,SALF;AAMdmB,oBAAM,EAAE,CANM;AAOdC,uBAAS,EAAE,KAAKlB;AAPF,aAAhB;AAUA,iBAAKoB,0BAAL,GAAkC,KAAKzK,cAAL,CAAoB0K,WAApB,CAAgCpI,SAAhC,CAChC,UAACoI,WAAD,EAAsB;AACpB,kBAAIjE,MAAM,CAACkE,IAAP,CAAYD,WAAZ,EAAyBzG,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,oBAAI1E,MAAM,GAAGqL,IAAI,CAACF,WAAW,CAAC,GAAD,CAAZ,CAAjB;AACAnL,sBAAM,GAAGsL,IAAI,CAACC,KAAL,CAAWvL,MAAX,CAAT;;AACA,uBAAI,CAACwL,MAAL,CAAYxL,MAAZ;;AAEAkH,sBAAM,CAACkE,IAAP,CAAYR,SAAZ,EAAuBa,OAAvB,CAA+B,UAACC,OAAD,EAAa;AAC1CxE,wBAAM,CAACkE,IAAP,CAAYpL,MAAZ,EAAoByL,OAApB,CAA4B,UAACE,QAAD,EAAc;AACxC,wBACED,OAAO,IAAIC,QAAX,IACAf,SAAS,CAACc,OAAD,CAAT,IAAsB1L,MAAM,CAAC2L,QAAD,CAF9B,EAGE;AACA,0BAAI,CAACC,KAAK,CAACC,MAAM,CAAC7L,MAAM,CAAC2L,QAAD,CAAP,CAAP,CAAV,EAAsC;AACpCf,iCAAS,CAACc,OAAD,CAAT,GAAqBG,MAAM,CAAC7L,MAAM,CAAC2L,QAAD,CAAP,CAA3B;AACD,uBAFD,MAEO;AACLf,iCAAS,CAACc,OAAD,CAAT,GAAqB1L,MAAM,CAAC2L,QAAD,CAA3B;AACD;AACF;AACF,mBAXD;AAYD,iBAbD;AAcD;AACF,aAtB+B,CAAlC;AAwBA,iBAAKT,0BAAL,CAAgCY,WAAhC;AAEA,mBAAOlB,SAAP;AACD;AA9JwD;AAAA;AAAA,iBAgKzD,sBAAU;AACR,gBAAI,KAAK/G,IAAL,CAAUqB,KAAV,CAAgByE,OAAhB,KAA4B,KAAKA,OAArC,EAA8C;AAC5C,mBAAKA,OAAL,GAAe,KAAK9F,IAAL,CAAUqB,KAAV,CAAgByE,OAA/B;AACD;;AAED,gBAAI,KAAK9F,IAAL,CAAUqB,KAAV,CAAgB0E,SAAhB,KAA8B,KAAKA,SAAvC,EAAkD;AAChD,mBAAKA,SAAL,GAAiB,KAAK/F,IAAL,CAAUqB,KAAV,CAAgB0E,SAAjC;AACD;AACF;AAxKwD;AAAA;AAAA,iBA0KzD,+BAAmB;AACjB,iBAAKmC,gBAAL,GAAwB;AACtBhI,sBAAQ,EAAE,IADY;AAEtBC,uBAAS,EAAE,IAFW;AAGtBE,wBAAU,EAAE,IAHU;AAItBC,yBAAW,EAAE,IAJS;AAKtBuC,sBAAQ,EAAE,IALY;AAMtBsF,wBAAU,EAAE,IANU;AAOtBC,yBAAW,EAAE,IAPS;AAQtBhK,uBAAS,EAAE;AARW,aAAxB;AAUD;AArLwD;AAAA;AAAA,iBAuLzD,sBAAasF,KAAb,EAA0B;AACxB,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AAED,mBAAO,EAAP;AACD;AA7LwD;AAAA;AAAA,iBA+LzD,wBAAeA,KAAf,EAAyB;AACvBA,iBAAK,GAAG,KAAK1D,IAAL,CAAUzD,GAAV,CAAcmH,KAAd,CAAR;AAEA,mBAAOA,KAAK,CAACE,MAAN,IAAgB,SAAhB,IAA6BF,KAAK,CAACG,OAA1C;AACD;AAnMwD;AAAA;AAAA,iBAqMzD,yBACEC,eADF,EAEEC,oBAFF,EAE+B;AAE7B,gBAAID,eAAe,CAACE,SAApB,EAA+B;AAC7B,kBAAMA,SAAS,GAAGF,eAAe,CAACE,SAAhB,CAA0B,EAA1B,CAAlB;;AACA,kBAAIA,SAAS,IAAIA,SAAS,CAAC5D,QAA3B,EAAqC;AACnC,uBAAO,aAAP;AACD;AACF;;AAED,gBAAI2D,oBAAJ,EAA0B;AACxB,mBAAK,IAAME,WAAX,IAA0BH,eAAe,CAAC,UAAD,CAAzC,EAAuD;AACrD,oBAAIA,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAAJ,EAA8C;AAC5C,sBACE,KAAKC,eAAL,CAAqBJ,eAAe,CAAC,UAAD,CAAf,CAA4BG,WAA5B,CAArB,KACAA,WAAW,IAAIF,oBAFjB,EAGE;AACA,2BAAO,aAAP;AACD;AACF;AACF;AACF;;AAED,mBAAO,EAAP;AACD;AA9NwD;AAAA;AAAA,iBAgOzD,oBAAWsE,MAAX,EAAyB;AACvB,gBAAI,KAAKvC,OAAL,KAAiBuC,MAArB,EAA6B;AAC3B,kBAAI,KAAKtC,SAAL,IAAkB,MAAtB,EAA8B;AAC5B,qBAAKA,SAAL,GAAiB,KAAjB;AACD,eAFD,MAEO,IAAI,KAAKA,SAAL,IAAkB,KAAtB,EAA6B;AAClC,qBAAKA,SAAL,GAAiB,MAAjB;AACD;AACF,aAND,MAMO;AACL,mBAAKD,OAAL,GAAeuC,MAAf;AACA,mBAAKtC,SAAL,GAAiB,KAAjB;AACD;;AAED,iBAAK/F,IAAL,CAAUqB,KAAV,CAAgByE,OAAhB,GAA0B,KAAKA,OAA/B;AACA,iBAAK9F,IAAL,CAAUqB,KAAV,CAAgB0E,SAAhB,GAA4B,KAAKA,SAAjC;AAEA,iBAAKuC,QAAL;AACD;AAhPwD;AAAA;AAAA,iBAkPzD,oBAAQ;AACN,gBAAI,KAAKtI,IAAL,CAAUmD,KAAd,EAAqB;AACnB,mBAAK8C,YAAL,GAAoB,KAAKjG,IAAL,CAAUqB,KAAV,CAAgB8F,SAApC;AACA,mBAAKjB,WAAL,GAAmB,CAAnB;AACA,mBAAKqC,eAAL,CAAqB,KAAKC,cAAL,EAArB;AACD;AACF;AAxPwD;AAAA;AAAA,iBA0PzD,yBAAgBrM,MAAhB,EAA2B;AACzB,iBAAKU,MAAL,CAAY0H,QAAZ,CAAqB,EAArB,EAAyB;AACvBC,wBAAU,EAAE,KAAK5H,cADM;AAEvB0K,yBAAW,EAAE;AAAEmB,iBAAC,EAAEC,IAAI,CAACjB,IAAI,CAACkB,SAAL,CAAexM,MAAf,CAAD;AAAT;AAFU,aAAzB;AAIA,iBAAKwL,MAAL,CAAYxL,MAAZ;AACD;AAhQwD;AAAA;AAAA,iBAkQzD,0BAAc;AACZ,gBAAIA,MAAM,GAAQ,EAAlB;;AAEA,gBAAI,KAAK6D,IAAL,CAAUqB,KAAV,CAAgB4F,KAApB,EAA2B;AACzB9K,oBAAM,CAAC8K,KAAP,GAAe,KAAKjH,IAAL,CAAUqB,KAAV,CAAgB4F,KAA/B;AACD;;AAED,gBAAI,KAAKjH,IAAL,CAAUqB,KAAV,CAAgBL,QAApB,EAA8B;AAC5B7E,oBAAM,CAAC6E,QAAP,GAAkB,KAAKhB,IAAL,CAAUqB,KAAV,CAAgBL,QAAlC;AACD;;AAED,gBAAI,KAAKhB,IAAL,CAAUqB,KAAV,CAAgBf,WAApB,EAAiC;AAC/BnE,oBAAM,CAACmE,WAAP,GAAqB,KAAKN,IAAL,CAAUqB,KAAV,CAAgBf,WAArC;AACD;;AAEDnE,kBAAM,CAAC2J,OAAP,GAAiB,KAAK9F,IAAL,CAAUqB,KAAV,CAAgByE,OAAjC;AACA3J,kBAAM,CAAC4J,SAAP,GAAmB,KAAK/F,IAAL,CAAUqB,KAAV,CAAgB0E,SAAnC;AAEA,mBAAO5J,MAAP;AACD;AArRwD;AAAA;AAAA,iBAuRzD,gBAAOA,MAAP,EAAkB;AAAA;;AAChB,iBAAKiH,YAAL,GAAoB,IAApB;AACA,iBAAKmC,kBAAL,CAAwBqD,IAAxB;AACA,iBAAKxC,KAAL,GAAa,EAAb;AACA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AAEA,iBAAKvJ,qBAAL,CACG6L,cADH,CACkB1M,MADlB,EAEGK,IAFH,CAGI,gEAAS,YAAM;AACb,qBAAI,CAAC4G,YAAL,GAAoB,KAApB;AACA,qBAAI,CAACkD,WAAL,GAAmB,IAAnB;AACD,aAHD,CAHJ,EAQGpH,SARH,CASI,UAACK,QAAD,EAA4B;AAC1B,kBAAIA,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KAAsCvD,QAAQ,CAACQ,OAAT,KAAqB,IAA/D,EAAqE;AACnE,uBAAI,CAACqG,KAAL,GAAa7G,QAAQ,CAACO,IAAtB;AACA,uBAAI,CAACuG,eAAL,GAAuB,OAAI,CAACD,KAAL,CAAW0C,KAAX,CAAiB,CAAjB,EAAoB,OAAI,CAAC7C,YAAzB,CAAvB;AACA,uBAAI,CAACE,UAAL,GAAkB,OAAI,CAACC,KAAL,CAAWvF,MAA7B;AACA,uBAAI,CAACyF,WAAL,GAAmB,IAAnB;AACD,eALD,MAKO,IACL/G,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,KAFhB,EAGL;AACA,uBAAI,CAACwG,UAAL,GAAkB,IAAlB;AACD,eALM,MAKA;AACL,uBAAI,CAACtJ,cAAL,CAAoByC,KAApB;;AACA,uBAAI,CAAC6G,UAAL,GAAkB,IAAlB;AACD;AACF,aAxBL,EAyBI,UAAC7G,KAAD,EAAgB;AACd,qBAAI,CAAC6G,UAAL,GAAkB,IAAlB;;AAEA,kBAAI7G,KAAK,CAACA,KAAN,CAAYoD,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,uBAAI,CAAC7F,cAAL,CAAoByC,KAApB,CAA0BA,KAAK,CAACA,KAAN,CAAYwD,QAAtC;AACD,eAFD,MAEO;AACL,uBAAI,CAACjG,cAAL,CAAoByC,KAApB;AACD;AACF,aAjCL;AAmCD;AAlUwD;AAAA;AAAA,iBAoUzD,2BAAkBuH,KAAlB,EAA+B;AAC7B,gBAAI8B,WAAJ;;AAEA,gBAAI9B,KAAK,CAAC3G,WAAN,KAAsB,CAA1B,EAA6B;AAC3ByI,yBAAW,GAAG,eAAd;AACD,aAFD,MAEO,IAAI9B,KAAK,CAAC3G,WAAN,KAAsB,CAA1B,EAA6B;AAClCyI,yBAAW,GAAG,gBAAd;AACD;;AAED,mBAAOA,WAAP;AACD;AA9UwD;AAAA;AAAA,iBAgVzD,uBAAclC,KAAd,EAAqC;AACnC,gBAAMmC,SAAS,GAAG,CAACnC,KAAK,CAACoC,IAAN,GAAa,CAAd,IAAmBpC,KAAK,CAACZ,YAA3C;AACA,gBAAMiD,OAAO,GAAGrC,KAAK,CAACoC,IAAN,GAAapC,KAAK,CAACZ,YAAnC;AACA,iBAAKI,eAAL,GAAuB,KAAKD,KAAL,CAAW0C,KAAX,CAAiBE,SAAjB,EAA4BE,OAA5B,CAAvB;AAEA,iBAAKC,cAAL,CAAoBC,aAApB,CAAkCC,cAAlC,CAAiD;AAC/CC,sBAAQ,EAAE;AADqC,aAAjD;AAGD;AAxVwD;AAAA;AAAA,iBA0VzD,mBAAUrC,KAAV,EAAuB;AAAA;;AACrB,iBAAK7D,YAAL,GAAoB,IAApB;AACA,iBAAKmC,kBAAL,CAAwB/J,IAAxB;AACA,iBAAK+N,gBAAL,mCAAiDtC,KAAK,CAAC9G,SAAvD;AACA,iBAAKuG,mBAAL;AACA,iBAAKwB,gBAAL,GAAwBjB,KAAxB;AACA,iBAAK7I,SAAL,GAAiB,EAAjB;AAEA,iBAAKpB,qBAAL,CACGwM,uBADH,CAC2BvC,KAAK,CAAC/G,QADjC,EAEG1D,IAFH,CAGI,gEAAS,YAAM;AACb8E,wBAAU,CAAC,YAAM;AACf,uBAAI,CAAC8B,YAAL,GAAoB,KAApB;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD,CAHJ,EASGlE,SATH,CAUI,UAACK,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KAAsCvD,QAAQ,CAACQ,OAAT,KAAqB,IAA/D,EAAqE;AACnE;AACA,uBAAI,CAACwF,kBAAL,CAAwBkE,cAAxB,CAAuC,KAAvC;;AACA,uBAAI,CAACrL,SAAL,GAAiBmB,QAAQ,CAACO,IAA1B;AACD,eAJD,MAIO,IACLP,QAAQ,CAACuD,cAAT,CAAwB,SAAxB,KACAvD,QAAQ,CAACQ,OAAT,KAAqB,KAFhB,EAGL;AACA;AACA,uBAAI,CAACwF,kBAAL,CAAwBkE,cAAxB,CAAuC,IAAvC;AACD,eANM,MAMA;AACL;AACA,uBAAI,CAACxM,cAAL,CAAoByC,KAApB;;AACA,uBAAI,CAAC6F,kBAAL,CAAwBkE,cAAxB,CAAuC,IAAvC;AACD;AACF,aA1BL,EA2BI,UAAC/J,KAAD,EAAgB;AACd;AACA,qBAAI,CAAC6F,kBAAL,CAAwBkE,cAAxB,CAAuC,IAAvC;;AAEA,kBAAI/J,KAAK,CAACA,KAAN,CAAYoD,cAAZ,CAA2B,UAA3B,CAAJ,EAA4C;AAC1C,uBAAI,CAAC7F,cAAL,CAAoByC,KAApB,CAA0BA,KAAK,CAACA,KAAN,CAAYwD,QAAtC;AACD,eAFD,MAEO;AACL,uBAAI,CAACjG,cAAL,CAAoByC,KAApB;AACD;AACF,aApCL;AAsCD;AAxYwD;AAAA;AAAA,iBA0YzD,gBAAOuH,KAAP,EAAoB;AAClB,iBAAKpK,MAAL,CAAY0H,QAAZ,CAAqB,CAAC,WAAD,EAAc0C,KAAK,CAAC/G,QAApB,CAArB,EAAoD;AAClDsE,wBAAU,EAAE,KAAK5H;AADiC,aAApD;AAGD;AA9YwD;AAAA;AAAA,iBAgZzD,oBAAWiF,KAAX,EAA0BoF,KAA1B,EAAuC;AAAA;;AACrC,iBAAKyC,eAAL,GACGC,YADH,GAEGnN,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAACiD,MAAD;AAAA,qBACRA,MAAM,GAAG,OAAI,CAACmK,aAAL,CAAmB/H,KAAnB,EAA0BoF,KAA1B,CAAH,GAAsC,0CADpC;AAAA,aAAV,CAJJ,EAOI,gEAAS,YAAM;AACb,qBAAI,CAAC7D,YAAL,GAAoB,KAApB;AACD,aAFD,CAPJ,EAWGlE,SAXH,CAYI,UAACa,OAAD,EAAkB;AAChB,qBAAI,CAAC9C,cAAL,CAAoB8C,OAApB;;AACA,qBAAI,CAAC8J,eAAL,CAAqB5C,KAArB;AACD,aAfL,EAgBI,UAACvH,KAAD,EAAgB;AACd,qBAAI,CAACzC,cAAL,CAAoByC,KAApB;;AACA,qBAAI,CAAC2G,eAAL,CAAqBxE,KAArB,EAA4BvB,WAA5B,GAA0C,CAA1C;AACD,aAnBL;AAqBD;AAtawD;AAAA;AAAA,iBAwazD,2BAAe;AACb,mBAAO,KAAKjD,mBAAL,CAAyB2E,WAAzB,CACL,IADK,EAEL,IAFK,EAGL,yDAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAhbwD;AAAA;AAAA,iBAkbzD,uBAAcH,KAAd,EAA6BoF,KAA7B,EAA0C;AACxC,iBAAK7D,YAAL,GAAoB,IAApB;AACA,iBAAKiD,eAAL,CAAqBxE,KAArB,EAA4BvB,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAKtD,qBAAL,CAA2B4M,aAA3B,CAAyC3C,KAAK,CAAC/G,QAA/C,CAAP;AACD;AAvbwD;AAAA;AAAA,iBAybzD,sBAAa2B,KAAb,EAA4BoF,KAA5B,EAAyC;AAAA;;AACvC,iBAAK6C,eAAL,GACGH,YADH,GAEGnN,IAFH,CAGI,4DAAK,CAAL,CAHJ,EAII,iEAAU,UAACiD,MAAD;AAAA,qBACRA,MAAM,GAAG,OAAI,CAACsK,eAAL,CAAqBlI,KAArB,EAA4BoF,KAA5B,CAAH,GAAwC,0CADtC;AAAA,aAAV,CAJJ,EAOI,gEAAS,YAAM;AACb,qBAAI,CAAC7D,YAAL,GAAoB,KAApB;AACD,aAFD,CAPJ,EAWGlE,SAXH,CAYI,UAACa,OAAD,EAAkB;AAChB,qBAAI,CAAC9C,cAAL,CAAoB8C,OAApB;;AACA,qBAAI,CAAC8J,eAAL,CAAqB5C,KAArB;AACD,aAfL,EAgBI,UAACvH,KAAD,EAAgB;AACd,qBAAI,CAACzC,cAAL,CAAoByC,KAApB;;AACA,qBAAI,CAAC2G,eAAL,CAAqBxE,KAArB,EAA4BvB,WAA5B,GAA0C,CAA1C;AACD,aAnBL;AAqBD;AA/cwD;AAAA;AAAA,iBAidzD,2BAAe;AACb,mBAAO,KAAKjD,mBAAL,CAAyB2E,WAAzB,CACL,YADK,EAEL,sBAFK,EAGL,2DAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AAzdwD;AAAA;AAAA,iBA2dzD,yBAAgBH,KAAhB,EAA+BoF,KAA/B,EAA4C;AAC1C,iBAAK7D,YAAL,GAAoB,IAApB;AACA,iBAAKiD,eAAL,CAAqBxE,KAArB,EAA4BvB,WAA5B,GAA0C,CAA1C;AAEA,mBAAO,KAAKtD,qBAAL,CAA2B+M,eAA3B,CAA2C9C,KAAK,CAAC/G,QAAjD,CAAP;AACD;AAhewD;AAAA;AAAA,iBAkezD,yBAAgB+G,KAAhB,EAA6B;AAC3B,iBAAK,IAAInG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsF,KAAL,CAAWvF,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,kBAAImG,KAAK,CAAC/G,QAAN,KAAmB,KAAKkG,KAAL,CAAWtF,CAAX,EAAcZ,QAArC,EAA+C;AAC7C,qBAAKkG,KAAL,CAAWtF,CAAX,EAAcR,WAAd,GAA4B2G,KAAK,CAAC3G,WAAlC;AACA;AACD;AACF;AACF;AAzewD;;AAAA;AAAA,S;;;;gBAjClD;;gBAAgB;;gBAGvB;;gBAWO;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBAeN,uD;AAAS,iBAAC,gBAAD,EAAmB,EAAnB;;;AADCgF,oDAA8C,6DAL1D,gEAAU;AACTZ,gBAAQ,EAAE,4CADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAK0D,E,+EAoD/B,8D,EACR,sD,EACK,0D,EACU,uF,EACP,2F,EACG,sG,EACL,wF,EACO,+G,EACD,6G,EA5D2B,GAA9CW,8CAA8C,CAA9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxBA0E,2BAA2B;AAGtC,6CAAsB/N,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAEyB;;AAHJ;AAAA;AAAA,iBAKtC,4BAAmB;AACjB,gBAAI+N,QAAQ,GAAG,KAAKC,WAAL,CAAiB,QAAjB,CAAf;AACA,gBAAIjM,MAAM,GAAG,KAAKkM,SAAL,EAAb;AACA,gBAAIC,aAAa,GAAG,KAAKC,gBAAL,EAApB;AACA,gBAAIC,mBAAmB,GAAG,KAAKC,sBAAL,EAA1B;AAEA,mBAAO,sDAAS,CACdN,QADc,EAEdhM,MAFc,EAGdmM,aAHc,EAIdE,mBAJc,CAAT,EAKJ9N,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AAjBqC;AAAA;AAAA,iBAmBtC,qBAAYgO,IAAZ,EAAuB;AACrB,mBAAO,KAAKvO,IAAL,CACJM,GADI,WACG,KAAKL,GADR,uBACwBsO,IADxB,GAEJhO,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAvBqC;AAAA;AAAA,iBAyBtC,qBAAY;AACV,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,cAAoCM,IAApC,CAAyC,4DAAK,CAAL,CAAzC,EAAkD,6DAAM,CAAN,CAAlD,CAAP;AACD;AA3BqC;AAAA;AAAA,iBA8BtC,4BAAmB;AACjB,mBAAO,KAAKP,IAAL,CAAUM,GAAV,WAAiB,KAAKL,GAAtB,sBAA4CM,IAA5C,CAAiD,4DAAK,CAAL,CAAjD,EAA0D,6DAAM,CAAN,CAA1D,CAAP;AACD;AAhCqC;AAAA;AAAA,iBAkCtC,kCAAyB;AACvB,mBAAO,KAAKP,IAAL,CACJM,GADI,WACG,KAAKL,GADR,6BAEJM,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAtCqC;AAAA;AAAA,iBAwCtC,yBAAgBsD,IAAhB,EAA2B;AACzB,mBAAO,KAAK7D,IAAL,CACJwO,IADI,WACI,KAAKvO,GADT,oBAC6B4D,IAD7B,EAEJtD,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA5CqC;;AAAA;AAAA,S;;;;gBAT/B;;;;AASIwN,iCAA2B,6DAHvC,iEAAW;AACVjO,kBAAU,EAAE;AADF,OAAX,CAGuC,E,+EAGV,+D,EAHU,GAA3BiO,2BAA2B,CAA3B","file":"materiais-grupos-grupos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisGrupoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisGrupoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisGrupoFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosMateriaisGrupoListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisGrupoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisGrupoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisGrupoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisGrupoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"mtc-title\\\">Dados do grupo</div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"nomeGrupo\\\">Nome</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeGrupo\\\"\\r\\n              formControlName=\\\"nomeGrupo\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeGrupo') + ' ' + onFieldRequired(form.controls.nomeGrupo)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeGrupo')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"precoGrupo\\\">Preço</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"precoGrupo\\\"\\r\\n              formControlName=\\\"precoGrupo\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: 'R$ ', thousands: '.', decimal: ',', precision: 2 }\\\"\\r\\n              [ngClass]=\\\"onFieldError('precoGrupo') + ' ' + onFieldRequired(form.controls.precoGrupo)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('precoGrupo')\\\" message=\\\"Preço é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row mb-2\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Materiais associados ao grupo</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparAssociacoes()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 95%\\\">\\r\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Pesquisa de materiais</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"onFilterMateriais()\\\"\\r\\n              [disabled]=\\\"searching === true\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              <span>Pesquisar</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                (change)=\\\"onChangeLinha($event.id)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codClasse\\\">Classe</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"filteredClasses\\\"\\r\\n                formControlName=\\\"codClasse\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codClasse\\\"\\r\\n                bindLabel=\\\"nomeClasse\\\"\\r\\n                bindValue=\\\"idClasse\\\"\\r\\n                (change)=\\\"onChangeClasse($event.idClasse)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"materiais\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codMaterial\\\"\\r\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n                bindValue=\\\"codigoMaterial\\\"\\r\\n                [loading]=\\\"materiaisLoader\\\"\\r\\n                loadingText=\\\"Carregando...\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"materiaisLista.length > 0\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarMateriais()\\\"\\r\\n                [disabled]=\\\"searching === true\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span>Associar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll()\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let material of materiaisLista; let i = index;\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"material.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 95%\\\"\\r\\n                    (click)=\\\"onCheckMaterial(i, material)\\\">\\r\\n                    {{ material.codigoDescricaoMaterial | uppercase }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searching === false\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisListaEmpty && materiaisListaLoaded\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"Nenhuma informação encontrada\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"materiaisLista.length === 0 && !firstSearch\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-search\\\"\\r\\n              text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header appTitle=\\\"Grupos de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"grupo\\\">\\r\\n                <span class=\\\"mr-1\\\">Grupo</span>\\r\\n                <ng-template #tooltipLabelGrupoTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do grupo</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelGrupoTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"grupo\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"material\\\">\\r\\n                <span class=\\\"mr-1\\\">Material</span>\\r\\n                <ng-template #tooltipLabelMaterialTemplate>\\r\\n                  <p class=\\\"text-nowrap mb-0\\\">Código ou nome do material</p>\\r\\n                </ng-template>\\r\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelMaterialTemplate\\\" container=\\\"body\\\"></i>\\r\\n              </label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"material\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codGrupo'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codGrupo')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome grupo\\\"\\r\\n                [active]=\\\"orderBy == 'nomeGrupo'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeGrupo')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Preço</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let grupo of dadosPagination; let i = index;\\\" [class.table-active]=\\\"grupo.codGrupo == grupoSelecionado.codGrupo && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(grupo)\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\">\\r\\n              {{ grupo.codGrupo }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\">\\r\\n              {{ grupo.nomeGrupo | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\">\\r\\n              {{ grupo.precoGrupo | currency:'BRL':'symbol':'1.2-2' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(grupo)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"grupo.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"grupo.nomeUsuario !== null\\\">\\r\\n                {{ grupo.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"grupo.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, grupo)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"grupo.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, grupo)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(grupo)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiais.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiais\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codMaterial }}</td>\\r\\n              <td>{{ material.nomeMaterial | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZ3J1cG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IGrupo } from '../models/grupo';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-grupos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  codClasse: number = null;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  showMateriais = true;\r\n\r\n  formMateriais: FormGroup;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  materiaisLista: Array<any> = [];\r\n  materiaisListaLoaded = false;\r\n  materiaisListaEmpty = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n    this.setFormMateriais();\r\n    this.titleService.setTitle('Cadastro de grupo de materiais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar grupo de materiais';\r\n      } else {\r\n        this.appTitle = 'Novo grupo de materiais';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Grupos de materiais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/grupos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisGrupoService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: IGrupo = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codGrupo: [detalhes.codGrupo],\r\n        nomeGrupo: [detalhes.nomeGrupo, [Validators.required]],\r\n        precoGrupo: [detalhes.precoGrupo, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.setMateriais(detalhes.materiais);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setFormMateriais(): void {\r\n    this.formMateriais = this.formBuilder.group({\r\n      codLinha: [null, [Validators.required]],\r\n      codClasse: [null, [Validators.required]],\r\n      codMaterial: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setMateriais(materiais: any): void {\r\n    if (materiais.length > 0) {\r\n      for (let i = 0; i < materiais.length; i++) {\r\n        this.onAddMaterial(materiais[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocMateriais(): FormArray {\r\n    return this.form.get('assocMateriais') as FormArray;\r\n  }\r\n\r\n  onAddMaterial(material: any, manipulateForm?: boolean): void {\r\n    if (this.codClasse === null) {\r\n      this.codClasse = material.codClasse;\r\n    }\r\n\r\n    if (this.codClasse === material.codClasse) {\r\n      if (this.checkMaterialExists(material) === false) {\r\n        this.assocMateriais.push(\r\n          this.formBuilder.group({\r\n            codMaterial: [material.codMaterial],\r\n            nomeMaterial: [material.nomeMaterial],\r\n            codClasse: [material.codClasse],\r\n          })\r\n        );\r\n\r\n        if (this.form.value.assocMateriais.length > 9) {\r\n          if (this.tableConfigAssocMateriais.fixedHeader === false) {\r\n            this.showMateriais = false;\r\n            this.tableConfigAssocMateriais.fixedHeader = true;\r\n\r\n            setTimeout(() => {\r\n              this.showMateriais = true;\r\n            }, 1);\r\n          }\r\n        }\r\n\r\n        if (manipulateForm) {\r\n          this.form.markAsTouched();\r\n          this.form.markAsDirty();\r\n        }\r\n      }\r\n    } else {\r\n      this.pnotifyService.notice('Associe apenas materiais da mesma classe.');\r\n    }\r\n  }\r\n\r\n  checkMaterialExists(material: any): boolean {\r\n    return this.form.value.assocMateriais.some((el: any) => {\r\n      return el.codMaterial === material.codMaterial;\r\n    });\r\n  }\r\n\r\n  onLimparAssociacoes(): void {\r\n    const assocMateriais = this.form.get('assocMateriais') as FormArray;\r\n    assocMateriais.clear();\r\n    this.codClasse = null;\r\n  }\r\n\r\n  onDeleteMaterial(index: number): void {\r\n    this.confirmDelete().subscribe((response: boolean) =>\r\n      response ? this.deleteMaterial(index) : null\r\n    );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteMaterial(index: number) {\r\n    this.assocMateriais.removeAt(index);\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  onChangeLinha(codLinha: number) {\r\n    this.formMateriais.controls.codClasse.reset();\r\n    this.formMateriais.controls.codClasse.setValue(null);\r\n    this.formMateriais.controls.codClasse.enable();\r\n    this.formMateriais.controls.codClasse.setValidators([Validators.required]);\r\n    this.formMateriais.controls.codClasse.updateValueAndValidity();\r\n\r\n    this.formMateriais.controls.codMaterial.reset();\r\n    this.formMateriais.controls.codMaterial.disable();\r\n    this.formMateriais.controls.codMaterial.setValue(null);\r\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n  }\r\n\r\n  onChangeClasse(codClasse: number) {\r\n    this.formMateriais.controls.codMaterial.reset();\r\n    this.formMateriais.controls.codMaterial.enable();\r\n    this.formMateriais.controls.codMaterial.setValue(null);\r\n    this.formMateriais.controls.codMaterial.updateValueAndValidity();\r\n\r\n    this.getMateriais(codClasse);\r\n  }\r\n\r\n  getMateriais(codClasse: number): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      this.comercialService\r\n        .getMateriais({\r\n          codClasse: codClasse,\r\n          situacao: 'A'\r\n        })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n\r\n              this.formMateriais.controls.codMaterial.setValue(0);\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onFilterMateriais(): void {\r\n    if (this.formMateriais.valid) {\r\n      this.loaderNavbar = true;\r\n      this.searching = true;\r\n      this.materiaisLista = [];\r\n      this.materiaisListaLoaded = false;\r\n      this.materiaisListaEmpty = false;\r\n\r\n      let params = {\r\n        codClasse: this.formMateriais.value.codClasse,\r\n      };\r\n\r\n      if (this.formMateriais.value.codMaterial !== 0) {\r\n        Object.assign(params, {\r\n          codMaterial: this.formMateriais.value.codMaterial,\r\n        });\r\n      }\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.firstSearch = true;\r\n            this.searching = false;\r\n            this.loaderNavbar = false;\r\n            this.materiaisListaLoaded = true;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiaisLista = response.data.map(function (el: any) {\r\n                var o = Object.assign({}, el);\r\n                o.checked = 0;\r\n                return o;\r\n              });\r\n\r\n              if (this.materiaisLista.length > 9) {\r\n                this.tableConfigMateriais.fixedHeader = true;\r\n              } else {\r\n                this.tableConfigMateriais.fixedHeader = false;\r\n              }\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n              this.materiaisListaEmpty = true;\r\n            } else {\r\n              this.pnotifyService.error();\r\n              this.materiaisListaEmpty = true;\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n\r\n    for (let index = 0; index < this.materiaisLista.length; index++) {\r\n      this.materiaisLista[index].checked = this.toggleAll === true ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  onCheckMaterial(index: number, material: any): void {\r\n    this.materiaisLista[index].checked = material.checked == 0 ? 1 : 0;\r\n  }\r\n\r\n  onAssociarMateriais(): void {\r\n    this.toggleAll = false;\r\n\r\n    for (let index = 0; index < this.materiaisLista.length; index++) {\r\n      if (this.materiaisLista[index].checked === 1) {\r\n        const material = {\r\n          codMaterial: this.materiaisLista[index].codigoMaterial,\r\n          nomeMaterial: this.materiaisLista[index].descricao,\r\n          codClasse: this.materiaisLista[index].codClasse,\r\n        };\r\n\r\n        this.onAddMaterial(material, true);\r\n        this.materiaisLista[index].checked = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        if (this.form.value.assocMateriais.length > 0) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.materiaisGrupoService\r\n            .save(this.form.value)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n              })\r\n            )\r\n            .subscribe(\r\n              (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success(response.mensagem);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            );\r\n        } else {\r\n          this.pnotifyService.notice('Associe pelo menos um material.');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisGrupoRoutingModule } from './grupos-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisGrupoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisGrupoFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoService } from './grupos.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisGrupoListaComponent,\r\n    ComercialCadastrosMateriaisGrupoFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisGrupoRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisGrupoService],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisGruposService: ComercialCadastrosMateriaisGrupoService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.materiaisGruposService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codGrupo: null,\r\n        nomeGrupo: null,\r\n        precoGrupo: null,\r\n        codSituacao: '',\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisGrupoService } from '../grupos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { IGrupo } from '../models/grupo';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-grupos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisGrupoListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeGrupo';\r\n  orderType = 'ASC';\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<IGrupo> = [];\r\n  dadosPagination: Array<IGrupo> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  grupoSelecionado: IGrupo;\r\n  materiais: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Grupos de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setGrupoSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Grupos de materiais',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      grupo: [formValue.grupo],\r\n      material: [formValue.material],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      grupo: null,\r\n      material: null,\r\n      codSituacao: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setGrupoSelecionado(): void {\r\n    this.grupoSelecionado = {\r\n      codGrupo: null,\r\n      nomeGrupo: null,\r\n      precoGrupo: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      materiais: [],\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.grupo) {\r\n      params.grupo = this.form.value.grupo;\r\n    }\r\n\r\n    if (this.form.value.material) {\r\n      params.material = this.form.value.material;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisGrupoService\r\n      .getListaGrupos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(grupo: IGrupo): string {\r\n    let borderClass: string;\r\n\r\n    if (grupo.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (grupo.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(grupo: IGrupo): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados (${grupo.nomeGrupo})`;\r\n    this.setGrupoSelecionado();\r\n    this.grupoSelecionado = grupo;\r\n    this.materiais = [];\r\n\r\n    this.materiaisGrupoService\r\n      .getAssociacoesMateriais(grupo.codGrupo)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiais = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(grupo: IGrupo): void {\r\n    this.router.navigate(['../editar', grupo.codGrupo], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, grupo: IGrupo): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateGrupo(index: number, grupo: IGrupo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.materiaisGrupoService.activateGrupo(grupo.codGrupo);\r\n  }\r\n\r\n  onInactivate(index: number, grupo: IGrupo): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateGrupo(index: number, grupo: IGrupo): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.materiaisGrupoService.inactivateGrupo(grupo.codGrupo);\r\n  }\r\n\r\n  refreshMainData(grupo: IGrupo): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (grupo.codGrupo === this.dados[i].codGrupo) {\r\n        this.dados[i].codSituacao = grupo.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}