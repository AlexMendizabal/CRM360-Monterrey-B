{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/contratos.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/contratos-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/contratos.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisContratoFormularioComponent","activatedRoute","router","location","clientesService","formBuilder","materiaisContratoService","pnotifyService","localeService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","compararData","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","formChanged","submittingForm","showMateriais","clientes","linhas","classes","getPNotify","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","getFilterValues","getClientes","setFormBuilder","setTitle","situacao","pipe","subscribe","response","responseCode","result","analitico","error","params","id","appTitle","action","descricao","routerLink","idSubModulo","back","resolver","snapshot","data","detalhes","success","form","group","codContrato","nomeContrato","required","codCliente","dataInicial","dataFinal","motivo","value","disabled","quantidade","codSituacao","codStatus","assocMateriais","array","setMateriais","materiais","get","length","i","onAddMaterial","material","manipulateForm","source","checkMaterialExists","push","codAssociacao","codMaterial","nomeMaterial","valor","setTimeout","markAsTouched","markAsDirty","some","el","limparMaterialPrincipal","onInput","controls","setValue","index","confirmDelete","deleteMaterial","showConfirm","removeAt","loaderNavbar","deleteAssociacao","hasOwnProperty","mensagem","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","checkFormValidation","valid","save","getRawValue","reset","navigateTo","navigate","relativeTo","notice","isValid","confirm","event","codLinha","codClasse","codigoMaterial","selector","template","ComercialClientesService","http","API","httpParams","param","append","documento","getDadosCliente","post","put","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosMateriaisContratoModule","declarations","imports","forRoot","providers","ComercialCadastrosMateriaisContratoFormularioResolverGuard","materiaisContratosService","route","getDetalhes","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisContratoRoutingModule","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosMateriaisContratoListaComponent","detailPanelService","tableConfig","subtitleBorder","tableConfigMateriais","showDetailPanel","orderBy","orderType","filteredClasses","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosLoaded","dadosEmpty","materiaisAssociados","setFormFilter","onDetailPanelEmitter","setContratoSelecionado","showDetailPanelSubscription","config","showing","checkValuesLinhaClasse","unshift","idClasse","nomeClasse","enable","disable","updateValueAndValidity","filter","idLinha","src","getMateriais","materiaisLoader","tipoMaterial","comercializa","codigoDescricaoMaterial","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","onChangeLinha","onChangeClasse","contratoSelecionado","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaContratos","contrato","borderClass","page","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","loadedFinished","confirmActivate","asObservable","activateContrato","refreshMainData","confirmInactive","inactivateContrato","ComercialCadastrosMateriaisContratoService","tidSoftwareService","record","updateContrato","saveContrato","getLinhas","getClasses","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-contratos-contratos-module-es5.js","sourcesContent":["import { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { IContrato, IMateriaisContrato } from '../models/contrato';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-contratos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisContratoFormularioComponent\n  implements OnInit, IFormCanDeactivate\n{\n  public MASKS = MASKS;\n\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  action: string;\n  compararData = null;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n  bsConfig: Partial<BsDatepickerConfig>;\n  showMateriais = true;\n\n  clientes = [];\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparMaterialPrincipal: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private clientesService: ComercialClientesService,\n    private formBuilder: FormBuilder,\n    private materiaisContratoService: ComercialCadastrosMateriaisContratoService,\n    private pnotifyService: PNotifyService,\n    private localeService: BsLocaleService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.pnotifyService.getPNotify();\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.getClientes();\n    this.setFormBuilder();\n    this.titleService.setTitle('Cadastro de contrato de materiais');\n  }\n\n  getClientes() {\n    this.loaderFullScreen = true;\n    this.clientesService\n      .getClientes({ situacao: 'Ativo' })\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.responseCode === 200) {\n            this.clientes = response.result.analitico;\n            return;\n          } else {\n            this.clientes = [];\n          }\n        },\n        (error) => {\n          this.pnotifyService.error('Erro ao carregar modelos');\n          this.clientes = [];\n        }\n      );\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar contrato';\n        this.action = 'update';\n      } else {\n        this.appTitle = 'Novo contrato';\n        this.action = 'create';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Contratos',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/contratos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.materiaisContratoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver.success === true) {\n      const detalhes: IContrato = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codContrato: [detalhes.codContrato],\n        nomeContrato: [detalhes.nomeContrato, [Validators.required]],\n        codCliente: [detalhes.codCliente, [Validators.required]],\n        dataInicial: [detalhes.dataInicial, [Validators.required]],\n        dataFinal: [detalhes.dataFinal, [Validators.required]],\n        motivo: [{ value: detalhes.motivo, disabled: true }],\n        quantidade: [detalhes.quantidade, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        codStatus: [\n          { value: detalhes.codStatus, disabled: true },\n          [Validators.required],\n        ],\n        assocMateriais: this.formBuilder.array([]),\n      });\n\n      this.setMateriais(detalhes.materiais);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n  comparaData() {\n    if (!this.form.get('dataFinal').value) {\n      return false;\n    } else if (\n      this.form.get('dataInicial').value > this.form.get('dataFinal').value\n    ) {\n      this.compararData = true;\n      return this.compararData;\n    }\n  }\n\n  setMateriais(materiais: IMateriaisContrato[]): void {\n    if (materiais.length > 0) {\n      for (let i = 0; i < materiais.length; i++) {\n        this.onAddMaterial(materiais[i], false, 'application');\n      }\n    }\n  }\n\n  get assocMateriais(): FormArray {\n    return this.form.get('assocMateriais') as FormArray;\n  }\n\n  /**\n   * @source = 'application' || 'user'\n   */\n  onAddMaterial(\n    material: IMateriaisContrato,\n    manipulateForm: boolean,\n    source: string\n  ): void {\n    if (this.checkMaterialExists(material) === false) {\n      this.assocMateriais.push(\n        this.formBuilder.group({\n          codAssociacao: [material.codAssociacao],\n          codMaterial: [material.codMaterial],\n          nomeMaterial: [material.nomeMaterial],\n          quantidade: [source === 'user' ? 0 : material.quantidade],\n          valor: [source === 'user' ? 0 : material.valor],\n          source: [source],\n        })\n      );\n\n      if (this.form.value.assocMateriais.length > 9) {\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\n          this.showMateriais = false;\n          this.tableConfigAssocMateriais.fixedHeader = true;\n\n          setTimeout(() => {\n            this.showMateriais = true;\n          }, 1);\n        }\n      }\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkMaterialExists(material: IMateriaisContrato): boolean {\n    return this.form.value.assocMateriais.some((el: any) => {\n      return el.codMaterial === material.codMaterial;\n    });\n  }\n\n  onLimparMaterialPrincipal(): void {\n    this.limparMaterialPrincipal = true;\n    this.onInput();\n\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.nomeMaterial.setValue(null);\n\n    setTimeout(() => {\n      this.limparMaterialPrincipal = false;\n    }, 100);\n  }\n\n  onDeleteMaterial(index: number): void {\n    if (this.submittingForm === false) {\n      this.confirmDelete().subscribe((response: boolean) =>\n        response ? this.deleteMaterial(index) : null\n      );\n    }\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteMaterial(index: number) {\n    if (this.form.value.assocMateriais[index].source === 'user') {\n      this.assocMateriais.removeAt(index);\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\n      this.loaderNavbar = true;\n\n      this.activatedRoute.params.subscribe((params: any) => {\n        this.materiaisContratoService\n          .deleteAssociacao(\n            params.id,\n            this.form.value.assocMateriais[index].codAssociacao\n          )\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe(\n            (response: JsonResponse) => {\n              if (response.success) {\n                this.assocMateriais.removeAt(index);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              if (\n                error.error.hasOwnProperty('mensagem') &&\n                (error.mensagem !== null || error.mensagem !== '')\n              ) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          );\n      });\n    }\n\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.action === 'update' && this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.checkFormValidation() && this.form.valid) {\n        if (this.form.value.assocMateriais.length > 0) {\n          this.loaderNavbar = true;\n          this.submittingForm = true;\n\n          this.materiaisContratoService\n            .save(this.form.getRawValue(), this.action)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n                this.submittingForm = false;\n              })\n            )\n            .subscribe(\n              (response: any) => {\n                if (\n                  response.hasOwnProperty('success') &&\n                  response.success === true\n                ) {\n                  this.form.reset();\n                  this.formChanged = false;\n                  this.pnotifyService.success(response.mensagem);\n\n                  this.activatedRoute.params.subscribe((params: any) => {\n                    let navigateTo: string;\n\n                    if (params.hasOwnProperty('id')) {\n                      navigateTo = '../../lista';\n                    } else {\n                      navigateTo = '../lista';\n                    }\n\n                    this.router.navigate([navigateTo], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  });\n                } else if (\n                  response.hasOwnProperty('success') &&\n                  response.success === false\n                ) {\n                  this.pnotifyService.error(response.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              (error: any) => {\n                this.pnotifyService.error();\n              }\n            );\n        } else {\n          this.pnotifyService.notice('Associe pelo menos um material.');\n        }\n      } else {\n        this.pnotifyService.notice('Selecione um material.');\n      }\n    }\n  }\n\n  checkFormValidation(): boolean {\n    let isValid = true;\n\n    if (this.form.getRawValue().codMaterial === null) {\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onLoaderNavbar(event: boolean): void {\n    this.loaderNavbar = event;\n  }\n\n  materialPrincipal(material: any): void {\n    this.onInput();\n\n    this.form.controls.codLinha.setValue(material.codLinha);\n    this.form.controls.codClasse.setValue(material.codClasse);\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\n    this.form.controls.nomeMaterial.setValue(material.descricao);\n  }\n\n  materialAssociado(material: any): void {\n    this.onAddMaterial(material, true, 'user');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialClientesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/clientes`;\n\n  constructor(protected http: HttpClient) {}\n\n  getStatus(): Observable<Object> {\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\n  }\n\n  getClientes(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getPermissaoAcesso(id: any): Observable<Object> {\n    return this.http\n      .get(`${this.API}/permissao-acesso/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatosResumido(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/pesquisa/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getExisteCpfCnpj(\n    documento: any,\n    getDadosCliente: boolean\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${\n          getDadosCliente === true ? 1 : 0\n        }`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  postCliente(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/pre-cadastro`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosFaturamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosFaturamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAtividadeSecundaria(\n    codCliente: number,\n    id: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getEnderecos(\n    codCliente: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getEndereco(\n    codCliente: number,\n    idEndereco: number,\n    idSituacao: number\n  ): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  updateEndereco(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getContato(\n    codCliente: number,\n    idContato: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateContato(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/contato`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  deleteContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteMeioContato(\n    codCliente: number,\n    id: number,\n    idSeqTid: number\n  ): Observable<Object> {\n    return this.http\n      .delete(\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteFilho(idFilho: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updateDadosRelacionamento(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getPotencialCompra(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePotencialCompra(data: any): Observable<Object> {\n    return this.http\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\n      .pipe(take(1), retry(2));\n  }\n\n  getAnexos(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  uploadAnexo(data: any): Observable<Object> {\n    return this.http\n      .post(`${this.API}/cadastro/upload/anexo`, data)\n      .pipe(take(1)\n      // , retry(2)\n      );\n  }\n\n  deleteAnexo(idAnexo: number): Observable<Object> {\n    return this.http\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getFilial(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getTravas(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\n    return this.http\n      .get(\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getListaEmails(codCliente: number): Observable<Object> {\n    return this.http\n      .get(`${this.API}/emails/lista/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport ptBr from '@angular/common/locales/pt';\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisContratoRoutingModule } from './contratos-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisContratoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisContratoFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialCadastrosMateriaisContratoService } from './contratos.service';\n\nregisterLocaleData(ptBr);\ndefineLocale('pt-br', ptBrLocale);\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisContratoListaComponent,\n    ComercialCadastrosMateriaisContratoFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialCadastrosMateriaisContratoRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n  ],\n  providers: [PNotifyService, ComercialCadastrosMateriaisContratoService],\n})\nexport class ComercialCadastrosMateriaisContratoModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29udHJhdG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div >\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Dados do Contrato</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"nomeContrato\\\">Nome Contrato</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Digite...\\\"\\n                id=\\\"nomeContrato\\\"\\n                formControlName=\\\"nomeContrato\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('nomeContrato') + ' ' + onFieldRequired(form.controls.nomeContrato)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('nomeContrato')\\\" message=\\\"Nome do contrato é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-12\\\">\\n              <label for=\\\"clientes\\\">Clientes</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"clientes\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [hideSelected]=\\\"true\\\"\\n                [multiple]=\\\"true\\\"\\n                [closeOnSelect]=\\\"false\\\"\\n                bindLabel=\\\"razaoSocial\\\"\\n                bindValue=\\\"codCliente\\\"\\n                id=\\\"codCliente\\\"\\n                formControlName=\\\"codCliente\\\" \\n                [ngClass]=\\\"onFieldError('codCliente') + ' ' + onFieldRequired(form.controls.codCliente)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('codCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\n              </ng-select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"dataInicial\\\">Data Inicial</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                placeholder=\\\"Selecione...\\\"\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicial\\\"\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired(form.controls.dataInicial)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data Inicial obrigatório.\\\"></invalid-form-control>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"dataFinal\\\">Data Final</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                placeholder=\\\"Selecione...\\\"\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinal\\\"\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired(form.controls.dataFinal)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\n              </div>\\n              <invalid-form-control\\n                [show]=\\\"comparaData()\\\"\\n                message=\\\"A data inicial está maior que a data final\\\">\\n              </invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codStatus\\\">Status</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codStatus\\\"\\n                formControlName=\\\"codStatus\\\"\\n                [ngClass]=\\\"onFieldError('codStatus') + ' ' + onFieldRequired(form.controls.codStatus)\\\">\\n                <option value=\\\"0\\\">Reprovado</option>\\n                <option value=\\\"1\\\">Aprovado</option>\\n                <option value=\\\"2\\\">Aguardando Aprovação</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codStatus')\\\" message=\\\"Status é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-8\\\">\\n              <label for=\\\"quantidade\\\">Qtde.</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"quantidade\\\"\\n                placeholder=\\\"Digite...\\\"\\n                formControlName=\\\"quantidade\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\"\\n                [ngClass]=\\\"onFieldError('quantidade') + ' ' + onFieldRequired(form.controls.quantidade)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('quantidade')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"0\\\">Inativo</option>\\n                <option value=\\\"1\\\">Ativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\" [hidden]=\\\"form.get('codStatus').value != 0\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"motivo\\\" >Motivo:</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"motivo\\\" formControlName=\\\"motivo\\\" rows=\\\"3\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <hr>\\n        </div>\\n\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"mtc-title\\\">Materiais associados ao Contrato</div>\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 55%\\\">Material</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Valor Un.</th>\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Qtde.</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 55%\\\">\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\n                    </td>\\n                    <td style=\\\"width: 20%\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        id=\\\"valor\\\"\\n                        class=\\\"form-control text-center\\\"\\n                        formControlName=\\\"valor\\\"\\n                        currencyMask [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: 'R$ ' }\\\">\\n                    </td>\\n                    <td style=\\\"width: 20%\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        id=\\\"quantidade\\\"\\n                        class=\\\"form-control text-center\\\"\\n                        formControlName=\\\"quantidade\\\"\\n                        currencyMask [options]=\\\"{ align: 'left', prefix: 'ton  ', thousands: '.', decimal: ',', precision: 3 }\\\">\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n      <!-- <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\n        <comercial-cadastros-materiais-templates-material-principal\\n          [linhas]=\\\"linhas\\\"\\n          [classes]=\\\"classes\\\"\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\n        </comercial-cadastros-materiais-templates-material-principal>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n      </div> -->\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <comercial-cadastros-materiais-templates-associacoes\\n        [linhas]=\\\"linhas\\\"\\n        [classes]=\\\"classes\\\"\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\n      </comercial-cadastros-materiais-templates-associacoes>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisContratoFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private materiaisContratosService: ComercialCadastrosMateriaisContratoService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.materiaisContratosService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codContrato: null,\n        codLinha: null,\n        codClasse: null,\n        codMaterial: null,\n        codSituacao: 1,\n        codStatus: 2,\n        dataInicial: null,\n        dataFinal: null,\n        nomeContrato: null,\n        motivo: null,\n        quantidade: null,\n        materiais: [],\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosMateriaisContratoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisContratoListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisContratoFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ComercialCadastrosMateriaisContratoListaComponent },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisContratoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisContratoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisContratoFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosMateriaisContratoFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisContratoRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription, Observable, EMPTY } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { IContrato, IMateriaisContrato } from '../models/contrato';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-contratos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisContratoListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  form: FormGroup;\n  orderBy = 'codContrato';\n  orderType = 'ASC';\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  filteredClasses: Array<any> = [];\n  materiais: Array<any> = [];\n  materiaisLoader: boolean;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n  compararData = null;\n  dados: IContrato[] = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  contratoSelecionado: IContrato;\n  materiaisAssociados: IMateriaisContrato[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private detailPanelService: DetailPanelService,\n    private comercialService: ComercialService,\n    private materiaisContratoService: ComercialCadastrosMateriaisContratoService,\n    private confirmModalService: ConfirmModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormFilter();\n    this.titleService.setTitle('Contratos de materiais');\n    this.onDetailPanelEmitter();\n    this.setContratoSelecionado();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Contratos',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  getFilterValues(): void {\n    this.materiaisContratoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n\n          this.checkValuesLinhaClasse();\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n\n          this.linhas.unshift({\n            id: 0,\n            descricao: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n\n          this.filteredClasses.unshift({\n            idClasse: 0,\n            nomeClasse: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onChangeLinha(codLinha: number, reset: boolean) {\n    if (reset) {\n      if (this.form.value.codLinha !== 0) {\n        this.form.controls.codClasse.enable();\n        this.form.controls.codClasse.setValue(0);\n      } else {\n        this.form.controls.codClasse.disable();\n        this.form.controls.codClasse.setValue(null);\n      }\n\n      this.form.controls.codClasse.updateValueAndValidity();\n\n      this.materiais = [];\n      this.form.controls.codContrato.reset();\n      this.form.controls.codContrato.disable();\n      this.form.controls.codContrato.setValue(null);\n      this.form.controls.codContrato.updateValueAndValidity();\n    }\n\n    this.filteredClasses = this.classes.filter(\n      (value: any) => value.idLinha == codLinha\n    );\n\n    this.filteredClasses.unshift({\n      idClasse: 0,\n      nomeClasse: 'EXIBIR TODOS',\n    });\n  }\n\n  onChangeClasse(codClasse: number, reset: boolean, src: string) {\n    if (reset) {\n      this.form.controls.codContrato.reset();\n      this.form.controls.codContrato.enable();\n      this.form.controls.codContrato.setValue(0);\n      this.form.controls.codContrato.updateValueAndValidity();\n    }\n\n    this.getMateriais(codClasse, src);\n  }\n\n  getMateriais(codClasse: number, src: string): void {\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\n      if (src === 'application') {\n        this.loaderNavbar = true;\n      }\n      this.materiaisLoader = true;\n      this.materiais = [];\n\n      const params = {\n        codClasse: codClasse,\n        tipoMaterial: 'Distribuidora',\n        comercializa: 0,\n      };\n\n      this.comercialService\n        .getMateriais(params)\n        .pipe(\n          finalize(() => {\n            if (src === 'application') {\n              this.loaderNavbar = false;\n            }\n            this.materiaisLoader = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.materiais = response.data;\n\n              this.materiais.unshift({\n                codigoMaterial: 0,\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\n              });\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      nomeContrato: [formValue.codSituacao],\n      codContrato: [formValue.codSituacao],\n      codSituacao: [formValue.codSituacao],\n      codStatus: [formValue.codStatus],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n  }\n\n  comparaData() {\n    if (!this.form.get('dataFinal').value) {\n      return false;\n    } else if (\n      this.form.get('dataInicial').value >\n      this.form.get('dataFinal').value\n      ) {\n        this.compararData = true;\n        return this.compararData;\n      }\n    }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      nomeContrato:null,\n      codContrato: 0,\n      codSituacao: '',\n      codStatus: '',\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  checkValuesLinhaClasse(): void {\n    if (this.form.value.codLinha !== 0) {\n      this.onChangeLinha(this.form.value.codLinha, false);\n    }\n\n    if (this.form.value.codClasse !== 0) {\n      this.onChangeClasse(this.form.value.codClasse, false, 'verify');\n    } else {\n      this.form.controls.codClasse.disable();\n      this.form.controls.codContrato.disable();\n\n      this.form.controls.codClasse.updateValueAndValidity();\n      this.form.controls.codContrato.updateValueAndValidity();\n    }\n  }\n\n  setContratoSelecionado(): void {\n    this.contratoSelecionado = {\n      codContrato: null,\n      codLinha: null,\n      codClasse: null,\n      codSituacao: null,\n      codStatus: null,\n      nomeContrato: null,\n      motivo: null,\n      codCliente: null,\n      dataInicial: null,\n      dataFinal: null,\n      quantidade: null,\n      nomeUsuario: null,\n    };\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n\n    if (this.form.value.nomeContrato) {\n      params.nomeContrato = this.form.value.nomeContrato;\n    }\n\n    if (this.form.value.codContrato) {\n      params.codContrato = this.form.value.codContrato;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    if (this.form.value.codStatus) {\n      params.codStatus = this.form.value.codStatus;\n    }\n\n    params.pagina = this.form.value.pagina;\n    params.registros = this.form.value.registros;\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.materiaisContratoService\n      .getListaContratos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.totalItems = this.dados[0]['total'];\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(contrato: IContrato): string {\n    let borderClass: string;\n\n    if (contrato.codSituacao === 0) {\n      borderClass = 'border-danger';\n    } else if (contrato.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent) {\n    if (this.form.value.pagina != event.page) {\n      this.detailPanelService.hide();\n      this.setContratoSelecionado();\n      this.form.value.pagina = event.page;\n      this.onFilter();\n\n      this.scrollToFilter.nativeElement.scrollIntoView({\n        behavior: 'instant',\n      });\n    }\n  }\n\n  onDetails(contrato: IContrato): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados ao contrato ${contrato.nomeContrato}`;\n    this.setContratoSelecionado();\n    this.contratoSelecionado = contrato;\n    this.materiaisAssociados = [];\n\n    this.materiaisContratoService\n      .getAssociacoesMateriais(contrato.codContrato)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.materiaisAssociados = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(contrato: IContrato): void {\n    this.router.navigate(['../editar', contrato.codContrato], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, contrato: IContrato): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateContrato(index, contrato) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(contrato);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateContrato(index: number, contrato: IContrato): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 1;\n\n    return this.materiaisContratoService.activateContrato(contrato.codContrato);\n  }\n\n  onInactivate(index: number, contrato: IContrato): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateContrato(index, contrato) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(contrato);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateContrato(index: number, contrato: IContrato): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 0;\n\n    return this.materiaisContratoService.inactivateContrato(contrato.codContrato);\n  }\n\n  refreshMainData(contrato: IContrato): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (contrato.codContrato === this.dados[i].codContrato) {\n        this.dados[i].codSituacao = contrato.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n// Interfaces\nimport { IContrato } from './models/contrato';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { constants } from 'crypto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisContratoService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/contratos`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaContratos(params: any): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesMateriais(\n    codContrato: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/associacoes/${codContrato}`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codContrato}`)\n      .pipe(take(1), retry(2));\n  }\n\n  private saveContrato(record: IContrato): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\n  }\n\n  private updateContrato(record: IContrato): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  save(record: IContrato, action: string): Observable<Object | JsonResponse> {\n    if (action === 'update') {\n      return this.updateContrato(record);\n    }\n\n    return this.saveContrato(record);\n  }\n\n  deleteAssociacao(\n    codContrato: number,\n    codAssociacao: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .delete(`${this.API}/associacao/remover/${codContrato}/${codAssociacao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  activateContrato(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codContrato)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateContrato(codContrato: number): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/inativar`, codContrato).pipe(take(1));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n    return forkJoin([linhas, classes]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29udHJhdG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Contratos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <!-- <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                (change)=\\\"onChangeLinha($event.id, true)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codClasse\\\">Classe</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"filteredClasses\\\"\\n                formControlName=\\\"codClasse\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codClasse\\\"\\n                bindLabel=\\\"nomeClasse\\\"\\n                bindValue=\\\"idClasse\\\"\\n                (change)=\\\"onChangeClasse($event.idClasse, true, 'application')\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codMaterial\\\">Material</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"materiais\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codMaterial\\\"\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\n                bindValue=\\\"codigoMaterial\\\"\\n                [loading]=\\\"materiaisLoader\\\"\\n                loadingText=\\\"Carregando...\\\">\\n              </ng-select>\\n            </div> -->\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codContrato\\\">Cód. Contrato</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Digite...\\\"\\n                id=\\\"codContrato\\\"\\n                formControlName=\\\"codContrato\\\"\\n                autocomplete=\\\"new-password\\\"\\n              >\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"nomeContrato\\\">Nome Contrato</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Digite...\\\"\\n                id=\\\"nomeContrato\\\"\\n                formControlName=\\\"nomeContrato\\\"\\n                autocomplete=\\\"new-password\\\"\\n              >\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codStatus\\\">Status</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codStatus\\\"\\n                formControlName=\\\"codStatus\\\"\\n                >\\n                <option value=\\\"\\\" >Todos</option>\\n                <option value=\\\"0\\\">Reprovado</option>\\n                <option value=\\\"1\\\">Aprovado</option>\\n                <option value=\\\"2\\\">Aguardando Aprovação</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter\\n                value=\\\"Código\\\"\\n                [active]=\\\"orderBy == 'codContrato'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codContrato')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome Contrato\\\"\\n                [active]=\\\"orderBy == 'nomeContrato'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeContrato')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr\\n            *ngFor=\\\"let contrato of dados; let i = index;\\\"\\n            [class.table-active]=\\\"contrato.codContrato == contratoSelecionado.codContrato && showDetailPanel\\\">\\n            <td\\n              class=\\\"text-center hover\\\"\\n              [ngClass]=\\\"classStatusBorder(contrato)\\\"\\n              (click)=\\\"onDetails(contrato)\\\">\\n              {{ contrato.codContrato }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(contrato)\\\">\\n              {{ contrato.nomeContrato | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"text-center hover\\\"\\n              (click)=\\\"onDetails(contrato)\\\">\\n              {{ contrato.quantidade | number:'1.3-3' }} TON\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(contrato)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              <span *ngIf=\\\"contrato.nomeUsuario === null\\\">NÃO INFORMADO</span>\\n              <span *ngIf=\\\"contrato.nomeUsuario !== null\\\">\\n                {{ contrato.nomeUsuario | uppercase }}\\n              </span>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"contrato.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, contrato)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"contrato.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, contrato)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(contrato)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiaisAssociados.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\n              <th scope=\\\"col\\\">Material</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let material of materiaisAssociados\\\">\\n              <td class=\\\"text-center\\\">{{ material.codContrato }}</td>\\n              <td>{{ material.nomeContrato | uppercase }}</td>\\n              <td class=\\\"text-center\\\">{{ material.quantidade | number:'1.3-3' }} {{ material.unidade | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}