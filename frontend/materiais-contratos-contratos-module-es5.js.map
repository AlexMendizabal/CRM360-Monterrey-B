{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/services/clientes.service.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/contratos.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/contratos-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/contratos.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/contratos/lista/lista.component.html","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisContratoFormularioComponent","activatedRoute","router","location","clientesService","formBuilder","materiaisContratoService","pnotifyService","localeService","atividadesService","titleService","comercialService","confirmModalService","MASKS","loaderFullScreen","compararData","breadCrumbTree","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","formChanged","submittingForm","showMateriais","clientes","linhas","classes","getPNotify","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","getFilterValues","getClientes","setFormBuilder","setTitle","situacao","pipe","subscribe","response","responseCode","result","analitico","error","params","id","appTitle","action","descricao","routerLink","idSubModulo","back","resolver","snapshot","data","detalhes","success","form","group","codContrato","nomeContrato","required","codCliente","dataInicial","dataFinal","motivo","value","disabled","quantidade","codSituacao","codStatus","assocMateriais","array","setMateriais","materiais","get","length","i","onAddMaterial","material","manipulateForm","source","checkMaterialExists","push","codAssociacao","codMaterial","nomeMaterial","valor","setTimeout","markAsTouched","markAsDirty","some","el","limparMaterialPrincipal","onInput","controls","setValue","index","confirmDelete","deleteMaterial","showConfirm","removeAt","loaderNavbar","deleteAssociacao","hasOwnProperty","mensagem","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","pristine","checkFormValidation","valid","save","getRawValue","reset","navigateTo","navigate","relativeTo","notice","isValid","confirm","event","codLinha","codClasse","codigoMaterial","selector","template","ComercialClientesService","http","API","httpParams","param","append","id_vendedor","set","codigo_cliente","console","log","post","documento","getDadosCliente","put","idEndereco","idSituacao","idContato","idSeqTid","idFilho","idAnexo","providedIn","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosMateriaisContratoModule","declarations","imports","forRoot","providers","ComercialCadastrosMateriaisContratoFormularioResolverGuard","materiaisContratosService","route","getDetalhes","ComercialService","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisContratoRoutingModule","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialCadastrosMateriaisContratoListaComponent","detailPanelService","tableConfig","subtitleBorder","tableConfigMateriais","showDetailPanel","orderBy","orderType","filteredClasses","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosLoaded","dadosEmpty","materiaisAssociados","setFormFilter","onDetailPanelEmitter","setContratoSelecionado","showDetailPanelSubscription","config","showing","checkValuesLinhaClasse","unshift","idClasse","nomeClasse","enable","disable","updateValueAndValidity","filter","idLinha","src","getMateriais","materiaisLoader","tipoMaterial","comercializa","codigoDescricaoMaterial","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","onChangeLinha","onChangeClasse","contratoSelecionado","nomeUsuario","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaContratos","contrato","borderClass","page","scrollToFilter","nativeElement","scrollIntoView","behavior","detailPanelTitle","getAssociacoesMateriais","loadedFinished","confirmActivate","asObservable","activateContrato","refreshMainData","confirmInactive","inactivateContrato","ComercialCadastrosMateriaisContratoService","tidSoftwareService","record","updateContrato","saveContrato","getLinhas","getClasses","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-contratos-contratos-module-es5.js","sourcesContent":["import { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { ComercialClientesService } from 'src/app/modules/comercial/services/clientes.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { IContrato, IMateriaisContrato } from '../models/contrato';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-contratos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisContratoFormularioComponent\r\n  implements OnInit, IFormCanDeactivate\r\n{\r\n  public MASKS = MASKS;\r\n\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n  compararData = null;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm = false;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  showMateriais = true;\r\n\r\n  clientes = [];\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparMaterialPrincipal: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private clientesService: ComercialClientesService,\r\n    private formBuilder: FormBuilder,\r\n    private materiaisContratoService: ComercialCadastrosMateriaisContratoService,\r\n    private pnotifyService: PNotifyService,\r\n    private localeService: BsLocaleService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.getClientes();\r\n    this.setFormBuilder();\r\n    this.titleService.setTitle('Cadastro de contrato de materiais');\r\n  }\r\n\r\n  getClientes() {\r\n    this.loaderFullScreen = true;\r\n    this.clientesService\r\n      .getClientes({ situacao: 'Ativo' })\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 200) {\r\n            this.clientes = response.result.analitico;\r\n            return;\r\n          } else {\r\n            this.clientes = [];\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotifyService.error('Erro ao carregar modelos');\r\n          this.clientes = [];\r\n        }\r\n      );\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar contrato';\r\n        this.action = 'update';\r\n      } else {\r\n        this.appTitle = 'Novo contrato';\r\n        this.action = 'create';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Contratos',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/contratos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisContratoService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver.success === true) {\r\n      const detalhes: IContrato = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codContrato: [detalhes.codContrato],\r\n        nomeContrato: [detalhes.nomeContrato, [Validators.required]],\r\n        codCliente: [detalhes.codCliente, [Validators.required]],\r\n        dataInicial: [detalhes.dataInicial, [Validators.required]],\r\n        dataFinal: [detalhes.dataFinal, [Validators.required]],\r\n        motivo: [{ value: detalhes.motivo, disabled: true }],\r\n        quantidade: [detalhes.quantidade, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        codStatus: [\r\n          { value: detalhes.codStatus, disabled: true },\r\n          [Validators.required],\r\n        ],\r\n        assocMateriais: this.formBuilder.array([]),\r\n      });\r\n\r\n      this.setMateriais(detalhes.materiais);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n  comparaData() {\r\n    if (!this.form.get('dataFinal').value) {\r\n      return false;\r\n    } else if (\r\n      this.form.get('dataInicial').value > this.form.get('dataFinal').value\r\n    ) {\r\n      this.compararData = true;\r\n      return this.compararData;\r\n    }\r\n  }\r\n\r\n  setMateriais(materiais: IMateriaisContrato[]): void {\r\n    if (materiais.length > 0) {\r\n      for (let i = 0; i < materiais.length; i++) {\r\n        this.onAddMaterial(materiais[i], false, 'application');\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocMateriais(): FormArray {\r\n    return this.form.get('assocMateriais') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddMaterial(\r\n    material: IMateriaisContrato,\r\n    manipulateForm: boolean,\r\n    source: string\r\n  ): void {\r\n    if (this.checkMaterialExists(material) === false) {\r\n      this.assocMateriais.push(\r\n        this.formBuilder.group({\r\n          codAssociacao: [material.codAssociacao],\r\n          codMaterial: [material.codMaterial],\r\n          nomeMaterial: [material.nomeMaterial],\r\n          quantidade: [source === 'user' ? 0 : material.quantidade],\r\n          valor: [source === 'user' ? 0 : material.valor],\r\n          source: [source],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocMateriais.length > 9) {\r\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\r\n          this.showMateriais = false;\r\n          this.tableConfigAssocMateriais.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showMateriais = true;\r\n          }, 1);\r\n        }\r\n      }\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkMaterialExists(material: IMateriaisContrato): boolean {\r\n    return this.form.value.assocMateriais.some((el: any) => {\r\n      return el.codMaterial === material.codMaterial;\r\n    });\r\n  }\r\n\r\n  onLimparMaterialPrincipal(): void {\r\n    this.limparMaterialPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.form.controls.codMaterial.setValue(null);\r\n    this.form.controls.nomeMaterial.setValue(null);\r\n\r\n    setTimeout(() => {\r\n      this.limparMaterialPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  onDeleteMaterial(index: number): void {\r\n    if (this.submittingForm === false) {\r\n      this.confirmDelete().subscribe((response: boolean) =>\r\n        response ? this.deleteMaterial(index) : null\r\n      );\r\n    }\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteMaterial(index: number) {\r\n    if (this.form.value.assocMateriais[index].source === 'user') {\r\n      this.assocMateriais.removeAt(index);\r\n    } else if (this.form.value.assocMateriais[index].source === 'application') {\r\n      this.loaderNavbar = true;\r\n\r\n      this.activatedRoute.params.subscribe((params: any) => {\r\n        this.materiaisContratoService\r\n          .deleteAssociacao(\r\n            params.id,\r\n            this.form.value.assocMateriais[index].codAssociacao\r\n          )\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe(\r\n            (response: JsonResponse) => {\r\n              if (response.success) {\r\n                this.assocMateriais.removeAt(index);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            (error: any) => {\r\n              if (\r\n                error.error.hasOwnProperty('mensagem') &&\r\n                (error.mensagem !== null || error.mensagem !== '')\r\n              ) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          );\r\n      });\r\n    }\r\n\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.action === 'update' && this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.checkFormValidation() && this.form.valid) {\r\n        if (this.form.value.assocMateriais.length > 0) {\r\n          this.loaderNavbar = true;\r\n          this.submittingForm = true;\r\n\r\n          this.materiaisContratoService\r\n            .save(this.form.getRawValue(), this.action)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n                this.submittingForm = false;\r\n              })\r\n            )\r\n            .subscribe(\r\n              (response: any) => {\r\n                if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === true\r\n                ) {\r\n                  this.form.reset();\r\n                  this.formChanged = false;\r\n                  this.pnotifyService.success(response.mensagem);\r\n\r\n                  this.activatedRoute.params.subscribe((params: any) => {\r\n                    let navigateTo: string;\r\n\r\n                    if (params.hasOwnProperty('id')) {\r\n                      navigateTo = '../../lista';\r\n                    } else {\r\n                      navigateTo = '../lista';\r\n                    }\r\n\r\n                    this.router.navigate([navigateTo], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  });\r\n                } else if (\r\n                  response.hasOwnProperty('success') &&\r\n                  response.success === false\r\n                ) {\r\n                  this.pnotifyService.error(response.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              (error: any) => {\r\n                this.pnotifyService.error();\r\n              }\r\n            );\r\n        } else {\r\n          this.pnotifyService.notice('Associe pelo menos um material.');\r\n        }\r\n      } else {\r\n        this.pnotifyService.notice('Selecione um material.');\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n\r\n    if (this.form.getRawValue().codMaterial === null) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onLoaderNavbar(event: boolean): void {\r\n    this.loaderNavbar = event;\r\n  }\r\n\r\n  materialPrincipal(material: any): void {\r\n    this.onInput();\r\n\r\n    this.form.controls.codLinha.setValue(material.codLinha);\r\n    this.form.controls.codClasse.setValue(material.codClasse);\r\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\r\n    this.form.controls.nomeMaterial.setValue(material.descricao);\r\n  }\r\n\r\n  materialAssociado(material: any): void {\r\n    this.onAddMaterial(material, true, 'user');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry, tap } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialClientesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/clientes`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getStatus(): Observable<Object> {\r\n    return this.http.get(`${this.API}/pesquisa/status`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientes(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClientesGrupoEconomico(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/grupo-economico/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedorCiudad(id_vendedor): Observable<Object> {\r\n    const httpParams = new HttpParams().set('id_vendedor', id_vendedor);\r\n    return this.http\r\n      .get(`${this.API}/vendedor/ciudad`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPermissaoAcesso(id: any): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/permissao-acesso/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/detalhes/${codCliente}`)\r\n      .pipe(\r\n        take(1),\r\n        retry(2));\r\n  }\r\n  sapUpdateClient(codigo_cliente: number, data: any): Observable<Object> {\r\n    console.log(\"update Cliente:\", data);\r\n    return this.http\r\n      .post(`${this.API}/pesquisa/updatesap`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  sapUpdateContacto(codigo_cliente: number, data: any): Observable<Object> {\r\n    console.log(\"update Contacto:\", data);\r\n    return this.http\r\n      .post(`${this.API}/pesquisa/updatesapcontacto`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getContatosResumido(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/pesquisa/contactodetalle/${codCliente}`)\r\n      .pipe(take(1),\r\n        retry(2),\r\n      );\r\n  }\r\n\r\n  getTipoClientes() {\r\n    return this.http.get(`${this.API}/tipo_cliente`).pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  getExisteCpfCnpj(\r\n    documento: any,\r\n    getDadosCliente: boolean\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/verificar-cpf-cnpj/${documento}?getDadosCliente=${getDadosCliente === true ? 1 : 0\r\n        }`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCliente(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/pre-cadastro`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  sapPostClient(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/postsap`, data )\r\n      .pipe(take(1), retry(0));\r\n  }\r\n\r\n  getPropostaAnaliseCredito(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/proposta-analise-credito/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosFaturamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-faturamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosFaturamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-faturamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteAtividadeSecundaria(\r\n    codCliente: number,\r\n    id: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/atividade-secundaria/${codCliente}/${id}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEnderecos(\r\n    codCliente: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/enderecos/${codCliente}`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEndereco(\r\n    codCliente: number,\r\n    idEndereco: number,\r\n    idSituacao: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/endereco/${codCliente}/${idEndereco}/${idSituacao}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateEndereco(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/endereco`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteEndereco(codCliente: number, id: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/endereco/${codCliente}/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContatos(codCliente: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contatos/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getContato(\r\n    codCliente: number,\r\n    idContato: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/contato/${codCliente}/${idContato}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateContato(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/contato`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMeioContato(\r\n    codCliente: number,\r\n    id: number,\r\n    idSeqTid: number\r\n  ): Observable<Object> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/cadastro/excluir/meio-contato/${codCliente}/${id}/${idSeqTid}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteFilho(idFilho: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/filho/${idFilho}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDadosRelacionamento(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/dados-relacionamento/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updateDadosRelacionamento(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/dados-relacionamento`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPotencialCompra(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/potencial-compra/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updatePotencialCompra(data: any): Observable<Object> {\r\n    return this.http\r\n      .put(`${this.API}/cadastro/salvar/potencial-compra`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAnexos(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/anexos/${codCliente}`)\r\n      .pipe(take(1)\r\n        // , retry(2)\r\n      );\r\n  }\r\n\r\n  uploadAnexo(data: any): Observable<Object> {\r\n    return this.http\r\n      .post(`${this.API}/cadastro/upload/anexo`, data)\r\n      .pipe(take(1)\r\n        // , retry(2)\r\n      );\r\n  }\r\n\r\n  deleteAnexo(idAnexo: number): Observable<Object> {\r\n    return this.http\r\n      .delete(`${this.API}/cadastro/excluir/anexo/${idAnexo}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFilial(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/filial/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTravas(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/travas/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesFinanceiras(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/cadastro/carregar/informacoes-financeiras/${codCliente}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getInformacoesComerciais(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/cadastro/carregar/informacoes-comerciais/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getListaEmails(codCliente: number): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/emails/lista/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport ptBr from '@angular/common/locales/pt';\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisContratoRoutingModule } from './contratos-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisContratoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisContratoFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisContratoService } from './contratos.service';\r\n\r\nregisterLocaleData(ptBr);\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisContratoListaComponent,\r\n    ComercialCadastrosMateriaisContratoFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialCadastrosMateriaisContratoRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n  ],\r\n  providers: [PNotifyService, ComercialCadastrosMateriaisContratoService],\r\n})\r\nexport class ComercialCadastrosMateriaisContratoModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29udHJhdG9zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div >\\r\\n          <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Dados do Contrato</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"nomeContrato\\\">Nome Contrato</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                id=\\\"nomeContrato\\\"\\r\\n                formControlName=\\\"nomeContrato\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('nomeContrato') + ' ' + onFieldRequired(form.controls.nomeContrato)\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('nomeContrato')\\\" message=\\\"Nome do contrato é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              <label for=\\\"clientes\\\">Clientes</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"true\\\"\\r\\n                [items]=\\\"clientes\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [closeOnSelect]=\\\"false\\\"\\r\\n                bindLabel=\\\"razaoSocial\\\"\\r\\n                bindValue=\\\"codCliente\\\"\\r\\n                id=\\\"codCliente\\\"\\r\\n                formControlName=\\\"codCliente\\\" \\r\\n                [ngClass]=\\\"onFieldError('codCliente') + ' ' + onFieldRequired(form.controls.codCliente)\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('codCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"dataInicial\\\">Data Inicial</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicial\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicial\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired(form.controls.dataInicial)\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data Inicial obrigatório.\\\"></invalid-form-control>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"dataFinal\\\">Data Final</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\r\\n                </div>\\r\\n                <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinal\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                placeholder=\\\"Selecione...\\\"\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinal\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired(form.controls.dataFinal)\\\">\\r\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data Final é obrigatório.\\\"></invalid-form-control>\\r\\n              </div>\\r\\n              <invalid-form-control\\r\\n                [show]=\\\"comparaData()\\\"\\r\\n                message=\\\"A data inicial está maior que a data final\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codStatus\\\">Status</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codStatus\\\"\\r\\n                formControlName=\\\"codStatus\\\"\\r\\n                [ngClass]=\\\"onFieldError('codStatus') + ' ' + onFieldRequired(form.controls.codStatus)\\\">\\r\\n                <option value=\\\"0\\\">Reprovado</option>\\r\\n                <option value=\\\"1\\\">Aprovado</option>\\r\\n                <option value=\\\"2\\\">Aguardando Aprovação</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codStatus')\\\" message=\\\"Status é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-8\\\">\\r\\n              <label for=\\\"quantidade\\\">Qtde.</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"quantidade\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                formControlName=\\\"quantidade\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 3 }\\\"\\r\\n                [ngClass]=\\\"onFieldError('quantidade') + ' ' + onFieldRequired(form.controls.quantidade)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('quantidade')\\\" message=\\\"Quantidade é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\" [hidden]=\\\"form.get('codStatus').value != 0\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"motivo\\\" >Motivo:</label>\\r\\n                <textarea class=\\\"form-control\\\" id=\\\"motivo\\\" formControlName=\\\"motivo\\\" rows=\\\"3\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr>\\r\\n        </div>\\r\\n\\r\\n        <div formArrayName=\\\"assocMateriais\\\">\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Materiais associados ao Contrato</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 55%\\\">Material</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Valor Un.</th>\\r\\n                    <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 20%\\\">Qtde.</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td style=\\\"width: 55%\\\">\\r\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 20%\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        id=\\\"valor\\\"\\r\\n                        class=\\\"form-control text-center\\\"\\r\\n                        formControlName=\\\"valor\\\"\\r\\n                        currencyMask [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: 'R$ ' }\\\">\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 20%\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        id=\\\"quantidade\\\"\\r\\n                        class=\\\"form-control text-center\\\"\\r\\n                        formControlName=\\\"quantidade\\\"\\r\\n                        currencyMask [options]=\\\"{ align: 'left', prefix: 'ton  ', thousands: '.', decimal: ',', precision: 3 }\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                      <btn-icon\\r\\n                        icon=\\\"fas fa-trash\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        (click)=\\\"onDeleteMaterial(i)\\\">\\r\\n                      </btn-icon>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <!-- <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n        <comercial-cadastros-materiais-templates-material-principal\\r\\n          [linhas]=\\\"linhas\\\"\\r\\n          [classes]=\\\"classes\\\"\\r\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\r\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\r\\n        </comercial-cadastros-materiais-templates-material-principal>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <comercial-cadastros-materiais-templates-associacoes\\r\\n        [linhas]=\\\"linhas\\\"\\r\\n        [classes]=\\\"classes\\\"\\r\\n        [linhaSelecionada]=\\\"form.value.codLinha\\\"\\r\\n        [classeSelecionada]=\\\"form.value.codClasse\\\"\\r\\n        (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n        (materialAssociado)=\\\"materialAssociado($event)\\\">\\r\\n      </comercial-cadastros-materiais-templates-associacoes>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisContratoFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private materiaisContratosService: ComercialCadastrosMateriaisContratoService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.materiaisContratosService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codContrato: null,\r\n        codLinha: null,\r\n        codClasse: null,\r\n        codMaterial: null,\r\n        codSituacao: 1,\r\n        codStatus: 2,\r\n        dataInicial: null,\r\n        dataFinal: null,\r\n        nomeContrato: null,\r\n        motivo: null,\r\n        quantidade: null,\r\n        materiais: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosMateriaisContratoFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisContratoListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisContratoFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lista', component: ComercialCadastrosMateriaisContratoListaComponent },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisContratoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisContratoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisContratoFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosMateriaisContratoFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisContratoRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable, EMPTY } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ComercialCadastrosMateriaisContratoService } from '../contratos.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { IContrato, IMateriaisContrato } from '../models/contrato';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-contratos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisContratoListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codContrato';\r\n  orderType = 'ASC';\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n  filteredClasses: Array<any> = [];\r\n  materiais: Array<any> = [];\r\n  materiaisLoader: boolean;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  compararData = null;\r\n  dados: IContrato[] = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  contratoSelecionado: IContrato;\r\n  materiaisAssociados: IMateriaisContrato[] = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private detailPanelService: DetailPanelService,\r\n    private comercialService: ComercialService,\r\n    private materiaisContratoService: ComercialCadastrosMateriaisContratoService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Contratos de materiais');\r\n    this.onDetailPanelEmitter();\r\n    this.setContratoSelecionado();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Contratos',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.materiaisContratoService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n\r\n          this.checkValuesLinhaClasse();\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n\r\n          this.linhas.unshift({\r\n            id: 0,\r\n            descricao: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n\r\n          this.filteredClasses.unshift({\r\n            idClasse: 0,\r\n            nomeClasse: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  onChangeLinha(codLinha: number, reset: boolean) {\r\n    if (reset) {\r\n      if (this.form.value.codLinha !== 0) {\r\n        this.form.controls.codClasse.enable();\r\n        this.form.controls.codClasse.setValue(0);\r\n      } else {\r\n        this.form.controls.codClasse.disable();\r\n        this.form.controls.codClasse.setValue(null);\r\n      }\r\n\r\n      this.form.controls.codClasse.updateValueAndValidity();\r\n\r\n      this.materiais = [];\r\n      this.form.controls.codContrato.reset();\r\n      this.form.controls.codContrato.disable();\r\n      this.form.controls.codContrato.setValue(null);\r\n      this.form.controls.codContrato.updateValueAndValidity();\r\n    }\r\n\r\n    this.filteredClasses = this.classes.filter(\r\n      (value: any) => value.idLinha == codLinha\r\n    );\r\n\r\n    this.filteredClasses.unshift({\r\n      idClasse: 0,\r\n      nomeClasse: 'EXIBIR TODOS',\r\n    });\r\n  }\r\n\r\n  onChangeClasse(codClasse: number, reset: boolean, src: string) {\r\n    if (reset) {\r\n      this.form.controls.codContrato.reset();\r\n      this.form.controls.codContrato.enable();\r\n      this.form.controls.codContrato.setValue(0);\r\n      this.form.controls.codContrato.updateValueAndValidity();\r\n    }\r\n\r\n    this.getMateriais(codClasse, src);\r\n  }\r\n\r\n  getMateriais(codClasse: number, src: string): void {\r\n    if (typeof codClasse !== 'undefined' && codClasse !== null) {\r\n      if (src === 'application') {\r\n        this.loaderNavbar = true;\r\n      }\r\n      this.materiaisLoader = true;\r\n      this.materiais = [];\r\n\r\n      const params = {\r\n        codClasse: codClasse,\r\n        tipoMaterial: 'Distribuidora',\r\n        comercializa: 0,\r\n      };\r\n\r\n      this.comercialService\r\n        .getMateriais(params)\r\n        .pipe(\r\n          finalize(() => {\r\n            if (src === 'application') {\r\n              this.loaderNavbar = false;\r\n            }\r\n            this.materiaisLoader = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.materiais = response.data;\r\n\r\n              this.materiais.unshift({\r\n                codigoMaterial: 0,\r\n                codigoDescricaoMaterial: 'EXIBIR TODOS',\r\n              });\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      nomeContrato: [formValue.codSituacao],\r\n      codContrato: [formValue.codSituacao],\r\n      codSituacao: [formValue.codSituacao],\r\n      codStatus: [formValue.codStatus],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  comparaData() {\r\n    if (!this.form.get('dataFinal').value) {\r\n      return false;\r\n    } else if (\r\n      this.form.get('dataInicial').value >\r\n      this.form.get('dataFinal').value\r\n      ) {\r\n        this.compararData = true;\r\n        return this.compararData;\r\n      }\r\n    }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      nomeContrato:null,\r\n      codContrato: 0,\r\n      codSituacao: '',\r\n      codStatus: '',\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  checkValuesLinhaClasse(): void {\r\n    if (this.form.value.codLinha !== 0) {\r\n      this.onChangeLinha(this.form.value.codLinha, false);\r\n    }\r\n\r\n    if (this.form.value.codClasse !== 0) {\r\n      this.onChangeClasse(this.form.value.codClasse, false, 'verify');\r\n    } else {\r\n      this.form.controls.codClasse.disable();\r\n      this.form.controls.codContrato.disable();\r\n\r\n      this.form.controls.codClasse.updateValueAndValidity();\r\n      this.form.controls.codContrato.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  setContratoSelecionado(): void {\r\n    this.contratoSelecionado = {\r\n      codContrato: null,\r\n      codLinha: null,\r\n      codClasse: null,\r\n      codSituacao: null,\r\n      codStatus: null,\r\n      nomeContrato: null,\r\n      motivo: null,\r\n      codCliente: null,\r\n      dataInicial: null,\r\n      dataFinal: null,\r\n      quantidade: null,\r\n      nomeUsuario: null,\r\n    };\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n\r\n    if (this.form.value.nomeContrato) {\r\n      params.nomeContrato = this.form.value.nomeContrato;\r\n    }\r\n\r\n    if (this.form.value.codContrato) {\r\n      params.codContrato = this.form.value.codContrato;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    if (this.form.value.codStatus) {\r\n      params.codStatus = this.form.value.codStatus;\r\n    }\r\n\r\n    params.pagina = this.form.value.pagina;\r\n    params.registros = this.form.value.registros;\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.materiaisContratoService\r\n      .getListaContratos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(contrato: IContrato): string {\r\n    let borderClass: string;\r\n\r\n    if (contrato.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    } else if (contrato.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent) {\r\n    if (this.form.value.pagina != event.page) {\r\n      this.detailPanelService.hide();\r\n      this.setContratoSelecionado();\r\n      this.form.value.pagina = event.page;\r\n      this.onFilter();\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }\r\n\r\n  onDetails(contrato: IContrato): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados ao contrato ${contrato.nomeContrato}`;\r\n    this.setContratoSelecionado();\r\n    this.contratoSelecionado = contrato;\r\n    this.materiaisAssociados = [];\r\n\r\n    this.materiaisContratoService\r\n      .getAssociacoesMateriais(contrato.codContrato)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.materiaisAssociados = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(contrato: IContrato): void {\r\n    this.router.navigate(['../editar', contrato.codContrato], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, contrato: IContrato): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateContrato(index, contrato) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(contrato);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateContrato(index: number, contrato: IContrato): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n\r\n    return this.materiaisContratoService.activateContrato(contrato.codContrato);\r\n  }\r\n\r\n  onInactivate(index: number, contrato: IContrato): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateContrato(index, contrato) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(contrato);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateContrato(index: number, contrato: IContrato): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 0;\r\n\r\n    return this.materiaisContratoService.inactivateContrato(contrato.codContrato);\r\n  }\r\n\r\n  refreshMainData(contrato: IContrato): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (contrato.codContrato === this.dados[i].codContrato) {\r\n        this.dados[i].codSituacao = contrato.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { IContrato } from './models/contrato';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { constants } from 'crypto';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisContratoService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/materiais/contratos`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaContratos(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesMateriais(\r\n    codContrato: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codContrato}`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codContrato: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codContrato}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  private saveContrato(record: IContrato): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1), retry(2));\r\n  }\r\n\r\n  private updateContrato(record: IContrato): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  save(record: IContrato, action: string): Observable<Object | JsonResponse> {\r\n    if (action === 'update') {\r\n      return this.updateContrato(record);\r\n    }\r\n\r\n    return this.saveContrato(record);\r\n  }\r\n\r\n  deleteAssociacao(\r\n    codContrato: number,\r\n    codAssociacao: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(`${this.API}/associacao/remover/${codContrato}/${codAssociacao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  activateContrato(codContrato: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codContrato)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateContrato(codContrato: number): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/inativar`, codContrato).pipe(take(1));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvY29udHJhdG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Contratos\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <!-- <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                (change)=\\\"onChangeLinha($event.id, true)\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codClasse\\\">Classe</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"filteredClasses\\\"\\r\\n                formControlName=\\\"codClasse\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codClasse\\\"\\r\\n                bindLabel=\\\"nomeClasse\\\"\\r\\n                bindValue=\\\"idClasse\\\"\\r\\n                (change)=\\\"onChangeClasse($event.idClasse, true, 'application')\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"codMaterial\\\">Material</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"materiais\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codMaterial\\\"\\r\\n                bindLabel=\\\"codigoDescricaoMaterial\\\"\\r\\n                bindValue=\\\"codigoMaterial\\\"\\r\\n                [loading]=\\\"materiaisLoader\\\"\\r\\n                loadingText=\\\"Carregando...\\\">\\r\\n              </ng-select>\\r\\n            </div> -->\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codContrato\\\">Cód. Contrato</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                id=\\\"codContrato\\\"\\r\\n                formControlName=\\\"codContrato\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n              >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"nomeContrato\\\">Nome Contrato</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Digite...\\\"\\r\\n                id=\\\"nomeContrato\\\"\\r\\n                formControlName=\\\"nomeContrato\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n              >\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codStatus\\\">Status</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codStatus\\\"\\r\\n                formControlName=\\\"codStatus\\\"\\r\\n                >\\r\\n                <option value=\\\"\\\" >Todos</option>\\r\\n                <option value=\\\"0\\\">Reprovado</option>\\r\\n                <option value=\\\"1\\\">Aprovado</option>\\r\\n                <option value=\\\"2\\\">Aguardando Aprovação</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Código\\\"\\r\\n                [active]=\\\"orderBy == 'codContrato'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codContrato')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome Contrato\\\"\\r\\n                [active]=\\\"orderBy == 'nomeContrato'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeContrato')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center\\\">Quantidade</th>\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Usuário cadastro</th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr\\r\\n            *ngFor=\\\"let contrato of dados; let i = index;\\\"\\r\\n            [class.table-active]=\\\"contrato.codContrato == contratoSelecionado.codContrato && showDetailPanel\\\">\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              [ngClass]=\\\"classStatusBorder(contrato)\\\"\\r\\n              (click)=\\\"onDetails(contrato)\\\">\\r\\n              {{ contrato.codContrato }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(contrato)\\\">\\r\\n              {{ contrato.nomeContrato | uppercase }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"text-center hover\\\"\\r\\n              (click)=\\\"onDetails(contrato)\\\">\\r\\n              {{ contrato.quantidade | number:'1.3-3' }} TON\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"hover\\\"\\r\\n              (click)=\\\"onDetails(contrato)\\\"\\r\\n              [hidden]=\\\"showDetailPanel\\\">\\r\\n              <span *ngIf=\\\"contrato.nomeUsuario === null\\\">NÃO INFORMADO</span>\\r\\n              <span *ngIf=\\\"contrato.nomeUsuario !== null\\\">\\r\\n                {{ contrato.nomeUsuario | uppercase }}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"contrato.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, contrato)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"contrato.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, contrato)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(contrato)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && !loaderNavbar\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"materiaisAssociados.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Código</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Qtde.</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let material of materiaisAssociados\\\">\\r\\n              <td class=\\\"text-center\\\">{{ material.codContrato }}</td>\\r\\n              <td>{{ material.nomeContrato | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ material.quantidade | number:'1.3-3' }} {{ material.unidade | uppercase }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}