{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral.module.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral.service.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisFichaCadastralFormularioComponent","activatedRoute","router","location","formBuilder","fichaCadastralService","confirmModalService","pnotifyService","atividadesService","titleService","comercialService","loaderFullScreen","breadCrumbTree","tableConfigAnexos","fixedHeader","bodyHeight","hover","formChanged","formData","showAnexos","linhas","classes","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","subscribe","params","id","appTitle","setTitle","descricao","routerLink","idSubModulo","pipe","response","responseCode","result","error","back","snapshot","data","detalhes","success","form","group","codFichaCadastral","codMaterial","required","nomeMaterial","descMaterial","codSituacao","anexos","array","getAnexos","loaderNavbar","hasOwnProperty","setAnexos","mensagem","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","length","i","onAddAnexos","anexo","manipulateForm","checkAnexoExists","push","codAnexo","nomeAnexo","linkAnexo","markAsTouched","markAsDirty","files","fd","FormData","append","value","some","el","index","confirmDelete","r","deleteAnexo","deleteDocumento","splice","showConfirm","removeAt","getRawValue","getMateriais","controls","setValue","setValidators","updateValueAndValidity","pristine","valid","submittingForm","save","onPostAnexos","reset","navigate","relativeTo","notice","forEach","element","postAnexos","confirm","event","limparMaterialPrincipal","onInput","setTimeout","material","codigoMaterial","selector","template","ComercialCadastrosSetorAtividadeFormularioResolverGuard","route","getDetalhes","situacao","providedIn","ComercialCadastrosMateriaisFichaCadastralModule","declarations","imports","forRoot","providers","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosMateriaisFichaCadastralService","http","tidSoftwareService","API","httpParams","param","fichaCadastral","post","put","updateFichaCadastral","saveFichaCadastral","codigo","getLinhas","getClasses","ComercialService","codCliente","FormDeactivateGuard","component","state","formCanDeactivate","ComercialCadastrosMateriaisFichaCadastralListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setFichaCadastralSelecionada","showDetailPanelSubscription","unsubscribe","config","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","fichaCadastralSelecionada","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaFichaCadastral","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","loadedFinished","confirmActivate","asObservable","activateFichaCadastral","refreshMainData","confirmInactive","inactivateFichaCadastral","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule","forChild","exports","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-ficha-cadastral-ficha-cadastral-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      \\r\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\r\\n        <comercial-cadastros-materiais-templates-material-principal\\r\\n          [linhas]=\\\"linhas\\\"\\r\\n          [classes]=\\\"classes\\\"\\r\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\r\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\r\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\r\\n        </comercial-cadastros-materiais-templates-material-principal>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\r\\n          <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col mt-auto\\\">\\r\\n              <div class=\\\"mtc-title mb-0\\\">Dados do Material</div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null && form.getRawValue().codFichaCadastral == null\\\">\\r\\n              <div class=\\\"d-flex justify-content-end\\\">\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\r\\n                  <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  <span>Limpar</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Cód. Mat</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeGrupo\\\"\\r\\n                formControlName=\\\"codMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                disabled\\r\\n                (click)=\\\"buscaMate()\\\"\\r\\n                (blur)=\\\"buscaMate()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('codMaterial') + ' ' + onFieldRequired(form.controls.codMaterial)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-8\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">Material</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"nomeGrupo\\\"\\r\\n                formControlName=\\\"nomeMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                disabled\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('nomeMaterial') + ' ' + onFieldRequired(form.controls.nomeMaterial)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('nomeMaterial')\\\" message=\\\"Material é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\"\\r\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>        \\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"descMaterial\\\">Descrição</label>\\r\\n              <textarea \\r\\n                class=\\\"form-control\\\" \\r\\n                rows=\\\"10\\\" \\r\\n                id=\\\"descMaterial\\\"\\r\\n                formControlName=\\\"descMaterial\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('descMaterial') + ' ' + onFieldRequired(form.controls.descMaterial)\\\"></textarea>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div formArrayName=\\\"anexos\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col d-flex align-items-start\\\">\\r\\n                <div class=\\\"mtc-title mb-0\\\">Anexos</div>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <label for=\\\"novoAnexo\\\" class=\\\"d-flex justify-content-end align-items-center\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\r\\n                    <i class=\\\"fas fa-plus\\\"></i>\\r\\n                    <span>Novo</span>\\r\\n                  </p>\\r\\n                </label>\\r\\n                <input\\r\\n                  id=\\\"novoAnexo\\\"\\r\\n                  type=\\\"file\\\"\\r\\n                  (change)=\\\"appendFile($event.target.files)\\\"\\r\\n                  class=\\\"d-none\\\"\\r\\n                  >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length > 0\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <custom-table [config]=\\\"tableConfigAnexos\\\">\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr *ngFor=\\\"let anexo of anexos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                      <td style=\\\"width: 90%\\\">\\r\\n                        {{ form.value.anexos[i].codAnexo }} - {{ form.value.anexos[i].nomeAnexo | uppercase }}\\r\\n                      </td>\\r\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <a\\r\\n                          [href]=\\\"form.value.anexos[i].linkAnexo\\\"\\r\\n                          *ngIf=\\\"form.value.anexos[i].linkAnexo != null\\\"\\r\\n                          target=\\\"_blank\\\"\\r\\n                          class=\\\"btn-icon-sm mx-2 text-black\\\"\\r\\n                          tooltip=\\\"visualizar\\\">\\r\\n                          <i class=\\\"far fa-eye\\\"></i>\\r\\n                        </a>\\r\\n                      </td>\\r\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <btn-icon\\r\\n                          icon=\\\"fas fa-trash\\\"\\r\\n                          size=\\\"small\\\"\\r\\n                          tooltip=\\\"Excluir\\\"\\r\\n                          (click)=\\\"onDeleteAnexo(form.value.anexos[i].codAnexo, i)\\\">\\r\\n                        </btn-icon>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length === 0\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <message\\r\\n                  icon=\\\"fas fa-exchange-alt\\\"\\r\\n                  text=\\\"Nenhum documento encontrado\\\">\\r\\n                </message>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZmljaGEtY2FkYXN0cmFsL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n  FormArray,\r\n} from '@angular/forms';\r\n\r\n//rxjs\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { FichaCadastral } from '../models/ficha-cadastral';\r\nimport { IAnexo } from '../models/anexo';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-setor-atividade-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisFichaCadastralFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  tableConfigAnexos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n  formData: Array<FormData> = [];\r\n\r\n  codMaterial: number;\r\n  showAnexos: boolean = false;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparMaterialPrincipal: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private comercialService: ComercialService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFilterValues();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Ficha Cadastral';\r\n      } else {\r\n        this.appTitle = 'Nova Ficha Cadastral';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Ficha Cadastral',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/ficha-cadastral/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.fichaCadastralService\r\n      .getFilterValues()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n\r\n        if (response[1].responseCode === 200) {\r\n          this.classes = response[1].result;\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: FichaCadastral = this.activatedRoute.snapshot.data\r\n        .detalhes.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codFichaCadastral: [detalhes.codFichaCadastral],\r\n        codMaterial: [detalhes.codMaterial, [Validators.required]],\r\n        nomeMaterial: [detalhes.nomeMaterial],\r\n        descMaterial: [detalhes.descMaterial, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        anexos: this.formBuilder.array([]),\r\n      });\r\n\r\n      if (detalhes.codMaterial != null && detalhes.codFichaCadastral != null) {\r\n        this.getAnexos(detalhes.codMaterial);\r\n      }\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  getAnexos(codMaterial) {\r\n    this.loaderNavbar = true;\r\n    this.showAnexos = false;\r\n    this.fichaCadastralService\r\n      .getAnexos(codMaterial)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.setAnexos(response.data);\r\n            this.showAnexos = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false &&\r\n            response.hasOwnProperty('mensagem')\r\n          ) {\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          if (error['error'].hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setAnexos(anexos: any): void {\r\n    if (anexos.length > 0) {\r\n      for (let i = 0; i < anexos.length; i++) {\r\n        this.onAddAnexos(anexos[i], true);\r\n      }\r\n    }\r\n  }\r\n\r\n  get anexos(): FormArray {\r\n    return this.form.get('anexos') as FormArray;\r\n  }\r\n\r\n  onAddAnexos(anexo: any, manipulateForm?: boolean): void {\r\n    if (this.checkAnexoExists(anexo) === false) {\r\n      this.anexos.push(\r\n        this.formBuilder.group({\r\n          codAnexo: [anexo.codAnexo],\r\n          nomeAnexo: [anexo.nomeAnexo],\r\n          linkAnexo: [anexo.linkAnexo],\r\n        })\r\n      );\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  appendFile(files: FileList) {\r\n    if (files.length === 0) return;\r\n    const fd = new FormData();\r\n    fd.append('file', files[0]);\r\n    this.formData.push(fd);\r\n\r\n    this.anexos.push(\r\n      this.formBuilder.group({\r\n        nomeAnexo: [files[0]['name']],\r\n      })\r\n    );\r\n    if (this.showAnexos === false) {\r\n      this.showAnexos = true;\r\n    }\r\n  }\r\n\r\n  /* onLimparAnexos(): void {\r\n    const anexos = this.form.get('anexos') as FormArray;\r\n    anexos.clear();\r\n  } */\r\n\r\n  checkAnexoExists(anexo: any): boolean {\r\n    return this.form.value.anexos.some((el: any) => {\r\n      return el.codAnexo === anexo.codAnexo;\r\n    });\r\n  }\r\n\r\n  onDeleteAnexo(codAnexo: number, index: number): void {\r\n    this.confirmDelete().subscribe((r: boolean) => {\r\n      if (codAnexo) {\r\n        this.loaderNavbar = true;\r\n        this.fichaCadastralService\r\n          .deleteAnexo(codAnexo)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe(\r\n            (response: JsonResponse) => {\r\n              if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                r ? this.deleteDocumento(index) : null;\r\n              } else if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false &&\r\n                response.hasOwnProperty('mensagem')\r\n              ) {\r\n                this.pnotifyService.error(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            (error: any) => {\r\n              if (error['error'].hasOwnProperty('mensagem')) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          );\r\n      } else {\r\n        r ? this.deleteDocumento(index) : null;\r\n        this.formData.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteDocumento(index: number) {\r\n    this.anexos.removeAt(index);\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  buscaMate(): void {\r\n    let codMaterial = this.form.getRawValue().codMaterial;\r\n\r\n    if (typeof codMaterial !== 'undefined' && codMaterial !== null) {\r\n      this.loaderNavbar = true;\r\n\r\n      this.comercialService\r\n        .getMateriais({\r\n          codMaterial: codMaterial,\r\n        })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: JsonResponse) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.form.controls.nomeMaterial.setValue(\r\n                response.data[0].descricao\r\n              );\r\n              this.form.controls.nomeMaterial.setValidators([\r\n                Validators.required,\r\n              ]);\r\n              this.form.controls.nomeMaterial.updateValueAndValidity();\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false &&\r\n              response.hasOwnProperty('mensagem')\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            if (error['error'].hasOwnProperty('mensagem')) {\r\n              this.pnotifyService.error(error.error.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.codMaterial = null;\r\n\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n        this.codMaterial = this.form.value.codMaterial;\r\n\r\n        this.fichaCadastralService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe(\r\n            (response: JsonResponse) => {\r\n              if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                if (\r\n                  this.formData.length > 0 &&\r\n                  response.data.codFichaCadastral\r\n                ) {\r\n                  this.onPostAnexos(response.data.codFichaCadastral);\r\n                }\r\n\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false &&\r\n                response.hasOwnProperty('mensagem')\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            (error: any) => {\r\n              if (error['error'].hasOwnProperty('mensagem')) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  onPostAnexos(codFichaCadastral: number): void {\r\n    if (this.formData.length === 0) {\r\n      this.pnotifyService.notice('Erro');\r\n      return;\r\n    }\r\n\r\n    const id = this.form.value.codMaterial;\r\n\r\n    this.formData.forEach((element, index) => {\r\n      this.fichaCadastralService\r\n        .postAnexos(element, id, codFichaCadastral)\r\n        .subscribe();\r\n    });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onLoaderNavbar(event: boolean): void {\r\n    this.loaderNavbar = event;\r\n  }\r\n\r\n  onLimparMaterialPrincipal(): void {\r\n    if (this.form.value.codFichaCadastral == null) {\r\n      this.limparMaterialPrincipal = true;\r\n      this.onInput();\r\n\r\n      this.form.controls.codMaterial.setValue(null);\r\n      this.form.controls.nomeMaterial.setValue(null);\r\n\r\n      setTimeout(() => {\r\n        this.limparMaterialPrincipal = false;\r\n      }, 100);\r\n    } else\r\n      this.pnotifyService.notice(\r\n        'Não é possivel alterar um material já cadastrado'\r\n      );\r\n  }\r\n\r\n  materialPrincipal(material: any): void {\r\n    this.onInput();\r\n\r\n    /* this.form.controls.codLinha.setValue(material.codLinha);\r\n    this.form.controls.codClasse.setValue(material.codClasse); */\r\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\r\n    this.form.controls.nomeMaterial.setValue(material.descricao);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosSetorAtividadeFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.fichaCadastralService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codFichaCadastral: null,\r\n        codMaterial: null,\r\n        nomeMaterial: null,\r\n        descMaterial: null,\r\n        codSituacao: 1,\r\n        situacao: null,\r\n        anexos: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule } from './ficha-cadastral-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisFichaCadastralListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisFichaCadastralFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosMateriaisFichaCadastralListaComponent,\r\n    ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialCadastrosMateriaisFichaCadastralModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Ficha cadastral de materiais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n     <div class=\\\"row\\\" #scrollToFilter>\\r\\n      <div class=\\\"col\\\">\\r\\n        <advanced-filter>\\r\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-7\\\">\\r\\n                <label for=\\\"material\\\">Material</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"material\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-3\\\">\\r\\n                <label for=\\\"codSituacao\\\">Situação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"codSituacao\\\"\\r\\n                  formControlName=\\\"codSituacao\\\">\\r\\n                  <option value=\\\"\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Ativos</option>\\r\\n                  <option value=\\\"0\\\">Inativos</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"registros\\\">Registros</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"registros\\\"\\r\\n                  formControlName=\\\"registros\\\">\\r\\n                  <option>25</option>\\r\\n                  <option>50</option>\\r\\n                  <option>100</option>\\r\\n                  <option>200</option>\\r\\n                  <option>300</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </advanced-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <subtitles\\r\\n          [data]=\\\"subtitles\\\"\\r\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        </subtitles>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Cód. Material</th>\\r\\n              <th scope=\\\"col\\\">Nome Material</th>\\r\\n              <!-- <th scope=\\\"col\\\">Usuario</th> -->\\r\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let fichaCadastral of dadosPagination; let i = index\\\" [class.table-active]=\\\"fichaCadastral.codFichaCadastral == fichaCadastralSelecionada.codFichaCadastral\\\">\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                [ngClass]=\\\"classStatusBorder(fichaCadastral)\\\"\\r\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\r\\n                {{ fichaCadastral.codMaterial }}\\r\\n              </td>\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\r\\n                {{ fichaCadastral.nomeMaterial }}\\r\\n              </td>\\r\\n              <!-- <td\\r\\n                class=\\\"hover\\\"\\r\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\r\\n                {{ fichaCadastral.nomeUsuario }}\\r\\n              </td> -->\\r\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span *ngIf=\\\"fichaCadastral.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, fichaCadastral)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"fichaCadastral.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, fichaCadastral)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(fichaCadastral)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel panelTitle=\\\"Anexos\\\">\\r\\n          <custom-table *ngIf=\\\"anexos.length > 0\\\">\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. Anexo</th>\\r\\n                <th scope=\\\"col\\\">Nome Arquivo</th>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let anexo of anexos\\\">\\r\\n                <td class=\\\"text-center\\\">{{ anexo.codAnexo }}</td>\\r\\n                <td>{{ anexo.nomeAnexo | uppercase }}</td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <a\\r\\n                    [href]=\\\"anexo.linkAnexo\\\"\\r\\n                    target=\\\"_blank\\\"\\r\\n                    class=\\\"btn-icon-sm mx-2 text-black\\\"\\r\\n                    tooltip=\\\"visualizar\\\">\\r\\n                    <i class=\\\"far fa-eye\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n                <!-- <td>{{ anex.mensagem | uppercase }}</td> -->\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { FichaCadastral } from './models/ficha-cadastral';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n// Services\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosMateriaisFichaCadastralService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/materiais/ficha-cadastral`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getListaFichaCadastral(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getAlteracoes(codFichaCadastral: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/alteracoes/${codFichaCadastral}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codMaterial: number): Observable<any> {\r\n    return this.http.get(`${this.API}/detalhes/${codMaterial}`).pipe(take(1));\r\n  }\r\n\r\n  private saveFichaCadastral(fichaCadastral: FichaCadastral) {\r\n    return this.http.post(`${this.API}/salvar`, fichaCadastral).pipe(take(1));\r\n  }\r\n\r\n  private updateFichaCadastral(fichaCadastral: FichaCadastral) {\r\n    return this.http.put(`${this.API}/atualizar`, fichaCadastral).pipe(take(1));\r\n  }\r\n\r\n  save(fichaCadastral: FichaCadastral): Observable<any> {\r\n    if (fichaCadastral.codFichaCadastral !== null) {\r\n      return this.updateFichaCadastral(fichaCadastral);\r\n    }\r\n\r\n    return this.saveFichaCadastral(fichaCadastral);\r\n  }\r\n\r\n  activateFichaCadastral(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateFichaCadastral(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  getAnexos(codMaterial: number): Observable<any> {\r\n    return this.http.get(`${this.API}/documentos/${codMaterial}`).pipe(take(1));\r\n  }\r\n\r\n  postAnexos(\r\n    params,\r\n    codMaterial: number,\r\n    codFichaCadastral: number\r\n  ): Observable<any> {\r\n    return this.http.post(\r\n      `${this.API}/anexos/salvar?codMaterial=${codMaterial}&codFichaCadastral=${codFichaCadastral}`,\r\n      params\r\n    );\r\n  }\r\n\r\n  deleteAnexo(codAnexo: number): Observable<any> {\r\n    let params = {\r\n      codAnexo: codAnexo,\r\n    };\r\n\r\n    return this.http.put(`${this.API}/anexos/excluir`, params).pipe(take(1));\r\n  }\r\n\r\n  getFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { FichaCadastral } from '../models/ficha-cadastral';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-materiais-ficha-cadastral-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosMateriaisFichaCadastralListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codFichaCadastral';\r\n  orderType = 'ASC';\r\n\r\n  /* motivosAssociacao: Array<any> = []; */\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<FichaCadastral> = [];\r\n  dadosPagination: Array<FichaCadastral> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  fichaCadastralSelecionada: FichaCadastral;\r\n  anexos: Array<any> = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Ficha Cadastral');\r\n    this.onDetailPanelEmitter();\r\n    this.setFichaCadastralSelecionada();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Ficha Cadastral',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      material: [formValue.material],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      material: null,\r\n      codSituacao: 1,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setFichaCadastralSelecionada(): void {\r\n    this.fichaCadastralSelecionada = {\r\n      codFichaCadastral: 0,\r\n      codMaterial: null,\r\n      nomeMaterial: null,\r\n      descMaterial: null,\r\n      codSituacao: 1,\r\n      situacao: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.material) {\r\n      params.material = this.form.value.material;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.fichaCadastralService\r\n      .getListaFichaCadastral(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  classStatusBorder(fichaCadastral: FichaCadastral): string {\r\n    let borderClass: string;\r\n\r\n    if (fichaCadastral.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (fichaCadastral.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(fichaCadastral: FichaCadastral): void {\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setFichaCadastralSelecionada();\r\n    this.fichaCadastralSelecionada = fichaCadastral;\r\n    this.anexos = [];\r\n\r\n    this.fichaCadastralService\r\n      .getAnexos(fichaCadastral.codMaterial)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.anexos = response.data;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            // Vazio.\r\n            this.detailPanelService.loadedFinished(true);\r\n          } else {\r\n            // Vazio e com possível erro.\r\n            this.pnotifyService.error();\r\n            this.detailPanelService.loadedFinished(true);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onEdit(fichaCadastral: FichaCadastral): void {\r\n    this.router.navigate(['../editar', fichaCadastral.codFichaCadastral], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, fichaCadastral: FichaCadastral): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateFichaCadastral(index, fichaCadastral) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(fichaCadastral);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateFichaCadastral(\r\n    index: number,\r\n    fichaCadastral: FichaCadastral\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.fichaCadastralService.activateFichaCadastral(\r\n      fichaCadastral.codFichaCadastral\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, fichaCadastral: FichaCadastral): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateFichaCadastral(index, fichaCadastral) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(fichaCadastral);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateFichaCadastral(\r\n    index: number,\r\n    fichaCadastral: FichaCadastral\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.fichaCadastralService.inactivateFichaCadastral(\r\n      fichaCadastral.codFichaCadastral\r\n    );\r\n  }\r\n\r\n  refreshMainData(fichaCadastral: FichaCadastral): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (\r\n        fichaCadastral.codFichaCadastral === this.dados[i].codFichaCadastral\r\n      ) {\r\n        this.dados[i].codSituacao = fichaCadastral.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosSetorAtividadeFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosMateriaisFichaCadastralListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosMateriaisFichaCadastralFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosMateriaisFichaCadastralListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosSetorAtividadeFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosSetorAtividadeFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZmljaGEtY2FkYXN0cmFsL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}