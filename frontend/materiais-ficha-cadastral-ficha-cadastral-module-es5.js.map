{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral.module.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral.service.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/ficha-cadastral-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/materiais/ficha-cadastral/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialCadastrosMateriaisFichaCadastralFormularioComponent","activatedRoute","router","location","formBuilder","fichaCadastralService","confirmModalService","pnotifyService","atividadesService","titleService","comercialService","loaderFullScreen","breadCrumbTree","tableConfigAnexos","fixedHeader","bodyHeight","hover","formChanged","formData","showAnexos","linhas","classes","getPNotify","registrarAcesso","setBreadCrumb","getFilterValues","setFormBuilder","subscribe","params","id","appTitle","setTitle","descricao","routerLink","idSubModulo","pipe","response","responseCode","result","error","back","snapshot","data","detalhes","success","form","group","codFichaCadastral","codMaterial","required","nomeMaterial","descMaterial","codSituacao","anexos","array","getAnexos","loaderNavbar","hasOwnProperty","setAnexos","mensagem","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","length","i","onAddAnexos","anexo","manipulateForm","checkAnexoExists","push","codAnexo","nomeAnexo","linkAnexo","markAsTouched","markAsDirty","files","fd","FormData","append","value","some","el","index","confirmDelete","r","deleteAnexo","deleteDocumento","splice","showConfirm","removeAt","getRawValue","getMateriais","controls","setValue","setValidators","updateValueAndValidity","pristine","valid","submittingForm","save","onPostAnexos","reset","navigate","relativeTo","notice","forEach","element","postAnexos","confirm","event","limparMaterialPrincipal","onInput","setTimeout","material","codigoMaterial","selector","template","ComercialCadastrosSetorAtividadeFormularioResolverGuard","route","getDetalhes","situacao","providedIn","ComercialCadastrosMateriaisFichaCadastralModule","declarations","imports","forRoot","providers","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","ComercialCadastrosMateriaisFichaCadastralService","http","tidSoftwareService","API","httpParams","param","fichaCadastral","post","put","updateFichaCadastral","saveFichaCadastral","codigo","getLinhas","getClasses","FormDeactivateGuard","component","state","formCanDeactivate","ComercialCadastrosMateriaisFichaCadastralListaComponent","detailPanelService","subtitles","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","setFormFilter","onDetailPanelEmitter","setFichaCadastralSelecionada","showDetailPanelSubscription","unsubscribe","config","showing","formValue","checkRouterParams","pagina","registros","checkOrder","activatedRouteSubscription","queryParams","Object","keys","atob","JSON","parse","search","formKey","paramKey","isNaN","Number","fichaCadastralSelecionada","column","onFilter","setRouterParams","verificaParams","q","btoa","stringify","hide","getListaFichaCadastral","slice","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","loadedFinished","confirmActivate","asObservable","activateFichaCadastral","refreshMainData","confirmInactive","inactivateFichaCadastral","routes","path","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule","forChild","exports","ComercialTidSoftwareService","empresas","getEmpresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao"],"mappings":"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","file":"materiais-ficha-cadastral-ficha-cadastral-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      \\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\n        <comercial-cadastros-materiais-templates-material-principal\\n          [linhas]=\\\"linhas\\\"\\n          [classes]=\\\"classes\\\"\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\n        </comercial-cadastros-materiais-templates-material-principal>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <form [formGroup]=\\\"form\\\">\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Dados do Material</div>\\n            </div>\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null && form.getRawValue().codFichaCadastral == null\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codMaterial\\\">Cód. Mat</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeGrupo\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                disabled\\n                (click)=\\\"buscaMate()\\\"\\n                (blur)=\\\"buscaMate()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('codMaterial') + ' ' + onFieldRequired(form.controls.codMaterial)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-8\\\">\\n              <label for=\\\"nomeMaterial\\\">Material</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeGrupo\\\"\\n                formControlName=\\\"nomeMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                disabled\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('nomeMaterial') + ' ' + onFieldRequired(form.controls.nomeMaterial)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('nomeMaterial')\\\" message=\\\"Material é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\"\\n                [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n                <option value=\\\"1\\\">Ativo</option>\\n                <option value=\\\"0\\\">Inativo</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>        \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"descMaterial\\\">Descrição</label>\\n              <textarea \\n                class=\\\"form-control\\\" \\n                rows=\\\"10\\\" \\n                id=\\\"descMaterial\\\"\\n                formControlName=\\\"descMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('descMaterial') + ' ' + onFieldRequired(form.controls.descMaterial)\\\"></textarea>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div formArrayName=\\\"anexos\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col d-flex align-items-start\\\">\\n                <div class=\\\"mtc-title mb-0\\\">Anexos</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <label for=\\\"novoAnexo\\\" class=\\\"d-flex justify-content-end align-items-center\\\" style=\\\"cursor: pointer;\\\">\\n                  <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\n                    <i class=\\\"fas fa-plus\\\"></i>\\n                    <span>Novo</span>\\n                  </p>\\n                </label>\\n                <input\\n                  id=\\\"novoAnexo\\\"\\n                  type=\\\"file\\\"\\n                  (change)=\\\"appendFile($event.target.files)\\\"\\n                  class=\\\"d-none\\\"\\n                  >\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length > 0\\\">\\n              <div class=\\\"col\\\">\\n                <custom-table [config]=\\\"tableConfigAnexos\\\">\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let anexo of anexos.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                      <td style=\\\"width: 90%\\\">\\n                        {{ form.value.anexos[i].codAnexo }} - {{ form.value.anexos[i].nomeAnexo | uppercase }}\\n                      </td>\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <a\\n                          [href]=\\\"form.value.anexos[i].linkAnexo\\\"\\n                          *ngIf=\\\"form.value.anexos[i].linkAnexo != null\\\"\\n                          target=\\\"_blank\\\"\\n                          class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                          tooltip=\\\"visualizar\\\">\\n                          <i class=\\\"far fa-eye\\\"></i>\\n                        </a>\\n                      </td>\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <btn-icon\\n                          icon=\\\"fas fa-trash\\\"\\n                          size=\\\"small\\\"\\n                          tooltip=\\\"Excluir\\\"\\n                          (click)=\\\"onDeleteAnexo(form.value.anexos[i].codAnexo, i)\\\">\\n                        </btn-icon>\\n                      </td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"showAnexos && form.value.anexos.length === 0\\\">\\n              <div class=\\\"col\\\">\\n                <message\\n                  icon=\\\"fas fa-exchange-alt\\\"\\n                  text=\\\"Nenhum documento encontrado\\\">\\n                </message>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZmljaGEtY2FkYXN0cmFsL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from '@angular/forms';\n\n//rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { FichaCadastral } from '../models/ficha-cadastral';\nimport { IAnexo } from '../models/anexo';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n// Services\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n@Component({\n  selector: 'comercial-cadastros-setor-atividade-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  tableConfigAnexos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n  formData: Array<FormData> = [];\n\n  codMaterial: number;\n  showAnexos: boolean = false;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparMaterialPrincipal: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService,\n    private confirmModalService: ConfirmModalService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private comercialService: ComercialService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Ficha Cadastral';\n      } else {\n        this.appTitle = 'Nova Ficha Cadastral';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Ficha Cadastral',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/materiais/ficha-cadastral/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  getFilterValues(): void {\n    this.fichaCadastralService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: FichaCadastral = this.activatedRoute.snapshot.data\n        .detalhes.data;\n\n      this.form = this.formBuilder.group({\n        codFichaCadastral: [detalhes.codFichaCadastral],\n        codMaterial: [detalhes.codMaterial, [Validators.required]],\n        nomeMaterial: [detalhes.nomeMaterial],\n        descMaterial: [detalhes.descMaterial, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        anexos: this.formBuilder.array([]),\n      });\n\n      if (detalhes.codMaterial != null && detalhes.codFichaCadastral != null) {\n        this.getAnexos(detalhes.codMaterial);\n      }\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n    this.loaderFullScreen = false;\n  }\n\n  getAnexos(codMaterial) {\n    this.loaderNavbar = true;\n    this.showAnexos = false;\n    this.fichaCadastralService\n      .getAnexos(codMaterial)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.setAnexos(response.data);\n            this.showAnexos = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false &&\n            response.hasOwnProperty('mensagem')\n          ) {\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        (error: any) => {\n          if (error['error'].hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setAnexos(anexos: any): void {\n    if (anexos.length > 0) {\n      for (let i = 0; i < anexos.length; i++) {\n        this.onAddAnexos(anexos[i], true);\n      }\n    }\n  }\n\n  get anexos(): FormArray {\n    return this.form.get('anexos') as FormArray;\n  }\n\n  onAddAnexos(anexo: any, manipulateForm?: boolean): void {\n    if (this.checkAnexoExists(anexo) === false) {\n      this.anexos.push(\n        this.formBuilder.group({\n          codAnexo: [anexo.codAnexo],\n          nomeAnexo: [anexo.nomeAnexo],\n          linkAnexo: [anexo.linkAnexo],\n        })\n      );\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  appendFile(files: FileList) {\n    if (files.length === 0) return;\n    const fd = new FormData();\n    fd.append('file', files[0]);\n    this.formData.push(fd);\n\n    this.anexos.push(\n      this.formBuilder.group({\n        nomeAnexo: [files[0]['name']],\n      })\n    );\n    if (this.showAnexos === false) {\n      this.showAnexos = true;\n    }\n  }\n\n  /* onLimparAnexos(): void {\n    const anexos = this.form.get('anexos') as FormArray;\n    anexos.clear();\n  } */\n\n  checkAnexoExists(anexo: any): boolean {\n    return this.form.value.anexos.some((el: any) => {\n      return el.codAnexo === anexo.codAnexo;\n    });\n  }\n\n  onDeleteAnexo(codAnexo: number, index: number): void {\n    this.confirmDelete().subscribe((r: boolean) => {\n      if (codAnexo) {\n        this.loaderNavbar = true;\n        this.fichaCadastralService\n          .deleteAnexo(codAnexo)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe(\n            (response: JsonResponse) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                r ? this.deleteDocumento(index) : null;\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false &&\n                response.hasOwnProperty('mensagem')\n              ) {\n                this.pnotifyService.error(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              if (error['error'].hasOwnProperty('mensagem')) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          );\n      } else {\n        r ? this.deleteDocumento(index) : null;\n        this.formData.splice(index, 1);\n      }\n    });\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteDocumento(index: number) {\n    this.anexos.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  buscaMate(): void {\n    let codMaterial = this.form.getRawValue().codMaterial;\n\n    if (typeof codMaterial !== 'undefined' && codMaterial !== null) {\n      this.loaderNavbar = true;\n\n      this.comercialService\n        .getMateriais({\n          codMaterial: codMaterial,\n        })\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe(\n          (response: JsonResponse) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.form.controls.nomeMaterial.setValue(\n                response.data[0].descricao\n              );\n              this.form.controls.nomeMaterial.setValidators([\n                Validators.required,\n              ]);\n              this.form.controls.nomeMaterial.updateValueAndValidity();\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false &&\n              response.hasOwnProperty('mensagem')\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            if (error['error'].hasOwnProperty('mensagem')) {\n              this.pnotifyService.error(error.error.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          }\n        );\n    }\n  }\n\n  onSubmit(): void {\n    this.codMaterial = null;\n\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n        this.codMaterial = this.form.value.codMaterial;\n\n        this.fichaCadastralService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe(\n            (response: JsonResponse) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                if (\n                  this.formData.length > 0 &&\n                  response.data.codFichaCadastral\n                ) {\n                  this.onPostAnexos(response.data.codFichaCadastral);\n                }\n\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false &&\n                response.hasOwnProperty('mensagem')\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            (error: any) => {\n              if (error['error'].hasOwnProperty('mensagem')) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          );\n      }\n    }\n  }\n\n  onPostAnexos(codFichaCadastral: number): void {\n    if (this.formData.length === 0) {\n      this.pnotifyService.notice('Erro');\n      return;\n    }\n\n    const id = this.form.value.codMaterial;\n\n    this.formData.forEach((element, index) => {\n      this.fichaCadastralService\n        .postAnexos(element, id, codFichaCadastral)\n        .subscribe();\n    });\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onLoaderNavbar(event: boolean): void {\n    this.loaderNavbar = event;\n  }\n\n  onLimparMaterialPrincipal(): void {\n    if (this.form.value.codFichaCadastral == null) {\n      this.limparMaterialPrincipal = true;\n      this.onInput();\n\n      this.form.controls.codMaterial.setValue(null);\n      this.form.controls.nomeMaterial.setValue(null);\n\n      setTimeout(() => {\n        this.limparMaterialPrincipal = false;\n      }, 100);\n    } else\n      this.pnotifyService.notice(\n        'Não é possivel alterar um material já cadastrado'\n      );\n  }\n\n  materialPrincipal(material: any): void {\n    this.onInput();\n\n    /* this.form.controls.codLinha.setValue(material.codLinha);\n    this.form.controls.codClasse.setValue(material.codClasse); */\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\n    this.form.controls.nomeMaterial.setValue(material.descricao);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosSetorAtividadeFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.fichaCadastralService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codFichaCadastral: null,\n        codMaterial: null,\n        nomeMaterial: null,\n        descMaterial: null,\n        codSituacao: 1,\n        situacao: null,\n        anexos: [],\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule } from './ficha-cadastral-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../templates/templates.module';\n\n// Components\nimport { ComercialCadastrosMateriaisFichaCadastralListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisFichaCadastralFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosMateriaisFichaCadastralListaComponent,\n    ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralModule {}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Ficha cadastral de materiais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-7\\\">\\n                <label for=\\\"material\\\">Material</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"material\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"codSituacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"codSituacao\\\"\\n                  formControlName=\\\"codSituacao\\\">\\n                  <option value=\\\"\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"0\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-2\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Cód. Material</th>\\n              <th scope=\\\"col\\\">Nome Material</th>\\n              <!-- <th scope=\\\"col\\\">Usuario</th> -->\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let fichaCadastral of dadosPagination; let i = index\\\" [class.table-active]=\\\"fichaCadastral.codFichaCadastral == fichaCadastralSelecionada.codFichaCadastral\\\">\\n              <td\\n                class=\\\"hover\\\"\\n                [ngClass]=\\\"classStatusBorder(fichaCadastral)\\\"\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\n                {{ fichaCadastral.codMaterial }}\\n              </td>\\n              <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\n                {{ fichaCadastral.nomeMaterial }}\\n              </td>\\n              <!-- <td\\n                class=\\\"hover\\\"\\n                (click)=\\\"onDetails(fichaCadastral)\\\">\\n                {{ fichaCadastral.nomeUsuario }}\\n              </td> -->\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"fichaCadastral.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, fichaCadastral)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"fichaCadastral.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, fichaCadastral)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(fichaCadastral)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Anexos\\\">\\n          <custom-table *ngIf=\\\"anexos.length > 0\\\">\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód. Anexo</th>\\n                <th scope=\\\"col\\\">Nome Arquivo</th>\\n                <th scope=\\\"col\\\"></th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let anexo of anexos\\\">\\n                <td class=\\\"text-center\\\">{{ anexo.codAnexo }}</td>\\n                <td>{{ anexo.nomeAnexo | uppercase }}</td>\\n                <td class=\\\"text-center\\\">\\n                  <a\\n                    [href]=\\\"anexo.linkAnexo\\\"\\n                    target=\\\"_blank\\\"\\n                    class=\\\"btn-icon-sm mx-2 text-black\\\"\\n                    tooltip=\\\"visualizar\\\">\\n                    <i class=\\\"far fa-eye\\\"></i>\\n                  </a>\\n                </td>\\n                <!-- <td>{{ anex.mensagem | uppercase }}</td> -->\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { FichaCadastral } from './models/ficha-cadastral';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n// Services\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialTidSoftwareService } from '../../../tid-software/tid-software.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosMateriaisFichaCadastralService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/materiais/ficha-cadastral`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private tidSoftwareService: ComercialTidSoftwareService\n  ) {}\n\n  getListaFichaCadastral(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getAlteracoes(codFichaCadastral: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/alteracoes/${codFichaCadastral}`)\n      .pipe(take(1));\n  }\n\n  getDetalhes(codMaterial: number): Observable<any> {\n    return this.http.get(`${this.API}/detalhes/${codMaterial}`).pipe(take(1));\n  }\n\n  private saveFichaCadastral(fichaCadastral: FichaCadastral) {\n    return this.http.post(`${this.API}/salvar`, fichaCadastral).pipe(take(1));\n  }\n\n  private updateFichaCadastral(fichaCadastral: FichaCadastral) {\n    return this.http.put(`${this.API}/atualizar`, fichaCadastral).pipe(take(1));\n  }\n\n  save(fichaCadastral: FichaCadastral): Observable<any> {\n    if (fichaCadastral.codFichaCadastral !== null) {\n      return this.updateFichaCadastral(fichaCadastral);\n    }\n\n    return this.saveFichaCadastral(fichaCadastral);\n  }\n\n  activateFichaCadastral(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateFichaCadastral(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n\n  getAnexos(codMaterial: number): Observable<any> {\n    return this.http.get(`${this.API}/documentos/${codMaterial}`).pipe(take(1));\n  }\n\n  postAnexos(\n    params,\n    codMaterial: number,\n    codFichaCadastral: number\n  ): Observable<any> {\n    return this.http.post(\n      `${this.API}/anexos/salvar?codMaterial=${codMaterial}&codFichaCadastral=${codFichaCadastral}`,\n      params\n    );\n  }\n\n  deleteAnexo(codAnexo: number): Observable<any> {\n    let params = {\n      codAnexo: codAnexo,\n    };\n\n    return this.http.put(`${this.API}/anexos/excluir`, params).pipe(take(1));\n  }\n\n  getFilterValues(): Observable<Object | JsonResponse> {\n    const linhas = this.tidSoftwareService.getLinhas();\n    const classes = this.comercialService.getClasses(null);\n\n    return forkJoin([linhas, classes]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosMateriaisFichaCadastralService } from '../ficha-cadastral.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { FichaCadastral } from '../models/ficha-cadastral';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-materiais-ficha-cadastral-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codFichaCadastral';\n  orderType = 'ASC';\n\n  /* motivosAssociacao: Array<any> = []; */\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<FichaCadastral> = [];\n  dadosPagination: Array<FichaCadastral> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  fichaCadastralSelecionada: FichaCadastral;\n  anexos: Array<any> = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private fichaCadastralService: ComercialCadastrosMateriaisFichaCadastralService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Ficha Cadastral');\n    this.onDetailPanelEmitter();\n    this.setFichaCadastralSelecionada();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Ficha Cadastral',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      material: [formValue.material],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      material: null,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setFichaCadastralSelecionada(): void {\n    this.fichaCadastralSelecionada = {\n      codFichaCadastral: 0,\n      codMaterial: null,\n      nomeMaterial: null,\n      descMaterial: null,\n      codSituacao: 1,\n      situacao: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.fichaCadastralService\n      .getListaFichaCadastral(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  classStatusBorder(fichaCadastral: FichaCadastral): string {\n    let borderClass: string;\n\n    if (fichaCadastral.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (fichaCadastral.codSituacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(fichaCadastral: FichaCadastral): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setFichaCadastralSelecionada();\n    this.fichaCadastralSelecionada = fichaCadastral;\n    this.anexos = [];\n\n    this.fichaCadastralService\n      .getAnexos(fichaCadastral.codMaterial)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.anexos = response.data;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  onEdit(fichaCadastral: FichaCadastral): void {\n    this.router.navigate(['../editar', fichaCadastral.codFichaCadastral], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, fichaCadastral: FichaCadastral): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateFichaCadastral(index, fichaCadastral) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(fichaCadastral);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateFichaCadastral(\n    index: number,\n    fichaCadastral: FichaCadastral\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.fichaCadastralService.activateFichaCadastral(\n      fichaCadastral.codFichaCadastral\n    );\n  }\n\n  onInactivate(index: number, fichaCadastral: FichaCadastral): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateFichaCadastral(index, fichaCadastral) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(fichaCadastral);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateFichaCadastral(\n    index: number,\n    fichaCadastral: FichaCadastral\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.fichaCadastralService.inactivateFichaCadastral(\n      fichaCadastral.codFichaCadastral\n    );\n  }\n\n  refreshMainData(fichaCadastral: FichaCadastral): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (\n        fichaCadastral.codFichaCadastral === this.dados[i].codFichaCadastral\n      ) {\n        this.dados[i].codSituacao = fichaCadastral.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosSetorAtividadeFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosMateriaisFichaCadastralListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosMateriaisFichaCadastralFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosMateriaisFichaCadastralListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosSetorAtividadeFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosMateriaisFichaCadastralFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosSetorAtividadeFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosMateriaisFichaCadastralModuleRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9tYXRlcmlhaXMvZmljaGEtY2FkYXN0cmFsL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}