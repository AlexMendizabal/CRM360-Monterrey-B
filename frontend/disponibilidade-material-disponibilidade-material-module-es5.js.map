{"version":3,"sources":["webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/disponibilidade-material/lista/lista.component.ts","webpack:///src/app/modules/comercial/disponibilidade-material/disponibilidade-material-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/disponibilidade-material/lista/lista.component.html","webpack:///src/app/modules/comercial/disponibilidade-material/disponibilidade-material.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/disponibilidade-material.module.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.html","webpack:///src/app/modules/comercial/disponibilidade-material/lista/lista.component.scss"],"names":["ComercialVendedoresService","http","API","API_CADASTROS","get","pipe","id","params","codCliente","providedIn","ComercialDisponibilidadeMaterialFormularioService","comercialService","vendedoresService","codMaterial","empresas","getEmpresas","tipo","depositos","getDepositos","grupoManetoni","vendedores","getVendedores","clientes","getCarteiraClientes","material","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialDisponibilidadeMaterialFormularioResolverGuard","disponibilidadeMaterialService","authService","dateService","route","getSolicitacao","success","data","codigo","codEmpresa","codDeposito","codUsuarioRequisicao","getCurrentUser","qtdeMinima","qtdeMaxima","dataInicialParametrizacao","dataFinalParametrizacao","getLastDayMonth","ComercialService","httpParams","param","append","ComercialDisponibilidadeMaterialFormularioComponent","activatedRoute","atividadesService","router","formBuilder","location","localeService","pnotifyService","titleService","formularioService","loaderNavbar","loaderFullScreen","breadCrumbTree","formChanged","submittingForm","filteredDepositos","descricao","currencyMaskOptions","align","prefix","suffix","thousands","decimal","precision","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","registrarAcesso","checkUrlParams","setBreadCrumb","subscribe","action","setFormBuilder","snapshot","detalhes","getFormFields","dataInicial","dataFinal","convertStringToDate","form","group","value","disabled","required","error","back","routerLink","setTitle","length","loadDependencies","next","response","console","log","idEmpresa","controls","reset","filter","deposito","setValue","confirm","field","onFieldInvalid","status","touched","formControl","validator","validationResult","validation","valid","checkValidatorsQuantidades","notice","save","getRawValue","hasOwnProperty","navigate","relativeTo","selector","template","ComercialDisponibilidadeMaterialListaComponent","confirmModalService","subtitles","text","color","tableConfig","subtitleBorder","situacoes","dados","dadosPagination","dadosLoaded","currentPage","maxSize","itemsPerPage","orderBy","orderType","dateInputFormat","getFilterValues","setFormFilter","getFiltros","responseCode","result","unshift","idDeposito","nomeDeposito","handleError","formValue","checkRouterParams","tipoData","cliente","vendedor","situacao","registros","getFirstDayMonth","info","idVendedor","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","column","onFilter","setRouterParams","verificaParams","scrollToFilter","nativeElement","scrollIntoView","behavior","q","btoa","stringify","convertToUrlDate","totalItems","dadosEmpty","getSolicitacoes","slice","mensagem","borderClass","event","startItem","page","endItem","disponibilidadeMaterial","confirm$","showConfirm","asObservable","deleteSolicitacao","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialDisponibilidadeMaterialRoutingModule","imports","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialDisponibilidadeMaterialService","genericService","getSituacoes","record","post","put","updateSolicitacao","saveSolicitacao","ComercialDisponibilidadeMaterialModule","declarations","forRoot","providers","provide","useValue"],"mappings":"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","file":"disponibilidade-material-disponibilidade-material-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `http://23.254.204.187/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number) {\r\n    return this.http\r\n      .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientesCotizacion(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes-cotizacion`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getDetalleVendedor(params) {\r\n  return this.http\r\n      .get(`${this.API}/detalles_vendedor`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getRubros(){\r\n    \r\n    return this.http\r\n      .get(`${this.API}/rubros`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { forkJoin } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialDisponibilidadeMaterialFormularioService {\r\n  private readonly API = environment.API;\r\n\r\n  constructor(\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  loadDependencies(codMaterial: number) {\r\n    const empresas = this.comercialService.getEmpresas({ tipo: 'faturamento' });\r\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n    const clientes = this.vendedoresService.getCarteiraClientes();\r\n    const material = this.http\r\n      .get(`${this.API}/common/materiais?codigo_material=${codMaterial}`)\r\n      .pipe(take(1));\r\n\r\n    return forkJoin([vendedores, empresas, depositos, clientes, material]);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2Rpc3BvbmliaWxpZGFkZS1tYXRlcmlhbC9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\r\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialDisponibilidadeMaterialFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\r\n    private authService: AuthService,\r\n    private dateService: DateService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params['codigo']) {\r\n      return this.disponibilidadeMaterialService.getSolicitacao(\r\n        route.params['codigo']\r\n      );\r\n    }\r\n\r\n    const codMaterial =\r\n      route.params && route.params['codMaterial']\r\n        ? route.params['codMaterial']\r\n        : null;\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codigo: null,\r\n        codMaterial: codMaterial,\r\n        codEmpresa: null,\r\n        codDeposito: null,\r\n        codUsuarioRequisicao: this.authService.getCurrentUser()['info'][\r\n          'idVendedor'\r\n        ],\r\n        codCliente: null,\r\n        qtdeMinima: 0,\r\n        qtdeMaxima: 0,\r\n        dataInicialParametrizacao: new Date(),\r\n        dataFinalParametrizacao: this.dateService.getLastDayMonth()\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  \r\n  \r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos(){\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialDisponibilidadeMaterialFormularioService } from './formulario.service';\r\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n  selector: 'comercial-disponibilidade-material-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialDisponibilidadeMaterialFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  action: string;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm = false;\r\n\r\n  vendedores: any = [];\r\n  empresas: any = [];\r\n  depositos: any = [];\r\n  filteredDepositos: any = [];\r\n  clientes: any = [];\r\n  material = { descricao: '' };\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  currencyMaskOptions = {\r\n    align: 'left',\r\n    prefix: '',\r\n    suffix: '',\r\n    thousands: '.',\r\n    decimal: ',',\r\n    precision: 3\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n    private localeService: BsLocaleService,\r\n    private pnotifyService: PNotifyService,\r\n    private titleService: TitleService,\r\n    private formularioService: ComercialDisponibilidadeMaterialFormularioService,\r\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\r\n    private dateService: DateService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.checkUrlParams();\r\n    this.setBreadCrumb();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  checkUrlParams(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params['codigo']) {\r\n        this.action = 'editar';\r\n      } else {\r\n        this.action = 'novo';\r\n      }\r\n\r\n      this.setFormBuilder();\r\n    });\r\n  }\r\n\r\n  appTitle(): string {\r\n    let title: string;\r\n\r\n    if (this.action == 'novo') {\r\n      title = 'Nova solicitação';\r\n    } else if (this.action == 'editar') {\r\n      title = 'Editar solicitação';\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data['detalhes']['success'] === true) {\r\n      const detalhes = this.activatedRoute.snapshot.data['detalhes']['data'];\r\n      this.getFormFields(detalhes['codMaterial']);\r\n\r\n      let dataInicial: Date;\r\n      let dataFinal: Date;\r\n\r\n      if (detalhes['codigo'] === null) {\r\n        dataInicial = detalhes['dataInicialParametrizacao'];\r\n        dataFinal = detalhes['dataFinalParametrizacao'];\r\n      } else {\r\n        dataInicial = this.dateService.convertStringToDate(\r\n          detalhes['dataInicialParametrizacao'],\r\n          'usa'\r\n        );\r\n        dataFinal = this.dateService.convertStringToDate(\r\n          detalhes['dataFinalParametrizacao'],\r\n          'usa'\r\n        );\r\n      }\r\n\r\n      this.form = this.formBuilder.group({\r\n        codigo: [detalhes['codigo']],\r\n        codMaterial: [\r\n          { value: detalhes['codMaterial'], disabled: true },\r\n          [Validators.required]\r\n        ],\r\n        codEmpresa: [detalhes['codEmpresa'], [Validators.required]],\r\n        codDeposito: [detalhes['codDeposito'], [Validators.required]],\r\n        codUsuarioRequisicao: [\r\n          detalhes['codUsuarioRequisicao'],\r\n          [Validators.required]\r\n        ],\r\n        codCliente: [detalhes['codCliente'], [Validators.required]],\r\n        qtdeMinima: [detalhes['qtdeMinima'], [Validators.required]],\r\n        qtdeMaxima: [detalhes['qtdeMaxima'], [Validators.required]],\r\n        dataInicialParametrizacao: [dataInicial, [Validators.required]],\r\n        dataFinalParametrizacao: [dataFinal, [Validators.required]]\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Home',\r\n        routerLink: '/comercial/home'\r\n      },\r\n      {\r\n        descricao: 'Disponibilidade de material',\r\n        routerLink: `/comercial/disponibilidade-material/solicitacoes`\r\n      },\r\n      {\r\n        descricao:\r\n          this.action == 'novo' ? 'Nova solicitação' : 'Editar solicitação'\r\n      }\r\n    ];\r\n\r\n    this.titleService.setTitle(\r\n      this.breadCrumbTree[this.breadCrumbTree.length - 1]['descricao']\r\n    );\r\n  }\r\n\r\n  getFormFields(codMaterial: number): void {\r\n    this.formularioService\r\n      .loadDependencies(codMaterial)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n\r\n          console.log(response);\r\n          \r\n          if (response[0]['responseCode'] === 200) {\r\n            this.vendedores = response[0]['result'];\r\n          }\r\n\r\n          if (response[1]['responseCode'] === 200) {\r\n            this.empresas = response[1]['result'];\r\n          }\r\n\r\n          if (response[2]['responseCode'] === 200) {\r\n            this.depositos = response[2]['result'];\r\n            this.filteredDepositos = this.depositos;\r\n          }\r\n\r\n          if (response[3]['success'] === true) {\r\n            this.clientes = response[3]['data'];\r\n          }\r\n\r\n          if (response[4]['responseCode'] === 200) {\r\n            this.material = response[4]['result'][0];\r\n            this.currencyMaskOptions.suffix = ` ${this.material['unidade']}`;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  onChangeEmpresa(idEmpresa: number): void {\r\n    this.form.controls['codDeposito'].reset();\r\n\r\n    this.filteredDepositos = this.depositos.filter(\r\n      (value: any) => value['idEmpresa'] == idEmpresa\r\n    );\r\n  }\r\n\r\n  onChangeDeposito(deposito: any): void {\r\n    this.form.controls['codEmpresa'].setValue(deposito['idEmpresa']);\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): string {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  checkValidatorsQuantidades(): boolean {\r\n    let validation = true;\r\n\r\n    if (\r\n      this.form.value['qtdeMinima'] === 0 ||\r\n      this.form.value['qtdeMaxima'] === 0\r\n    ) {\r\n      validation = false;\r\n    }\r\n\r\n    if (this.form.value['qtdeMaxima'] < this.form.value['qtdeMinima']) {\r\n      validation = false;\r\n    }\r\n\r\n    return validation;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      if (!this.checkValidatorsQuantidades()) {\r\n        this.pnotifyService.notice('As quantidades informadas são inválidas.');\r\n        return;\r\n      }\r\n\r\n      this.loaderNavbar = true;\r\n      this.submittingForm = true;\r\n\r\n      this.disponibilidadeMaterialService\r\n        .save(this.action, this.form.getRawValue())\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loaderNavbar = false;\r\n            this.submittingForm = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (response: any) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response['success'] === true\r\n            ) {\r\n              this.form.reset();\r\n              this.formChanged = false;\r\n              this.pnotifyService.success(response['mensagem']);\r\n\r\n              this.router.navigate(\r\n                ['/comercial/disponibilidade-material/solicitacoes'],\r\n                {\r\n                  relativeTo: this.activatedRoute\r\n                }\r\n              );\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response['success'] === false\r\n            ) {\r\n              this.pnotifyService.error(response['mensagem']);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Interfaces\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { DisponibilidadeMaterial } from '../models/disponibilidade-material';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-disponibilidade-material-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialDisponibilidadeMaterialListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [\r\n    {\r\n      descricao: 'Home',\r\n      routerLink: '/comercial/home'\r\n    },\r\n    {\r\n      descricao: 'Disponibilidade de material'\r\n    }\r\n  ];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n\r\n  depositos: any = [];\r\n  vendedores: any = [];\r\n  situacoes: any = [];\r\n\r\n  dados: any = [];\r\n  dadosPagination: any = [];\r\n  dadosEmpty: boolean;\r\n  dadosLoaded = false;\r\n\r\n  currentPage = 1;\r\n  maxSize: number = 10;\r\n  totalItems: number;\r\n  itemsPerPage: number = 10;\r\n\r\n  orderBy = 'nomeMaterial';\r\n  orderType = 'asc';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private atividadesService: AtividadesService,\r\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\r\n    private titleService: TitleService,\r\n    private authService: AuthService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false },\r\n      { dateInputFormat: 'DD/MM/YYYY' }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.getFilterValues();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Disponibilidade de material');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  getFilterValues(): void {\r\n    this.disponibilidadeMaterialService\r\n      .getFiltros()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response[0].responseCode == 200) {\r\n            this.depositos = response[0].result;\r\n\r\n            this.depositos.unshift({\r\n              idDeposito: 0,\r\n              nomeDeposito: 'EXIBIR TODOS'\r\n            });\r\n          }\r\n\r\n          if (response[1].responseCode == 200) {\r\n            this.vendedores = response[1].result;\r\n          }\r\n\r\n          if (\r\n            response[2].hasOwnProperty('success') &&\r\n            response[2].success === true\r\n          ) {\r\n            this.situacoes = response[2].data;\r\n\r\n            this.situacoes.unshift({\r\n              id: 0,\r\n              descricao: 'EXIBIR TODOS'\r\n            });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleError('Ocorreu um erro ao carregar filtros.');\r\n        }\r\n      });\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      tipoData: [formValue.tipoData, [Validators.required]],\r\n      dataInicial: [formValue.dataInicial, [Validators.required]],\r\n      dataFinal: [formValue.dataFinal, [Validators.required]],\r\n      material: [formValue.material],\r\n      codDeposito: [formValue.codDeposito],\r\n      cliente: [formValue.cliente],\r\n      vendedor: [formValue.vendedor],\r\n      situacao: [formValue.situacao],\r\n      registros: [formValue.registros]\r\n    });\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      tipoData: 1,\r\n      dataInicial: this.dateService.getFirstDayMonth(),\r\n      dataFinal: this.dateService.getLastDayMonth(),\r\n      codDeposito: 0,\r\n      cliente: null,\r\n      material: null,\r\n      vendedor: this.authService.getCurrentUser().info.idVendedor,\r\n      situacao: 0,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\r\n                  formValue[formKey] = this.dateService.convertStringToDate(\r\n                    params[paramKey],\r\n                    'pt-br'\r\n                  );\r\n                } else {\r\n                  if (!isNaN(Number(params[paramKey]))) {\r\n                    formValue[formKey] = Number(params[paramKey]);\r\n                  } else {\r\n                    formValue[formKey] = params[paramKey];\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string): string {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'desc') {\r\n        this.orderType = 'asc';\r\n      } else if (this.orderType == 'asc') {\r\n        this.orderType = 'desc';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'asc';\r\n    }\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.setRouterParams(this.verificaParams());\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n\r\n      this.scrollToFilter.nativeElement.scrollIntoView({\r\n        behavior: 'instant'\r\n      });\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.tipoData) {\r\n      params.tipoData = this.form.value.tipoData;\r\n    }\r\n\r\n    if (this.form.value.dataInicial) {\r\n      params.dataInicial = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataInicial)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.dataFinal) {\r\n      params.dataFinal = this.dateService.convertToUrlDate(\r\n        new Date(this.form.value.dataFinal)\r\n      );\r\n    }\r\n\r\n    if (this.form.value.codDeposito) {\r\n      params.codDeposito = this.form.value.codDeposito;\r\n    }\r\n\r\n    if (this.form.value.cliente) {\r\n      params.cliente = this.form.value.cliente;\r\n    }\r\n\r\n    if (this.form.value.material) {\r\n      params.material = this.form.value.material;\r\n    }\r\n\r\n    if (this.form.value.vendedor) {\r\n      params.vendedor = this.form.value.vendedor;\r\n    }\r\n\r\n    if (this.form.value.situacao) {\r\n      params.situacao = this.form.value.situacao;\r\n    }\r\n\r\n    params.orderBy = this.orderBy;\r\n    params.orderType = this.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.totalItems = 0;\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.disponibilidadeMaterialService\r\n      .getSolicitacoes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.notice(response.mensagem);\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(status: string): string {\r\n    let borderClass: string;\r\n\r\n    if (status == 'Ativo') {\r\n      borderClass = 'border-success';\r\n    } else if (status == 'Inativo') {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onEdit(data: any) {\r\n    if (data.situacao == 'Ativo') {\r\n      this.router.navigate(['../editar', data['codigo']], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel(disponibilidadeMaterial: DisponibilidadeMaterial) {\r\n    if (disponibilidadeMaterial.situacao == 'Ativo') {\r\n      let confirm$ = this.confirmModalService.showConfirm(\r\n        'delete',\r\n        'Confirmar cancelamento',\r\n        'Deseja realmente prosseguir com o cancelamento da solicitação?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      );\r\n\r\n      confirm$\r\n        .asObservable()\r\n        .pipe(\r\n          take(1),\r\n          switchMap(result =>\r\n            result\r\n              ? this.disponibilidadeMaterialService.deleteSolicitacao(\r\n                  disponibilidadeMaterial\r\n                )\r\n              : EMPTY\r\n          )\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.onFilter();\r\n              this.pnotifyService.success(response.mensagem);\r\n            } else if (\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false\r\n            ) {\r\n              this.pnotifyService.error(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onResetForm() {\r\n    this.form.reset();\r\n\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.form.controls.codDeposito.setValue(0);\r\n    this.form.controls.vendedor.setValue(\r\n      this.authService.getCurrentUser()['info']['idVendedor']\r\n    );\r\n    this.form.controls.situacao.setValue(0);\r\n    this.form.controls.registros.setValue(100);\r\n  }\r\n\r\n  handleError(message: string = null): void {\r\n    this.pnotifyService.error(message);\r\n    this.location.back();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialDisponibilidadeMaterialFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialDisponibilidadeMaterialListaComponent } from './lista/lista.component';\r\nimport { ComercialDisponibilidadeMaterialFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'solicitacoes',\r\n    component: ComercialDisponibilidadeMaterialListaComponent\r\n  },\r\n  {\r\n    path: 'novo/:codMaterial',\r\n    component: ComercialDisponibilidadeMaterialFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialDisponibilidadeMaterialFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:codigo',\r\n    component: ComercialDisponibilidadeMaterialFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialDisponibilidadeMaterialFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'solicitacoes',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialDisponibilidadeMaterialRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Disponibilidade de material\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onResetForm()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\"\\r\\n    [disabled]=\\\"!form.valid\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div #scrollToFilter>\\r\\n    <advanced-filter>\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"tipoData\\\">Buscar por</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"tipoData\\\"\\r\\n              formControlName=\\\"tipoData\\\"\\r\\n              [ngClass]=\\\"onFieldError('tipoData') + ' ' + onFieldRequired('tipoData')\\\">\\r\\n              <option value=\\\"1\\\">Data de expiração</option>\\r\\n              <option value=\\\"2\\\">Data da solicitação</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"dataInicial\\\">Data inicial</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataInicial\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataInicial\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"dataFinal\\\">Data final</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataFinal\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataFinal\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"codDeposito\\\">Depósito</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"depositos\\\"\\r\\n              formControlName=\\\"codDeposito\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"codDeposito\\\"\\r\\n              bindLabel=\\\"nomeDeposito\\\"\\r\\n              bindValue=\\\"idDeposito\\\"\\r\\n              [ngClass]=\\\"onFieldError('codDeposito') + ' ' + onFieldRequired('codDeposito')\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n            <label for=\\\"cliente\\\">Cliente</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"cliente\\\"\\r\\n              formControlName=\\\"cliente\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\r\\n            <label for=\\\"material\\\">Material</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"material\\\"\\r\\n              (keydown.enter)=\\\"onFilter()\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-3\\\">\\r\\n            <label for=\\\"vendedor\\\">Vendedor</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"vendedores\\\"\\r\\n              formControlName=\\\"vendedor\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"vendedor\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              [ngClass]=\\\"onFieldError('vendedor') + ' ' + onFieldRequired('vendedor')\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\r\\n            <label for=\\\"situacao\\\">Situação</label>\\r\\n            <ng-select\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"situacoes\\\"\\r\\n              formControlName=\\\"situacao\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"situacao\\\"\\r\\n              bindLabel=\\\"descricao\\\"\\r\\n              bindValue=\\\"id\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\r\\n            <label for=\\\"registros\\\">Registros</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"registros\\\"\\r\\n              formControlName=\\\"registros\\\">\\r\\n              <option>25</option>\\r\\n              <option>50</option>\\r\\n              <option>75</option>\\r\\n              <option>100</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </advanced-filter>\\r\\n    <subtitles\\r\\n      [data]=\\\"subtitles\\\"\\r\\n      [show]=\\\"dados.length > 0 && !dadosEmpty\\\">\\r\\n    </subtitles>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\"></th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Cód. material\\\"\\r\\n                  [active]=\\\"orderBy == 'codMaterial'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Material\\\"\\r\\n                  [active]=\\\"orderBy == 'nomeMaterial'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Cliente\\\"\\r\\n                  [active]=\\\"orderBy == 'nomeCliente'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('nomeCliente')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Aceitável</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Ideal</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Data inicial\\\"\\r\\n                  [active]=\\\"orderBy == 'dataInicialParametrizacao'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('dataInicialParametrizacao')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\r\\n                <thead-sorter\\r\\n                  value=\\\"Data limite\\\"\\r\\n                  [active]=\\\"orderBy == 'dataFinalParametrizacao'\\\"\\r\\n                  [sort]=\\\"orderType\\\"\\r\\n                  (click)=\\\"setOrderBy('dataFinalParametrizacao')\\\">\\r\\n                </thead-sorter>\\r\\n              </th>\\r\\n              <th scope=\\\"col\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of dadosPagination\\\">\\r\\n              <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(item.situacao)\\\">\\r\\n                <i class=\\\"text-warning fas fa-envelope\\\" *ngIf=\\\"item.codEmailEnviado == 1\\\" tooltip=\\\"E-mail enviado\\\" placement=\\\"right\\\"></i>\\r\\n                <i class=\\\"text-black-50 far fa-envelope\\\" *ngIf=\\\"item.codEmailEnviado == 2\\\" tooltip=\\\"E-mail não enviado\\\" placement=\\\"right\\\"></i>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">{{ item.codMaterial }}</td>\\r\\n              <td>{{ item.nomeMaterial }}</td>\\r\\n              <td>{{ item.razaoSocial }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.qtdeMinima | number:'1.3-3' }} {{ item.unidadeMedida }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.qtdeMaxima | number:'1.3-3' }} {{ item.unidadeMedida }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.dataInicialParametrizacao | date: 'dd/MM/yyyy' }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.dataFinalParametrizacao | date: 'dd/MM/yyyy' }}</td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <div *ngIf=\\\"item.situacao == 'Ativo'\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon-sm\\\"\\r\\n                    (click)=\\\"onEdit(item)\\\"\\r\\n                    tooltip=\\\"Editar\\\"\\r\\n                    placement=\\\"left\\\"\\r\\n                    container=\\\"body\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon-sm ml-3\\\"\\r\\n                    (click)=\\\"onCancel(item)\\\"\\r\\n                    tooltip=\\\"Cancelar\\\"\\r\\n                    placement=\\\"left\\\"\\r\\n                    container=\\\"body\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mt-2\\\" *ngIf=\\\"dadosEmpty\\\"></empty-result>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { GenericService } from 'src/app/shared/services/requests/generic.service';\r\nimport { ComercialVendedoresService } from '../services/vendedores.service';\r\nimport { DisponibilidadeMaterial } from './models/disponibilidade-material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialDisponibilidadeMaterialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/disponibilidade-material`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private genericService: GenericService\r\n  ) {}\r\n\r\n  getFiltros() {\r\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n    const situacoes = this.genericService.getSituacoes();\r\n\r\n    return forkJoin([depositos, vendedores, situacoes]).pipe(take(1));\r\n  }\r\n\r\n  getSolicitacoes(params: any) {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/solicitacoes`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getSolicitacao(id: number) {\r\n    return this.http.get(`${this.API}/solicitacao/${id}`).pipe(take(1));\r\n  }\r\n\r\n  private saveSolicitacao(record: any) {\r\n    return this.http\r\n      .post(`${this.API}/solicitacao/salvar`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private updateSolicitacao(record: any) {\r\n    return this.http\r\n      .put(`${this.API}/solicitacao/atualizar`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(action: string, record: any) {\r\n    if (action == 'editar') {\r\n      return this.updateSolicitacao(record);\r\n    }\r\n\r\n    return this.saveSolicitacao(record);\r\n  }\r\n\r\n  deleteSolicitacao(disponibilidadeMaterial: DisponibilidadeMaterial) {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/solicitacao/excluir/${disponibilidadeMaterial.codigo}`\r\n      )\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localePt from '@angular/common/locales/pt';\r\n\r\nregisterLocaleData(localePt, 'pt-BR');\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialDisponibilidadeMaterialRoutingModule } from './disponibilidade-material-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialDisponibilidadeMaterialListaComponent } from './lista/lista.component';\r\nimport { ComercialDisponibilidadeMaterialFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialDisponibilidadeMaterialListaComponent,\r\n    ComercialDisponibilidadeMaterialFormularioComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    ComercialDisponibilidadeMaterialRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-BR' }]\r\n})\r\nexport class ComercialDisponibilidadeMaterialModule {}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle()\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"submittingForm || !form.valid\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div *ngIf=\\\"material.descricao.length > 0\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col mb-0\\\">\\r\\n              <div class=\\\"mtc-title text-center mb-0\\\">{{ material.descricao }}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\"><hr></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codMaterial\\\">Código do material</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"codMaterial\\\"\\r\\n              formControlName=\\\"codMaterial\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '', decimal: '', precision: 0 }\\\"\\r\\n              [ngClass]=\\\"onFieldError('codMaterial') + ' ' + onFieldRequired('codMaterial')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código do material é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codUsuarioRequisicao\\\">Vendedor</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"vendedores\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"codUsuarioRequisicao\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              formControlName=\\\"codUsuarioRequisicao\\\"\\r\\n              (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('codUsuarioRequisicao') + ' ' + onFieldRequired('codUsuarioRequisicao')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codUsuarioRequisicao')\\\" message=\\\"Vendedor é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"empresas\\\"\\r\\n              formControlName=\\\"codEmpresa\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"codEmpresa\\\"\\r\\n              bindLabel=\\\"nomeEmpresa\\\"\\r\\n              bindValue=\\\"idEmpresa\\\"\\r\\n              (change)=\\\"onInput() + ' ' + onChangeEmpresa($event.idEmpresa)\\\"\\r\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired('codEmpresa')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codDeposito\\\">Depósito</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"filteredDepositos\\\"\\r\\n              formControlName=\\\"codDeposito\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"codDeposito\\\"\\r\\n              bindLabel=\\\"nomeDeposito\\\"\\r\\n              bindValue=\\\"idDeposito\\\"\\r\\n              (change)=\\\"onInput() + ' ' + onChangeDeposito($event)\\\"\\r\\n              [ngClass]=\\\"onFieldError('codDeposito') + ' ' + onFieldRequired('codDeposito')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codDeposito')\\\" message=\\\"Depósito é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"codCliente\\\">Cliente</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"clientes\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"codCliente\\\"\\r\\n              bindLabel=\\\"codRazaoSocial\\\"\\r\\n              bindValue=\\\"codCliente\\\"\\r\\n              formControlName=\\\"codCliente\\\"\\r\\n              (change)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('codCliente') + ' ' + onFieldRequired('codCliente')\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"qtdeMinima\\\">Quantidade mínima</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"qtdeMinima\\\"\\r\\n              formControlName=\\\"qtdeMinima\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              currencyMask [options]=\\\"currencyMaskOptions\\\"\\r\\n              [ngClass]=\\\"onFieldError('qtdeMinima') + ' ' + onFieldRequired('qtdeMinima')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeMinima')\\\" message=\\\"Quantidade aceitável é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"qtdeMaxima\\\">Quantidade ideal</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"qtdeMaxima\\\"\\r\\n              formControlName=\\\"qtdeMaxima\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              currencyMask [options]=\\\"currencyMaskOptions\\\"\\r\\n              [ngClass]=\\\"onFieldError('qtdeMaxima') + ' ' + onFieldRequired('qtdeMaxima')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeMaxima')\\\" message=\\\"Quantidade ideal é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataInicialParametrizacao\\\">Data inicial</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataInicialParametrizacao\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataInicialParametrizacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataInicialParametrizacao') + ' ' + onFieldRequired('dataInicialParametrizacao')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataInicialParametrizacao')\\\" message=\\\"Data inicial é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataFinalParametrizacao\\\">Data limite (expiração)</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataFinalParametrizacao\\\"\\r\\n              type=\\\"text\\\"\\r\\n              bsDatepicker\\r\\n              [bsConfig]=\\\"bsConfig\\\"\\r\\n              formControlName=\\\"dataFinalParametrizacao\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              [ngClass]=\\\"onFieldError('dataFinalParametrizacao') + ' ' + onFieldRequired('dataFinalParametrizacao')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataFinalParametrizacao')\\\" message=\\\"Data limite é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2Rpc3BvbmliaWxpZGFkZS1tYXRlcmlhbC9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";"]}