{"version":3,"sources":["webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.scss","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/disponibilidade-material/lista/lista.component.ts","webpack:///src/app/modules/comercial/disponibilidade-material/disponibilidade-material-routing.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/disponibilidade-material/lista/lista.component.html","webpack:///src/app/modules/comercial/disponibilidade-material/disponibilidade-material.service.ts","webpack:///src/app/modules/comercial/disponibilidade-material/disponibilidade-material.module.ts","webpack:///src/app/modules/comercial/disponibilidade-material/formulario/formulario.component.html","webpack:///src/app/modules/comercial/disponibilidade-material/lista/lista.component.scss"],"names":["ComercialVendedoresService","http","API","get","pipe","params","codCliente","providedIn","ComercialDisponibilidadeMaterialFormularioService","comercialService","vendedoresService","codMaterial","empresas","getEmpresas","tipo","depositos","getDepositos","grupoManetoni","vendedores","getVendedores","clientes","getCarteiraClientes","material","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","Date","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","ComercialDisponibilidadeMaterialFormularioResolverGuard","disponibilidadeMaterialService","authService","dateService","route","getSolicitacao","success","data","codigo","codEmpresa","codDeposito","codUsuarioRequisicao","getCurrentUser","qtdeMinima","qtdeMaxima","dataInicialParametrizacao","dataFinalParametrizacao","getLastDayMonth","ComercialService","httpParams","param","append","ComercialDisponibilidadeMaterialFormularioComponent","activatedRoute","atividadesService","router","formBuilder","location","localeService","pnotifyService","titleService","formularioService","loaderNavbar","loaderFullScreen","breadCrumbTree","formChanged","submittingForm","filteredDepositos","descricao","currencyMaskOptions","align","prefix","suffix","thousands","decimal","precision","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","registrarAcesso","checkUrlParams","setBreadCrumb","subscribe","action","setFormBuilder","snapshot","detalhes","getFormFields","dataInicial","dataFinal","convertStringToDate","form","group","value","disabled","required","error","back","routerLink","setTitle","length","loadDependencies","next","response","console","log","idEmpresa","controls","reset","filter","deposito","setValue","confirm","field","onFieldInvalid","status","touched","formControl","validator","validationResult","validation","valid","checkValidatorsQuantidades","notice","save","getRawValue","hasOwnProperty","navigate","relativeTo","selector","template","ComercialDisponibilidadeMaterialListaComponent","confirmModalService","subtitles","id","text","color","tableConfig","subtitleBorder","situacoes","dados","dadosPagination","dadosLoaded","currentPage","maxSize","itemsPerPage","orderBy","orderType","dateInputFormat","getFilterValues","setFormFilter","getFiltros","responseCode","result","unshift","idDeposito","nomeDeposito","handleError","formValue","checkRouterParams","tipoData","cliente","vendedor","situacao","registros","getFirstDayMonth","info","idVendedor","activatedRouteSubscription","queryParams","keys","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","column","onFilter","setRouterParams","verificaParams","scrollToFilter","nativeElement","scrollIntoView","behavior","q","btoa","stringify","convertToUrlDate","totalItems","dadosEmpty","getSolicitacoes","slice","mensagem","borderClass","event","startItem","page","endItem","disponibilidadeMaterial","confirm$","showConfirm","asObservable","deleteSolicitacao","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialDisponibilidadeMaterialRoutingModule","imports","forChild","exports","FormDeactivateGuard","state","formCanDeactivate","ComercialDisponibilidadeMaterialService","genericService","getSituacoes","record","post","put","updateSolicitacao","saveSolicitacao","ComercialDisponibilidadeMaterialModule","declarations","forRoot","providers","provide","useValue"],"mappings":"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","file":"disponibilidade-material-disponibilidade-material-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialVendedoresService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\n\n  constructor(protected http: HttpClient) {}\n\n  getDetalhesCadastro() {\n    return this.http\n      .get(`${this.API}/detalhes-cadastro`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVendedores() {\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\n  }\n\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/carteira-clientes`,\n      {\n        params: params\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getValidaClienteCarteira(\n    codCliente: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getVinculoOperadores() {\n    return this.http\n      .get(`${this.API}/vinculo-operadores`)\n      .pipe(take(1), retry(2));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../../comercial.service';\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialDisponibilidadeMaterialFormularioService {\n  private readonly API = environment.API;\n\n  constructor(\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private http: HttpClient\n  ) {}\n\n  loadDependencies(codMaterial: number) {\n    const empresas = this.comercialService.getEmpresas({ tipo: 'faturamento' });\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n    const vendedores = this.vendedoresService.getVendedores();\n    const clientes = this.vendedoresService.getCarteiraClientes();\n    const material = this.http\n      .get(`${this.API}/common/materiais?codigo_material=${codMaterial}`)\n      .pipe(take(1));\n\n    return forkJoin([vendedores, empresas, depositos, clientes, material]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2Rpc3BvbmliaWxpZGFkZS1tYXRlcmlhbC9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialDisponibilidadeMaterialFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\n    private authService: AuthService,\n    private dateService: DateService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params['codigo']) {\n      return this.disponibilidadeMaterialService.getSolicitacao(\n        route.params['codigo']\n      );\n    }\n\n    const codMaterial =\n      route.params && route.params['codMaterial']\n        ? route.params['codMaterial']\n        : null;\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codigo: null,\n        codMaterial: codMaterial,\n        codEmpresa: null,\n        codDeposito: null,\n        codUsuarioRequisicao: this.authService.getCurrentUser()['info'][\n          'idVendedor'\n        ],\n        codCliente: null,\n        qtdeMinima: 0,\n        qtdeMaxima: 0,\n        dataInicialParametrizacao: new Date(),\n        dataFinalParametrizacao: this.dateService.getLastDayMonth()\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialDisponibilidadeMaterialFormularioService } from './formulario.service';\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-disponibilidade-material-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialDisponibilidadeMaterialFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  action: string;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm = false;\n\n  vendedores: any = [];\n  empresas: any = [];\n  depositos: any = [];\n  filteredDepositos: any = [];\n  clientes: any = [];\n  material = { descricao: '' };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  currencyMaskOptions = {\n    align: 'left',\n    prefix: '',\n    suffix: '',\n    thousands: '.',\n    decimal: ',',\n    precision: 3\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private location: Location,\n    private localeService: BsLocaleService,\n    private pnotifyService: PNotifyService,\n    private titleService: TitleService,\n    private formularioService: ComercialDisponibilidadeMaterialFormularioService,\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\n    private dateService: DateService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.checkUrlParams();\n    this.setBreadCrumb();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  checkUrlParams(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params['codigo']) {\n        this.action = 'editar';\n      } else {\n        this.action = 'novo';\n      }\n\n      this.setFormBuilder();\n    });\n  }\n\n  appTitle(): string {\n    let title: string;\n\n    if (this.action == 'novo') {\n      title = 'Nova solicitação';\n    } else if (this.action == 'editar') {\n      title = 'Editar solicitação';\n    }\n\n    return title;\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data['detalhes']['success'] === true) {\n      const detalhes = this.activatedRoute.snapshot.data['detalhes']['data'];\n      this.getFormFields(detalhes['codMaterial']);\n\n      let dataInicial: Date;\n      let dataFinal: Date;\n\n      if (detalhes['codigo'] === null) {\n        dataInicial = detalhes['dataInicialParametrizacao'];\n        dataFinal = detalhes['dataFinalParametrizacao'];\n      } else {\n        dataInicial = this.dateService.convertStringToDate(\n          detalhes['dataInicialParametrizacao'],\n          'usa'\n        );\n        dataFinal = this.dateService.convertStringToDate(\n          detalhes['dataFinalParametrizacao'],\n          'usa'\n        );\n      }\n\n      this.form = this.formBuilder.group({\n        codigo: [detalhes['codigo']],\n        codMaterial: [\n          { value: detalhes['codMaterial'], disabled: true },\n          [Validators.required]\n        ],\n        codEmpresa: [detalhes['codEmpresa'], [Validators.required]],\n        codDeposito: [detalhes['codDeposito'], [Validators.required]],\n        codUsuarioRequisicao: [\n          detalhes['codUsuarioRequisicao'],\n          [Validators.required]\n        ],\n        codCliente: [detalhes['codCliente'], [Validators.required]],\n        qtdeMinima: [detalhes['qtdeMinima'], [Validators.required]],\n        qtdeMaxima: [detalhes['qtdeMaxima'], [Validators.required]],\n        dataInicialParametrizacao: [dataInicial, [Validators.required]],\n        dataFinalParametrizacao: [dataFinal, [Validators.required]]\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  setBreadCrumb(): void {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home'\n      },\n      {\n        descricao: 'Disponibilidade de material',\n        routerLink: `/comercial/disponibilidade-material/solicitacoes`\n      },\n      {\n        descricao:\n          this.action == 'novo' ? 'Nova solicitação' : 'Editar solicitação'\n      }\n    ];\n\n    this.titleService.setTitle(\n      this.breadCrumbTree[this.breadCrumbTree.length - 1]['descricao']\n    );\n  }\n\n  getFormFields(codMaterial: number): void {\n    this.formularioService\n      .loadDependencies(codMaterial)\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n\n          console.log(response);\n          \n          if (response[0]['responseCode'] === 200) {\n            this.vendedores = response[0]['result'];\n          }\n\n          if (response[1]['responseCode'] === 200) {\n            this.empresas = response[1]['result'];\n          }\n\n          if (response[2]['responseCode'] === 200) {\n            this.depositos = response[2]['result'];\n            this.filteredDepositos = this.depositos;\n          }\n\n          if (response[3]['success'] === true) {\n            this.clientes = response[3]['data'];\n          }\n\n          if (response[4]['responseCode'] === 200) {\n            this.material = response[4]['result'][0];\n            this.currencyMaskOptions.suffix = ` ${this.material['unidade']}`;\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  onChangeEmpresa(idEmpresa: number): void {\n    this.form.controls['codDeposito'].reset();\n\n    this.filteredDepositos = this.depositos.filter(\n      (value: any) => value['idEmpresa'] == idEmpresa\n    );\n  }\n\n  onChangeDeposito(deposito: any): void {\n    this.form.controls['codEmpresa'].setValue(deposito['idEmpresa']);\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): string {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  checkValidatorsQuantidades(): boolean {\n    let validation = true;\n\n    if (\n      this.form.value['qtdeMinima'] === 0 ||\n      this.form.value['qtdeMaxima'] === 0\n    ) {\n      validation = false;\n    }\n\n    if (this.form.value['qtdeMaxima'] < this.form.value['qtdeMinima']) {\n      validation = false;\n    }\n\n    return validation;\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      if (!this.checkValidatorsQuantidades()) {\n        this.pnotifyService.notice('As quantidades informadas são inválidas.');\n        return;\n      }\n\n      this.loaderNavbar = true;\n      this.submittingForm = true;\n\n      this.disponibilidadeMaterialService\n        .save(this.action, this.form.getRawValue())\n        .pipe(\n          finalize(() => {\n            this.loaderNavbar = false;\n            this.submittingForm = false;\n          })\n        )\n        .subscribe(\n          (response: any) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response['success'] === true\n            ) {\n              this.form.reset();\n              this.formChanged = false;\n              this.pnotifyService.success(response['mensagem']);\n\n              this.router.navigate(\n                ['/comercial/disponibilidade-material/solicitacoes'],\n                {\n                  relativeTo: this.activatedRoute\n                }\n              );\n            } else if (\n              response.hasOwnProperty('success') &&\n              response['success'] === false\n            ) {\n              this.pnotifyService.error(response['mensagem']);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          (error: any) => {\n            this.pnotifyService.error();\n          }\n        );\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// Interfaces\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialDisponibilidadeMaterialService } from '../disponibilidade-material.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { DisponibilidadeMaterial } from '../models/disponibilidade-material';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-disponibilidade-material-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialDisponibilidadeMaterialListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [\n    {\n      descricao: 'Home',\n      routerLink: '/comercial/home'\n    },\n    {\n      descricao: 'Disponibilidade de material'\n    }\n  ];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  depositos: any = [];\n  vendedores: any = [];\n  situacoes: any = [];\n\n  dados: any = [];\n  dadosPagination: any = [];\n  dadosEmpty: boolean;\n  dadosLoaded = false;\n\n  currentPage = 1;\n  maxSize: number = 10;\n  totalItems: number;\n  itemsPerPage: number = 10;\n\n  orderBy = 'nomeMaterial';\n  orderType = 'asc';\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private localeService: BsLocaleService,\n    private atividadesService: AtividadesService,\n    private disponibilidadeMaterialService: ComercialDisponibilidadeMaterialService,\n    private titleService: TitleService,\n    private authService: AuthService,\n    private dateService: DateService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false },\n      { dateInputFormat: 'DD/MM/YYYY' }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.getFilterValues();\n    this.setFormFilter();\n    this.titleService.setTitle('Disponibilidade de material');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  getFilterValues(): void {\n    this.disponibilidadeMaterialService\n      .getFiltros()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response[0].responseCode == 200) {\n            this.depositos = response[0].result;\n\n            this.depositos.unshift({\n              idDeposito: 0,\n              nomeDeposito: 'EXIBIR TODOS'\n            });\n          }\n\n          if (response[1].responseCode == 200) {\n            this.vendedores = response[1].result;\n          }\n\n          if (\n            response[2].hasOwnProperty('success') &&\n            response[2].success === true\n          ) {\n            this.situacoes = response[2].data;\n\n            this.situacoes.unshift({\n              id: 0,\n              descricao: 'EXIBIR TODOS'\n            });\n          }\n        },\n        error: (error: any) => {\n          this.handleError('Ocorreu um erro ao carregar filtros.');\n        }\n      });\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      tipoData: [formValue.tipoData, [Validators.required]],\n      dataInicial: [formValue.dataInicial, [Validators.required]],\n      dataFinal: [formValue.dataFinal, [Validators.required]],\n      material: [formValue.material],\n      codDeposito: [formValue.codDeposito],\n      cliente: [formValue.cliente],\n      vendedor: [formValue.vendedor],\n      situacao: [formValue.situacao],\n      registros: [formValue.registros]\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      tipoData: 1,\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n      codDeposito: 0,\n      cliente: null,\n      material: null,\n      vendedor: this.authService.getCurrentUser().info.idVendedor,\n      situacao: 0,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string): string {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.setRouterParams(this.verificaParams());\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n\n      this.scrollToFilter.nativeElement.scrollIntoView({\n        behavior: 'instant'\n      });\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.tipoData) {\n      params.tipoData = this.form.value.tipoData;\n    }\n\n    if (this.form.value.dataInicial) {\n      params.dataInicial = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataInicial)\n      );\n    }\n\n    if (this.form.value.dataFinal) {\n      params.dataFinal = this.dateService.convertToUrlDate(\n        new Date(this.form.value.dataFinal)\n      );\n    }\n\n    if (this.form.value.codDeposito) {\n      params.codDeposito = this.form.value.codDeposito;\n    }\n\n    if (this.form.value.cliente) {\n      params.cliente = this.form.value.cliente;\n    }\n\n    if (this.form.value.material) {\n      params.material = this.form.value.material;\n    }\n\n    if (this.form.value.vendedor) {\n      params.vendedor = this.form.value.vendedor;\n    }\n\n    if (this.form.value.situacao) {\n      params.situacao = this.form.value.situacao;\n    }\n\n    params.orderBy = this.orderBy;\n    params.orderType = this.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.totalItems = 0;\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.disponibilidadeMaterialService\n      .getSolicitacoes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.pnotifyService.notice(response.mensagem);\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(status: string): string {\n    let borderClass: string;\n\n    if (status == 'Ativo') {\n      borderClass = 'border-success';\n    } else if (status == 'Inativo') {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onEdit(data: any) {\n    if (data.situacao == 'Ativo') {\n      this.router.navigate(['../editar', data['codigo']], {\n        relativeTo: this.activatedRoute\n      });\n    }\n  }\n\n  onCancel(disponibilidadeMaterial: DisponibilidadeMaterial) {\n    if (disponibilidadeMaterial.situacao == 'Ativo') {\n      let confirm$ = this.confirmModalService.showConfirm(\n        'delete',\n        'Confirmar cancelamento',\n        'Deseja realmente prosseguir com o cancelamento da solicitação?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n      confirm$\n        .asObservable()\n        .pipe(\n          take(1),\n          switchMap(result =>\n            result\n              ? this.disponibilidadeMaterialService.deleteSolicitacao(\n                  disponibilidadeMaterial\n                )\n              : EMPTY\n          )\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.onFilter();\n              this.pnotifyService.success(response.mensagem);\n            } else if (\n              response.hasOwnProperty('success') &&\n              response.success === false\n            ) {\n              this.pnotifyService.error(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    }\n  }\n\n  onResetForm() {\n    this.form.reset();\n\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.form.controls.codDeposito.setValue(0);\n    this.form.controls.vendedor.setValue(\n      this.authService.getCurrentUser()['info']['idVendedor']\n    );\n    this.form.controls.situacao.setValue(0);\n    this.form.controls.registros.setValue(100);\n  }\n\n  handleError(message: string = null): void {\n    this.pnotifyService.error(message);\n    this.location.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialDisponibilidadeMaterialFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialDisponibilidadeMaterialListaComponent } from './lista/lista.component';\nimport { ComercialDisponibilidadeMaterialFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'solicitacoes',\n    component: ComercialDisponibilidadeMaterialListaComponent\n  },\n  {\n    path: 'novo/:codMaterial',\n    component: ComercialDisponibilidadeMaterialFormularioComponent,\n    resolve: {\n      detalhes: ComercialDisponibilidadeMaterialFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:codigo',\n    component: ComercialDisponibilidadeMaterialFormularioComponent,\n    resolve: {\n      detalhes: ComercialDisponibilidadeMaterialFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'solicitacoes',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialDisponibilidadeMaterialRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Disponibilidade de material\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onResetForm()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\"\\n    [disabled]=\\\"!form.valid\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div #scrollToFilter>\\n    <advanced-filter>\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"tipoData\\\">Buscar por</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"tipoData\\\"\\n              formControlName=\\\"tipoData\\\"\\n              [ngClass]=\\\"onFieldError('tipoData') + ' ' + onFieldRequired('tipoData')\\\">\\n              <option value=\\\"1\\\">Data de expiração</option>\\n              <option value=\\\"2\\\">Data da solicitação</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"dataInicial\\\">Data inicial</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataInicial\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataInicial\\\"\\n              [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired('dataInicial')\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"dataFinal\\\">Data final</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataFinal\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataFinal\\\"\\n              [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired('dataFinal')\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"codDeposito\\\">Depósito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"depositos\\\"\\n              formControlName=\\\"codDeposito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codDeposito\\\"\\n              bindLabel=\\\"nomeDeposito\\\"\\n              bindValue=\\\"idDeposito\\\"\\n              [ngClass]=\\\"onFieldError('codDeposito') + ' ' + onFieldRequired('codDeposito')\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n            <label for=\\\"cliente\\\">Cliente</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cliente\\\"\\n              formControlName=\\\"cliente\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3 mb-lg-0\\\">\\n            <label for=\\\"material\\\">Material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"material\\\"\\n              (keydown.enter)=\\\"onFilter()\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-3\\\">\\n            <label for=\\\"vendedor\\\">Vendedor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"vendedores\\\"\\n              formControlName=\\\"vendedor\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"vendedor\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              [ngClass]=\\\"onFieldError('vendedor') + ' ' + onFieldRequired('vendedor')\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-2 mb-lg-0\\\">\\n            <label for=\\\"situacao\\\">Situação</label>\\n            <ng-select\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"situacoes\\\"\\n              formControlName=\\\"situacao\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"situacao\\\"\\n              bindLabel=\\\"descricao\\\"\\n              bindValue=\\\"id\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-lg-1 mb-lg-0\\\">\\n            <label for=\\\"registros\\\">Registros</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"registros\\\"\\n              formControlName=\\\"registros\\\">\\n              <option>25</option>\\n              <option>50</option>\\n              <option>75</option>\\n              <option>100</option>\\n            </select>\\n          </div>\\n        </div>\\n      </form>\\n    </advanced-filter>\\n    <subtitles\\n      [data]=\\\"subtitles\\\"\\n      [show]=\\\"dados.length > 0 && !dadosEmpty\\\">\\n    </subtitles>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\"></th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\n                <thead-sorter\\n                  value=\\\"Cód. material\\\"\\n                  [active]=\\\"orderBy == 'codMaterial'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('codMaterial')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\">\\n                <thead-sorter\\n                  value=\\\"Material\\\"\\n                  [active]=\\\"orderBy == 'nomeMaterial'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('nomeMaterial')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\">\\n                <thead-sorter\\n                  value=\\\"Cliente\\\"\\n                  [active]=\\\"orderBy == 'nomeCliente'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('nomeCliente')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Aceitável</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Ideal</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\n                <thead-sorter\\n                  value=\\\"Data inicial\\\"\\n                  [active]=\\\"orderBy == 'dataInicialParametrizacao'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('dataInicialParametrizacao')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">\\n                <thead-sorter\\n                  value=\\\"Data limite\\\"\\n                  [active]=\\\"orderBy == 'dataFinalParametrizacao'\\\"\\n                  [sort]=\\\"orderType\\\"\\n                  (click)=\\\"setOrderBy('dataFinalParametrizacao')\\\">\\n                </thead-sorter>\\n              </th>\\n              <th scope=\\\"col\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of dadosPagination\\\">\\n              <td class=\\\"text-center\\\" [ngClass]=\\\"classStatusBorder(item.situacao)\\\">\\n                <i class=\\\"text-warning fas fa-envelope\\\" *ngIf=\\\"item.codEmailEnviado == 1\\\" tooltip=\\\"E-mail enviado\\\" placement=\\\"right\\\"></i>\\n                <i class=\\\"text-black-50 far fa-envelope\\\" *ngIf=\\\"item.codEmailEnviado == 2\\\" tooltip=\\\"E-mail não enviado\\\" placement=\\\"right\\\"></i>\\n              </td>\\n              <td class=\\\"text-center\\\">{{ item.codMaterial }}</td>\\n              <td>{{ item.nomeMaterial }}</td>\\n              <td>{{ item.razaoSocial }}</td>\\n              <td class=\\\"text-center\\\">{{ item.qtdeMinima | number:'1.3-3' }} {{ item.unidadeMedida }}</td>\\n              <td class=\\\"text-center\\\">{{ item.qtdeMaxima | number:'1.3-3' }} {{ item.unidadeMedida }}</td>\\n              <td class=\\\"text-center\\\">{{ item.dataInicialParametrizacao | date: 'dd/MM/yyyy' }}</td>\\n              <td class=\\\"text-center\\\">{{ item.dataFinalParametrizacao | date: 'dd/MM/yyyy' }}</td>\\n              <td class=\\\"text-center\\\">\\n                <div *ngIf=\\\"item.situacao == 'Ativo'\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    (click)=\\\"onEdit(item)\\\"\\n                    tooltip=\\\"Editar\\\"\\n                    placement=\\\"left\\\"\\n                    container=\\\"body\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm ml-3\\\"\\n                    (click)=\\\"onCancel(item)\\\"\\n                    tooltip=\\\"Cancelar\\\"\\n                    placement=\\\"left\\\"\\n                    container=\\\"body\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n        <empty-result message=\\\"Nenhuma informação encontrada\\\" class=\\\"mt-2\\\" *ngIf=\\\"dadosEmpty\\\"></empty-result>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\nimport { GenericService } from 'src/app/shared/services/requests/generic.service';\nimport { ComercialVendedoresService } from '../services/vendedores.service';\nimport { DisponibilidadeMaterial } from './models/disponibilidade-material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialDisponibilidadeMaterialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/disponibilidade-material`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n    private vendedoresService: ComercialVendedoresService,\n    private genericService: GenericService\n  ) {}\n\n  getFiltros() {\n    const depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\n    const vendedores = this.vendedoresService.getVendedores();\n    const situacoes = this.genericService.getSituacoes();\n\n    return forkJoin([depositos, vendedores, situacoes]).pipe(take(1));\n  }\n\n  getSolicitacoes(params: any) {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/solicitacoes`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getSolicitacao(id: number) {\n    return this.http.get(`${this.API}/solicitacao/${id}`).pipe(take(1));\n  }\n\n  private saveSolicitacao(record: any) {\n    return this.http\n      .post(`${this.API}/solicitacao/salvar`, record)\n      .pipe(take(1));\n  }\n\n  private updateSolicitacao(record: any) {\n    return this.http\n      .put(`${this.API}/solicitacao/atualizar`, record)\n      .pipe(take(1));\n  }\n\n  save(action: string, record: any) {\n    if (action == 'editar') {\n      return this.updateSolicitacao(record);\n    }\n\n    return this.saveSolicitacao(record);\n  }\n\n  deleteSolicitacao(disponibilidadeMaterial: DisponibilidadeMaterial) {\n    return this.http\n      .delete(\n        `${this.API}/solicitacao/excluir/${disponibilidadeMaterial.codigo}`\n      )\n      .pipe(take(1));\n  }\n}\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\n\nregisterLocaleData(localePt, 'pt-BR');\n\n// ngx-bootstrap\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialDisponibilidadeMaterialRoutingModule } from './disponibilidade-material-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialDisponibilidadeMaterialListaComponent } from './lista/lista.component';\nimport { ComercialDisponibilidadeMaterialFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialDisponibilidadeMaterialListaComponent,\n    ComercialDisponibilidadeMaterialFormularioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    CurrencyMaskModule,\n    ComercialDisponibilidadeMaterialRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService, { provide: LOCALE_ID, useValue: 'pt-BR' }]\n})\nexport class ComercialDisponibilidadeMaterialModule {}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle()\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"submittingForm || !form.valid\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div *ngIf=\\\"material.descricao.length > 0\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col mb-0\\\">\\n              <div class=\\\"mtc-title text-center mb-0\\\">{{ material.descricao }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\"><hr></div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codMaterial\\\">Código do material</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"codMaterial\\\"\\n              formControlName=\\\"codMaterial\\\"\\n              (input)=\\\"onInput()\\\"\\n              currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '', decimal: '', precision: 0 }\\\"\\n              [ngClass]=\\\"onFieldError('codMaterial') + ' ' + onFieldRequired('codMaterial')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código do material é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codUsuarioRequisicao\\\">Vendedor</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"vendedores\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codUsuarioRequisicao\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              formControlName=\\\"codUsuarioRequisicao\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codUsuarioRequisicao') + ' ' + onFieldRequired('codUsuarioRequisicao')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codUsuarioRequisicao')\\\" message=\\\"Vendedor é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codEmpresa\\\">Empresa</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"empresas\\\"\\n              formControlName=\\\"codEmpresa\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codEmpresa\\\"\\n              bindLabel=\\\"nomeEmpresa\\\"\\n              bindValue=\\\"idEmpresa\\\"\\n              (change)=\\\"onInput() + ' ' + onChangeEmpresa($event.idEmpresa)\\\"\\n              [ngClass]=\\\"onFieldError('codEmpresa') + ' ' + onFieldRequired('codEmpresa')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEmpresa')\\\" message=\\\"Empresa é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codDeposito\\\">Depósito</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"filteredDepositos\\\"\\n              formControlName=\\\"codDeposito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codDeposito\\\"\\n              bindLabel=\\\"nomeDeposito\\\"\\n              bindValue=\\\"idDeposito\\\"\\n              (change)=\\\"onInput() + ' ' + onChangeDeposito($event)\\\"\\n              [ngClass]=\\\"onFieldError('codDeposito') + ' ' + onFieldRequired('codDeposito')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codDeposito')\\\" message=\\\"Depósito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"codCliente\\\">Cliente</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"clientes\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"codCliente\\\"\\n              bindLabel=\\\"codRazaoSocial\\\"\\n              bindValue=\\\"codCliente\\\"\\n              formControlName=\\\"codCliente\\\"\\n              (change)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('codCliente') + ' ' + onFieldRequired('codCliente')\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codCliente')\\\" message=\\\"Cliente é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"qtdeMinima\\\">Quantidade mínima</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"qtdeMinima\\\"\\n              formControlName=\\\"qtdeMinima\\\"\\n              (input)=\\\"onInput()\\\"\\n              currencyMask [options]=\\\"currencyMaskOptions\\\"\\n              [ngClass]=\\\"onFieldError('qtdeMinima') + ' ' + onFieldRequired('qtdeMinima')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeMinima')\\\" message=\\\"Quantidade aceitável é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"qtdeMaxima\\\">Quantidade ideal</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"qtdeMaxima\\\"\\n              formControlName=\\\"qtdeMaxima\\\"\\n              (input)=\\\"onInput()\\\"\\n              currencyMask [options]=\\\"currencyMaskOptions\\\"\\n              [ngClass]=\\\"onFieldError('qtdeMaxima') + ' ' + onFieldRequired('qtdeMaxima')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('qtdeMaxima')\\\" message=\\\"Quantidade ideal é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"dataInicialParametrizacao\\\">Data inicial</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataInicialParametrizacao\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataInicialParametrizacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('dataInicialParametrizacao') + ' ' + onFieldRequired('dataInicialParametrizacao')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataInicialParametrizacao')\\\" message=\\\"Data inicial é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"dataFinalParametrizacao\\\">Data limite (expiração)</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataFinalParametrizacao\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"dataFinalParametrizacao\\\"\\n              (input)=\\\"onInput()\\\"\\n              [ngClass]=\\\"onFieldError('dataFinalParametrizacao') + ' ' + onFieldRequired('dataFinalParametrizacao')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('dataFinalParametrizacao')\\\" message=\\\"Data limite é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2Rpc3BvbmliaWxpZGFkZS1tYXRlcmlhbC9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";"]}