{"version":3,"sources":["webpack:///src/app/modules/comercial/comercial.service.ts","webpack:///src/app/modules/comercial/estoque/estoque.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/cotacoes/cotacoes.service.ts"],"names":["ComercialService","http","API","params","httpParams","param","append","get","pipe","providedIn","ComercialEstoqueService","comercialService","tidSoftwareService","empresas","getEmpresas","depositos","getDepositos","grupoManetoni","linhas","getLinhas","classes","getClasses","id","idMaterial","idEmpresa","ComercialCicloVendasCotacoesService","estoqueService","codEmpresa","nrPedido","post","codCotacao","getEstoqueAtual","codDeposito","codMaterial","codCliente","codEndereco","codFormaPagamento","freteConta","put"],"mappings":"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","file":"default~agenda-agenda-module~cotacoes-cotacoes-module~liberacoes-liberacoes-module~pedidos-producao-~1dbf20ef-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialEstoqueService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/estoque`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) {}\r\n\r\n  getFiltros(): Observable<Object | JsonResponse> {\r\n    let empresas = this.tidSoftwareService.getEmpresas('estoques');\r\n    let depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n    let linhas = this.tidSoftwareService.getLinhas();\r\n    let classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([empresas, depositos, linhas, classes]).pipe(\r\n      take(1),\r\n      retry(2)\r\n    );\r\n  }\r\n\r\n  getEstoqueAtual(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/estoque-atual`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getOutrasUnidades(id: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/outras-unidades/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPedidosCompra(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/pedidos-compra/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-comprometido/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLote(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/lote/${params.idMaterial}/${params.idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEstoqueSuspenso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-suspenso/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../tid-software/tid-software.service';\r\nimport { ComercialEstoqueService } from '../../estoque/estoque.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasCotacoesService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/ciclo-vendas/cotacoes`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService,\r\n    private estoqueService: ComercialEstoqueService\r\n  ) {}\r\n\r\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/permissoes-acesso`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacoes(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesCotacoes(\r\n    codEmpresa: number,\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codEmpresa}/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesPedidos(\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriaisCotacao(\r\n    codEmpresa: number,\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/materiais/detalhes/${codEmpresa}/${nrPedido}`)\r\n\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSituacaoLiberacao(params: any ): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/situacao-liberacao`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postTransfereFaturamento(params: any ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/transfere-faturamento`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  postTrocarCliente(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/trocar/cliente`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postDuplicarProposta(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicar-proposta`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postDesdobrarProposta(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/desdobrar-proposta`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postTrocarEmpresa(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/trocar/empresa`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getImprimirCotacao(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/imprimir-cotacao/${nrPedido}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getImprimirSeparacao(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/imprimir-separacao/${nrPedido}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postEmailCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/email-cotacao`, params)\r\n      .pipe(take(1)\r\n      // ,\r\n      // retry(2)\r\n      );\r\n  }\r\n\r\n  getReservarIdCotacao(params?): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/reservar`,{\r\n      params: params\r\n    }).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacao(\r\n    codCotacao: number,\r\n    idEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/${codCotacao}/${idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacaoFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n\r\n  getMateriais(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEstoqueDetalhes(params: any): Observable<Object | JsonResponse> {\r\n    return this.estoqueService.getEstoqueAtual(params);\r\n  }\r\n\r\n  getEstoqueDepositos(\r\n    codDeposito: number,\r\n    codMaterial: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiais/estoque-depositos/${codMaterial}/${codDeposito}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriaisCombo(\r\n    codEmpresa: number,\r\n    codMaterial: number,\r\n    codCliente,\r\n    codEndereco,\r\n    codFormaPagamento,\r\n    freteConta\r\n    ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/materiais/combo/${codEmpresa}/${codMaterial}`,{\r\n        params:{\r\n          codCliente:codCliente,\r\n          codEndereco: codEndereco,\r\n          codFormaPagamento: codFormaPagamento,\r\n          freteConta: freteConta\r\n        }\r\n\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postVendasGerais(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados/vendas`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postVendasCliente(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados/cliente`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postMateriaisRelacionados(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getFichaCadastralMaterial(\r\n    codMaterial: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/ficha-cadastral/${codMaterial}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSimilaridadeMaterial(\r\n    codEmpresa: number,\r\n    codMaterial: number,\r\n    codCliente,\r\n    codEndereco,\r\n    codFormaPagamento,\r\n    freteConta\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/similaridade/${codEmpresa}/${codMaterial}`,\r\n      {\r\n        params:{\r\n          codEndereco:codEndereco,\r\n          codCliente:codCliente,\r\n          codFormaPagamento:codFormaPagamento,\r\n          freteConta: freteConta\r\n        }\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTipoCalculoMaterial(\r\n    codMaterial: number,\r\n    codFormaPagamento\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/tipo-calculo/${codMaterial}`,{\r\n        params: {\r\n          codFormaPagamento:codFormaPagamento\r\n        }\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCalculoMaterial(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/material/calculo`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getHistoricoCompras(params: any ): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/historico-compras`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicatas/gerar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postAlterarDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicatas/alterar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDuplicatas (params: any ): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/duplicatas/consulta`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMaterialCotacao(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .delete(`${this.API}/materiais/excluir`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getHistoricoExclusao(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/historico-exclusao`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, params).pipe(take(1), retry(2));\r\n  }\r\n\r\n  putCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.put(`${this.API}/atualizar`, params).pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCotacaoPerdida(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/perdida/salvar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getComissaoCotacao(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/comissao/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getProgressoCotacao(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/progresso/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidadeDuplicata(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/validade-duplicata/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLoteMaterial(\r\n    codMaterial: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/lote/${codMaterial}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n}\r\n"]}