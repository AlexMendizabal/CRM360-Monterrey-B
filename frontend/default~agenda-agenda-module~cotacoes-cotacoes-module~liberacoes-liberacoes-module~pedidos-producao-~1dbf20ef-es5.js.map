{"version":3,"sources":["webpack:///src/app/modules/comercial/estoque/estoque.service.ts","webpack:///src/app/modules/comercial/ciclo-vendas/cotacoes/cotacoes.service.ts"],"names":["ComercialEstoqueService","http","comercialService","tidSoftwareService","API","almacenes","getAlmacen","classes","getClasses","depositos","getDepositos","grupoManetoni","sucursales","getEscritorios","empresas","getEmpresas","linhas","getLinhas","pipe","params","httpParams","param","append","get","id","idMaterial","idEmpresa","providedIn","ComercialCicloVendasCotacoesService","estoqueService","API2","codEmpresa","nrPedido","post","codCotacao","getEstoqueAtual","codDeposito","codMaterial","codCliente","codEndereco","codFormaPagamento","freteConta","console","log","put","data"],"mappings":"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","file":"default~agenda-agenda-module~cotacoes-cotacoes-module~liberacoes-liberacoes-module~pedidos-producao-~1dbf20ef-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../tid-software/tid-software.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialEstoqueService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/estoque`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService\r\n  ) { }\r\n\r\n  getFiltros(): Observable<Object | JsonResponse> {\r\n    /* Almacen */\r\n    let almacenes = this.comercialService.getAlmacen();\r\n    /* Familia */\r\n    let classes = this.comercialService.getClasses(null);\r\n    let depositos = this.comercialService.getDepositos({ grupoManetoni: 1 });\r\n\r\n    let sucursales = this.comercialService.getEscritorios();\r\n    let empresas = this.tidSoftwareService.getEmpresas('estoques');\r\n    let linhas = this.tidSoftwareService.getLinhas();\r\n\r\n\r\n    return forkJoin([almacenes, classes, depositos, sucursales, empresas, linhas]).pipe(\r\n      take(1),\r\n      retry(2)\r\n    );\r\n  }\r\n\r\n  getEstoqueAtual(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/estoque-atual`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getOutrasUnidades(id: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/outras-unidades/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getPedidosCompra(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/pedidos-compra/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-comprometido/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLote(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/lote/${params.idMaterial}/${params.idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  getEstoqueSuspenso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoque-suspenso/${params.idMaterial}/${params.idEmpresa}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getStockComprometido(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquecomprometido/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getStockSuspeso(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquesuspenso/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getStockAlmacenes(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/estoquealmacen/${params.idMaterial}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Services\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { ComercialTidSoftwareService } from '../../tid-software/tid-software.service';\r\nimport { ComercialEstoqueService } from '../../estoque/estoque.service';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCicloVendasCotacoesService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/ciclo-vendas/cotacoes`;\r\n  private readonly API2 = `http://23.254.204.187/api/comercial/ciclo-vendas/autorizaciones`;\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService,\r\n    private tidSoftwareService: ComercialTidSoftwareService,\r\n    private estoqueService: ComercialEstoqueService\r\n  ) { }\r\n\r\n  getIdOferta(){\r\n    return this.http\r\n      .get(`${this.API}/oferta_id`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPermissoesAcesso(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/permissoes-acesso`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacoes(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n    getOfertas(params: any): Observable<Object | JsonResponse> {\r\n      let httpParams = new HttpParams();\r\n      return this.http\r\n        .get(`${this.API}/lista_cotizacion`, {\r\n          params: params,\r\n        })\r\n        .pipe(take(1), retry(2));\r\n    }\r\n\r\n\r\n  getDetalleOferta(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n    return this.http\r\n      .get(`${this.API}/oferta_detalle`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesCotacoes(\r\n    codEmpresa: number,\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codEmpresa}/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhesPedidos(\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriaisCotacao(\r\n    codEmpresa: number,\r\n    nrPedido: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/materiais/detalhes/${codEmpresa}/${nrPedido}`)\r\n\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSituacaoLiberacao(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/situacao-liberacao`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postTransfereFaturamento(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/transfere-faturamento`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  postTrocarCliente(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/trocar/cliente`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postDuplicarProposta(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicar-proposta`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postDesdobrarProposta(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/desdobrar-proposta`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postTrocarEmpresa(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/trocar/empresa`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getImprimirCotacao(nrPedido: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/imprimir-cotacao/${nrPedido}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getImprimirSeparacao(nrPedido: number, codEmpresa: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/imprimir-separacao/${nrPedido}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postEmailCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/email-cotacao`, params)\r\n      .pipe(take(1)\r\n        // ,\r\n        // retry(2)\r\n      );\r\n  }\r\n\r\n  getReservarIdCotacao(params?): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/reservar`, {\r\n      params: params\r\n    }).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacao(\r\n    codCotacao: number,\r\n    idEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/${codCotacao}/${idEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCotacaoFilterValues(): Observable<Object | JsonResponse> {\r\n    const linhas = this.tidSoftwareService.getLinhas();\r\n    const classes = this.comercialService.getClasses(null);\r\n\r\n    return forkJoin([linhas, classes]);\r\n  }\r\n\r\n  getMateriais(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEstoqueDetalhes(params: any): Observable<Object | JsonResponse> {\r\n    return this.estoqueService.getEstoqueAtual(params);\r\n  }\r\n\r\n  getEstoqueDepositos(\r\n    codDeposito: number,\r\n    codMaterial: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiais/estoque-depositos/${codMaterial}/${codDeposito}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  descuentoCliente(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/descuento_cliente`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMateriaisCombo(\r\n    codEmpresa: number,\r\n    codMaterial: number,\r\n    codCliente,\r\n    codEndereco,\r\n    codFormaPagamento,\r\n    freteConta\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/materiais/combo/${codEmpresa}/${codMaterial}`, {\r\n        params: {\r\n          codCliente: codCliente,\r\n          codEndereco: codEndereco,\r\n          codFormaPagamento: codFormaPagamento,\r\n          freteConta: freteConta\r\n        }\r\n\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postVendasGerais(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados/vendas`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postVendasCliente(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados/cliente`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postMateriaisRelacionados(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/materiais/relacionados`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postMaterialesRelacionados(params: any): Observable<Object | JsonResponse> {\r\n    console.log(params)\r\n    return this.http\r\n    .post(`${this.API}/materiales/relacionados`, params)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getFichaCadastralMaterial(\r\n    codMaterial: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/ficha-cadastral/${codMaterial}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSimilaridadeMaterial(\r\n    codEmpresa: number,\r\n    codMaterial: number,\r\n    codCliente,\r\n    codEndereco,\r\n    codFormaPagamento,\r\n    freteConta\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/similaridade/${codEmpresa}/${codMaterial}`,\r\n        {\r\n          params: {\r\n            codEndereco: codEndereco,\r\n            codCliente: codCliente,\r\n            codFormaPagamento: codFormaPagamento,\r\n            freteConta: freteConta\r\n          }\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTipoCalculoMaterial(\r\n    codMaterial: number,\r\n    codFormaPagamento\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/tipo-calculo/${codMaterial}`, {\r\n        params: {\r\n          codFormaPagamento: codFormaPagamento\r\n        }\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCalculoMaterial(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/material/calculo`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getHistoricoCompras(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/historico-compras`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicatas/gerar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postAlterarDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/duplicatas/alterar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDuplicatas(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/duplicatas/consulta`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteMaterialCotacao(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .delete(`${this.API}/materiais/excluir`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getHistoricoExclusao(params: any): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/historico-exclusao`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, params).pipe(take(1), retry(2));\r\n  }\r\n  postCotizacion(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/guardar`, params).pipe(take(1), retry(2));\r\n  }\r\n\r\n  putCotacao(params: any): Observable<Object | JsonResponse> {\r\n    return this.http.put(`${this.API}/atualizar`, params).pipe(take(1), retry(2));\r\n  }\r\n\r\n  postCotacaoPerdida(params: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/perdida/salvar`, params)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getComissaoCotacao(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/comissao/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getProgressoCotacao(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/progresso/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidadeDuplicata(\r\n    codCotacao: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/validade-duplicata/${codCotacao}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLoteMaterial(\r\n    codMaterial: number,\r\n    codEmpresa: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/material/lote/${codMaterial}/${codEmpresa}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n  autorizaciones(data: any): Observable<Object>{\r\n    return this.http\r\n      .post(`${this.API2}/registrar`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCierreOferta()\r\n  {\r\n    return this.http\r\n    .get(`${this.API}/cierre`)\r\n    .pipe(take(1), retry(2));\r\n  }\r\n\r\n  finalizarOferta(data: any): Observable<Object>{\r\n    return this.http\r\n      .post(`${this.API}/post_cierre`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"]}