{"version":3,"sources":["./src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.html","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.ts","./src/app/modules/comercial/gestao/tabela-precos/tabela-precos.module.ts","./src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.ts","./src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.scss","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/gestao/tabela-precos/tabela-precos.service.ts","./src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.ts","./src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.ts","./src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.html","./src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.scss","./src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.scss","./src/app/modules/comercial/gestao/tabela-precos/tabela-precos-routing.module.ts","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.scss","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.html","./src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.scss","./src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.html","./src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.html","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":"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","file":"tabela-precos-tabela-precos-module-es2015.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\n  <h4>Dados da tabela</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <message\\n    *ngIf=\\\"loading\\\"\\n    icon=\\\"fas fa-cog fa-spin\\\"\\n    text=\\\"Carregando dados da tabela...\\\"\\n  >\\n  </message>\\n  <div *ngIf=\\\"!loading\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-12\\\">\\n          <label for=\\\"nomePreco\\\">Descrição da Tabela</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"nomePreco\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"nomePreco\\\"\\n            [ngClass]=\\\"onFieldError('nomePreco') + ' ' + onFieldRequired('nomePreco')\\\">\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nomePreco')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"dataInicialVigencia\\\">Data Inicio Vigência</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicialVigencia\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"dataInicialVigencia\\\"\\n            bsDatepicker\\n            [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\n        </div>\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"dataFinalVigencia\\\">Data Fim Vigência</label>\\n          <input\\n          class=\\\"form-control\\\"\\n          id=\\\"dataFinalVigencia\\\"\\n          type=\\\"text\\\"\\n          formControlName=\\\"dataFinalVigencia\\\"\\n          bsDatepicker\\n          [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6\\\">\\n          <label for=\\\"percentualAcrescimo\\\">Percentual Acréscimo</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0,00%\\\"\\n            currencyMask\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\n            formControlName=\\\"percentualAcrescimo\\\"\\n            (ngModelChange)=\\\"onDesativarDesconto()\\\"\\n          >\\n        </div>\\n        <div class=\\\"form-group col-6\\\">\\n          <label for=\\\"percentualDesconto\\\">Percentual Desconto</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"0,00%\\\"\\n            currencyMask\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\n            formControlName=\\\"percentualDesconto\\\"\\n            (ngModelChange)=\\\"onDesativarAcrescimo()\\\"\\n          >\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\\"d-flex justify-content-between align-items-center\\\">\\n      <div>\\n        <message\\n          *ngIf=\\\"saving\\\"\\n          icon=\\\"fas fa-cog fa-spin\\\"\\n          text=\\\"Criando a tabela de preço...\\\"\\n        >\\n        </message>\\n      </div>\\n    <button \\n    class=\\\"btn btn-outline-dark\\\" \\n    (click)=\\\"saveTabelaPrecos(getParams())\\\"\\n    >Cadastrar\\n    </button>\\n\\n    </div>\\n  </div>\\n</div>\\n\";","import { ComercialGestaoTabelaPrecosService } from './../tabela-precos.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { JsonResponse } from './../../../../../models/json-response';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Component, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  FormArray,\n  Validators,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\n// Interfaces\nimport { assocTabela, precos } from './../models/tabela-precos';\n\n// Services\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n@Component({\n  selector: 'comercial-gestao-tabela-precos-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialGestaoTabelaPrecosFormularioComponent implements OnInit {\n  public MASKS = MASKS;\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n\n  appTitle: string;\n  action: string;\n\n  modalValues: assocTabela[] = [];\n  valorMaterialAlterado: number;\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  form: FormGroup;\n  formFilter: FormGroup;\n  formPrecos: FormGroup;\n\n  formChanged = false;\n  submittingForm = false;\n  submitAssocGrupo = false;\n  submittingFormPrecos = false;\n  enableEditIndex: number;\n\n  formPrecosIndex: number = null;\n\n  dados: Array<any> = [];\n  precosEstado: Array<precos> = [];\n  assocPrecos: Array<precos> = [];\n  unidades: Array<any> = [];\n  editMode: boolean = false;\n  codPreco: number;\n  codGrupo: number;\n  grupoNome: string;\n  estados: [];\n  materiaisAssoc: Array<any>;\n  materiaisAssoc2: Array<any>;\n  selection: Array<any>;\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  toggleAll = false;\n  searching = false;\n  firstSearch = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  showGrupos = true;\n  showMaterial = false;\n\n  modalRef: BsModalRef;\n\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n\n  limparGrupoPrincipal: boolean;\n\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigPrecos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private dateService: DateService,\n    private localeService: BsLocaleService,\n    private bsModalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private confirmModalService: ConfirmModalService,\n    private estadosService: EstadosService,\n    private location: Location,\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\n    private router: Router\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n    this.setFormFilter();\n    this.setFormPrecos();\n    this.setBreadCrumb();\n    this.getUnidades();\n    this.estados = this.estadosService.getEstados();\n  }\n\n  // customSearchFn(term: string, item: any) {\n  //   term = term.toUpperCase();\n  //   item.nomeMaterial = item.nomeMaterial.toUpperCase();\n  //   if(item.nomeMaterial.startsWith(term)) {\n  //     return item.nomeMaterial.indexOf(term) > -1;\n  //   }\n  // }\n\n  changeFn(val) {\n\n    this.materiaisAssoc.forEach(element => {\n      if (element['codMaterial'] == val) {\n        this.showMaterial = true;\n        this.materiaisAssoc2 = [element];\n\n      }\n    });\n  }\n\n  enableEdition(i, item) {\n    this.editMode = true;\n    this.enableEditIndex = i;\n    this.valorMaterialAlterado = item.valorMaterial;\n\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar tabela de preços';\n        this.action = 'update';\n        this.submittingForm = true;\n        this.submitAssocGrupo = true;\n      } else {\n        this.appTitle = 'Nova tabela de preços';\n        this.action = 'create';\n      }\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Tabela de Preços',\n          routerLink: `/comercial/gestao/${params.idSubModulo}/tabela-precos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  // Formulário Preenchido para edição ou novo formulário\n  setFormBuilder() {\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\n\n    if (resolver) {\n      const detalhes: any = resolver.data;\n\n      this.form = this.formBuilder.group({\n        codPreco: [detalhes.codPreco],\n        nomePreco: [detalhes.nomePreco, [Validators.required]],\n        /* codSituacao: [detalhes.codSituacao], */\n\n        dataInicialVigencia: detalhes.dataInicialVigencia\n          ? [\n            this.dateService.convertStringToDate(\n              detalhes.dataInicialVigencia,\n              'usa'\n            ),\n            [Validators.required],\n          ]\n          : [this.dateService.getToday(), [Validators.required]],\n\n        dataFinalVigencia: detalhes.dataFinalVigencia\n          ? [\n            this.dateService.convertStringToDate(\n              detalhes.dataFinalVigencia,\n              'usa'\n            ),\n          ]\n          : '',\n\n        faixaDescontoComercial: detalhes.faixaDescontoComercial\n          ? [detalhes.faixaDescontoComercial]\n          : 0,\n\n        faixaDescontoGerencial: detalhes.faixaDescontoGerencial\n          ? [detalhes.faixaDescontoGerencial]\n          : 0,\n\n        assocGrupos: this.formBuilder.array([]),\n      });\n      this.loaderFullScreen = false;\n      this.setGrupos(detalhes.assocGrupos);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n      this.loaderFullScreen = false;\n\n      this.form.get('dataInicialVigencia').setValue(null);\n      this.form.get('dataFinalVigencia').setValue(null);\n    }\n  }\n\n  setFormFilter() {\n    this.formFilter = this.formBuilder.group({\n      grupo: '',\n      situacao: '',\n    });\n  }\n\n  setFormPrecos() {\n    this.formPrecos = this.formBuilder.group({\n      codAssociacao: [null],\n      codEmpresa: [null],\n      nomeEmpresa: [null],\n      ufDestino: [null],\n      valorMaterial: [null],\n      percentual: [null]\n    });\n  }\n\n\n  onSubmitPrecos() {\n    this.tabelaPrecosService\n      .savePreco(this.formPrecos.getRawValue())\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.submittingForm = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.hasOwnProperty('success') && response.success === true) {\n          this.formPrecos.reset();\n          this.pnotifyService.success(response.mensagem);\n\n          this.activatedRoute.params.subscribe((params: any) => {\n            let navigateTo: string;\n\n            if (params.hasOwnProperty('id')) {\n              navigateTo = '../../lista';\n            } else {\n              navigateTo = '../lista';\n            }\n\n            this.router.navigate([navigateTo], {\n              relativeTo: this.activatedRoute,\n            });\n          });\n        } else if (\n          response.hasOwnProperty('success') &&\n          response.success === false\n        ) {\n          this.pnotifyService.error(response.mensagem);\n        } else {\n          this.pnotifyService.error();\n        }\n      });\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  // Ação de Edição ou novo Formulário\n  onSubmit(): void {\n\n    // if (this.action === 'update' && this.form.pristine) {\n    //   this.location.back();\n    // } else {\n    if (this.checkFormValidation() && this.form.valid) {\n      if (this.form.value.assocGrupos.length > 0) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n        this.tabelaPrecosService\n          .saveTabelaPrecos(this.form.value, this.action)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  let navigateTo: string;\n\n                  if (params.hasOwnProperty('id')) {\n                    navigateTo = '../../lista';\n                  } else {\n                    navigateTo = '../lista';\n                  }\n\n                  this.router.navigate([navigateTo], {\n                    relativeTo: this.activatedRoute,\n                  });\n                });\n              } else if (\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.error(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      } else {\n        this.pnotifyService.notice('Associe pelo menos um material.');\n      }\n    } else {\n      this.pnotifyService.notice('Selecione um material.');\n    }\n    // }\n  }\n\n  checkFormValidation(): boolean {\n    let isValid = true;\n    if (this.form.getRawValue().id === null) {\n      isValid = false;\n    }\n    return isValid;\n  }\n\n  openModalPercent(template: TemplateRef<any>, index, item: any) {\n    this.codGrupo = item.value.codGrupo;\n    this.grupoNome = item.value.nomeGrupo;\n    this.searchValoresGrupo(index);\n    this.modalRef = this.bsModalService.show(template, index);\n\n  }\n\n  openModalMateriais(template: TemplateRef<any>, i: number, item: any) {\n    this.showMaterial = false;\n    this.loaderNavbar = true;\n    const params = {\n      codGrupo: item.value.codGrupo,\n    };\n    this.tabelaPrecosService\n      .getDetailPanel(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.materiaisAssoc = response.data;\n            this.modalRef = this.bsModalService.show(template, item);\n\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  openModal(template: TemplateRef<any>, index, item) {\n    this.submittingFormPrecos = false;\n    this.formPrecosIndex = null;\n    this.codPreco = null;\n    this.codGrupo = null;\n    this.grupoNome = null;\n\n    this.codPreco = this.form.value.codPreco;\n    this.codGrupo = item.value.codGrupo;\n    this.grupoNome = item.value.nomeGrupo;\n    this.searchValoresGrupo(index);\n    this.modalRef = this.bsModalService.show(template, index);\n  }\n\n\n  onUpdatePercentagem(percent) {\n    percent = percent.split('%');\n    this.confirmAdd().subscribe((response: boolean) => {\n      if (response == true) {\n        this.precosEstado.forEach(element => {\n          element.valorMaterial = element.valorMaterial + element.valorMaterial * (parseFloat(percent[0]) / 100);\n        });\n      }\n    });\n  }\n\n  onUpdateValor(item, index, valorMaterialAlterado) {\n\n    item.valorMaterial = valorMaterialAlterado;\n    let j;\n    let i;\n    for (i = 0; i < this.form.value.assocGrupos.length; i++) {\n      j = 0;\n      this.form.value.assocGrupos[i].precos.forEach(element => {\n        if (item.codAssociacao == element.codAssociacao) {\n          this.form.value.assocGrupos[i].precos[j].valorMaterial = item.valorMaterial;\n        }\n        j++;\n      });\n    }\n  }\n\n  searchValoresGrupo(index) {\n    const valores = this.form.value.assocGrupos[index].precos;\n    this.formPrecosIndex = index;\n\n    this.precosEstado = [];\n    if (valores.length > 0) {\n      valores.forEach((element) => {\n        this.onAddPreco(element, false, 'application');\n      });\n    }\n  }\n\n  // Ações do Grupo de Materiais (ESQUERDA TELA)\n  setGrupos(grupos: assocTabela[]): void {\n    if (grupos.length > 0) {\n      for (let i = 0; i < grupos.length; i++) {\n        this.onAddGrupo(grupos[i], false, 'application');\n      }\n    }\n  }\n\n  get assocGrupos(): FormArray {\n    return this.form.get('assocGrupos') as FormArray;\n  }\n\n  /**\n   * @source = 'application' || 'user'\n   */\n  onAddGrupo(\n    grupo: assocTabela,\n    manipulateForm: boolean,\n    source: string\n  ): void {\n    if (this.checkGrupoExists(grupo) === false) {\n      this.assocGrupos.push(\n        this.formBuilder.group({\n          codGrupo: [grupo.codGrupo],\n          nomeGrupo: [grupo.nomeGrupo],\n          precos:\n            grupo.precos && grupo.precos.length > 0\n              ? [grupo.precos]\n              : this.formBuilder.array([]),\n          source: [source],\n        })\n      );\n\n      if (this.form.value.assocGrupos.length > 9) {\n        ('');\n        if (this.tableConfigAssocGrupos.fixedHeader === false) {\n          this.showGrupos = false;\n          this.tableConfigAssocGrupos.fixedHeader = true;\n\n          setTimeout(() => {\n            this.showGrupos = true;\n          }, 1);\n        }\n      }\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    }\n  }\n\n  checkGrupoExists(grupo: assocTabela): boolean {\n    return this.form.value.assocGrupos.some((el: any) => {\n      return el.codGrupo === grupo.codGrupo;\n    });\n  }\n\n  /**\n   * @source = 'application' || 'user'\n   */\n  onAddPreco(preco: any, manipulateForm: boolean, source: string): void {\n    if (preco) {\n      if (this.checkPrecosExists(preco) === false) {\n        this.precosEstado.push(preco);\n\n        if (source === 'onAssociarPrecos') {\n          let grupos = this.form.controls.assocGrupos.value;\n          grupos = grupos.map((item: any) => {\n            if (item.codGrupo == this.codGrupo) {\n              let precosAux = item.precos.map(precoAux => {\n                return {\n                  codAssociacao: precoAux.codAssociacao,\n                  codEmpresa: precoAux.codEmpresa,\n                  nomeEmpresa: precoAux.nomeEmpresa,\n                  percentual: precoAux.percentual,\n                  ufDestino: precoAux.ufDestino,\n                  valorMaterial: precoAux.valorMaterial,\n                }\n              });\n              precosAux.push(preco);\n              item.precos = precosAux;\n            }\n            return item;\n          });\n        }\n\n        this.formPrecos.reset();\n      }\n\n      /* if (this.checkValorExists(preco) === false) {\n        this.form.value.assocGrupos[this.formPrecosIndex].precos.push(preco);\n      } */\n    }\n\n    if (manipulateForm) {\n      this.form.markAsTouched();\n      this.form.markAsDirty();\n    }\n  }\n\n  onSaveValores() {\n    this.editMode = false;\n    if (this.precosEstado.length > 0) {\n      this.submittingFormPrecos = true;\n      this.precosEstado.forEach((element) => {\n        if (this.checkValorExists(element) == false) {\n          this.form.value.assocGrupos[this.formPrecosIndex].precos.push(\n            element\n          );\n        }\n      });\n      this.precosEstado = [];\n    }\n    this.modalRef.hide();\n  }\n\n  checkValorExists(obj: any) {\n    return this.form.value.assocGrupos[this.formPrecosIndex].precos.some(\n      (el: any) => {\n        return (\n          el.codEmpresa === obj.codEmpresa && el.ufDestino === obj.ufDestino\n        );\n      }\n    );\n  }\n\n  onDeleteValor(item: any, index: number) {\n    item.codPreco = this.codPreco;\n    item.codGrupo = this.codGrupo;\n    this.loaderNavbar = true;\n\n    this.confirmDelete().subscribe((response: boolean) => {\n      if (response) {\n        if (item.codAssociacao != null || item.codAssociacao != undefined) {\n          this.tabelaPrecosService\n            .deleteAssociacaoPreco(item)\n            .pipe(\n              finalize(() => {\n                this.loaderNavbar = false;\n              })\n            )\n            .subscribe({\n              next: (response: JsonResponse) => {\n                if (response.success) {\n                  if (this.checkPrecosExists(item) == true) {\n                    let indexPrecos =\n                      this.form.value.assocGrupos[\n                        this.formPrecosIndex\n                      ].precos.indexOf(item);\n\n                    this.form.value.assocGrupos[\n                      this.formPrecosIndex\n                    ].precos.splice(indexPrecos, 1);\n                  }\n                  this.precosEstado.splice(index, 1);\n                } else {\n                  this.pnotifyService.error();\n                }\n              },\n              error: (error: any) => {\n                if (\n                  error.error.hasOwnProperty('mensagem') &&\n                  (error.mensagem !== null || error.mensagem !== '')\n                ) {\n                  this.pnotifyService.error(error.error.mensagem);\n                } else {\n                  this.pnotifyService.error();\n                }\n              }\n            });\n        } else {\n          if (this.checkPrecosExists(item) == true) {\n            let indexPrecos =\n              this.form.value.assocGrupos[this.formPrecosIndex].precos.indexOf(\n                item\n              );\n\n            this.form.value.assocGrupos[this.formPrecosIndex].precos.splice(\n              indexPrecos,\n              1\n            );\n          }\n          this.precosEstado.splice(index, 1);\n          this.loaderNavbar = false;\n        }\n      }\n      this.loaderNavbar = false;\n    });\n  }\n\n  checkPrecosExists(preco: precos): boolean {\n    let valorFound = this.precosEstado.filter(\n      (xx) =>\n        xx.codEmpresa == preco.codEmpresa && xx.ufDestino == preco.ufDestino\n    );\n\n    if (valorFound.length > 0) return true;\n    else return false;\n  }\n\n  onAssociarPrecos(): void {\n    const precos = this.formPrecos.getRawValue() as precos;\n    precos.nomeEmpresa = this.searchEmpresa(precos.codEmpresa);\n    this.precoAssociado(precos);\n    this.submitAssocGrupo = true;\n  }\n\n  searchEmpresa(codEmpresa: number) {\n    let empresaFound = this.unidades.filter((xx) => xx.idEmpresa == codEmpresa);\n    return empresaFound[0]['nomeEmpresa'];\n  }\n\n  precoAssociado(preco: any): void {\n    this.onAddPreco(preco, true, 'onAssociarPrecos');\n  }\n\n  onLimparGrupoPrincipal(): void {\n    this.limparGrupoPrincipal = true;\n    this.onInput();\n\n    this.form.controls.codDescricao.setValue(null);\n    this.form.controls.codSituacao.setValue(null);\n    this.form.controls.dtInicioVigencia.setValue(null);\n    this.form.controls.dtFimVigencia.setValue(null);\n\n    setTimeout(() => {\n      this.limparGrupoPrincipal = false;\n    }, 100);\n  }\n\n  onDeleteGrupo(index: number, item: any): void {\n    let codGrupo = item.value.codGrupo;\n    let nomeGrupo = item.value.nomeGrupo;\n\n    this.confirmDeleteGrupo(codGrupo, nomeGrupo).subscribe((response: boolean) =>\n      response ? this.deleteGrupo(index, codGrupo) : null\n    );\n\n    // }\n  }\n\n  closeModal(modalRef: TemplateRef<any>) {\n    if (this.submittingFormPrecos === false && this.precosEstado.length > 0) {\n      this.confirmCancel().subscribe((response: boolean) =>\n        response ? this.onCancelFormValores(modalRef) : null\n      );\n    } else {\n      this.modalRef.hide();\n    }\n  }\n\n  closeModalUpdate(modalRef: TemplateRef<any>) {\n    this.modalRef.hide();\n  }\n\n  onCancelFormValores(modalRef: TemplateRef<any>) {\n    this.precosEstado = [];\n    this.modalRef.hide();\n  }\n\n\n  confirmAdd(): any {\n    this.editMode = false;\n\n    return this.confirmModalService.showConfirm(\n      'cancelar',\n      'Confirmar',\n      'Ao confirmar, você estará alterando os valores, deseja mesmo continuar?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  confirmCancel(): any {\n    this.editMode = false;\n\n    return this.confirmModalService.showConfirm(\n      'cancelar',\n      'Confirmar Cancelamento',\n      'As informações que não foram salvas serão perdidas, deseja continuar ?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  confirmDeleteGrupo(codGrupo: any, nomeGrupo: any): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do grupo ' + codGrupo + ' - ' + nomeGrupo + ' ?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n\n  deleteGrupo(index: number, codGrupo: number) {\n    if (this.form.value.assocGrupos[index].source === 'user') {\n      this.assocGrupos.removeAt(index);\n    } else if (this.form.value.assocGrupos[index].source === 'application') {\n      this.loaderNavbar = true;\n\n      this.activatedRoute.params.subscribe((params: any) => {\n        this.tabelaPrecosService\n          .deleteAssociacaoGrupo(this.form.value.codPreco, codGrupo)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n            })\n          )\n          .subscribe({\n            next: (response: JsonResponse) => {\n              if (response.success) {\n                this.assocGrupos.removeAt(index);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              if (\n                error.error.hasOwnProperty('mensagem') &&\n                (error.mensagem !== null || error.mensagem !== '')\n              ) {\n                this.pnotifyService.error(error.error.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            }\n          });\n      });\n    }\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  grupoAssociado(material: any): void {\n    this.onAddGrupo(material, true, 'user');\n  }\n\n  onAssociarGrupos(): void {\n    this.toggleAll = false;\n\n    for (let index = 0; index < this.dados.length; index++) {\n      if (this.dados[index].checked === 1) {\n        const grupo = {\n          codGrupo: this.dados[index].codGrupo,\n          nomeGrupo: this.dados[index].nomeGrupo,\n        };\n        this.grupoAssociado(grupo);\n        this.dados[index].checked = 0;\n        this.submittingForm = true;\n      }\n    }\n  }\n\n  onFilter(): void {\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.searching = true;\n\n    if (this.formFilter.valid) {\n      this.search(this.formFilter.getRawValue());\n    }\n  }\n\n  search(params): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.tabelaPrecosService\n      .getGrupos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.success === true) {\n            this.dados = response.data;\n            this.totalItems = this.dados[0]['total'];\n            this.searching = false;\n          } else if (response.success === false) {\n            this.dadosEmpty = true;\n            this.dadosLoaded = true;\n            this.searching = false;\n            this.firstSearch = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n            this.firstSearch = false;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = false;\n          this.searching = false;\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n\n    for (let index = 0; index < this.dados.length; index++) {\n      this.dados[index].checked = this.toggleAll === true ? 1 : 0;\n    }\n  }\n\n  onCheckGrupo(index: number, grupo: any): void {\n    this.dados[index].checked = grupo.checked === 1 ? 0 : 1;\n  }\n\n  getUnidades() {\n    this.tabelaPrecosService.getEmpresas().subscribe({\n      next: (response: any) => {\n        if (response.responseCode === 200) {\n          this.unidades = response.result;\n          // this.setFormBuilder();\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      },\n      error: (error: any) => {\n        this.pnotifyService.error();\n        this.location.back();\n      }\n    });\n  }\n\n  // Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  geetParams(params: any): any {\n    let dataInicial = params['dataInicialVigencia'];\n    let dataFinal = params['dataFimVigencia'];\n\n    this.form.patchValue({\n      dataInicialVigencia: dataInicial,\n      dataFimVigencia: dataFinal,\n    });\n\n    if (dataInicial instanceof Date) {\n      dataInicial = this.dateService.convertToUrlDate(dataInicial);\n    }\n\n    if (dataFinal instanceof Date) {\n      dataFinal = this.dateService.convertToUrlDate(dataFinal);\n    }\n\n    return {\n      dataInicial: dataInicial,\n      dataFinal: dataFinal,\n    };\n  }\n}\n","import { ComercialTemplatesModule } from './../../templates/templates.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TextMaskModule } from 'angular2-text-mask';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialGestaoTabelaPrecosRoutingModule } from './tabela-precos-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../cadastros/materiais/templates/templates.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ComercialGestaoTabelaPrecosListaComponent } from './lista/lista.component';\nimport { ComercialGestaoTabelaPrecosFormularioComponent } from './formulario/formulario.component';\n\n// Services\nimport { ComercialGestaoTabelaPrecosService } from './tabela-precos.service';\nimport { ComercialTabelaPrecoCloneComponent } from './modais/clone/clone.component';\nimport { ComercialGestaoTabelaPrecoVisaoComercialComponent } from './visao-comercial/visao-comercial.component';\nimport { ComercialGestaoTabelaPrecosImportarCsvComponent } from './importar-csv/importar-csv.component';\n\n@NgModule({\n  declarations: [\n    ComercialGestaoTabelaPrecosListaComponent,\n    ComercialGestaoTabelaPrecosFormularioComponent,\n    ComercialTabelaPrecoCloneComponent,\n    ComercialGestaoTabelaPrecoVisaoComercialComponent,\n    ComercialGestaoTabelaPrecosImportarCsvComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    TextMaskModule,\n    ComercialGestaoTabelaPrecosRoutingModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialTemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  providers: [PNotifyService, ComercialGestaoTabelaPrecosService],\n})\nexport class ComercialGestaoTabelaPrecosModule {}\n","import { EstadosService } from 'src/app/shared/services/requests/estados.service';\nimport { ComercialCadastrosMateriaisGrupoService } from './../../../cadastros/materiais/grupos/grupos.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n//Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-gestao-tabela-preco-visao-comercial',\n  templateUrl: './visao-comercial.component.html',\n  styleUrls: ['./visao-comercial.component.scss'],\n})\nexport class ComercialGestaoTabelaPrecoVisaoComercialComponent\n  implements OnInit\n{\n  dadosEmpty = true;\n  boolimpar = false;\n  dadosLoaded = false;\n  loading = true;\n  loadingNavBar = false;\n  showDetailPanel = false;\n\n  materiais = [];\n  dados = [];\n  dadosDetalhes = [];\n\n  codigoSelecionado: number = 0;\n  materialSelecionado: string = '';\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  form: FormGroup;\n  orderBy = 'nomeMaterial';\n  orderType = 'ASC';\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  linhas: Array<any> = [];\n  tabelas: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n  begin: number = 0;\n  end: number = 10;\n  $showDetailPanelSubscription: Subscription;\n  $activatedRouteSubscription: Subscription;\n\n  appTitle = 'Tabela de Preços - Visão Comercial';\n\n  constructor(\n    private service: ComercialGestaoTabelaPrecosService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private dateService: DateService,\n    private router: Router,\n    private routerService: RouterService,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.onBuildForm();\n    this.onActiveRoute();\n    this.onDetailPanelEmitter();\n    this.setBreadCrumb();\n    this.getTabelas();\n    this.getLinhas();\n    setTimeout(() => {\n      this.loading = false;\n    }, 1500);\n  }\n\n  ngOnDestroy(): void {\n    this.$showDetailPanelSubscription.unsubscribe();\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onBuildForm() {\n    this.form = this.formBuilder.group({\n      tabela: [0],\n      codMaterial: [null],\n      nomeMaterial: [null],\n      codLinha: [0],\n      orderBy: [null],\n      orderType: [null],\n      pagina: [null],\n      registros: [25, Validators.required],\n      timestamp: [new Date().getTime()],\n    });\n  }\n\n  setBreadCrumb() {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.$showDetailPanelSubscription =\n      this.detailPanelService.config.subscribe((event: any) => {\n        this.showDetailPanel = event.showing;\n        if (!this.showDetailPanel) {\n          this.codigoSelecionado = 0;\n          this.materialSelecionado = '';\n        }\n      });\n  }\n\n  onActiveRoute() {\n    this.$activatedRouteSubscription =\n      this.activatedRoute.queryParams.subscribe((queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let _response = this.routerService.getBase64UrlParams(queryParams);\n          console.log(_response);\n          this.getMateriais(_response);\n          this.form.patchValue(_response);\n        }\n      });\n  }\n\n  getTabelas(): void {\n    this.service\n      .getTabelas()\n      .pipe(finalize(() => {}))\n      .subscribe((response: JsonResponse) => {\n        if (response.hasOwnProperty('success') && response.success === true) {\n          this.tabelas = response.data;\n          this.tabelas.unshift({\n            codPreco: 0,\n            nomePreco: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getLinhas(): void {\n    this.materiaisGrupoService\n      .getFilterValues()\n      .pipe(finalize(() => {}))\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n          this.linhas.unshift({\n            id: 0,\n            descricao: 'EXIBIR TODOS',\n          });\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getMateriais(codMaterial: any) {\n    this.detailPanelService.hide();\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.dadosLoaded = false;\n\n    this.service\n      .getMateriais(codMaterial)\n      .pipe(\n        finalize(() => {\n          this.boolimpar = false;\n          this.loading = false;\n          this.loadingNavBar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosEmpty = false;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false &&\n            response.hasOwnProperty('mensagem') &&\n            response.mensagem !== null\n          ) {\n            this.dados = [];\n            this.dadosEmpty = true;\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.dados = [];\n            this.dadosEmpty = true;\n            this.pnotifyService.notice('Nenhuma informação encontrada');\n          }\n        },\n        error: (error: any) => {\n          this.dados = [];\n          this.dadosEmpty = true;\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  getMateriaisDetalhes(item: any) {\n    this.detailPanelService.show();\n    this.loadingNavBar = true;\n    this.codigoSelecionado = 0;\n    this.codigoSelecionado = item.codMaterial;\n    this.materialSelecionado = '';\n    this.materialSelecionado = item.nomeMaterial;\n\n    let params: any = {};\n\n    params.codMaterial = this.codigoSelecionado;\n    params.codTabela = this.form.value.tabela;\n\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.service\n      .getMateriaisDetalhes(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dadosDetalhes = response.data;\n            this.detailPanelService.loadedFinished(false);\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false &&\n            response.hasOwnProperty('mensagem') &&\n            response.mensagem !== null\n          ) {\n            this.dadosDetalhes = [];\n            this.detailPanelService.loadedFinished(true);\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.dadosDetalhes = [];\n            this.detailPanelService.loadedFinished(true);\n            this.pnotifyService.notice('Nenhuma informação encontrada');\n          }\n        },\n        error: (error: any) => {\n          this.dadosDetalhes = [];\n          this.detailPanelService.loadedFinished(true);\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    // if (_obj?.material) {\n    //   (Number.isNaN(parseInt(_obj?.material))) ?\n    //     _params['nomeMaterial'] = _obj.material :\n    //     _params['codMaterial'] = _obj.material\n    // }\n\n    // if (_obj?.grupo) {\n    //   (Number.isNaN(parseInt(_obj?.grupo))) ?\n    //     _params['nomeGrupo'] = _obj.grupo :\n    //     _params['codGrupo'] = _obj.grupo;\n    // }\n\n    if (_obj?.tabela) {\n      Number.isNaN(parseInt(_obj?.tabela))\n        ? (_params['nomePreco'] = _obj.tabela)\n        : (_params['codPreco'] = _obj.tabela);\n    }\n\n    _params['orderBy'] = this.orderBy;\n    _params['orderType'] = this.orderType;\n    return _params;\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  // Pesquisa\n  onFilter(): void {\n    this.itemsPerPage = this.form.value.registros;\n    this.currentPage = 1;\n    this.form.get('timestamp').setValue(new Date().getTime());\n    this.router.navigate([], {\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  // Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  classStatusBorder(item): string {\n    let borderClass: string;\n\n    if (item.codSituacao === 2) {\n      borderClass = 'border-danger';\n    } else if (item.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onLimpar() {\n    this.onBuildForm();\n    this.boolimpar = true;\n    this.dados = [];\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  TemplateRef,\n  OnDestroy,\n  Input,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\n\nimport { Subscription, EMPTY, Observable, of } from 'rxjs';\nimport { finalize, take, switchMap } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { descricaoTabela, assocTabela } from './../models/tabela-precos';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\n\n@Component({\n  selector: 'comercial-tabela-precos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialGestaoTabelaPrecosListaComponent\n  implements OnInit, OnDestroy\n{\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  \n  modalRef: BsModalRef;\n\n  codMaterial: number;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  detailPanelTitle: string;\n\n  dados: descricaoTabela[] = [];\n  otherDados: any[] = [];\n  otherDados2: any[] = [];\n  dadosPagination: Array<any> = [];\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n  detalhes: any;\n  detalhePreco: any;\n  detalhePrecoUf: any;\n\n  tabelaPreco = {};\n\n  grupoSelecionado: assocTabela;\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    hover: false,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  orderBy = 'codPreco';\n  orderType = 'ASC';\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private activateRoute: ActivatedRoute,\n    private localeService: BsLocaleService,\n    private dateService: DateService,\n    private router: Router,\n    private detailPanelService: DetailPanelService,\n    private pnotifyService: PNotifyService,\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\n    private confirmModalService: ConfirmModalService,\n    private atividadesService: AtividadesService,\n    private modalService: BsModalService,\n    private routerService: RouterService\n  ) {\n    this.localeService.use('pt-br');\n  }\n\n  ngOnInit(): void {\n        \n    this.setFormFilter();\n    this.setBreadCrumb();\n    this.registrarAcesso();\n    this.onDetailPanelEmitter();\n    this.setGrupoSelecionado();\n    this.onActiveRoute();\n  }\n\n  ngOnDestroy(): void {\n    this.activatedRouteSubscription.unsubscribe();\n  }\n\n  setBreadCrumb() {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/gestao/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Tabela de Preços',\n        },\n      ];\n    });\n  }\n\n  onActiveRoute() {\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        let _response = this.routerService.getBase64UrlParams(response);\n\n        if (Object.keys(_response).length > 0) this.form.patchValue(_response);\n\n        this.search(this.getParams());\n      }\n    );\n  }\n\n  // Formulário\n  setFormFilter(): void {\n    this.form = this.formBuilder.group({\n      codMaterial: null,\n      descTabela: [null],\n      dataInicialVigencia: '',\n      dataFinalVigencia: '',\n      codSituacao: [1],\n      orderBy: [null],\n      orderType: [null],\n      pagina: [null],\n      registros: [this.itemsPerPage],\n      timestamp: [new Date().getTime()],\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  // Pesquisa\n  onFilter(): void {\n    this.form.get('timestamp').setValue(new Date().getTime());\n\n    this.router.navigate([], {\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n      relativeTo: this.activatedRoute,\n    });\n    this.itemsPerPage = this.form.value.registros;\n    this.currentPage = 1;\n  }\n\n  // setRouterParams(params: any): void {\n  //   this.router.navigate([], {\n  //     relativeTo: this.activatedRoute,\n  //     queryParams: { q: btoa(JSON.stringify(params)) },\n  //   });\n  //   this.search(params);\n  // }\n\n  // verificaParams(): Object {\n  //   let params: any = {};\n\n  //   if (this.form.value.descTabela) {\n  //     params.descTabela = this.form.value.descTabela;\n  //   }\n\n  //   if (this.form.value.dataInicialVigencia) {\n  //     params.dataInicialVigencia = this.form.value.dataInicialVigencia;\n  //   }\n\n  //   if (this.form.value.dataFinalVigencia) {\n  //     params.dataFinalVigencia = this.form.value.dataFinalVigencia;\n  //   }\n\n  //   if (this.form.value.codSituacao) {\n  //     params.codSituacao = this.form.value.codSituacao;\n  //   }\n\n  //   params.pagina = this.form.value.pagina;\n  //   params.registros = this.form.value.registros;\n  //   params.orderBy = this.form.value.orderBy;\n  //   params.orderType = this.form.value.orderType;\n\n  //   return params;\n  // }\n\n  search(params: any): void {\n    if (!this.loaderFullScreen) this.loaderNavbar = true;\n\n    this.detailPanelService.hide();\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.tabelaPrecosService\n      .getListaPrecos(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.loaderFullScreen = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;  \n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;           \n            this.dadosLoaded = true;\n            // if(this.form.value.codMaterial){\n            //   let hasData = this.dados.find((cod) => {\n            //      return cod.codPreco == this.form.value.codMaterial;\n            //   })\n            //   if(!hasData){\n            //     this.dadosEmpty = true;\n            //   }\n            // }\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onCheckPreco() {   \n            let dados = {\n              info: null,\n              precos: null\n            }\n            let precos;\n            this.dados.forEach(element => {\n              this.tabelaPrecosService.getDetalhes(element.codPreco)\n              .pipe(\n                finalize(() => {               \n                    this.loaderNavbar = false;\n                    this.detailPanelService.loadedFinished(false); \n                })\n              )\n              .subscribe({\n              next: (response: any) => {\n                response.data.assocGrupos.forEach(element2 => {\n                      this.otherDados.forEach(element3 => {\n                          if(element2.codGrupo == element3.codGrupo){\n                            precos = element2.precos;                            \n                            dados.info = element3;\n                            dados.precos = precos;\n                            this.otherDados2.push({\n                              'info': dados.info,\n                              'precos': dados.precos\n                            }); \n                          }\n                      }); \n                });       \n              }\n          });\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n    _params['orderBy'] = this.orderBy;\n    _params['orderType'] = this.orderType;\n    _params['dataFinalVigencia'] = '';\n    return _params;\n  }\n\n  // Detail Panel\n  onDetails(item) {\n    this.detalhes = item;\n    this.detailPanelService.show();\n    this.detailPanelTitle = `Materiais associados `;\n    this.setGrupoSelecionado();\n    // this.grupoSelecionado = grupo;\n    this.loaderNavbar = true;\n    this.otherDados = [];\n\n    const params = {\n      codGrupo: item.codGrupo,\n    };\n\n    this.tabelaPrecosService\n      .getDetailPanel(params)\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.otherDados = response.data;\n            this.otherDados2 = []; \n            this.onCheckPreco();\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n\n    this.loaderNavbar = true;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  setGrupoSelecionado(): void {\n    this.grupoSelecionado = {\n      codGrupo: null,\n      nomeGrupo: null,\n      precos: [],\n    };\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  // Activate e Inactivate e borda Situação\n  onActivate(index: number, grupo: descricaoTabela): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateGrupo(index: number, grupo: any): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 1;\n    return this.tabelaPrecosService.activateGrupo(grupo.codPreco);\n  }\n\n  inactivateGrupo(index: number, grupo: any): Observable<any> {\n    this.loaderNavbar = true;\n    this.dados[index].codSituacao = 2;\n    return this.tabelaPrecosService.inactivateGrupo(grupo.codPreco);\n  }\n\n  onInactivate(index: number, grupo: descricaoTabela): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(grupo);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dados[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  classStatusBorder(grupo: descricaoTabela): string {\n    let borderClass: string;\n\n    if (grupo.codSituacao === 2) {\n      borderClass = 'border-danger';\n    } else if (grupo.codSituacao === 1) {\n      borderClass = 'border-success';\n    }\n\n    return borderClass;\n  }\n\n  onEdit(item: any): void {\n    this.router.navigate(['../editar', item.codPreco], {\n      relativeTo: this.activateRoute,\n    });\n  }\n\n  onCsv(item: any): void {\n    this.router.navigate(['../importar-csv', item.codPreco], {\n      relativeTo: this.activateRoute,\n    });\n  }\n\n  onClone(item: any, template): void {\n    this.tabelaPreco = item;\n    item.clone = true;\n    this.openModal(template);\n  }\n\n  // Outros\n  // onPageChanged(event: PageChangedEvent) {\n  //   if (this.form.value.pagina != event.page) {\n  //     this.detailPanelService.hide();\n  //     this.setGrupoSelecionado();\n  //     this.form.value.pagina = event.page;\n  //     this.onFilter();\n\n  //     this.scrollToFilter.nativeElement.scrollIntoView({\n  //       behavior: 'instant',\n  //     });\n  //   }\n  // }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    // this.scrollToFilter.nativeElement.scrollIntoView({\n    //   behavior: 'instant',\n    // });\n  }\n\n  refreshMainData(grupo: descricaoTabela): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (grupo.codPreco === this.dados[i].codPreco) {\n        this.dados[i].codSituacao = grupo.codSituacao;\n        return;\n      }\n    }\n  }\n\n  // Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      ignoreBackdropClick: true,\n    });\n  }\n}\n","export default \"::ng-deep message {\\n  padding: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbW9kYWlzL2Nsb25lL2Nsb25lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UscUJBQUE7QUFBSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL21vZGFpcy9jbG9uZS9jbG9uZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcHtcbiAgbWVzc2FnZXtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIH1cbn0iXX0= */\";","import { assocTabela } from './../models/tabela-precos';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialGestaoTabelaPrecosService } from './../tabela-precos.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialGestaoTabelaPrecosFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.tabelaPrecosService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      mensagem: null,\n      data: {\n        codPreco: null,\n        nomePreco: null,\n        codSituacao: null,\n        dataInicialVigencia: null,\n        dataFinalVigencia: null,\n        nomeUsuario: null,\n        dataCadastro: null,\n        assocGrupos: [],\n      },\n    });\n  }\n}\n","import { descricaoTabela, assocTabela } from './models/tabela-precos';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { take, tap, retry } from 'rxjs/operators';\n\n/* Services */\nimport { ComercialService } from '../../comercial.service';\n\n/* Interfaces */\nimport { environment } from 'src/environments/environment';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialGestaoTabelaPrecosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/gestao/tabela-precos`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService\n  ) {}\n\n  getListaPrecos(params: any = []): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getEmpresas(): Observable<Object | JsonResponse> {\n    return this.comercialService.getEmpresas({ idEmpresa: [4,6,18,55,77,79,83], tipo: 'search' });\n  }\n\n  getTabelas(): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/tabelas`)\n      .pipe(take(1), retry(2));\n  }\n\n  getDetalhes(codPreco: number): Observable<Object | JsonResponse> {\n    return this.http\n      .get(`${this.API}/detalhes/${codPreco}`)\n      .pipe(take(1), retry(2));\n  }\n\n  // getDetailPanel(codGrupo: number): Observable<Object | JsonResponse> {\n  //   return this.http\n  //     .get(`${this.API}/detail-panel/${codGrupo}`)\n  //     .pipe(take(1), retry(2));\n  // }\n\n  getDetailPanel(params: any = []): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n    return this.http\n      .get(`${this.API}/detail-panel`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getGrupos(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista/grupos`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociacoesGrupos(\n    codGrupo: number,\n    params?: any\n  ): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista/grupos/${codGrupo}`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getAssociados(): Observable<any> {\n    return this.http.get(`${this.API}/associados`).pipe(take(1));\n  }\n\n  deleteAssociacaoPreco(item: any): Observable<Object | JsonResponse> {\n    return this.http\n      .delete(\n        `${this.API}/associacao-precos/remover/${item.codAssociacao}/${item.codPreco}/${item.codGrupo}`\n      )\n      .pipe(take(1), retry(2));\n  }\n\n  deleteAssociacaoGrupo(\n    codPreco: number,\n    codGrupo: number\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .delete(`${this.API}/grupo/remover/${codGrupo}/${codPreco}`)\n      .pipe(take(1), retry(2));\n  }\n\n  saveTabelaPrecos(\n    record: descricaoTabela,\n    action: string\n  ): Observable<Object | JsonResponse> {\n    if (action === 'update') {\n      return this.updateGrupo(record);\n    }\n\n    return this.saveGrupo(record);\n  }\n\n  private saveGrupo(\n    record: descricaoTabela\n  ): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\n  }\n\n  private updateGrupo(\n    record: descricaoTabela\n  ): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/atualizar`, record)\n      .pipe(take(1));\n  }\n\n  // savePrecos(record: any, action: string): Observable<Object | JsonResponse> {\n  //   if (action === 'update') {\n  //     return this.updatePreco(record);\n  //   }\n\n  //   return this.savePreco(record);\n\n  // }\n\n  savePreco(record: any): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/precos/salvar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  updatePreco(record: any): Observable<Object | JsonResponse> {\n    return this.http\n      .put(`${this.API}/precos/atualizar`, record)\n      .pipe(take(1), retry(2));\n  }\n\n  getPreco(params: any = []) {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n    return this.http\n      .get(`${this.API}/precos/lista`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http\n      .post(`${this.API}/ativar`, codGrupo)\n      .pipe(take(1), retry(2));\n  }\n\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\n    return this.http.post(`${this.API}/inativar`, codGrupo).pipe(take(1));\n  }\n\n  getMateriais(params): Observable<Object | JsonResponse> {\n    return this.http.get(`${this.API}/materiais`,\n    { params: params}).pipe(take(1));\n  }\n\n  getMateriaisDetalhes(params: any): Observable<Object | JsonResponse> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http.get(`${this.API}/materiais/detalhes`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ComercialService } from '../../../comercial.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { PNotifyService } from '../../../../../shared/services/core/pnotify.service';\n\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { isBreakOrContinueStatement } from 'typescript';\n\n@Component({\n  selector: 'comercial-gestao-tabela-precos-importar-csv',\n  templateUrl: './importar-csv.component.html',\n  styleUrls: ['./importar-csv.component.scss']\n})\nexport class ComercialGestaoTabelaPrecosImportarCsvComponent implements OnInit {\n\n  appTitle: string = 'Importar CSV';\n  breadCrumbTree: Array<Breadcrumb> = [];\n  loaderFullScreen = true;\n  loaderNavbar: boolean;\n  fileReaded;\n  nomePreco = '';\n  rows = [];\n  headers: any;\n  content;\n  row: any;\n  dados: any;\n  empresas = [];\n  codPreco: any;\n  elementsAdded = [];\n  fileValue;\n\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  tableConfigPrecos: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private comercialService: ComercialService,\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\n    private pnotifyService: PNotifyService,\n    private bsModalService: BsModalService,\n  ) { }\n\n\n  ngOnInit(): void {\n    this.setBreadCrumb();\n    this.getTotalItems();\n    this.getEmpresas();\n    this.loaderFullScreen = false;\n  }\n\n  // pega os valores dos depositos\n  getEmpresas(){\n    this.comercialService.getDepositos(null)\n    .subscribe({\n      next: (response: any) => {\n          response.result.forEach(element => {\n            if(element.idDeposito == 1 ||\n              element.idDeposito == 2 ||\n              element.idDeposito == 18 ||\n              element.idDeposito == 79 ||\n              element.idDeposito == 77 ||\n              element.idDeposito == 55){\n                this.empresas.push({codDeposito: element.idDeposito, nomeDeposito: element.nomeDeposito});\n              }\n          });      }\n    });\n  }\n\n  // limpa os\n  clearValues(){\n    this.content = null;\n    this.headers = null;\n    this.row = null;\n    this.rows = null;\n  }\n\n  // popula o CSV de modelo com todos os dados referente ao codigo do preco\n  populateModel(){\n    var arr = [];\n    arr.push(new Array('ID GRUPO','ID DEPOSITO','UF DESTINO','VALOR'));\n    this.dados.assocGrupos.forEach(element => {\n      let codGrupo = element.codGrupo;\n      element.precos.forEach(element2 => {\n        arr.push( new Array(codGrupo,element2.codEmpresa, element2.ufDestino.toUpperCase(),element2.valorMaterial));\n      });\n    });\n    this.rows = arr;\n  }\n\n  // pega todos os itens referente ao codigo de preco\n  getTotalItems(){\n    this.tabelaPrecosService\n      .getDetalhes(this.codPreco)\n      .subscribe({\n        next: (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.nomePreco = this.dados.nomePreco;\n            this.populateModel();\n          }\n        },\n        error: (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.codPreco = params.id;\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Tabela de Preços',\n          routerLink: `/comercial/gestao/${params.idSubModulo}/tabela-precos/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  //cria arquivo de dowload separado por ponto e virgulas\n  downloadModel() {\n    let csvContent = \"data:text/csv;charset=utf-8,\" + this.rows.map(e => e.join(\";\")).join(\"\\n\");\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"modelo-tabela-preco.csv\");\n    document.body.appendChild(link);\n    link.click();\n  }\n\n  changeListener(fileInput){\n    //le arquivo csv\n    this.fileReaded = fileInput.target.files[0];\n    let filename = fileInput.target.files[0].name;\n    let fileExtension = filename.substring(filename.lastIndexOf('.')+1, filename.length) || filename;\n    if(fileExtension == 'csv'){\n    let reader: FileReader = new FileReader();\n    reader.readAsText(this.fileReaded);\n\n      reader.onload = (e) => {\n      let csvuploaded = reader.result.toString();\n      let allTextLines = csvuploaded.split(/\\r|\\n|\\r/);\n\n\n        // headers = linhas de titulos\n        this.headers = allTextLines[0].split(';');\n        this.content = [];\n\n          for (let i = 1; i < allTextLines.length; i++) {\n            // divide por ponto e virgula\n            let data = allTextLines[i].split(';');\n            if (data.length === this.headers.length) {\n              let tarr = [];\n              for (let j = 0; j < this.headers.length; j++) {\n                tarr.push(data[j]);\n              }\n            // log em cada row para ver output\n            // console.log(tarr);\n            this.content.push(tarr);\n            this.checkLines();\n          }\n        }\n      }\n    } else {\n      this.pnotifyService.error('É necessário subir um arquivo do tipo CSV!');\n    }\n    //reseta o input caso o usuario queira subir o mesmo arquivo\n    fileInput.target.value = null;\n  }\n\n  // checa em todas as linhas se o item ja está cadastrado ou não\n  checkLines(){\n    if(this.content.length > 0){\n      for(let i = 0; i < this.content.length; i++){\n        if(this.content[i] != undefined && this.content[i][2].length == 2){\n        this.content[i][4] = 'SEM CADASTRO';\n          this.dados.assocGrupos.forEach(element => {\n            if(element.codGrupo == this.content[i][0]){\n              element.precos.forEach(element2 => {\n                if(element2.codEmpresa == this.content[i][1]\n                  && element2.ufDestino.toUpperCase() == this.content[i][2]){\n                    this.content[i][4] = 'OK';\n                  }\n              });\n            }\n          });\n        } else {\n          this.loaderNavbar = false;\n          this.pnotifyService.error('Não foi encontrado nenhum item no arquivo CSV para exportação ou o modelo está incorreto.');\n          this.content = [];\n          break;\n        }\n      }\n      } else {\n        this.loaderNavbar = false;\n        this.pnotifyService.error('Não foi encontrado nenhum item no arquivo CSV para exportação ou o modelo está incorreto.');\n      }\n  }\n\n  //mostra os itens que foram atualizados e os novos itens cadastrados\n  loadModal(template: TemplateRef<any>){\n    this.bsModalService.show(template);\n  }\n\n  closeModal(){\n    this.bsModalService.hide(0);\n  }\n\n  // atualiza os dados já existentes e carrega os novos dados no objeto\n  updateValues(template: TemplateRef<any>) {\n  this.elementsAdded = [];\n  this.loaderNavbar = true;\n    if(this.content){\n      for(let i = 0; i <= this.content.length; i++){\n        if(this.content[i] != undefined){\n          this.dados.assocGrupos.forEach(element => {\n            if(element.codGrupo == this.content[i][0]){\n              element.precos.forEach(element2 => {\n                    var last = element.precos.at(-1);\n                    if(element2.ufDestino.toUpperCase() == this.content[i][2]\n                    && element2.codEmpresa == this.content[i][1]\n                    && this.content[i][4] == 'OK'){\n                      element2.valorMaterial = parseFloat(this.content[i][3]);\n                      this.elementsAdded.push({\n                        codGrupo: element.codGrupo,\n                        codEmpresa: element2.codEmpresa,\n                        ufDestino: element2.ufDestino.toUpperCase(),\n                        valorMaterial: parseFloat(element2.valorMaterial)});\n\n                    } else if(element.codGrupo == this.content[i][0]\n                    && this.content[i][4] == 'SEM CADASTRO'\n                    && element2 == last ) {\n                      let nomeEmpresa;\n                      this.empresas.forEach(element => {\n                        if(this.content[i][1] == element.codEmpresa){\n                          nomeEmpresa = element.nomeDeposito;\n                        }\n                      });\n                      element.precos.push({\n                        codAssociacao: null,\n                        codEmpresa: parseInt(this.content[i][1]),\n                        nomeEmpresa: nomeEmpresa,\n                        ufDestino: this.content[i][2],\n                        valorMaterial: parseFloat(this.content[i][3])\n\n                      });\n                      this.elementsAdded.push({\n                        codGrupo: element.codGrupo,\n                        codEmpresa: parseInt(this.content[i][1]),\n                        ufDestino: this.content[i][2].toUpperCase(),\n                        valorMaterial: parseFloat(this.content[i][3])});\n                    }\n              });\n            }\n          });\n        }\n      }\n      //salva os dados\n      this.saveDados(template);\n      } else {\n        this.loaderNavbar = false;\n        this.pnotifyService.error('Não foi encontrado nenhum arquivo CSV para exportação.');\n\n      }\n  }\n\n    saveDados(template){\n      if(this.elementsAdded.length > 0){\n      this.dados.dataInicialVigencia = new Date();\n      this.tabelaPrecosService.saveTabelaPrecos(this.dados, 'update')\n         .subscribe({\n          next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.loaderNavbar = false;\n            this.loadModal(template);\n            this.pnotifyService.success(response.mensagem);\n            this.headers = null;\n            this.content = null;\n\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.pnotifyService.error(response.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }, error: (error) => {\n          this.pnotifyService.error(error.message);\n          this.loaderNavbar = false;\n        }\n        });\n    } else {\n      this.clearValues();\n      this.loaderNavbar = false;\n      this.pnotifyService.error('Nenhum item foi adicionado, cheque se os dados estão corretos e se a tabela está de acordo com a tabela de modelo.');\n    }\n  }\n\n}\n","import {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\n\n// ng-brazil\nimport { MASKS } from 'ng-brazil';\n\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { ComercialGestaoTabelaPrecosService } from '../../tabela-precos.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n@Component({\n  selector: 'comercial-tabela-preco-clone',\n  templateUrl: './clone.component.html',\n  styleUrls: ['./clone.component.scss'],\n})\nexport class ComercialTabelaPrecoCloneComponent implements OnInit, OnChanges {\n  public MASKS = MASKS;\n\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  @Input() formValue = {};\n\n  form: FormGroup;\n\n  loading = true;\n  saving = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private localeService: BsLocaleService,\n    private service: ComercialGestaoTabelaPrecosService,\n    private dateService: DateService,\n    private pnotify: PNotifyService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    /* this.setForm(); */\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes?.formValue) {\n      return;\n    }\n\n    let currentValue = changes?.formValue.currentValue;\n\n    if (!this.form) {\n      this.setForm();\n    }\n\n    this.getDetalhes(currentValue?.codPreco);\n  }\n\n  setForm() {\n    this.form = this.formBuilder.group({\n      codPreco: [null, [Validators.required]],\n      nomePreco: [null, [Validators.required]],\n      codTabelaClonada: [null],\n      dataInicialVigencia: [this.dateService.getToday(), [Validators.required]],\n      dataFinalVigencia: [null],\n      faixaDescontoComercial: [null],\n      faixaDescontoGerencial: [null],\n      percentualAcrescimo: [null],\n      percentualDesconto: [null],\n      assocGrupos: [null],\n    });\n  }\n\n  onClose() {\n    this.close.emit(true);\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  saveTabelaPrecos(params) {\n    if (\n      params.dataFinalVigencia == '' ||\n      params.dataFinalVigencia == null ||\n      params.dataFinalVigencia == undefined\n    ) {\n      params['dataFinalVigencia'] = '';\n    }\n\n    if (params.percentualAcrescimo == 0) {\n      params.percentualAcrescimo = null;\n    }\n\n    if (params.percentualDesconto == 0) {\n      params.percentualDesconto = null;\n    }\n\n    params['codTabelaClonada'] = params?.codPreco?.toString()?.slice();\n\n    delete params['codPreco'];\n\n    const acrescimo = params?.percentualAcrescimo;\n    const desconto = params?.percentualDesconto;\n\n    if (acrescimo > 0) {\n      params?.assocGrupos?.forEach((element) => {\n        element.precos.forEach((preco) => {\n          preco.valorMaterial *= 1 + acrescimo / 100;\n        });\n      });\n    }\n\n    if (desconto > 0) {\n      params?.assocGrupos?.forEach((element) => {\n        element.precos.forEach((preco) => {\n          preco.valorMaterial *= 1 - desconto / 100;\n        });\n      });\n    }\n\n    this.saving = true;\n    this.service\n      .saveTabelaPrecos(params, 'insert')\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['success'] == true) {\n            this.pnotify.success('Tabela criada com sucesso!');\n            this.onClose();\n          } else {\n            this.pnotify.error('Falha ao criar a tabela');\n          }\n        },\n        error: (error) => {\n          this.pnotify.error('Ocorreu um erro ao processar a solicitação.');\n        }\n      });\n  }\n\n  onDesativarAcrescimo() {\n    if (this.form.value.percentualDesconto > 0) {\n      this.form.controls.percentualAcrescimo.disable();\n    } else if (\n      this.form.value.percentualDesconto == 0 ||\n      this.form.value.percentualDesconto == null\n    ) {\n      this.form.controls.percentualAcrescimo.enable();\n    }\n  }\n\n  onDesativarDesconto() {\n    if (this.form.value.percentualAcrescimo > 0) {\n      this.form.controls.percentualDesconto.disable();\n    } else if (\n      this.form.value.percentualAcrescimo == 0 ||\n      this.form.value.percentualAcrescimo == null\n    ) {\n      this.form.controls.percentualDesconto.enable();\n    }\n  }\n\n  getDetalhes(codTabela) {\n    this.loading = true;\n    this.service\n      .getDetalhes(codTabela)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response['success']) {\n            let data = response['data'];\n\n            data.dataInicialVigencia = this.dateService.getToday();\n            data.dataFinalVigencia = data?.dataFinalVigencia\n              ? new Date(data.dataFinalVigencia)\n              : '';\n            data.codTabelaClonada = data.codPreco?.toString()?.slice();\n\n            data?.assocGrupos?.map((grupo) => {\n              grupo?.precos?.map((preco) => {\n                preco.codAssociacao = '';\n              });\n            });\n\n            // delete data.codPreco;\n            delete data.nomeUsuario;\n\n            this.form.patchValue(data);\n          } else {\n            this.pnotify.error('Falha ao consultar os dados da tabela.');\n          }\n        },\n        error: (error) => {\n          this.pnotify.error('Ocorreu um erro ao processar a solicitação.');\n        }\n      });\n  }\n\n  // Tratamento de erros\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n\n    if (field.errors != null) {\n      if (field.errors.hasOwnProperty('required') && field.touched) {\n        return 'required';\n      }\n    }\n\n    return '';\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"\\\"\\n    (click)=\\\"onLimpar()\\\">\\n    Limpar\\n  </button>\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"tabela\\\">Tabela</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [closeOnSelect]=\\\"true\\\"\\n                [items]=\\\"tabelas\\\"\\n                formControlName=\\\"tabela\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"tabela\\\"\\n                bindValue=\\\"codPreco\\\"\\n                bindLabel=\\\"nomePreco\\\"\\n                >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codMaterial\\\">cód. material</label>\\n              <input class=\\\"form-control\\\" id=\\\"codMaterial\\\" type=\\\"text\\\" formControlName=\\\"codMaterial\\\"\\n                placeholder=\\\"Código material...\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"nomeMaterial\\\">nome material</label>\\n              <input class=\\\"form-control\\\" id=\\\"nomeMaterial\\\" type=\\\"text\\\" formControlName=\\\"nomeMaterial\\\"\\n                placeholder=\\\"nome material...\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [closeOnSelect]=\\\"true\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                >\\n                <!-- (change)=\\\"onChangeLinha($event.id)\\\" -->\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"!dadosEmpty && !boolimpar\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-6 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codMaterial'\\\" [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter value=\\\"Material\\\" [active]=\\\"orderBy == 'nomeMaterial'\\\" [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of dados\\\" [class.table-active]=\\\"item.codMaterial == codigoSelecionado\\\">\\n            <td nowrap class=\\\"hover text-left\\\" [ngClass]=\\\"classStatusBorder(item)\\\" (click)=\\\"getMateriaisDetalhes(item)\\\">{{ item.codMaterial }}</td>\\n            <td nowrap class=\\\"hover text-left\\\" (click)=\\\"getMateriaisDetalhes(item)\\\">{{ item.nomeMaterial }}</td>\\n            <td></td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"dados.length > maxSize\\\">\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"{{materialSelecionado}}\\\">\\n        <custom-table *ngIf=\\\"dadosDetalhes.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Empresa</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">UF</th>\\n              <th scope=\\\"col\\\">Valor</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let item of dadosDetalhes\\\">\\n              <td>{{ item.nomeEmpresa | uppercase }}</td>\\n              <td class=\\\"text-center\\\">{{ item.ufDestino | uppercase }}</td>\\n              <td>{{ item.valorMaterial | currency:'BRL' }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded && !boolimpar\\\"></empty-result>\\n</app-body>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL2ltcG9ydGFyLWNzdi9pbXBvcnRhci1jc3YuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL3Zpc2FvLWNvbWVyY2lhbC92aXNhby1jb21lcmNpYWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialGestaoTabelaPrecosFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialGestaoTabelaPrecosListaComponent } from './lista/lista.component';\nimport { ComercialGestaoTabelaPrecosFormularioComponent } from './formulario/formulario.component';\nimport { ComercialGestaoTabelaPrecoVisaoComercialComponent } from './visao-comercial/visao-comercial.component';\nimport { ComercialGestaoTabelaPrecosImportarCsvComponent } from './importar-csv/importar-csv.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista', component: ComercialGestaoTabelaPrecosListaComponent\n  },\n  {\n    path: 'novo',\n    component: ComercialGestaoTabelaPrecosFormularioComponent,\n    resolve: {\n      detalhes: ComercialGestaoTabelaPrecosFormularioResolverGuard,\n    },\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialGestaoTabelaPrecosFormularioComponent,\n    resolve: {\n      detalhes: ComercialGestaoTabelaPrecosFormularioResolverGuard,\n    },\n  },\n  {\n    path: 'visao-comercial', component: ComercialGestaoTabelaPrecoVisaoComercialComponent\n  },\n  {\n    path: 'importar-csv/:id',\n    component: ComercialGestaoTabelaPrecosImportarCsvComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialGestaoTabelaPrecosRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || !submittingForm || !submitAssocGrupo\\\" >\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"mtc-title mb-2\\\">Dados da tabela</div>\\n        <hr>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-12\\\">\\n            <label for=\\\"nomePreco\\\">Descrição da Tabela</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"email\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"nomePreco\\\"\\n              [ngClass]=\\\"onFieldError('nomePreco') + ' ' + onFieldRequired('nomePreco')\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomePreco')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"dataInicialVigencia\\\">Dt Inicio Vigência</label>\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"dataInicialVigencia\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"dataInicialVigencia\\\"\\n              bsDatepicker\\n              [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"dataFinalVigencia\\\">Dt Fim Vigência</label>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataFinalVigencia\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"dataFinalVigencia\\\"\\n            bsDatepicker\\n            [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"faixaDescontoComercial\\\">Faixa de Desconto Comercial</label>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"faixaDescontoComercial\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"faixaDescontoComercial\\\"\\n            currencyMask\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"faixaDescontoGerencial\\\">Faixa de Desconto Gerencial</label>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"faixaDescontoGerencial\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"faixaDescontoGerencial\\\"\\n            currencyMask\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\n            >\\n          </div>\\n        </div>\\n\\n        <hr>\\n        <div class='mt-3' *ngIf=\\\"showGrupos && form.value.assocGrupos.length > 0\\\" formArrayName=\\\"assocGrupos\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"mtc-title\\\">Grupos associados</div>\\n              <custom-table [config]=\\\"tableConfigAssocGrupos\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 90%\\\"></th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let item of assocGrupos.controls; let i = index\\\" [formGroupName]=\\\"i\\\" \\n                  onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\n                    <td style=\\\"width: 80%\\\">\\n                      {{ form.value.assocGrupos[i].codGrupo }} - {{ form.value.assocGrupos[i].nomeGrupo | uppercase }}\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Alterar valores do grupo\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalPercent(percentmateriais, i, item)\\\">\\n                        <i class=\\\"fas fa-percent\\\"></i>\\n                      </button>\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Materiais associados\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalMateriais(templatemateriais, i, item)\\\">\\n                        <i class=\\\"fas fa-question\\\"></i>\\n                      </button>\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Editar\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(template, i, item)\\\">\\n                        <i class=\\\"fas fa-edit\\\"></i>\\n                      </button>\\n                    </td>\\n                    <td style=\\\"width: 5%\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"  placement=\\\"left\\\" (click)=\\\"onDeleteGrupo(i, item)\\\" tooltip=\\\"Excluir\\\">\\n                        <i class=\\\"fas fa-trash\\\"></i>\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showGrupos && form.value.assocGrupos.length === 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col-lg-9\\\">\\n          <div class=\\\"mtc-title\\\">Pesquisa grupos para associação</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"onFilter()\\\"\\n              [disabled]=\\\"searching === true\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n              <span>Pesquisar</span>\\n            </button>\\n          </div>\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)='onFilter()'>Pesquisar</button> -->\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formFilter\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-9\\\">\\n              <label for=\\\"grupo\\\">Descrição do grupo</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"idnomePreco\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"grupo\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"situacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"situacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"0\\\">Inativo</option>\\n                <option value=\\\"1\\\">Ativo</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n\\n      <div>\\n        <div>\\n          <div *ngIf=\\\"dados.length > 0\\\">\\n            <div class=\\\"row mb-2\\\" >\\n              <div class=\\\"col mt-auto\\\">\\n                <div class=\\\"mtc-title mb-0\\\">Seleção de grupos</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <div class=\\\"d-flex justify-content-end\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-sm btn-outline-primary\\\"\\n                    (click)=\\\"onAssociarGrupos()\\\"\\n                    [disabled]=\\\"searching === true\\\">\\n                    <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                    <span>Associar</span>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <custom-table [config]=\\\"tableConfigMateriais\\\">\\n                  <ng-template #thead let-thead>\\n                    <tr>\\n                      <th\\n                        scope=\\\"col\\\"\\n                        class=\\\"text-center\\\"\\n                        style=\\\"width: 5%\\\">\\n                        <btn-icon\\n                          [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                          size=\\\"small\\\"\\n                          (click)=\\\"onToggleAll()\\\">\\n                        </btn-icon>\\n                      </th>\\n                      <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Grupo</th>\\n                    </tr>\\n                  </ng-template>\\n                  <ng-template #tbody let-tbody>\\n                    <tr *ngFor=\\\"let item of dados; let i = index;\\\">\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                        <btn-icon\\n                          [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                          size=\\\"small\\\"\\n                          (click)=\\\"onCheckGrupo(i, item)\\\">\\n                        </btn-icon>\\n                      </td>\\n                      <td\\n                        class=\\\"hover\\\"\\n                        style=\\\"width: 95%\\\"\\n                        (click)=\\\"onCheckGrupo(i, item)\\\">\\n                        {{ item.nomeGrupo | uppercase }}\\n                      </td>\\n                    </tr>\\n                  </ng-template>\\n                </custom-table>\\n              </div>\\n            </div>\\n          </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\n              <div class=\\\"col\\\">\\n                <message\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\n                  text=\\\"Estamos pesquisando os materiais para você...\\\">\\n                </message>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"searching === false\\\">\\n              <div class=\\\"row\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\">\\n                <div class=\\\"col\\\">\\n                  <message\\n                    icon=\\\"fas fa-box-open\\\"\\n                    text=\\\"Nenhuma informação encontrada\\\">\\n                  </message>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\" *ngIf=\\\"dados.length === 0 && !firstSearch\\\">\\n                <div class=\\\"col\\\">\\n                  <message\\n                    icon=\\\"fas fa-search\\\"\\n                    text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\n                  </message>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</app-body>\\n\\n<ng-template #template>\\n  <div class=\\\"modal-header\\\">\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n    {{ this.codGrupo }} - {{ this.grupoNome }}\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModalUpdate(template)\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form class=\\\"form-row mb-2\\\" [formGroup]=\\\"formPrecos\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label for=\\\"codEmpresa\\\">Empresa</label>\\n        <ng-select\\n          type='text'\\n          [searchable]=\\\"true\\\"\\n          [clearable]=\\\"false\\\"\\n          [items]=\\\"unidades\\\"\\n          [virtualScroll]=\\\"true\\\"\\n          [hideSelected]=\\\"true\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          placeholder=\\\"Selecione...\\\"\\n          bindLabel=\\\"nomeEmpresa\\\"\\n          bindValue=\\\"idEmpresa\\\"\\n          formControlName=\\\"codEmpresa\\\"\\n          >\\n        </ng-select>\\n      </div>\\n      <div class=\\\"form-group col-lg-2\\\">\\n        <label for=\\\"ufDestino\\\">UF Destino</label>\\n        <ng-select\\n        type=\\\"text\\\"\\n        [searchable]=\\\"true\\\"\\n        [clearable]=\\\"false\\\"\\n        [items]=\\\"estados\\\"\\n        [virtualScroll]=\\\"true\\\"\\n        [hideSelected]=\\\"true\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        placeholder=\\\"Selecione...\\\"\\n        bindLabel=\\\"sigla\\\"\\n        bindValue=\\\"sigla\\\"\\n        formControlName=\\\"ufDestino\\\"\\n        >\\n        </ng-select>\\n      </div>\\n      <div class=\\\"form-group col-lg-3\\\">\\n        <label for=\\\"valorMaterial\\\">Valor</label>\\n        <input\\n          style=\\\"text-align: center;\\\"\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          formControlName=\\\"valorMaterial\\\"\\n          currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 2 }\\\"\\n          >\\n      </div>\\n      <div class=\\\"form-group col-lg-1 d-flex justify-content-center align-self-center mt-3\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-icon-sm d-flex justify-content-center align-middle\\\" (click)=\\\"onAssociarPrecos()\\\" tooltip=\\\"Adicionar Valor\\\">\\n        <i class=\\\"fas fa-plus\\\"></i>\\n        </button>\\n      </div>\\n    </form>\\n    <custom-table [config]=\\\"tableConfigPrecos\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Empresa</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">UF Destino</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Valor</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of precosEstado; let i = index\\\">\\n          <td style=\\\"width: 30%\\\" >\\n            {{ item.nomeEmpresa | uppercase }}\\n          </td>\\n          <td style=\\\"width: 20%\\\">\\n            {{ item.ufDestino | uppercase }}\\n          </td>\\n          <td style=\\\"width: 20%\\\">\\n            <span *ngIf=\\\"enableEditIndex != i || editMode == false\\\">{{ item.valorMaterial | number:'1.2-2' }}</span>\\n            <input *ngIf=\\\"editMode && enableEditIndex == i\\\" [(ngModel)]=\\\"valorMaterialAlterado\\\"\\n            currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 2 }\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            style=\\\"width: 100%\\\">\\n          </td>\\n          <td>\\n            <button *ngIf=\\\"enableEditIndex != i || editMode == false\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"editMode = true;\\\" (click)=\\\"enableEdition(i, item)\\\" tooltip=\\\"Editar\\\">\\n              <i class=\\\"fas fa-edit\\\"></i>\\n            </button>\\n          </td>\\n          <td>\\n            <button *ngIf=\\\"editMode && enableEditIndex == i\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onUpdateValor(item, i, valorMaterialAlterado); editMode = false\\\" tooltip=\\\"Adicionar\\\">\\n              <i class=\\\"fas fa-check\\\"></i>\\n            </button>\\n          </td>\\n          <td>\\n            <button *ngIf=\\\"editMode && enableEditIndex == i\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"editMode = false\\\" tooltip=\\\"Cancelar\\\">\\n              <i class=\\\"fas fa-times\\\"></i>\\n            </button>\\n          </td>\\n          <td>\\n            <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDeleteValor(item, i)\\\" tooltip=\\\"Excluir\\\">\\n              <i class=\\\"fas fa-trash\\\"></i>\\n            </button>\\n          </td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n  </div>\\n</ng-template>\\n\\n<ng-template #templatemateriais>\\n  <div class=\\\"modal-header\\\">\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n    Materiais associados\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(templatemateriais)\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\" style=\\\"height:350px; overflow-x: hidden; overflow-y: scroll;\\\" (onClose)=\\\"select.handleClearClick()\\\">\\n    <label for=\\\"assocGrupos\\\">Pesquisa:</label>\\n    <ng-select\\n        type=\\\"text\\\"\\n        [searchable]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [items]=\\\"materiaisAssoc\\\"\\n        [virtualScroll]=\\\"true\\\"\\n        [hideSelected]=\\\"false\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        (change)=\\\"changeFn(selection)\\\" \\n        [(ngModel)]=\\\"selection\\\"\\n        placeholder=\\\"Selecione...\\\"\\n        bindLabel=\\\"nomeMaterial\\\"\\n        bindValue=\\\"codMaterial\\\"\\n        >\\n        </ng-select>\\n    <custom-table [config]=\\\"tableConfigPrecos\\\" class=\\\"m-3\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\">Código</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 50%\\\">Material</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Linha</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Classe</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody *ngIf=\\\"!showMaterial\\\">\\n        <tr *ngFor=\\\"let item of materiaisAssoc; let i = index\\\">\\n          <td>\\n            {{ item.codMaterial }}\\n          </td>\\n          <td style=\\\"width: 50%\\\">\\n            {{ item.nomeMaterial | uppercase }}\\n          </td>\\n          <td>\\n            {{ item.nomeLinha | uppercase}}\\n          </td>\\n          <td style=\\\"width: 20%\\\">\\n            {{ item.nomeClasse | uppercase }}\\n          </td>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody *ngIf=\\\"showMaterial\\\">\\n        <tr *ngFor=\\\"let item of materiaisAssoc2; let i = index\\\">\\n          <td>\\n            {{ item.codMaterial }}\\n          </td>\\n          <td>\\n            {{ item.nomeMaterial | uppercase }}\\n          </td>\\n          <td>\\n            {{ item.nomeLinha | uppercase }}\\n          </td>\\n          <td>\\n            {{ item.nomeClasse | uppercase }}\\n          </td>\\n        </tr>       \\n      </ng-template>\\n    </custom-table>    \\n  </div>\\n</ng-template>\\n\\n<ng-template #percentmateriais>\\n  <div class=\\\"modal-header\\\">\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n    {{ this.codGrupo }} - {{ this.grupoNome }}\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModalUpdate(percentmateriais)\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form class=\\\"form-row mb-2\\\" [formGroup]=\\\"formPrecos\\\" autocomplete=\\\"off\\\"> \\n      <div class=\\\"col-lg-3\\\">\\n      </div>      \\n      <div class=\\\"form-group col-lg-6\\\">\\n        <label for=\\\"percent\\\">Digite a porcentagem:</label>        \\n        <input\\n          #percent\\n          formControlName=\\\"percentual\\\"\\n          style=\\\"text-align: center;\\\"\\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"0.0%\\\"\\n          currencyMask [options]=\\\"{ align: 'center', prefix: '', suffix:'%', precision: 1, allowNegative: false }\\\"\\n          >\\n      </div>\\n      <div class=\\\"form-group col-lg-3 justify-content-center align-self-center mt-3\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-icon d-flex justify-content-center align-middle ml-1\\\" (click)=\\\"onUpdatePercentagem(percent.value)\\\" tooltip=\\\"Aumentar porcentagem de valor dos itens\\\">\\n        <i class=\\\"fas fa-redo\\\"></i>\\n        </button>\\n      </div>      \\n      <div class=\\\"col-lg-3\\\"></div>\\n    </form>   \\n    <custom-table [config]=\\\"tableConfigPrecos\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Empresa</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">UF Destino</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Valor</th>\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let item of precosEstado; let i = index\\\">\\n          <td style=\\\"width: 30%\\\" >\\n            {{ item.nomeEmpresa | uppercase }}\\n          </td>\\n          <td style=\\\"width: 20%\\\">\\n            {{ item.ufDestino | uppercase }}\\n          </td>\\n          <td style=\\\"width: 20%\\\">\\n            <span>{{ item.valorMaterial | number:'1.2-2' }}</span>           \\n          </td>          \\n          <td></td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>        \\n  </div>\\n   \\n</ng-template>\";","export default \"::ng-deep .tooltip-inner {\\n  max-width: 700px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLnRvb2x0aXAtaW5uZXJ7XG4gICAgbWF4LXdpZHRoOiA3MDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Tabela de Preços\\\">\\n  <!-- <button type=\\\"button\\\" [routerLink]=\\\"['../exportar-csv']\\\" style=\\\"color: #090;\\\">\\n    Exportar CSV\\n  </button> -->\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"descTabela\\\">Descrição da Tabela</label>\\n              <input class=\\\"form-control\\\" id=\\\"descTabela\\\" type=\\\"text\\\" formControlName=\\\"descTabela\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descTabela')\\\" message=\\\"Descrição é obrigatório.\\\">\\n              </invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"dataInicialVigencia\\\">Dt Inicio Vigência</label>\\n              <input class=\\\"form-control\\\" id=\\\"dataInicialVigencia\\\" type=\\\"text\\\" formControlName=\\\"dataInicialVigencia\\\"\\n                bsDatepicker\\n                [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"dataFinalVigencia\\\">Dt Fim Vigência</label>\\n              <input class=\\\"form-control\\\" id=\\\"dataFinalVigencia\\\" type=\\\"text\\\" formControlName=\\\"dataFinalVigencia\\\"\\n                bsDatepicker [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codMaterial\\\">Filtro de material</label>\\n              <input class=\\\"form-control\\\"type=\\\"text\\\" id=\\\"codMaterial\\\" formControlName=\\\"codMaterial\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select class=\\\"form-control custom-select\\\" id=\\\"codSituacao\\\" formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"0\\\">Todos</option>\\n                <option value=\\\"2\\\">Inativos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codPreco'\\\" [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('codPreco')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\">Descrição</th>\\n\\n            <th scope=\\\"col\\\">Dt Inicial</th>\\n\\n            <th scope=\\\"col\\\">Dt Final</th>\\n\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">\\n              Usuário\\n            </th>\\n\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let item of dadosPagination; let i = index;\\\"\\n          onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(item)\\\">\\n              {{ item.codPreco }}\\n            </td>\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\n              {{ item.nomePreco | uppercase }}\\n            </td>\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\n              {{ item.dataInicialVigencia | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\n              {{ item.dataFinalVigencia | date: 'dd/MM/yyyy' }}\\n            </td>\\n            <td class=\\\"hover\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(item)\\\">\\n              {{ item.nomeUsuario | uppercase }}\\n\\n            </td>\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <!-- <span  class=\\\"mr-3\\\" tooltip=\\\"Tabela Clonada, exibir detalhes.\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\n                  <i class=\\\"far fa-clone\\\"></i>\\n                </button>\\n              </span> -->\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Importar CSV\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onCsv(item)\\\">\\n                  <i class=\\\"fas fa-table\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"item.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, item)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(item)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"tolTemplate\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <ng-template #tolTemplate>\\n                  <span *ngIf=\\\"!item.codTabelaClonada\\\">\\n                    <strong>Tabela não clonada</strong>\\n                  </span>\\n                  <span *ngIf=\\\"item.codTabelaClonada\\\">\\n                    <table>\\n                      <thead>\\n                        <tr>\\n                          <td colspan=\\\"2\\\">Tabela Clonada</td>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          <th class=\\\"text-left\\\">Percentual de Acréscimo:&nbsp;</th>\\n                          <td> {{ item.percentualAcrescimo / 100 | percent : '0.2-2' }}</td>\\n                        </tr>\\n                        <tr>\\n                          <th class=\\\"text-left\\\">Percentual de Desconto:&nbsp;</th>\\n                          <td> {{ item.percentualDesconto / 100 | percent : '0.2-2' }}</td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </span>\\n                </ng-template>\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\n                  <i class=\\\"far fa-clone\\\" [ngClass]=\\\"{'text-warning': item.codTabelaClonada}\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Clonar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onClone(item, modalClone)\\\">\\n                  <i class=\\\"fas fa-clone\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>        \\n      </custom-table>\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      \\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\n        <div class=\\\"d-flex w-100\\\" *ngIf=\\\"otherDados2.length == 0\\\">\\n          <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n          <strong>Carregando itens...</strong>\\n        </div>\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"otherDados2.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód Grupo</th>\\n              <th scope=\\\"col\\\">Grupo</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód Material</th>\\n              <th scope=\\\"col\\\">Material</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor='let item of otherDados2'>\\n              <td class=\\\"text-center\\\">{{ item.info.codGrupo }}</td>\\n              <td>{{ item.info.nomeGrupo }}</td>\\n              <td class=\\\"text-center\\\">{{ item.info.codMaterial }}</td>\\n              <td>{{ item.info.nomeMaterial }}</td>\\n              <td>\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\n                  <i class=\\\"fas fa-money-bill-wave\\\" placement=\\\"left\\\" id=\\\"tooltip-preco\\\"        \\n                  [tooltip]=\\\"tooltip\\\">\\n                  <ng-template #tooltip>\\n                  <div style=\\\"width: 100px;\\\">\\n                    <span *ngFor=\\\"let item2 of item.precos; let i = index;\\\">\\n                      {{ item2.ufDestino + ': R$ '}} {{  item2.valorMaterial | number:'1.2-2'  }}<br>\\n                    </span>\\n                  </div>\\n                  </ng-template>\\n                  </i>\\n                </button>              \\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\\n<ng-template #modalClone>\\n  <comercial-tabela-preco-clone (close)=\\\"modalRef.hide()\\\" [formValue]=\\\"tabelaPreco\\\"></comercial-tabela-preco-clone>\\n</ng-template>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\"> \\n<button type=\\\"button\\\">\\n    <i class=\\\"fas fa-building\\\" placement=\\\"bottom\\\"   \\n    [tooltip]=\\\"tooltip\\\">\\n    <ng-template #tooltip>\\n    <div style=\\\"width: 190px !important; font-size:0.60rem; text-align: center;\\\">\\n      <span *ngFor=\\\"let empresa of empresas; let i = index;\\\">\\n        {{ 'ID '+ empresa.codDeposito }} {{ ' - ' + empresa.nomeDeposito }}<br>\\n      </span>\\n    </div>\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!empresas > 0\\\">\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n      <strong>Carregando itens...</strong>\\n    </div>\\n    </ng-template>\\n    </i>\\n  </button>             \\n<button type=\\\"button\\\" (click)=\\\"downloadModel()\\\">\\n    Baixar arquivo de modelo\\n</button>\\n\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">   \\n  <div class=\\\"row\\\">    \\n    <div class=\\\"col-12 text-center\\\">\\n      <div class=\\\"text-center\\\" *ngIf=\\\"!nomePreco\\\">\\n        <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2 text-center\\\"></div>\\n      </div>\\n      <h3 *ngIf=\\\"nomePreco\\\">{{ codPreco }} - {{ nomePreco | uppercase}}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-1\\\">\\n        <label\\n          for=\\\"novoCsv\\\"\\n          class=\\\"d-flex justify-content-start align-items-center\\\"\\n          style=\\\"cursor: pointer\\\">\\n          <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\n            <i class=\\\"fas fa-plus\\\"></i>\\n            <span>Enviar</span>\\n          </p>\\n        </label>\\n        <input            \\n            id=\\\"novoCsv\\\"\\n            type=\\\"file\\\" \\n            class=\\\"d-none\\\" \\n            accept=\\\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\\\"\\n            (change)=\\\"changeListener($event)\\\"/>       \\n      </div>\\n      <div class=\\\"col-1\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\n        <i class=\\\"fas fa-question-circle\\\" placement=\\\"top\\\" [tooltip]=\\\"tooltip\\\">\\n          <ng-template #tooltip>\\n            <div style=\\\"width: 190px !important; font-size:0.63rem; text-align: center;\\\">\\n              <span *ngFor=\\\"let empresa of empresas; let i = index;\\\">\\n                {{ 'ID '+ empresa.codDeposito }} {{ ' - ' + empresa.nomeDeposito }}<br>\\n              </span>\\n            </div>\\n            <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!empresas > 0\\\">\\n              <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n              <strong>Carregando itens...</strong>\\n            </div>\\n          </ng-template>\\n        </i>\\n        </button>\\n      </div>\\n      <div class=\\\"col-8\\\">\\n      </div>      \\n      <div class=\\\"col-2\\\">\\n        <div class=\\\"d-flex justify-content-around\\\">         \\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"clearValues()\\\" [disabled]=\\\"!content\\\">\\n            Limpar\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!content\\\" (click)=\\\"updateValues(template)\\\">\\n            Importar\\n            </button>                \\n        </div>         \\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n        <div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">              \\n              <custom-table [config]=\\\"tableConfigAssocGrupos\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\">Grupos associados</th>    \\n                    <th class=\\\"text-center\\\">Informações</th>       \\n                  </tr>                        \\n                </ng-template>                \\n                <ng-template #tbody let-tbody *ngIf=\\\"dados\\\">\\n                  <tr *ngFor=\\\"let item of dados.assocGrupos; let i = index\\\"\\n                  onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\n                    <td>\\n                      {{ item.codGrupo }} - {{ item.nomeGrupo | uppercase }}\\n                    </td>    \\n                    <td class=\\\"text-center\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\n                        <i class=\\\"fas fa-money-bill-wave\\\" placement=\\\"left\\\" id=\\\"tooltip-preco\\\"        \\n                        [tooltip]=\\\"tooltip\\\">\\n                        <ng-template #tooltip>\\n                        <div style=\\\"width: 190px; font-size: 0.57rem\\\">\\n                          <span *ngFor=\\\"let item2 of item.precos; let i = index;\\\">\\n                            {{ item2.nomeEmpresa | uppercase  }} - {{ item2.ufDestino + ': R$ '}} {{  item2.valorMaterial | number:'1.2-2'  }}<br>\\n                          </span>\\n                        </div>\\n                        </ng-template>\\n                        </i>\\n                      </button>              \\n                    </td>                                                \\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>          \\n        </div>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n      <custom-table *ngIf=\\\"headers\\\">\\n        <ng-template #thead let-thead>\\n          <tr>            \\n            <th scope=\\\"col\\\">Código</th>\\n            <th scope=\\\"col\\\">Depósito</th>\\n            <th scope=\\\"col\\\">UF</th> \\n            <th scope=\\\"col\\\">Valor</th>\\n            <th scope=\\\"col\\\">Situação \\n              <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"> \\n              <i class=\\\"fas fa-exclamation-circle\\\" placement=\\\"left\\\" [tooltip]=\\\"tooltip2\\\">\\n              <ng-template #tooltip2>\\n                <div>\\n                  <span>\\n                    Mostrará se o código do grupo já está cadastrado (OK) ou não (SEM CADASTRO)\\n                  </span>\\n                </div>           \\n              </ng-template>\\n              </i>\\n            </button>\\n            </th>                    \\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody *ngIf=\\\"content\\\">\\n            <tr *ngFor=\\\"let row of content\\\">\\n                <td *ngFor=\\\"let col of row\\\">\\n                  {{ col }}\\n                </td>              \\n              </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n  </div>\\n</app-body>\\n\\n<ng-template #template>\\n  <div class=\\\"modal-header\\\">\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\n    Registros atualizados do item {{ codPreco }} - {{ nomePreco }} \\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\" style=\\\"height:350px; overflow-x: hidden; overflow-y: scroll;\\\" (onClose)=\\\"select.handleClearClick()\\\">  \\n    <div *ngIf=\\\"elementsAdded.length == 0\\\">\\n      <p>Nenhum item foi atualizado.</p>\\n    </div>  \\n      <custom-table [config]=\\\"tableConfigPrecos\\\" class=\\\"m-3\\\" *ngIf=\\\"elementsAdded.length > 0\\\">    \\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Código</th>\\n            <th scope=\\\"col\\\">Depósito</th>\\n            <th scope=\\\"col\\\">UF</th>\\n            <th scope=\\\"col\\\">Valor</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody *ngIf=\\\"elementsAdded.length > 0\\\">\\n          <tr  *ngFor=\\\"let a of elementsAdded;\\\">\\n            <td> \\n             {{ a.codGrupo }}\\n            </td>  \\n            <td> \\n              {{ a.codEmpresa }}\\n             </td> \\n             <td> \\n              {{ a.ufDestino }}\\n             </td> \\n             <td> \\n              {{ a.valorMaterial | number:'1.2-2'}}\\n             </td>       \\n          </tr>\\n        </ng-template>\\n      </custom-table>    \\n    </div>\\n</ng-template>\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"],"sourceRoot":"webpack:///"}