{"version":3,"sources":["./src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.html","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.ts","./src/app/modules/comercial/gestao/tabela-precos/tabela-precos.module.ts","./src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.ts","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.ts","./src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.scss","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/gestao/tabela-precos/tabela-precos.service.ts","./src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.ts","./src/app/modules/comercial/gestao/tabela-precos/modais/clone/clone.component.ts","./src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.html","./src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.scss","./src/app/modules/comercial/gestao/tabela-precos/visao-comercial/visao-comercial.component.scss","./src/app/modules/comercial/gestao/tabela-precos/tabela-precos-routing.module.ts","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.scss","./src/app/modules/comercial/gestao/tabela-precos/formulario/formulario.component.html","./src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.scss","./src/app/modules/comercial/gestao/tabela-precos/lista/lista.component.html","./src/app/modules/comercial/gestao/tabela-precos/importar-csv/importar-csv.component.html","./src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wQAAyM,+lEAA+lE,uEAAuE,+bAA+b,uEAAuE,moBAAmoB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv7G;AAC0B;AAG5B;AACrB;AACyB;AAO1D;AACkB;AACC;AAE3C,YAAY;AACsB;AAKlC,WAAW;AACsE;AACM;AAKvF,gBAAgB;AAC+D;AAC1B;AACY;AACf;AAElD,2EAAY,CAAC,OAAO,EAAE,gEAAU,CAAC,CAAC;IAOrB,8CAA8C,SAA9C,8CAA8C;IAyEzD,YACU,WAAwB,EACxB,cAA8B,EAC9B,WAAwB,EACxB,aAA8B,EAC9B,cAA8B,EAC9B,cAA8B,EAC9B,mBAAwC,EACxC,cAA8B,EAC9B,QAAkB,EAClB,mBAAuD,EACvD,MAAc;QAVd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAiB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAClB,wBAAmB,GAAnB,mBAAmB,CAAoC;QACvD,WAAM,GAAN,MAAM,CAAQ;QAnFjB,UAAK,GAAG,gDAAK,CAAC;QACrB,qBAAgB,GAAG,IAAI,CAAC;QAMxB,gBAAW,GAAkB,EAAE,CAAC;QAEhC,mBAAc,GAAsB,EAAE,CAAC;QAMvC,gBAAW,GAAG,KAAK,CAAC;QACpB,mBAAc,GAAG,KAAK,CAAC;QACvB,qBAAgB,GAAG,KAAK,CAAC;QACzB,yBAAoB,GAAG,KAAK,CAAC;QAG7B,oBAAe,GAAW,IAAI,CAAC;QAE/B,UAAK,GAAe,EAAE,CAAC;QACvB,iBAAY,GAAkB,EAAE,CAAC;QACjC,gBAAW,GAAkB,EAAE,CAAC;QAChC,aAAQ,GAAe,EAAE,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAS1B,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QAEnB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QAIpB,eAAU,GAAG,IAAI,CAAC;QAClB,iBAAY,GAAG,KAAK,CAAC;QAIrB,WAAM,GAAe,EAAE,CAAC;QACxB,YAAO,GAAe,EAAE,CAAC;QAIzB,2BAAsB,GAA+B;YACnD,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,GAAG;YACf,KAAK,EAAE,KAAK;SACb,CAAC;QAEF,sBAAiB,GAA+B;YAC9C,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,GAAG;YACf,KAAK,EAAE,KAAK;SACb,CAAC;QAEF,YAAO,GAAG,EAAE,CAAC;QACb,iBAAY,GAAG,GAAG,CAAC;QACnB,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QAeb,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAC3B,EAAE,EACF,EAAE,cAAc,EAAE,iBAAiB,EAAE,EACrC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAC1B,EAAE,eAAe,EAAE,KAAK,EAAE,CAC3B,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IAClD,CAAC;IAED,4CAA4C;IAC5C,+BAA+B;IAC/B,yDAAyD;IACzD,6CAA6C;IAC7C,mDAAmD;IACnD,MAAM;IACN,IAAI;IAEJ,QAAQ,CAAC,GAAG;QAEV,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACpC,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,eAAe,GAAG,CAAC,OAAO,CAAC,CAAC;aAElC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,CAAC,EAAE,IAAI;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC;IAElD,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACnD,IAAI,MAAM,CAAC,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,GAAG,yBAAyB,CAAC;gBAC1C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC;gBACxC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;aACxB;YAED,IAAI,CAAC,cAAc,GAAG;gBACpB;oBACE,SAAS,EAAE,MAAM;oBACjB,UAAU,EAAE,iBAAiB;iBAC9B;gBACD;oBACE,SAAS,EAAE,QAAQ;oBACnB,UAAU,EAAE,qBAAqB,MAAM,CAAC,WAAW,EAAE;iBACtD;gBACD;oBACE,SAAS,EAAE,kBAAkB;oBAC7B,UAAU,EAAE,qBAAqB,MAAM,CAAC,WAAW,sBAAsB;iBAC1E;gBACD;oBACE,SAAS,EAAE,IAAI,CAAC,QAAQ;iBACzB;aACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAuD;IACvD,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE5D,IAAI,QAAQ,EAAE;YACZ,MAAM,QAAQ,GAAQ,QAAQ,CAAC,IAAI,CAAC;YAEpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,QAAQ,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAC7B,SAAS,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACtD,0CAA0C;gBAE1C,mBAAmB,EAAE,QAAQ,CAAC,mBAAmB;oBAC/C,CAAC,CAAC;wBACA,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAClC,QAAQ,CAAC,mBAAmB,EAC5B,KAAK,CACN;wBACD,CAAC,yDAAU,CAAC,QAAQ,CAAC;qBACtB;oBACD,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBAExD,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;oBAC3C,CAAC,CAAC;wBACA,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAClC,QAAQ,CAAC,iBAAiB,EAC1B,KAAK,CACN;qBACF;oBACD,CAAC,CAAC,EAAE;gBAEN,sBAAsB,EAAE,QAAQ,CAAC,sBAAsB;oBACrD,CAAC,CAAC,CAAC,QAAQ,CAAC,sBAAsB,CAAC;oBACnC,CAAC,CAAC,CAAC;gBAEL,sBAAsB,EAAE,QAAQ,CAAC,sBAAsB;oBACrD,CAAC,CAAC,CAAC,QAAQ,CAAC,sBAAsB,CAAC;oBACnC,CAAC,CAAC,CAAC;gBAEL,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;aACxC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAE9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACnD;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,WAAW,EAAE,CAAC,IAAI,CAAC;YACnB,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,UAAU,EAAE,CAAC,IAAI,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAGD,cAAc;QACZ,IAAI,CAAC,mBAAmB;aACrB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;aACxC,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC3B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;gBACnE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAE/C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;oBACnD,IAAI,UAAkB,CAAC;oBAEvB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;wBAC/B,UAAU,GAAG,aAAa,CAAC;qBAC5B;yBAAM;wBACL,UAAU,GAAG,UAAU,CAAC;qBACzB;oBAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;wBACjC,UAAU,EAAE,IAAI,CAAC,cAAc;qBAChC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;iBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;gBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK,EAC1B;gBACA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC9C;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,oCAAoC;IACpC,QAAQ;QAEN,wDAAwD;QACxD,0BAA0B;QAC1B,WAAW;QACX,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACjD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,mBAAmB;qBACrB,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;qBAC9C,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,CAAC,CAAC,CACH;qBACA,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;wBACtB,IACE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;4BAClC,QAAQ,CAAC,OAAO,KAAK,IAAI,EACzB;4BACA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;4BAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;4BACzB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;4BAE/C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;gCACnD,IAAI,UAAkB,CAAC;gCAEvB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;oCAC/B,UAAU,GAAG,aAAa,CAAC;iCAC5B;qCAAM;oCACL,UAAU,GAAG,UAAU,CAAC;iCACzB;gCAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;oCACjC,UAAU,EAAE,IAAI,CAAC,cAAc;iCAChC,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC;yBACJ;6BAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;4BAClC,QAAQ,CAAC,OAAO,KAAK,KAAK,EAC1B;4BACA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;yBAC9C;6BAAM;4BACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;yBAC7B;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;wBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC9B,CAAC;iBACF,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,iCAAiC,CAAC,CAAC;aAC/D;SACF;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;SACtD;QACD,IAAI;IACN,CAAC;IAED,mBAAmB;QACjB,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,KAAK,IAAI,EAAE;YACvC,OAAO,GAAG,KAAK,CAAC;SACjB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,gBAAgB,CAAC,QAA0B,EAAE,KAAK,EAAE,IAAS;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAE5D,CAAC;IAED,kBAAkB,CAAC,QAA0B,EAAE,CAAS,EAAE,IAAS;QACjE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,MAAM,MAAM,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;SAC9B,CAAC;QACF,IAAI,CAAC,mBAAmB;aACrB,cAAc,CAAC,MAAM,CAAC;aACtB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBACnE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;oBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;iBAE1D;qBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;oBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK,EAC1B;oBACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,SAAS,CAAC,QAA0B,EAAE,KAAK,EAAE,IAAI;QAC/C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC5D,CAAC;IAGD,mBAAmB,CAAC,OAAO;QACzB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE;YAChD,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACpB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAClC,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBACzG,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,qBAAqB;QAE9C,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAC3C,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,CAAC,GAAG,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACtD,IAAI,IAAI,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;iBAC7E;gBACD,CAAC,EAAE,CAAC;YACN,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,kBAAkB,CAAC,KAAK;QACtB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;QAC1D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,8CAA8C;IAC9C,SAAS,CAAC,MAAqB;QAC7B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;aAClD;SACF;IACH,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAc,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,UAAU,CACR,KAAkB,EAClB,cAAuB,EACvB,MAAc;QAEd,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;YAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACrB,QAAQ,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAC1B,SAAS,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;gBAC5B,MAAM,EACJ,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;oBACrC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;gBAChC,MAAM,EAAE,CAAC,MAAM,CAAC;aACjB,CAAC,CACH,CAAC;YAEF,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,CAAC,EAAE,CAAC,CAAC;gBACL,IAAI,IAAI,CAAC,sBAAsB,CAAC,WAAW,KAAK,KAAK,EAAE;oBACrD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,sBAAsB,CAAC,WAAW,GAAG,IAAI,CAAC;oBAE/C,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACzB,CAAC,EAAE,CAAC,CAAC,CAAC;iBACP;aACF;YAED,IAAI,cAAc,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;aACzB;SACF;IACH,CAAC;IAED,gBAAgB,CAAC,KAAkB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,EAAE;YAClD,OAAO,EAAE,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,KAAU,EAAE,cAAuB,EAAE,MAAc;QAC5D,IAAI,KAAK,EAAE;YACT,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;gBAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE9B,IAAI,MAAM,KAAK,kBAAkB,EAAE;oBACjC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;oBAClD,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;wBAChC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;4BAClC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gCACzC,OAAO;oCACL,aAAa,EAAE,QAAQ,CAAC,aAAa;oCACrC,UAAU,EAAE,QAAQ,CAAC,UAAU;oCAC/B,WAAW,EAAE,QAAQ,CAAC,WAAW;oCACjC,UAAU,EAAE,QAAQ,CAAC,UAAU;oCAC/B,SAAS,EAAE,QAAQ,CAAC,SAAS;oCAC7B,aAAa,EAAE,QAAQ,CAAC,aAAa;iCACtC;4BACH,CAAC,CAAC,CAAC;4BACH,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACtB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;yBACzB;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC,CAAC;iBACJ;gBAED,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;aACzB;YAED;;gBAEI;SACL;QAED,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;SACzB;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACpC,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,KAAK,EAAE;oBAC3C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,IAAI,CAC3D,OAAO,CACR,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,gBAAgB,CAAC,GAAQ;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,IAAI,CAClE,CAAC,EAAO,EAAE,EAAE;YACV,OAAO,CACL,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,CACnE,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,IAAS,EAAE,KAAa;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE;YACnD,IAAI,QAAQ,EAAE;gBACZ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,IAAI,SAAS,EAAE;oBACjE,IAAI,CAAC,mBAAmB;yBACrB,qBAAqB,CAAC,IAAI,CAAC;yBAC3B,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;wBACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC5B,CAAC,CAAC,CACH;yBACA,SAAS,CAAC;wBACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;4BAC/B,IAAI,QAAQ,CAAC,OAAO,EAAE;gCACpB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;oCACxC,IAAI,WAAW,GACb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CACzB,IAAI,CAAC,eAAe,CACrB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oCAEzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CACzB,IAAI,CAAC,eAAe,CACrB,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iCACjC;gCACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;6BACpC;iCAAM;gCACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;6BAC7B;wBACH,CAAC;wBACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;4BACpB,IACE,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC;gCACtC,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,EAAE,CAAC,EAClD;gCACA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;6BACjD;iCAAM;gCACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;6BAC7B;wBACH,CAAC;qBACF,CAAC,CAAC;iBACN;qBAAM;oBACL,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;wBACxC,IAAI,WAAW,GACb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,OAAO,CAC9D,IAAI,CACL,CAAC;wBAEJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,MAAM,CAC7D,WAAW,EACX,CAAC,CACF,CAAC;qBACH;oBACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC3B;aACF;YACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,KAAa;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CACvC,CAAC,EAAE,EAAE,EAAE,CACL,EAAE,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CACvE,CAAC;QAEF,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,IAAI,CAAC;;YAClC,OAAO,KAAK,CAAC;IACpB,CAAC;IAED,gBAAgB;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAY,CAAC;QACvD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,IAAI,UAAU,CAAC,CAAC;QAC5E,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,kBAAkB,CAAC,CAAC;IACnD,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEhD,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACpC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,aAAa,CAAC,KAAa,EAAE,IAAS;QACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACnC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAErC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE,CAC3E,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CACpD,CAAC;QAEF,IAAI;IACN,CAAC;IAED,UAAU,CAAC,QAA0B;QACnC,IAAI,IAAI,CAAC,oBAAoB,KAAK,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YACvE,IAAI,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE,CACnD,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CACrD,CAAC;SACH;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtB;IACH,CAAC;IAED,gBAAgB,CAAC,QAA0B;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,mBAAmB,CAAC,QAA0B;QAC5C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAGD,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CACzC,UAAU,EACV,WAAW,EACX,yEAAyE,EACzE,UAAU,EACV,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CACzC,UAAU,EACV,wBAAwB,EACxB,wEAAwE,EACxE,UAAU,EACV,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CACzC,QAAQ,EACR,oBAAoB,EACpB,yDAAyD,EACzD,UAAU,EACV,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,QAAa,EAAE,SAAc;QAC9C,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CACzC,QAAQ,EACR,oBAAoB,EACpB,sDAAsD,GAAG,QAAQ,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,EAC5F,UAAU,EACV,WAAW,CACZ,CAAC;IACJ,CAAC;IAGD,WAAW,CAAC,KAAa,EAAE,QAAgB;QACzC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,MAAM,EAAE;YACxD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClC;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,EAAE;YACtE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;gBACnD,IAAI,CAAC,mBAAmB;qBACrB,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC;qBACzD,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,CAAC,CACH;qBACA,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;wBAC/B,IAAI,QAAQ,CAAC,OAAO,EAAE;4BACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;yBAClC;6BAAM;4BACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;yBAC7B;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;wBACpB,IACE,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC;4BACtC,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,EAAE,CAAC,EAClD;4BACA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;yBACjD;6BAAM;4BACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;yBAC7B;oBACH,CAAC;iBACF,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc,CAAC,QAAa;QAC1B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,CAAC,EAAE;gBACnC,MAAM,KAAK,GAAG;oBACZ,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ;oBACpC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS;iBACvC,CAAC;gBACF,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,MAAM,CAAC,MAAM;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,mBAAmB;aACrB,SAAS,CAAC,MAAM,CAAC;aACjB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBAC7B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBACzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;qBAAM,IAAI,QAAQ,CAAC,OAAO,KAAK,KAAK,EAAE;oBACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC1B;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAEjC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,YAAY,CAAC,KAAa,EAAE,KAAU;QACpC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC;YAC/C,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtB,IAAI,QAAQ,CAAC,YAAY,KAAK,GAAG,EAAE;oBACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAChC,yBAAyB;iBAC1B;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACtB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE;YACxB,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE;gBAC5D,OAAO,UAAU,CAAC;aACnB;SACF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;YACvC,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxE,QAAQ;gBACN,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC;SACnE;QAED,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;IAED,UAAU,CAAC,MAAW;QACpB,IAAI,WAAW,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAChD,IAAI,SAAS,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,mBAAmB,EAAE,WAAW;YAChC,eAAe,EAAE,SAAS;SAC3B,CAAC,CAAC;QAEH,IAAI,WAAW,YAAY,IAAI,EAAE;YAC/B,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;SAC9D;QAED,IAAI,SAAS,YAAY,IAAI,EAAE;YAC7B,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;SAC1D;QAED,OAAO;YACL,WAAW,EAAE,WAAW;YACxB,SAAS,EAAE,SAAS;SACrB,CAAC;IACJ,CAAC;CACF;;YAt+BC,0DAAW;YAJJ,8DAAc;YAmBd,+EAAW;YAOX,yEAAe;YAEf,mEAAc;YARd,qFAAc;YAxBd,uGAAmB;YAKnB,+FAAc;YASd,yDAAQ;YAfR,yFAAkC;YAKlB,sDAAM;;AAsClB,8CAA8C;IAL1D,+DAAS,CAAC;QACT,QAAQ,EAAE,2CAA2C;QACrD,uFAA0C;;KAE3C,CAAC;mFA2EuB,0DAAW;QACR,8DAAc;QACjB,+EAAW;QACT,yEAAe;QACd,mEAAc;QACd,qFAAc;QACT,uGAAmB;QACxB,+FAAc;QACpB,yDAAQ;QACG,yFAAkC;QAC/C,sDAAM;GApFb,8CAA8C,CAo8B1D;AAp8B0D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CmB;AACrC;AACM;AACmB;AAElE,gBAAgB;AAC4C;AACN;AACQ;AAE9D,YAAY;AAC0C;AACF;AAEpD,oBAAoB;AACmC;AAEvD,UAAU;AACoE;AAE9E,UAAU;AACgF;AACtB;AACQ;AACwC;AAClE;AAElD,aAAa;AACuE;AACe;AAEnG,WAAW;AACkE;AACO;AAC4B;AACR;IA6B3F,iCAAiC,SAAjC,iCAAiC;CAAG;AAApC,iCAAiC;IA3B7C,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iGAAyC;YACzC,gHAA8C;YAC9C,iGAAkC;YAClC,6HAAiD;YACjD,qHAA+C;SAChD;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,yEAAgB,CAAC,OAAO,EAAE;YAC1B,mEAAa;YACb,mEAAc;YACd,qEAAkB;YAClB,iEAAc;YACd,uGAAwC;YACxC,kFAAY;YACZ,0FAAe;YACf,oFAAwB;YACxB,2HAA0C;YAC1C,2EAAkB,CAAC,OAAO,EAAE;YAC5B,gEAAW,CAAC,OAAO,EAAE;SACtB;QACD,SAAS,EAAE,CAAC,4FAAc,EAAE,0FAAkC,CAAC;KAChE,CAAC;GACW,iCAAiC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DiE;AAC7D;AACO;AAMjC;AAGmC;AAChB;AAE3C,gBAAgB;AAC+D;AAC1B;AAEH;AAClD,2EAAY,CAAC,OAAO,EAAE,gEAAU,CAAC,CAAC;AAElC,WAAW;AACmE;AACA;AACG;AACL;AAGmB;IAUlF,iDAAiD,SAAjD,iDAAiD;IA0C5D,YACU,OAA2C,EAC3C,cAA8B,EAC9B,WAAwB,EACxB,aAA8B,EAC9B,WAAwB,EACxB,MAAc,EACd,aAA4B,EAC5B,qBAA8D,EAC9D,cAA8B,EAC9B,QAAkB,EAClB,kBAAsC;QAVtC,YAAO,GAAP,OAAO,CAAoC;QAC3C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAiB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,0BAAqB,GAArB,qBAAqB,CAAyC;QAC9D,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAClB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAlDhD,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QACpB,YAAO,GAAG,IAAI,CAAC;QACf,kBAAa,GAAG,KAAK,CAAC;QACtB,oBAAe,GAAG,KAAK,CAAC;QAExB,cAAS,GAAG,EAAE,CAAC;QACf,UAAK,GAAG,EAAE,CAAC;QACX,kBAAa,GAAG,EAAE,CAAC;QAEnB,sBAAiB,GAAW,CAAC,CAAC;QAC9B,wBAAmB,GAAW,EAAE,CAAC;QAEjC,mBAAc,GAAsB,EAAE,CAAC;QAGvC,YAAO,GAAG,cAAc,CAAC;QACzB,cAAS,GAAG,KAAK,CAAC;QAGlB,gBAAW,GAA+B;YACxC,cAAc,EAAE,IAAI;SACrB,CAAC;QAEF,WAAM,GAAe,EAAE,CAAC;QACxB,YAAO,GAAe,EAAE,CAAC;QAEzB,YAAO,GAAG,EAAE,CAAC;QACb,iBAAY,GAAG,GAAG,CAAC;QACnB,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QACf,UAAK,GAAW,CAAC,CAAC;QAClB,QAAG,GAAW,EAAE,CAAC;QAIjB,aAAQ,GAAG,oCAAoC,CAAC;QAe9C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAC3B,EAAE,EACF,EAAE,cAAc,EAAE,iBAAiB,EAAE,EACrC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAC1B,EAAE,eAAe,EAAE,KAAK,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,WAAW;QACT,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;IACjD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,MAAM,EAAE,CAAC,CAAC,CAAC;YACX,WAAW,EAAE,CAAC,IAAI,CAAC;YACnB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,QAAQ,EAAE,CAAC,CAAC,CAAC;YACb,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,MAAM,EAAE,CAAC,IAAI,CAAC;YACd,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,SAAS,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACnD,IAAI,CAAC,cAAc,GAAG;gBACpB;oBACE,SAAS,EAAE,MAAM;oBACjB,UAAU,EAAE,aAAa;iBAC1B;gBACD;oBACE,SAAS,EAAE,QAAQ;oBACnB,UAAU,EAAE,qBAAqB,MAAM,CAAC,WAAW,EAAE;iBACtD;gBACD;oBACE,SAAS,EAAE,IAAI,CAAC,QAAQ;iBACzB;aACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,4BAA4B;YAC/B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;gBACtD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;oBACzB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;oBAC3B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;iBAC/B;YACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,2BAA2B;YAC9B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE;gBAC7D,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvC,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBAC7B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO;aACT,UAAU,EAAE;aACZ,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;aACxB,SAAS,CAAC,CAAC,QAAsB,EAAE,EAAE;YACpC,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;gBACnE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;oBACnB,QAAQ,EAAE,CAAC;oBACX,SAAS,EAAE,cAAc;iBAC1B,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACP,IAAI,CAAC,qBAAqB;aACvB,eAAe,EAAE;aACjB,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;aACxB,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC3B,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,KAAK,GAAG,EAAE;gBACpC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;oBAClB,EAAE,EAAE,CAAC;oBACL,SAAS,EAAE,cAAc;iBAC1B,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,WAAgB;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,OAAO;aACT,YAAY,CAAC,WAAW,CAAC;aACzB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBACnE,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBACzB;qBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;oBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK;oBAC1B,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC;oBACnC,QAAQ,CAAC,QAAQ,KAAK,IAAI,EAC1B;oBACA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;iBAC7D;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB,CAAC,IAAS;QAC5B,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC;QAE7C,IAAI,MAAM,GAAQ,EAAE,CAAC;QAErB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC5C,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE1C,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE7C,IAAI,CAAC,OAAO;aACT,oBAAoB,CAAC,MAAM,CAAC;aAC5B,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBACnE,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC;oBACnC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC/C;qBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;oBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK;oBAC1B,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC;oBACnC,QAAQ,CAAC,QAAQ,KAAK,IAAI,EAC1B;oBACA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBACxB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC7C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBACxB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC7C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;iBAC7D;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC7C,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE3B,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;gBACd,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI;oBAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;oBAC3D,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QAED,wBAAwB;QACxB,+CAA+C;QAC/C,gDAAgD;QAChD,6CAA6C;QAC7C,IAAI;QAEJ,qBAAqB;QACrB,4CAA4C;QAC5C,0CAA0C;QAC1C,wCAAwC;QACxC,IAAI;QAEJ,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,EAAE;YAChB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBACtC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;QAED,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACzB;SACF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAE3C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,WAAW;IACX,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACpE,UAAU,EAAE,IAAI,CAAC,cAAc;SAChC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE;YACxB,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE;gBAC5D,OAAO,UAAU,CAAC;aACnB;SACF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;YACvC,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxE,QAAQ;gBACN,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC;SACnE;QAED,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,IAAI,WAAmB,CAAC;QAExB,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;YAC1B,WAAW,GAAG,eAAe,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;YACjC,WAAW,GAAG,gBAAgB,CAAC;SAChC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,aAAa,CAAC,KAAuB;QACnC,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC;QACnD,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC;IAC7C,CAAC;CACF;;YA5ZQ,0FAAkC;YArBlC,8DAAc;YAGrB,0DAAW;YAUJ,wEAAe;YASf,+EAAW;YAtBK,sDAAM;YAuBtB,0FAAa;YAzBb,kHAAuC;YAsBvC,4FAAc;YAVd,wDAAQ;YAgBR,6GAAkB;;AAUd,iDAAiD;IAL7D,+DAAS,CAAC;QACT,QAAQ,EAAE,+CAA+C;QACzD,4FAA+C;;KAEhD,CAAC;mFA4CmB,0FAAkC;QAC3B,8DAAc;QACjB,0DAAW;QACT,wEAAe;QACjB,+EAAW;QAChB,sDAAM;QACC,0FAAa;QACL,kHAAuC;QAC9C,4FAAc;QACpB,wDAAQ;QACE,6GAAkB;GArDrC,iDAAiD,CA6Y7D;AA7Y6D;;;;;;;;;;;;;;;;;;;;ACvCnB;AACU;AAErD,aAAa;AACqD;IAKrD,mBAAmB,SAAnB,mBAAmB;IAC9B,YAAoB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;IAAG,CAAC;IAEpD,WAAW,CACT,IAAY,EACZ,KAAa,EACb,OAAe,EACf,SAAkB,EAClB,KAAc;QAEd,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8EAAqB,EAAE;YAC7D,QAAQ,EAAE,KAAK;YACf,mBAAmB,EAAE,IAAI;YACzB,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QAEH,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QAC7B,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAEnC,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,QAAQ,CAAC,OAAO,CAAC,aAAa,GAAG;gBAC/B,+CAA+C;gBAC/C,mCAAmC;aACpC,CAAC;SACH;QAED,IAAI,IAAI,KAAK,YAAY,EAAE;YACzB,QAAQ,CAAC,OAAO,CAAC,aAAa,GAAG;gBAC/B,oCAAoC;aACrC,CAAC;SACH;QAED,IAAI,SAAS,EAAE;YACb,QAAQ,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;SACxC;QAED,IAAI,KAAK,EAAE;YACT,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAChC;QAED,qCAAqC;QACrC,yEAAyE;QACzE,OAA+B,QAAQ,CAAC,OAAQ,CAAC,aAAa,CAAC;IACjE,CAAC;CACF;;YAtDQ,kEAAc;;AAQV,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAEkC,kEAAc;GADrC,mBAAmB,CA8C/B;AA9C+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCT;AAC0D;AAMzD;AAEmC;AACA;AAE3D,gBAAgB;AAC+D;AACd;AACZ;AAEH;AAClD,2EAAY,CAAC,OAAO,EAAE,gEAAU,CAAC,CAAC;AAElC,WAAW;AACmE;AACiB;AACjB;AACG;AACO;AACkB;AAO9B;IAO/D,yCAAyC,SAAzC,yCAAyC;IAsDpD,YACU,cAA8B,EAC9B,WAAwB,EACxB,aAA6B,EAC7B,aAA8B,EAC9B,WAAwB,EACxB,MAAc,EACd,kBAAsC,EACtC,cAA8B,EAC9B,mBAAuD,EACvD,mBAAwC,EACxC,iBAAoC,EACpC,YAA4B,EAC5B,aAA4B;QAZ5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAgB;QAC7B,kBAAa,GAAb,aAAa,CAAiB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAoC;QACvD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,kBAAa,GAAb,aAAa,CAAe;QA1DtC,iBAAY,GAAG,KAAK,CAAC;QACrB,qBAAgB,GAAG,IAAI,CAAC;QAExB,mBAAc,GAAsB,EAAE,CAAC;QAGvC,oBAAe,GAAG,KAAK,CAAC;QAGxB,UAAK,GAAsB,EAAE,CAAC;QAC9B,eAAU,GAAU,EAAE,CAAC;QACvB,gBAAW,GAAU,EAAE,CAAC;QACxB,oBAAe,GAAe,EAAE,CAAC;QAEjC,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QAKnB,gBAAW,GAAG,EAAE,CAAC;QAIjB,gBAAW,GAA+B;YACxC,cAAc,EAAE,IAAI;SACrB,CAAC;QAEF,yBAAoB,GAA+B;YACjD,KAAK,EAAE,KAAK;SACb,CAAC;QAKF,YAAO,GAAG,UAAU,CAAC;QACrB,cAAS,GAAG,KAAK,CAAC;QAIlB,YAAO,GAAG,EAAE,CAAC;QACb,iBAAY,GAAG,GAAG,CAAC;QACnB,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QAiBb,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACnD,IAAI,CAAC,cAAc,GAAG;gBACpB;oBACE,SAAS,EAAE,MAAM;oBACjB,UAAU,EAAE,aAAa;iBAC1B;gBACD;oBACE,SAAS,EAAE,QAAQ;oBACnB,UAAU,EAAE,qBAAqB,MAAM,CAAC,aAAa,CAAC,EAAE;iBACzD;gBACD;oBACE,SAAS,EAAE,kBAAkB;iBAC9B;aACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CACzE,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAEhE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC;gBAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAEvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAChC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,aAAa;IACb,aAAa;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,mBAAmB,EAAE,EAAE;YACvB,iBAAiB,EAAE,EAAE;YACrB,WAAW,EAAE,CAAC,CAAC,CAAC;YAChB,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,MAAM,EAAE,CAAC,IAAI,CAAC;YACd,SAAS,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;YAC9B,SAAS,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACzB;SACF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAE3C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,WAAW;IACX,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QAE1D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACpE,UAAU,EAAE,IAAI,CAAC,cAAc;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,uCAAuC;IACvC,+BAA+B;IAC/B,uCAAuC;IACvC,wDAAwD;IACxD,QAAQ;IACR,yBAAyB;IACzB,IAAI;IAEJ,6BAA6B;IAC7B,0BAA0B;IAE1B,sCAAsC;IACtC,sDAAsD;IACtD,MAAM;IAEN,+CAA+C;IAC/C,wEAAwE;IACxE,MAAM;IAEN,6CAA6C;IAC7C,oEAAoE;IACpE,MAAM;IAEN,uCAAuC;IACvC,wDAAwD;IACxD,MAAM;IAEN,4CAA4C;IAC5C,kDAAkD;IAClD,8CAA8C;IAC9C,kDAAkD;IAElD,mBAAmB;IACnB,IAAI;IAEJ,MAAM,CAAC,MAAW;QAChB,IAAI,CAAC,IAAI,CAAC,gBAAgB;YAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAErD,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,mBAAmB;aACrB,cAAc,CAAC,MAAM,CAAC;aACtB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBACnE,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,mCAAmC;oBACnC,6CAA6C;oBAC7C,2DAA2D;oBAC3D,OAAO;oBACP,kBAAkB;oBAClB,8BAA8B;oBAC9B,MAAM;oBACN,IAAI;iBACL;qBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;oBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK,EAC1B;oBACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,YAAY;QACF,IAAI,KAAK,GAAG;YACV,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;SACb;QACD,IAAI,MAAM,CAAC;QACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC;iBACrD,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAClD,CAAC,CAAC,CACH;iBACA,SAAS,CAAC;gBACX,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;oBACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBACvC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;4BAC/B,IAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAC;gCACxC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gCACzB,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;gCACtB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gCACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oCACpB,MAAM,EAAE,KAAK,CAAC,IAAI;oCAClB,QAAQ,EAAE,KAAK,CAAC,MAAM;iCACvB,CAAC,CAAC;6BACJ;wBACL,CAAC,CAAC,CAAC;oBACT,CAAC,CAAC,CAAC;gBACL,CAAC;aACJ,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;gBACd,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI;oBAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;oBAC3D,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QACD,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC;QAClC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,eAAe;IACf,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,uBAAuB,CAAC;QAChD,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,iCAAiC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,MAAM,MAAM,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,IAAI,CAAC,mBAAmB;aACrB,cAAc,CAAC,MAAM,CAAC;aACtB,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBACnE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAChC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;oBACtB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;qBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;oBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK,EAC1B;oBACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;QAEL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,gBAAgB,GAAG;YACtB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,MAAM,EAAE,EAAE;SACX,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CACzE,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC;QACvC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yCAAyC;IACzC,UAAU,CAAC,KAAa,EAAE,KAAsB;QAC9C,IAAI,CAAC,eAAe,EAAE;aACnB,YAAY,EAAE;aACd,IAAI,CACH,2DAAI,CAAC,CAAC,CAAC,EACP,gEAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CACnB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,0CAAK,CAClD,EACD,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,OAAY,EAAE,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;QACpC,CAAC,CACF,CAAC;IACN,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CACzC,IAAI,EACJ,IAAI,EACJ,yDAAyD,EACzD,UAAU,EACV,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAa,EAAE,KAAU;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,CAAC;IAED,eAAe,CAAC,KAAa,EAAE,KAAU;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAED,YAAY,CAAC,KAAa,EAAE,KAAsB;QAChD,IAAI,CAAC,eAAe,EAAE;aACnB,YAAY,EAAE;aACd,IAAI,CACH,2DAAI,CAAC,CAAC,CAAC,EACP,gEAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CACnB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,0CAAK,CACpD,EACD,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CACH;aACA,SAAS,CACR,CAAC,OAAY,EAAE,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;QACpC,CAAC,CACF,CAAC;IACN,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CACzC,YAAY,EACZ,sBAAsB,EACtB,2DAA2D,EAC3D,UAAU,EACV,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,KAAsB;QACtC,IAAI,WAAmB,CAAC;QAExB,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC,EAAE;YAC3B,WAAW,GAAG,eAAe,CAAC;SAC/B;aAAM,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC,EAAE;YAClC,WAAW,GAAG,gBAAgB,CAAC;SAChC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAS;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACjD,UAAU,EAAE,IAAI,CAAC,aAAa;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,IAAS;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACvD,UAAU,EAAE,IAAI,CAAC,aAAa;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,IAAS,EAAE,QAAQ;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAED,SAAS;IACT,2CAA2C;IAC3C,gDAAgD;IAChD,sCAAsC;IACtC,kCAAkC;IAClC,2CAA2C;IAC3C,uBAAuB;IAEvB,yDAAyD;IACzD,6BAA6B;IAC7B,UAAU;IACV,MAAM;IACN,IAAI;IAEJ,aAAa,CAAC,KAAuB;QACnC,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC;QACxD,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE5D,qDAAqD;QACrD,yBAAyB;QACzB,MAAM;IACR,CAAC;IAED,eAAe,CAAC,KAAsB;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;gBAC9C,OAAO;aACR;SACF;IACH,CAAC;IAED,sBAAsB;IACtB,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE;YACxB,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE;gBAC5D,OAAO,UAAU,CAAC;aACnB;SACF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;YACvC,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxE,QAAQ;gBACN,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC;SACnE;QAED,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;IAED,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/C,QAAQ,EAAE,KAAK;YACf,mBAAmB,EAAE,IAAI;SAC1B,CAAC,CAAC;IACL,CAAC;CACF;;YAhlBQ,8DAAc;YAGrB,0DAAW;YAHJ,8DAAc;YAYM,wEAAe;YAWnC,+EAAW;YAvB6B,sDAAM;YAqB9C,6GAAkB;YADlB,4FAAc;YAEd,0FAAkC;YAGlC,wGAAmB;YADnB,sGAAiB;YAXL,kEAAc;YAmB1B,0FAAa;;;6BAUnB,uDAAS,SAAC,gBAAgB,EAAE,EAAE;;AAHpB,yCAAyC;IALrD,+DAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;QACzC,kFAAqC;;KAEtC,CAAC;mFAwD0B,8DAAc;QACjB,0DAAW;QACT,8DAAc;QACd,wEAAe;QACjB,+EAAW;QAChB,sDAAM;QACM,6GAAkB;QACtB,4FAAc;QACT,0FAAkC;QAClC,wGAAmB;QACrB,sGAAiB;QACtB,kEAAc;QACb,0FAAa;GAnE3B,yCAAyC,CAyiBrD;AAziBqD;;;;;;;;;;;;;AClDtD;AAAe,mFAAoB,0BAA0B,GAAG,6CAA6C,ucAAuc,E;;;;;;;;;;;;;;;;;;;ACCzgB;AAEL;AAEtC,WAAW;AACqE;IAKnE,kDAAkD,SAAlD,kDAAkD;IAE7D,YACU,mBAAuD;QAAvD,wBAAmB,GAAnB,mBAAmB,CAAoC;IAC9D,CAAC;IAEJ,OAAO,CAAC,KAA6B;QACnC,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;YACnC,OAAO,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SAC9D;QAED,gFAAgF;QAChF,OAAO,+CAAE,CAAC;YACR,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,IAAI;gBACf,WAAW,EAAE,IAAI;gBACjB,mBAAmB,EAAE,IAAI;gBACzB,iBAAiB,EAAE,IAAI;gBACvB,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;gBAClB,WAAW,EAAE,EAAE;aAChB;SACF,CAAC,CAAC;IACL,CAAC;CACF;;YAhCQ,yFAAkC;;AAK9B,kDAAkD;IAH9D,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI+B,yFAAkC;GAHtD,kDAAkD,CA2B9D;AA3B8D;;;;;;;;;;;;;;;;;;;;;ACVpB;AACmB;AAEZ;AAElD,cAAc;AAC6C;IAS9C,kCAAkC,SAAlC,kCAAkC;IAG7C,YACY,IAAgB,EAClB,gBAAkC;QADhC,SAAI,GAAJ,IAAI,CAAY;QAClB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJ3B,QAAG,GAAG,oEAAoE,CAAC;IAKzF,CAAC;IAEJ,cAAc,CAAC,SAAc,EAAE;QAC7B,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAChD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IAChG,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC;aAC1B,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,QAAQ,EAAE,CAAC;aACvC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,wEAAwE;IACxE,qBAAqB;IACrB,mDAAmD;IACnD,gCAAgC;IAChC,IAAI;IAEJ,cAAc,CAAC,SAAc,EAAE;QAC7B,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aACvD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS,CAAC,SAAc,EAAE;QACxB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aACvD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,oBAAoB,CAClB,QAAgB,EAChB,MAAY;QAEZ,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aACnE,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,qBAAqB,CAAC,IAAS;QAC7B,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CACL,GAAG,IAAI,CAAC,GAAG,8BAA8B,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAChG;aACA,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,qBAAqB,CACnB,QAAgB,EAChB,QAAgB;QAEhB,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB,QAAQ,IAAI,QAAQ,EAAE,CAAC;aAC3D,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,gBAAgB,CACd,MAAuB,EACvB,MAAc;QAEd,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAEO,SAAS,CACf,MAAuB;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAEO,WAAW,CACjB,MAAuB;QAEvB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAAE,MAAM,CAAC;aACpC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,+EAA+E;IAC/E,+BAA+B;IAC/B,uCAAuC;IACvC,MAAM;IAEN,mCAAmC;IAEnC,IAAI;IAEJ,SAAS,CAAC,MAAW;QACnB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,EAAE,MAAM,CAAC;aACzC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,MAAW;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,mBAAmB,EAAE,MAAM,CAAC;aAC3C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ,CAAC,SAAc,EAAE;QACvB,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aACvD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,QAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,QAAQ,CAAC;aACpC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,EAC5C,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,oBAAoB,CAAC,MAAW;QAE9B,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,qBAAqB,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAC3E,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;CAEF;;YAlMQ,+DAAU;YAKV,mEAAgB;;AASZ,kCAAkC;IAH9C,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAKkB,+DAAU;QACA,mEAAgB;GALjC,kCAAkC,CAoL9C;AApL8C;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBgB;AACd;AAGa;AACG;AAKoB;AAEP;IASjE,+CAA+C,SAA/C,+CAA+C;IA8B1D,YACU,cAA8B,EAC9B,gBAAkC,EAClC,mBAAuD,EACvD,cAA8B,EAC9B,cAA8B;QAJ9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAoC;QACvD,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAjCxC,aAAQ,GAAW,cAAc,CAAC;QAClC,mBAAc,GAAsB,EAAE,CAAC;QACvC,qBAAgB,GAAG,IAAI,CAAC;QAGxB,cAAS,GAAG,EAAE,CAAC;QACf,SAAI,GAAG,EAAE,CAAC;QAKV,aAAQ,GAAG,EAAE,CAAC;QAEd,kBAAa,GAAG,EAAE,CAAC;QAGnB,2BAAsB,GAA+B;YACnD,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,GAAG;YACf,KAAK,EAAE,KAAK;SACb,CAAC;QAEF,sBAAiB,GAA+B;YAC9C,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,GAAG;YACf,KAAK,EAAE,KAAK;SACb,CAAC;IAQE,CAAC;IAGL,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,gCAAgC;IAChC,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC;aACvC,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACpB,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAChC,IAAG,OAAO,CAAC,UAAU,IAAI,CAAC;wBACxB,OAAO,CAAC,UAAU,IAAI,CAAC;wBACvB,OAAO,CAAC,UAAU,IAAI,EAAE;wBACxB,OAAO,CAAC,UAAU,IAAI,EAAE;wBACxB,OAAO,CAAC,UAAU,IAAI,EAAE;wBACxB,OAAO,CAAC,UAAU,IAAI,EAAE,EAAC;wBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,WAAW,EAAE,OAAO,CAAC,UAAU,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAC,CAAC,CAAC;qBAC3F;gBACL,CAAC,CAAC,CAAC;YAAM,CAAC;SACf,CAAC,CAAC;IACL,CAAC;IAED,WAAW;IACX,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,yEAAyE;IACzE,aAAa;QACX,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,UAAU,EAAC,aAAa,EAAC,YAAY,EAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvC,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAChC,GAAG,CAAC,IAAI,CAAE,IAAI,KAAK,CAAC,QAAQ,EAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,EAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YAC9G,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAClB,CAAC;IAED,mDAAmD;IACnD,aAAa;QACX,IAAI,CAAC,mBAAmB;aACrB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAsB,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;oBACnE,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;oBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;oBACtC,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;gBACpB,IAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7B;YACH,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACnD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG;gBACpB;oBACE,SAAS,EAAE,MAAM;oBACjB,UAAU,EAAE,iBAAiB;iBAC9B;gBACD;oBACE,SAAS,EAAE,QAAQ;oBACnB,UAAU,EAAE,qBAAqB,MAAM,CAAC,WAAW,EAAE;iBACtD;gBACD;oBACE,SAAS,EAAE,kBAAkB;oBAC7B,UAAU,EAAE,qBAAqB,MAAM,CAAC,WAAW,sBAAsB;iBAC1E;gBACD;oBACE,SAAS,EAAE,IAAI,CAAC,QAAQ;iBACzB;aACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAuD;IACvD,aAAa;QACX,IAAI,UAAU,GAAG,8BAA8B,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7F,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,yBAAyB,CAAC,CAAC;QACzD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,cAAc,CAAC,SAAS;QACtB,gBAAgB;QAChB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,IAAI,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC;QACjG,IAAG,aAAa,IAAI,KAAK,EAAC;YAC1B,IAAI,MAAM,GAAe,IAAI,UAAU,EAAE,CAAC;YAC1C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAEjC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;gBACtB,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC3C,IAAI,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAG/C,8BAA8B;gBAC9B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1C,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5C,6BAA6B;oBAC7B,IAAI,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACtC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBACvC,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC5C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBACpB;wBACH,kCAAkC;wBAClC,qBAAqB;wBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACxB,IAAI,CAAC,UAAU,EAAE,CAAC;qBACnB;iBACF;YACH,CAAC;SACF;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;SACzE;QACD,4DAA4D;QAC5D,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,+DAA+D;IAC/D,UAAU;QACR,IAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;YACzB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC1C,IAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;oBAClE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACvC,IAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;4BACxC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gCAChC,IAAG,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;uCACvC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;oCACxD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iCAC3B;4BACL,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,2FAA2F,CAAC,CAAC;oBACvH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAClB,MAAM;iBACP;aACF;SACA;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,2FAA2F,CAAC,CAAC;SACxH;IACL,CAAC;IAED,oEAAoE;IACpE,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,qEAAqE;IACrE,YAAY,CAAC,QAA0B;QACvC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACvB,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC3C,IAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,SAAS,EAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACvC,IAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;4BACxC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gCAC5B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gCACjC,IAAG,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;uCACtD,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;uCACzC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;oCAC5B,QAAQ,CAAC,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;wCACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;wCAC1B,UAAU,EAAE,QAAQ,CAAC,UAAU;wCAC/B,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE;wCAC3C,aAAa,EAAE,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC;qCAAC,CAAC,CAAC;iCAEvD;qCAAM,IAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;uCAC7C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc;uCACpC,QAAQ,IAAI,IAAI,EAAG;oCACpB,IAAI,WAAW,CAAC;oCAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wCAC9B,IAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,UAAU,EAAC;4CAC1C,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC;yCACpC;oCACH,CAAC,CAAC,CAAC;oCACH,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;wCAClB,aAAa,EAAE,IAAI;wCACnB,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACxC,WAAW,EAAE,WAAW;wCACxB,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC7B,aAAa,EAAE,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qCAE9C,CAAC,CAAC;oCACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;wCACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;wCAC1B,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACxC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;wCAC3C,aAAa,EAAE,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qCAAC,CAAC,CAAC;iCACnD;4BACP,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;aACF;YACD,gBAAgB;YAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;SAErF;IACL,CAAC;IAEC,SAAS,CAAC,QAAQ;QAChB,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAC;YACjC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5C,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;iBAC3D,SAAS,CAAC;gBACV,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;oBACxB,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,EAAE;wBACnE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;wBACzB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;qBAErB;yBAAM,IACL,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;wBAClC,QAAQ,CAAC,OAAO,KAAK,KAAK,EAC1B;wBACA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;qBAC9C;yBAAM;wBACL,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;qBAC7B;gBACH,CAAC;gBAAE,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;oBAClB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC;aACA,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,oHAAoH,CAAC,CAAC;SACjJ;IACH,CAAC;CAEF;;YA1UQ,8DAAc;YAGd,mEAAgB;YAQhB,yFAAkC;YAFlC,oFAAc;YALd,kEAAc;;AAgBV,+CAA+C;IAL3D,+DAAS,CAAC;QACT,QAAQ,EAAE,6CAA6C;QACvD,yFAA4C;;KAE7C,CAAC;mFAgC0B,8DAAc;QACZ,mEAAgB;QACb,yFAAkC;QACvC,oFAAc;QACd,kEAAc;GAnC7B,+CAA+C,CAsT3D;AAtT2D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBpC;AASD;AAEmB;AAE1C,YAAY;AACsB;AAE6C;AACE;AACT;AACM;IAOjE,kCAAkC,SAAlC,kCAAkC;IAa7C,YACU,WAAwB,EACxB,aAA8B,EAC9B,OAA2C,EAC3C,WAAwB,EACxB,OAAuB;QAJvB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAiB;QAC9B,YAAO,GAAP,OAAO,CAAoC;QAC3C,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAgB;QAjB1B,UAAK,GAAG,+CAAK,CAAC;QAEX,UAAK,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAC/C,cAAS,GAAG,EAAE,CAAC;QAIxB,YAAO,GAAG,IAAI,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;QAWb,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAC3B,EAAE,EACF,EAAE,cAAc,EAAE,iBAAiB,EAAE,EACrC,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAC1B,EAAE,eAAe,EAAE,KAAK,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,qBAAqB;IACvB,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,GAAE;YACvB,OAAO;SACR;QAED,IAAI,YAAY,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,YAAY,CAAC;QAEnD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QAED,IAAI,CAAC,WAAW,CAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,gBAAgB,EAAE,CAAC,IAAI,CAAC;YACxB,mBAAmB,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzE,iBAAiB,EAAE,CAAC,IAAI,CAAC;YACzB,sBAAsB,EAAE,CAAC,IAAI,CAAC;YAC9B,sBAAsB,EAAE,CAAC,IAAI,CAAC;YAC9B,mBAAmB,EAAE,CAAC,IAAI,CAAC;YAC3B,kBAAkB,EAAE,CAAC,IAAI,CAAC;YAC1B,WAAW,EAAE,CAAC,IAAI,CAAC;SACpB,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE3B,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;gBACd,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI;oBAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;oBAC3D,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,gBAAgB,CAAC,MAAM;;QACrB,IACE,MAAM,CAAC,iBAAiB,IAAI,EAAE;YAC9B,MAAM,CAAC,iBAAiB,IAAI,IAAI;YAChC,MAAM,CAAC,iBAAiB,IAAI,SAAS,EACrC;YACA,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC;SAClC;QAED,IAAI,MAAM,CAAC,mBAAmB,IAAI,CAAC,EAAE;YACnC,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACnC;QAED,IAAI,MAAM,CAAC,kBAAkB,IAAI,CAAC,EAAE;YAClC,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAClC;QAED,MAAM,CAAC,kBAAkB,CAAC,eAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,0CAAE,QAAQ,4CAAI,KAAK,EAAE,CAAC;QAEnE,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC;QAE1B,MAAM,SAAS,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,mBAAmB,CAAC;QAC9C,MAAM,QAAQ,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,kBAAkB,CAAC;QAE5C,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,0CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACvC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC/B,KAAK,CAAC,aAAa,IAAI,CAAC,GAAG,SAAS,GAAG,GAAG,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACL,CAAC,EAAE;SACJ;QAED,IAAI,QAAQ,GAAG,CAAC,EAAE;YAChB,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,0CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACvC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC/B,KAAK,CAAC,aAAa,IAAI,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC;gBAC5C,CAAC,CAAC,CAAC;YACL,CAAC,EAAE;SACJ;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO;aACT,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC;aAClC,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtB,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;oBAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;oBACnD,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC/C;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;YACpE,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;SAClD;aAAM,IACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,IAAI,EAC1C;YACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;SACjD;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;SACjD;aAAM,IACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,IAAI,IAAI,EAC3C;YACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;SAChD;IACH,CAAC;IAED,WAAW,CAAC,SAAS;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO;aACT,WAAW,CAAC,SAAS,CAAC;aACtB,IAAI,CACH,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;;gBACtB,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACvB,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAE5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBACvD,IAAI,CAAC,iBAAiB,GAAG,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,iBAAiB,EAC9C,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;wBAClC,CAAC,CAAC,EAAE,CAAC;oBACP,IAAI,CAAC,gBAAgB,eAAG,IAAI,CAAC,QAAQ,0CAAE,QAAQ,4CAAI,KAAK,EAAE,CAAC;oBAE3D,UAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,0CAAE,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;;wBAC/B,WAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,0CAAE,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;4BAC3B,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;wBAC3B,CAAC,EAAE;oBACL,CAAC,EAAE;oBAEH,wBAAwB;oBACxB,OAAO,IAAI,CAAC,WAAW,CAAC;oBAExB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBAC5B;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;iBAC9D;YACH,CAAC;YACD,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;YACpE,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;IACtB,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE;YACxB,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE;gBAC5D,OAAO,UAAU,CAAC;aACnB;SACF;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;YACvC,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACxE,QAAQ;gBACN,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC;SACnE;QAED,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;CACF;;YA9QC,0DAAW;YAmBgB,wEAAe;YACnC,yFAAkC;YAClC,qFAAW;YACX,4FAAc;;;oBAUpB,oDAAM;wBACN,mDAAK;;AAJK,kCAAkC;IAL9C,+DAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;QACxC,kFAAqC;;KAEtC,CAAC;mFAeuB,0DAAW;QACT,wEAAe;QACrB,yFAAkC;QAC9B,qFAAW;QACf,4FAAc;GAlBtB,kCAAkC,CAiP9C;AAjP8C;;;;;;;;;;;;;AC/B/C;AAAe,utGAAwpG,uDAAuD,8/BAA8/B,oBAAoB,mGAAmG,qBAAqB,gbAAgb,mCAAmC,sBAAsB,qBAAqB,4JAA4J,qBAAqB,6cAA6c,gCAAgC,mDAAmD,8BAA8B,6BAA6B,uCAAuC,uRAAuR,E;;;;;;;;;;;;ACAh7L;AAAe,6GAA8C,mNAAmN,E;;;;;;;;;;;;ACAhR;AAAe,6GAA8C,2NAA2N,E;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACc;AAEvD,SAAS;AACT,8EAA8E;AAC8B;AAE5G,aAAa;AACuE;AACe;AACa;AACR;AAExG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gGAAyC;KACpE;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,+GAA8C;QACzD,OAAO,EAAE;YACP,QAAQ,EAAE,wHAAkD;SAC7D;KACF;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,+GAA8C;QACzD,OAAO,EAAE;YACP,QAAQ,EAAE,wHAAkD;SAC7D;KACF;IACD;QACE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4HAAiD;KACtF;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,oHAA+C;KAC3D;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;IAMW,wCAAwC,SAAxC,wCAAwC;CAAG;AAA3C,wCAAwC;IAJpD,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,wCAAwC,CAAG;AAAH;;;;;;;;;;;;;ACjDrD;AAAe,6GAA8C,2MAA2M,E;;;;;;;;;;;;ACAxQ;AAAe,k0FAAmwF,uEAAuE,0aAA0a,uEAAuE,s1BAAs1B,gIAAgI,yCAAyC,oCAAoC,gFAAgF,sCAAsC,KAAK,mDAAmD,s2KAAs2K,eAAe,0lBAA0lB,8BAA8B,m/CAAm/C,iBAAiB,KAAK,kBAAkB,gLAAgL,85CAA85C,wJAAwJ,wEAAwE,62BAA62B,2EAA2E,gCAAgC,4EAA4E,8BAA8B,sIAAsI,uCAAuC,wJAAwJ,wEAAwE,+RAA+R,uUAAuU,+iCAA+iC,yFAAyF,oBAAoB,oBAAoB,+lCAA+lC,qDAAqD,oBAAoB,4EAA4E,iCAAiC,uDAAuD,6BAA6B,4EAA4E,+BAA+B,gLAAgL,qDAAqD,oBAAoB,uDAAuD,iCAAiC,uDAAuD,8BAA8B,uDAAuD,+BAA+B,qRAAqR,iBAAiB,KAAK,kBAAkB,wLAAwL,qcAAqc,2IAA2I,8EAA8E,i8BAAi8B,2EAA2E,gCAAgC,4EAA4E,8BAA8B,kFAAkF,uCAAuC,oLAAoL,E;;;;;;;;;;;;ACA5lrB;AAAe,0FAA2B,gCAAgC,GAAG,6CAA6C,mbAAmb,E;;;;;;;;;;;;ACA7iB;AAAe,wWAAyS,w8FAAw8F,uDAAuD,s5BAAs5B,eAAe,mFAAmF,yCAAyC,oCAAoC,6GAA6G,iBAAiB,yGAAyG,8BAA8B,yGAAyG,iDAAiD,yGAAyG,+CAA+C,sIAAsI,gCAAgC,m6EAAm6E,0CAA0C,sDAAsD,yJAAyJ,0CAA0C,qDAAqD,sSAAsS,sCAAsC,m/BAAm/B,mCAAmC,mCAAmC,kCAAkC,i/BAAi/B,sBAAsB,6BAA6B,uBAAuB,mDAAmD,yBAAyB,6BAA6B,0BAA0B,8UAA8U,mEAAmE,eAAe,+BAA+B,4BAA4B,GAAG,0CAA0C,ggBAAggB,E;;;;;;;;;;;;ACAj8W;AAAe,wcAAyY,mBAAmB,oBAAoB,oDAAoD,eAAe,iBAAiB,8BAA8B,GAAG,gCAAgC,sxBAAsxB,YAAY,KAAK,wBAAwB,s/BAAs/B,mBAAmB,oBAAoB,4DAA4D,eAAe,yBAAyB,8BAA8B,GAAG,gCAAgC,glDAAglD,yGAAyG,yCAAyC,oCAAoC,2DAA2D,iBAAiB,KAAK,8BAA8B,oaAAoa,4FAA4F,eAAe,qCAAqC,kCAAkC,KAAK,4BAA4B,GAAG,0CAA0C,yjDAAyjD,OAAO,yUAAyU,YAAY,KAAK,aAAa,mKAAmK,yFAAyF,oBAAoB,oBAAoB,gqBAAgqB,2CAA2C,cAAc,gEAAgE,gBAAgB,iEAAiE,eAAe,iEAAiE,mCAAmC,wIAAwI,E;;;;;;;;;;;;;;;;;;;;ACAn3Q;AACO;AACL;AACb;IAOnB,2BAA2B,SAA3B,2BAA2B;IAGtC,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrB,QAAG,GAAG,4DAA4D,CAAC;IAE3C,CAAC;IAE1C,gBAAgB;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAExD,OAAO,qDAAQ,CAAC;YACd,QAAQ;YACR,MAAM;YACN,aAAa;YACb,mBAAmB;SACpB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,IAAI,EAAE,CAAC;aACnC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,wBAAwB,CAAC;aACxC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,eAAe,EAAE,IAAI,CAAC;aACtC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,EAAE,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;;YArDQ,+DAAU;;AASN,2BAA2B;IAHvC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI4B,+DAAU;GAH3B,2BAA2B,CA4CvC;AA5CuC","file":"tabela-precos-tabela-precos-module-es2015.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\r\\n  <h4>Dados da tabela</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <message\\r\\n    *ngIf=\\\"loading\\\"\\r\\n    icon=\\\"fas fa-cog fa-spin\\\"\\r\\n    text=\\\"Carregando dados da tabela...\\\"\\r\\n  >\\r\\n  </message>\\r\\n  <div *ngIf=\\\"!loading\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-12\\\">\\r\\n          <label for=\\\"nomePreco\\\">Descrição da Tabela</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nomePreco\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"nomePreco\\\"\\r\\n            [ngClass]=\\\"onFieldError('nomePreco') + ' ' + onFieldRequired('nomePreco')\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('nomePreco')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"dataInicialVigencia\\\">Data Inicio Vigência</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicialVigencia\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"dataInicialVigencia\\\"\\r\\n            bsDatepicker\\r\\n            [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"dataFinalVigencia\\\">Data Fim Vigência</label>\\r\\n          <input\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"dataFinalVigencia\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"dataFinalVigencia\\\"\\r\\n          bsDatepicker\\r\\n          [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n          <label for=\\\"percentualAcrescimo\\\">Percentual Acréscimo</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"0,00%\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            formControlName=\\\"percentualAcrescimo\\\"\\r\\n            (ngModelChange)=\\\"onDesativarDesconto()\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-6\\\">\\r\\n          <label for=\\\"percentualDesconto\\\">Percentual Desconto</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"0,00%\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            formControlName=\\\"percentualDesconto\\\"\\r\\n            (ngModelChange)=\\\"onDesativarAcrescimo()\\\"\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n      <div>\\r\\n        <message\\r\\n          *ngIf=\\\"saving\\\"\\r\\n          icon=\\\"fas fa-cog fa-spin\\\"\\r\\n          text=\\\"Criando a tabela de preço...\\\"\\r\\n        >\\r\\n        </message>\\r\\n      </div>\\r\\n    <button \\r\\n    class=\\\"btn btn-outline-dark\\\" \\r\\n    (click)=\\\"saveTabelaPrecos(getParams())\\\"\\r\\n    >Cadastrar\\r\\n    </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { ComercialGestaoTabelaPrecosService } from './../tabela-precos.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\nimport { JsonResponse } from './../../../../../models/json-response';\r\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\r\nimport { Component, Input, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormArray,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\n// Interfaces\r\nimport { assocTabela, precos } from './../models/tabela-precos';\r\n\r\n// Services\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-tabela-precos-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialGestaoTabelaPrecosFormularioComponent implements OnInit {\r\n  public MASKS = MASKS;\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n\r\n  appTitle: string;\r\n  action: string;\r\n\r\n  modalValues: assocTabela[] = [];\r\n  valorMaterialAlterado: number;\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  formFilter: FormGroup;\r\n  formPrecos: FormGroup;\r\n\r\n  formChanged = false;\r\n  submittingForm = false;\r\n  submitAssocGrupo = false;\r\n  submittingFormPrecos = false;\r\n  enableEditIndex: number;\r\n\r\n  formPrecosIndex: number = null;\r\n\r\n  dados: Array<any> = [];\r\n  precosEstado: Array<precos> = [];\r\n  assocPrecos: Array<precos> = [];\r\n  unidades: Array<any> = [];\r\n  editMode: boolean = false;\r\n  codPreco: number;\r\n  codGrupo: number;\r\n  grupoNome: string;\r\n  estados: [];\r\n  materiaisAssoc: Array<any>;\r\n  materiaisAssoc2: Array<any>;\r\n  selection: Array<any>;\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  toggleAll = false;\r\n  searching = false;\r\n  firstSearch = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  showGrupos = true;\r\n  showMaterial = false;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  linhas: Array<any> = [];\r\n  classes: Array<any> = [];\r\n\r\n  limparGrupoPrincipal: boolean;\r\n\r\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigPrecos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dateService: DateService,\r\n    private localeService: BsLocaleService,\r\n    private bsModalService: BsModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private estadosService: EstadosService,\r\n    private location: Location,\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\r\n    private router: Router\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setFormBuilder();\r\n    this.setFormFilter();\r\n    this.setFormPrecos();\r\n    this.setBreadCrumb();\r\n    this.getUnidades();\r\n    this.estados = this.estadosService.getEstados();\r\n  }\r\n\r\n  // customSearchFn(term: string, item: any) {\r\n  //   term = term.toUpperCase();\r\n  //   item.nomeMaterial = item.nomeMaterial.toUpperCase();\r\n  //   if(item.nomeMaterial.startsWith(term)) {\r\n  //     return item.nomeMaterial.indexOf(term) > -1;\r\n  //   }\r\n  // }\r\n\r\n  changeFn(val) {\r\n\r\n    this.materiaisAssoc.forEach(element => {\r\n      if (element['codMaterial'] == val) {\r\n        this.showMaterial = true;\r\n        this.materiaisAssoc2 = [element];\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  enableEdition(i, item) {\r\n    this.editMode = true;\r\n    this.enableEditIndex = i;\r\n    this.valorMaterialAlterado = item.valorMaterial;\r\n\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar tabela de preços';\r\n        this.action = 'update';\r\n        this.submittingForm = true;\r\n        this.submitAssocGrupo = true;\r\n      } else {\r\n        this.appTitle = 'Nova tabela de preços';\r\n        this.action = 'create';\r\n      }\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Tabela de Preços',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}/tabela-precos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  // Formulário Preenchido para edição ou novo formulário\r\n  setFormBuilder() {\r\n    const resolver = this.activatedRoute.snapshot.data.detalhes;\r\n\r\n    if (resolver) {\r\n      const detalhes: any = resolver.data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codPreco: [detalhes.codPreco],\r\n        nomePreco: [detalhes.nomePreco, [Validators.required]],\r\n        /* codSituacao: [detalhes.codSituacao], */\r\n\r\n        dataInicialVigencia: detalhes.dataInicialVigencia\r\n          ? [\r\n            this.dateService.convertStringToDate(\r\n              detalhes.dataInicialVigencia,\r\n              'usa'\r\n            ),\r\n            [Validators.required],\r\n          ]\r\n          : [this.dateService.getToday(), [Validators.required]],\r\n\r\n        dataFinalVigencia: detalhes.dataFinalVigencia\r\n          ? [\r\n            this.dateService.convertStringToDate(\r\n              detalhes.dataFinalVigencia,\r\n              'usa'\r\n            ),\r\n          ]\r\n          : '',\r\n\r\n        faixaDescontoComercial: detalhes.faixaDescontoComercial\r\n          ? [detalhes.faixaDescontoComercial]\r\n          : 0,\r\n\r\n        faixaDescontoGerencial: detalhes.faixaDescontoGerencial\r\n          ? [detalhes.faixaDescontoGerencial]\r\n          : 0,\r\n\r\n        assocGrupos: this.formBuilder.array([]),\r\n      });\r\n      this.loaderFullScreen = false;\r\n      this.setGrupos(detalhes.assocGrupos);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n      this.loaderFullScreen = false;\r\n\r\n      this.form.get('dataInicialVigencia').setValue(null);\r\n      this.form.get('dataFinalVigencia').setValue(null);\r\n    }\r\n  }\r\n\r\n  setFormFilter() {\r\n    this.formFilter = this.formBuilder.group({\r\n      grupo: '',\r\n      situacao: '',\r\n    });\r\n  }\r\n\r\n  setFormPrecos() {\r\n    this.formPrecos = this.formBuilder.group({\r\n      codAssociacao: [null],\r\n      codEmpresa: [null],\r\n      nomeEmpresa: [null],\r\n      ufDestino: [null],\r\n      valorMaterial: [null],\r\n      percentual: [null]\r\n    });\r\n  }\r\n\r\n\r\n  onSubmitPrecos() {\r\n    this.tabelaPrecosService\r\n      .savePreco(this.formPrecos.getRawValue())\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.submittingForm = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response.hasOwnProperty('success') && response.success === true) {\r\n          this.formPrecos.reset();\r\n          this.pnotifyService.success(response.mensagem);\r\n\r\n          this.activatedRoute.params.subscribe((params: any) => {\r\n            let navigateTo: string;\r\n\r\n            if (params.hasOwnProperty('id')) {\r\n              navigateTo = '../../lista';\r\n            } else {\r\n              navigateTo = '../lista';\r\n            }\r\n\r\n            this.router.navigate([navigateTo], {\r\n              relativeTo: this.activatedRoute,\r\n            });\r\n          });\r\n        } else if (\r\n          response.hasOwnProperty('success') &&\r\n          response.success === false\r\n        ) {\r\n          this.pnotifyService.error(response.mensagem);\r\n        } else {\r\n          this.pnotifyService.error();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  // Ação de Edição ou novo Formulário\r\n  onSubmit(): void {\r\n\r\n    // if (this.action === 'update' && this.form.pristine) {\r\n    //   this.location.back();\r\n    // } else {\r\n    if (this.checkFormValidation() && this.form.valid) {\r\n      if (this.form.value.assocGrupos.length > 0) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n        this.tabelaPrecosService\r\n          .saveTabelaPrecos(this.form.value, this.action)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  let navigateTo: string;\r\n\r\n                  if (params.hasOwnProperty('id')) {\r\n                    navigateTo = '../../lista';\r\n                  } else {\r\n                    navigateTo = '../lista';\r\n                  }\r\n\r\n                  this.router.navigate([navigateTo], {\r\n                    relativeTo: this.activatedRoute,\r\n                  });\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.error(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      } else {\r\n        this.pnotifyService.notice('Associe pelo menos um material.');\r\n      }\r\n    } else {\r\n      this.pnotifyService.notice('Selecione um material.');\r\n    }\r\n    // }\r\n  }\r\n\r\n  checkFormValidation(): boolean {\r\n    let isValid = true;\r\n    if (this.form.getRawValue().id === null) {\r\n      isValid = false;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  openModalPercent(template: TemplateRef<any>, index, item: any) {\r\n    this.codGrupo = item.value.codGrupo;\r\n    this.grupoNome = item.value.nomeGrupo;\r\n    this.searchValoresGrupo(index);\r\n    this.modalRef = this.bsModalService.show(template, index);\r\n\r\n  }\r\n\r\n  openModalMateriais(template: TemplateRef<any>, i: number, item: any) {\r\n    this.showMaterial = false;\r\n    this.loaderNavbar = true;\r\n    const params = {\r\n      codGrupo: item.value.codGrupo,\r\n    };\r\n    this.tabelaPrecosService\r\n      .getDetailPanel(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.materiaisAssoc = response.data;\r\n            this.modalRef = this.bsModalService.show(template, item);\r\n\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, index, item) {\r\n    this.submittingFormPrecos = false;\r\n    this.formPrecosIndex = null;\r\n    this.codPreco = null;\r\n    this.codGrupo = null;\r\n    this.grupoNome = null;\r\n\r\n    this.codPreco = this.form.value.codPreco;\r\n    this.codGrupo = item.value.codGrupo;\r\n    this.grupoNome = item.value.nomeGrupo;\r\n    this.searchValoresGrupo(index);\r\n    this.modalRef = this.bsModalService.show(template, index);\r\n  }\r\n\r\n\r\n  onUpdatePercentagem(percent) {\r\n    percent = percent.split('%');\r\n    this.confirmAdd().subscribe((response: boolean) => {\r\n      if (response == true) {\r\n        this.precosEstado.forEach(element => {\r\n          element.valorMaterial = element.valorMaterial + element.valorMaterial * (parseFloat(percent[0]) / 100);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdateValor(item, index, valorMaterialAlterado) {\r\n\r\n    item.valorMaterial = valorMaterialAlterado;\r\n    let j;\r\n    let i;\r\n    for (i = 0; i < this.form.value.assocGrupos.length; i++) {\r\n      j = 0;\r\n      this.form.value.assocGrupos[i].precos.forEach(element => {\r\n        if (item.codAssociacao == element.codAssociacao) {\r\n          this.form.value.assocGrupos[i].precos[j].valorMaterial = item.valorMaterial;\r\n        }\r\n        j++;\r\n      });\r\n    }\r\n  }\r\n\r\n  searchValoresGrupo(index) {\r\n    const valores = this.form.value.assocGrupos[index].precos;\r\n    this.formPrecosIndex = index;\r\n\r\n    this.precosEstado = [];\r\n    if (valores.length > 0) {\r\n      valores.forEach((element) => {\r\n        this.onAddPreco(element, false, 'application');\r\n      });\r\n    }\r\n  }\r\n\r\n  // Ações do Grupo de Materiais (ESQUERDA TELA)\r\n  setGrupos(grupos: assocTabela[]): void {\r\n    if (grupos.length > 0) {\r\n      for (let i = 0; i < grupos.length; i++) {\r\n        this.onAddGrupo(grupos[i], false, 'application');\r\n      }\r\n    }\r\n  }\r\n\r\n  get assocGrupos(): FormArray {\r\n    return this.form.get('assocGrupos') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddGrupo(\r\n    grupo: assocTabela,\r\n    manipulateForm: boolean,\r\n    source: string\r\n  ): void {\r\n    if (this.checkGrupoExists(grupo) === false) {\r\n      this.assocGrupos.push(\r\n        this.formBuilder.group({\r\n          codGrupo: [grupo.codGrupo],\r\n          nomeGrupo: [grupo.nomeGrupo],\r\n          precos:\r\n            grupo.precos && grupo.precos.length > 0\r\n              ? [grupo.precos]\r\n              : this.formBuilder.array([]),\r\n          source: [source],\r\n        })\r\n      );\r\n\r\n      if (this.form.value.assocGrupos.length > 9) {\r\n        ('');\r\n        if (this.tableConfigAssocGrupos.fixedHeader === false) {\r\n          this.showGrupos = false;\r\n          this.tableConfigAssocGrupos.fixedHeader = true;\r\n\r\n          setTimeout(() => {\r\n            this.showGrupos = true;\r\n          }, 1);\r\n        }\r\n      }\r\n\r\n      if (manipulateForm) {\r\n        this.form.markAsTouched();\r\n        this.form.markAsDirty();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkGrupoExists(grupo: assocTabela): boolean {\r\n    return this.form.value.assocGrupos.some((el: any) => {\r\n      return el.codGrupo === grupo.codGrupo;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @source = 'application' || 'user'\r\n   */\r\n  onAddPreco(preco: any, manipulateForm: boolean, source: string): void {\r\n    if (preco) {\r\n      if (this.checkPrecosExists(preco) === false) {\r\n        this.precosEstado.push(preco);\r\n\r\n        if (source === 'onAssociarPrecos') {\r\n          let grupos = this.form.controls.assocGrupos.value;\r\n          grupos = grupos.map((item: any) => {\r\n            if (item.codGrupo == this.codGrupo) {\r\n              let precosAux = item.precos.map(precoAux => {\r\n                return {\r\n                  codAssociacao: precoAux.codAssociacao,\r\n                  codEmpresa: precoAux.codEmpresa,\r\n                  nomeEmpresa: precoAux.nomeEmpresa,\r\n                  percentual: precoAux.percentual,\r\n                  ufDestino: precoAux.ufDestino,\r\n                  valorMaterial: precoAux.valorMaterial,\r\n                }\r\n              });\r\n              precosAux.push(preco);\r\n              item.precos = precosAux;\r\n            }\r\n            return item;\r\n          });\r\n        }\r\n\r\n        this.formPrecos.reset();\r\n      }\r\n\r\n      /* if (this.checkValorExists(preco) === false) {\r\n        this.form.value.assocGrupos[this.formPrecosIndex].precos.push(preco);\r\n      } */\r\n    }\r\n\r\n    if (manipulateForm) {\r\n      this.form.markAsTouched();\r\n      this.form.markAsDirty();\r\n    }\r\n  }\r\n\r\n  onSaveValores() {\r\n    this.editMode = false;\r\n    if (this.precosEstado.length > 0) {\r\n      this.submittingFormPrecos = true;\r\n      this.precosEstado.forEach((element) => {\r\n        if (this.checkValorExists(element) == false) {\r\n          this.form.value.assocGrupos[this.formPrecosIndex].precos.push(\r\n            element\r\n          );\r\n        }\r\n      });\r\n      this.precosEstado = [];\r\n    }\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  checkValorExists(obj: any) {\r\n    return this.form.value.assocGrupos[this.formPrecosIndex].precos.some(\r\n      (el: any) => {\r\n        return (\r\n          el.codEmpresa === obj.codEmpresa && el.ufDestino === obj.ufDestino\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  onDeleteValor(item: any, index: number) {\r\n    item.codPreco = this.codPreco;\r\n    item.codGrupo = this.codGrupo;\r\n    this.loaderNavbar = true;\r\n\r\n    this.confirmDelete().subscribe((response: boolean) => {\r\n      if (response) {\r\n        if (item.codAssociacao != null || item.codAssociacao != undefined) {\r\n          this.tabelaPrecosService\r\n            .deleteAssociacaoPreco(item)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.loaderNavbar = false;\r\n              })\r\n            )\r\n            .subscribe({\r\n              next: (response: JsonResponse) => {\r\n                if (response.success) {\r\n                  if (this.checkPrecosExists(item) == true) {\r\n                    let indexPrecos =\r\n                      this.form.value.assocGrupos[\r\n                        this.formPrecosIndex\r\n                      ].precos.indexOf(item);\r\n\r\n                    this.form.value.assocGrupos[\r\n                      this.formPrecosIndex\r\n                    ].precos.splice(indexPrecos, 1);\r\n                  }\r\n                  this.precosEstado.splice(index, 1);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              },\r\n              error: (error: any) => {\r\n                if (\r\n                  error.error.hasOwnProperty('mensagem') &&\r\n                  (error.mensagem !== null || error.mensagem !== '')\r\n                ) {\r\n                  this.pnotifyService.error(error.error.mensagem);\r\n                } else {\r\n                  this.pnotifyService.error();\r\n                }\r\n              }\r\n            });\r\n        } else {\r\n          if (this.checkPrecosExists(item) == true) {\r\n            let indexPrecos =\r\n              this.form.value.assocGrupos[this.formPrecosIndex].precos.indexOf(\r\n                item\r\n              );\r\n\r\n            this.form.value.assocGrupos[this.formPrecosIndex].precos.splice(\r\n              indexPrecos,\r\n              1\r\n            );\r\n          }\r\n          this.precosEstado.splice(index, 1);\r\n          this.loaderNavbar = false;\r\n        }\r\n      }\r\n      this.loaderNavbar = false;\r\n    });\r\n  }\r\n\r\n  checkPrecosExists(preco: precos): boolean {\r\n    let valorFound = this.precosEstado.filter(\r\n      (xx) =>\r\n        xx.codEmpresa == preco.codEmpresa && xx.ufDestino == preco.ufDestino\r\n    );\r\n\r\n    if (valorFound.length > 0) return true;\r\n    else return false;\r\n  }\r\n\r\n  onAssociarPrecos(): void {\r\n    const precos = this.formPrecos.getRawValue() as precos;\r\n    precos.nomeEmpresa = this.searchEmpresa(precos.codEmpresa);\r\n    this.precoAssociado(precos);\r\n    this.submitAssocGrupo = true;\r\n  }\r\n\r\n  searchEmpresa(codEmpresa: number) {\r\n    let empresaFound = this.unidades.filter((xx) => xx.idEmpresa == codEmpresa);\r\n    return empresaFound[0]['nomeEmpresa'];\r\n  }\r\n\r\n  precoAssociado(preco: any): void {\r\n    this.onAddPreco(preco, true, 'onAssociarPrecos');\r\n  }\r\n\r\n  onLimparGrupoPrincipal(): void {\r\n    this.limparGrupoPrincipal = true;\r\n    this.onInput();\r\n\r\n    this.form.controls.codDescricao.setValue(null);\r\n    this.form.controls.codSituacao.setValue(null);\r\n    this.form.controls.dtInicioVigencia.setValue(null);\r\n    this.form.controls.dtFimVigencia.setValue(null);\r\n\r\n    setTimeout(() => {\r\n      this.limparGrupoPrincipal = false;\r\n    }, 100);\r\n  }\r\n\r\n  onDeleteGrupo(index: number, item: any): void {\r\n    let codGrupo = item.value.codGrupo;\r\n    let nomeGrupo = item.value.nomeGrupo;\r\n\r\n    this.confirmDeleteGrupo(codGrupo, nomeGrupo).subscribe((response: boolean) =>\r\n      response ? this.deleteGrupo(index, codGrupo) : null\r\n    );\r\n\r\n    // }\r\n  }\r\n\r\n  closeModal(modalRef: TemplateRef<any>) {\r\n    if (this.submittingFormPrecos === false && this.precosEstado.length > 0) {\r\n      this.confirmCancel().subscribe((response: boolean) =>\r\n        response ? this.onCancelFormValores(modalRef) : null\r\n      );\r\n    } else {\r\n      this.modalRef.hide();\r\n    }\r\n  }\r\n\r\n  closeModalUpdate(modalRef: TemplateRef<any>) {\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  onCancelFormValores(modalRef: TemplateRef<any>) {\r\n    this.precosEstado = [];\r\n    this.modalRef.hide();\r\n  }\r\n\r\n\r\n  confirmAdd(): any {\r\n    this.editMode = false;\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'cancelar',\r\n      'Confirmar',\r\n      'Ao confirmar, você estará alterando os valores, deseja mesmo continuar?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmCancel(): any {\r\n    this.editMode = false;\r\n\r\n    return this.confirmModalService.showConfirm(\r\n      'cancelar',\r\n      'Confirmar Cancelamento',\r\n      'As informações que não foram salvas serão perdidas, deseja continuar ?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  confirmDeleteGrupo(codGrupo: any, nomeGrupo: any): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirmar exclusão',\r\n      'Deseja realmente prosseguir com a exclusão do grupo ' + codGrupo + ' - ' + nomeGrupo + ' ?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n\r\n  deleteGrupo(index: number, codGrupo: number) {\r\n    if (this.form.value.assocGrupos[index].source === 'user') {\r\n      this.assocGrupos.removeAt(index);\r\n    } else if (this.form.value.assocGrupos[index].source === 'application') {\r\n      this.loaderNavbar = true;\r\n\r\n      this.activatedRoute.params.subscribe((params: any) => {\r\n        this.tabelaPrecosService\r\n          .deleteAssociacaoGrupo(this.form.value.codPreco, codGrupo)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: JsonResponse) => {\r\n              if (response.success) {\r\n                this.assocGrupos.removeAt(index);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              if (\r\n                error.error.hasOwnProperty('mensagem') &&\r\n                (error.mensagem !== null || error.mensagem !== '')\r\n              ) {\r\n                this.pnotifyService.error(error.error.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            }\r\n          });\r\n      });\r\n    }\r\n    this.form.markAsTouched();\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  grupoAssociado(material: any): void {\r\n    this.onAddGrupo(material, true, 'user');\r\n  }\r\n\r\n  onAssociarGrupos(): void {\r\n    this.toggleAll = false;\r\n\r\n    for (let index = 0; index < this.dados.length; index++) {\r\n      if (this.dados[index].checked === 1) {\r\n        const grupo = {\r\n          codGrupo: this.dados[index].codGrupo,\r\n          nomeGrupo: this.dados[index].nomeGrupo,\r\n        };\r\n        this.grupoAssociado(grupo);\r\n        this.dados[index].checked = 0;\r\n        this.submittingForm = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  onFilter(): void {\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.searching = true;\r\n\r\n    if (this.formFilter.valid) {\r\n      this.search(this.formFilter.getRawValue());\r\n    }\r\n  }\r\n\r\n  search(params): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n\r\n    this.tabelaPrecosService\r\n      .getGrupos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.success === true) {\r\n            this.dados = response.data;\r\n            this.totalItems = this.dados[0]['total'];\r\n            this.searching = false;\r\n          } else if (response.success === false) {\r\n            this.dadosEmpty = true;\r\n            this.dadosLoaded = true;\r\n            this.searching = false;\r\n            this.firstSearch = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n            this.firstSearch = false;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = false;\r\n          this.searching = false;\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onToggleAll() {\r\n    this.toggleAll = !this.toggleAll;\r\n\r\n    for (let index = 0; index < this.dados.length; index++) {\r\n      this.dados[index].checked = this.toggleAll === true ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  onCheckGrupo(index: number, grupo: any): void {\r\n    this.dados[index].checked = grupo.checked === 1 ? 0 : 1;\r\n  }\r\n\r\n  getUnidades() {\r\n    this.tabelaPrecosService.getEmpresas().subscribe({\r\n      next: (response: any) => {\r\n        if (response.responseCode === 200) {\r\n          this.unidades = response.result;\r\n          // this.setFormBuilder();\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        this.pnotifyService.error();\r\n        this.location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  geetParams(params: any): any {\r\n    let dataInicial = params['dataInicialVigencia'];\r\n    let dataFinal = params['dataFimVigencia'];\r\n\r\n    this.form.patchValue({\r\n      dataInicialVigencia: dataInicial,\r\n      dataFimVigencia: dataFinal,\r\n    });\r\n\r\n    if (dataInicial instanceof Date) {\r\n      dataInicial = this.dateService.convertToUrlDate(dataInicial);\r\n    }\r\n\r\n    if (dataFinal instanceof Date) {\r\n      dataFinal = this.dateService.convertToUrlDate(dataFinal);\r\n    }\r\n\r\n    return {\r\n      dataInicial: dataInicial,\r\n      dataFinal: dataFinal,\r\n    };\r\n  }\r\n}\r\n","import { ComercialTemplatesModule } from './../../templates/templates.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\n\r\n// ng2-currency-mask\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialGestaoTabelaPrecosRoutingModule } from './tabela-precos-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../cadastros/materiais/templates/templates.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ComercialGestaoTabelaPrecosListaComponent } from './lista/lista.component';\r\nimport { ComercialGestaoTabelaPrecosFormularioComponent } from './formulario/formulario.component';\r\n\r\n// Services\r\nimport { ComercialGestaoTabelaPrecosService } from './tabela-precos.service';\r\nimport { ComercialTabelaPrecoCloneComponent } from './modais/clone/clone.component';\r\nimport { ComercialGestaoTabelaPrecoVisaoComercialComponent } from './visao-comercial/visao-comercial.component';\r\nimport { ComercialGestaoTabelaPrecosImportarCsvComponent } from './importar-csv/importar-csv.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialGestaoTabelaPrecosListaComponent,\r\n    ComercialGestaoTabelaPrecosFormularioComponent,\r\n    ComercialTabelaPrecoCloneComponent,\r\n    ComercialGestaoTabelaPrecoVisaoComercialComponent,\r\n    ComercialGestaoTabelaPrecosImportarCsvComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule,\r\n    NgSelectModule,\r\n    CurrencyMaskModule,\r\n    TextMaskModule,\r\n    ComercialGestaoTabelaPrecosRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    ComercialTemplatesModule,\r\n    ComercialCadastrosMateriaisTemplatesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [PNotifyService, ComercialGestaoTabelaPrecosService],\r\n})\r\nexport class ComercialGestaoTabelaPrecosModule {}\r\n","import { EstadosService } from 'src/app/shared/services/requests/estados.service';\r\nimport { ComercialCadastrosMateriaisGrupoService } from './../../../cadastros/materiais/grupos/grupos.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n//Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-tabela-preco-visao-comercial',\r\n  templateUrl: './visao-comercial.component.html',\r\n  styleUrls: ['./visao-comercial.component.scss'],\r\n})\r\nexport class ComercialGestaoTabelaPrecoVisaoComercialComponent\r\n  implements OnInit\r\n{\r\n  dadosEmpty = true;\r\n  boolimpar = false;\r\n  dadosLoaded = false;\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  showDetailPanel = false;\r\n\r\n  materiais = [];\r\n  dados = [];\r\n  dadosDetalhes = [];\r\n\r\n  codigoSelecionado: number = 0;\r\n  materialSelecionado: string = '';\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeMaterial';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  linhas: Array<any> = [];\r\n  tabelas: Array<any> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n  begin: number = 0;\r\n  end: number = 10;\r\n  $showDetailPanelSubscription: Subscription;\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  appTitle = 'Tabela de Preços - Visão Comercial';\r\n\r\n  constructor(\r\n    private service: ComercialGestaoTabelaPrecosService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private routerService: RouterService,\r\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\r\n    private pnotifyService: PNotifyService,\r\n    private location: Location,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onBuildForm();\r\n    this.onActiveRoute();\r\n    this.onDetailPanelEmitter();\r\n    this.setBreadCrumb();\r\n    this.getTabelas();\r\n    this.getLinhas();\r\n    setTimeout(() => {\r\n      this.loading = false;\r\n    }, 1500);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$showDetailPanelSubscription.unsubscribe();\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onBuildForm() {\r\n    this.form = this.formBuilder.group({\r\n      tabela: [0],\r\n      codMaterial: [null],\r\n      nomeMaterial: [null],\r\n      codLinha: [0],\r\n      orderBy: [null],\r\n      orderType: [null],\r\n      pagina: [null],\r\n      registros: [25, Validators.required],\r\n      timestamp: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.$showDetailPanelSubscription =\r\n      this.detailPanelService.config.subscribe((event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n        if (!this.showDetailPanel) {\r\n          this.codigoSelecionado = 0;\r\n          this.materialSelecionado = '';\r\n        }\r\n      });\r\n  }\r\n\r\n  onActiveRoute() {\r\n    this.$activatedRouteSubscription =\r\n      this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let _response = this.routerService.getBase64UrlParams(queryParams);\r\n          console.log(_response);\r\n          this.getMateriais(_response);\r\n          this.form.patchValue(_response);\r\n        }\r\n      });\r\n  }\r\n\r\n  getTabelas(): void {\r\n    this.service\r\n      .getTabelas()\r\n      .pipe(finalize(() => {}))\r\n      .subscribe((response: JsonResponse) => {\r\n        if (response.hasOwnProperty('success') && response.success === true) {\r\n          this.tabelas = response.data;\r\n          this.tabelas.unshift({\r\n            codPreco: 0,\r\n            nomePreco: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getLinhas(): void {\r\n    this.materiaisGrupoService\r\n      .getFilterValues()\r\n      .pipe(finalize(() => {}))\r\n      .subscribe((response: any) => {\r\n        if (response[0].responseCode === 200) {\r\n          this.linhas = response[0].result;\r\n          this.linhas.unshift({\r\n            id: 0,\r\n            descricao: 'EXIBIR TODOS',\r\n          });\r\n        } else {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriais(codMaterial: any) {\r\n    this.detailPanelService.hide();\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.dadosLoaded = false;\r\n\r\n    this.service\r\n      .getMateriais(codMaterial)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.boolimpar = false;\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosEmpty = false;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false &&\r\n            response.hasOwnProperty('mensagem') &&\r\n            response.mensagem !== null\r\n          ) {\r\n            this.dados = [];\r\n            this.dadosEmpty = true;\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.dados = [];\r\n            this.dadosEmpty = true;\r\n            this.pnotifyService.notice('Nenhuma informação encontrada');\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dados = [];\r\n          this.dadosEmpty = true;\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getMateriaisDetalhes(item: any) {\r\n    this.detailPanelService.show();\r\n    this.loadingNavBar = true;\r\n    this.codigoSelecionado = 0;\r\n    this.codigoSelecionado = item.codMaterial;\r\n    this.materialSelecionado = '';\r\n    this.materialSelecionado = item.nomeMaterial;\r\n\r\n    let params: any = {};\r\n\r\n    params.codMaterial = this.codigoSelecionado;\r\n    params.codTabela = this.form.value.tabela;\r\n\r\n    if (!this.loading) this.loadingNavBar = true;\r\n\r\n    this.service\r\n      .getMateriaisDetalhes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dadosDetalhes = response.data;\r\n            this.detailPanelService.loadedFinished(false);\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false &&\r\n            response.hasOwnProperty('mensagem') &&\r\n            response.mensagem !== null\r\n          ) {\r\n            this.dadosDetalhes = [];\r\n            this.detailPanelService.loadedFinished(true);\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.dadosDetalhes = [];\r\n            this.detailPanelService.loadedFinished(true);\r\n            this.pnotifyService.notice('Nenhuma informação encontrada');\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosDetalhes = [];\r\n          this.detailPanelService.loadedFinished(true);\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    // if (_obj?.material) {\r\n    //   (Number.isNaN(parseInt(_obj?.material))) ?\r\n    //     _params['nomeMaterial'] = _obj.material :\r\n    //     _params['codMaterial'] = _obj.material\r\n    // }\r\n\r\n    // if (_obj?.grupo) {\r\n    //   (Number.isNaN(parseInt(_obj?.grupo))) ?\r\n    //     _params['nomeGrupo'] = _obj.grupo :\r\n    //     _params['codGrupo'] = _obj.grupo;\r\n    // }\r\n\r\n    if (_obj?.tabela) {\r\n      Number.isNaN(parseInt(_obj?.tabela))\r\n        ? (_params['nomePreco'] = _obj.tabela)\r\n        : (_params['codPreco'] = _obj.tabela);\r\n    }\r\n\r\n    _params['orderBy'] = this.orderBy;\r\n    _params['orderType'] = this.orderType;\r\n    return _params;\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    this.itemsPerPage = this.form.value.registros;\r\n    this.currentPage = 1;\r\n    this.form.get('timestamp').setValue(new Date().getTime());\r\n    this.router.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  classStatusBorder(item): string {\r\n    let borderClass: string;\r\n\r\n    if (item.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (item.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onLimpar() {\r\n    this.onBuildForm();\r\n    this.boolimpar = true;\r\n    this.dados = [];\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.begin = (event.page - 1) * event.itemsPerPage;\r\n    this.end = event.page * event.itemsPerPage;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  TemplateRef,\r\n  OnDestroy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\nimport { Subscription, EMPTY, Observable, of } from 'rxjs';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\r\nimport { DateService } from './../../../../../shared/services/core/date.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { descricaoTabela, assocTabela } from './../models/tabela-precos';\r\nimport { RouterService } from 'src/app/shared/services/core/router.service';\r\n\r\n@Component({\r\n  selector: 'comercial-tabela-precos-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialGestaoTabelaPrecosListaComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n  \r\n  modalRef: BsModalRef;\r\n\r\n  codMaterial: number;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n  detailPanelTitle: string;\r\n\r\n  dados: descricaoTabela[] = [];\r\n  otherDados: any[] = [];\r\n  otherDados2: any[] = [];\r\n  dadosPagination: Array<any> = [];\r\n\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n  detalhes: any;\r\n  detalhePreco: any;\r\n  detalhePrecoUf: any;\r\n\r\n  tabelaPreco = {};\r\n\r\n  grupoSelecionado: assocTabela;\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    hover: false,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codPreco';\r\n  orderType = 'ASC';\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private activateRoute: ActivatedRoute,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private router: Router,\r\n    private detailPanelService: DetailPanelService,\r\n    private pnotifyService: PNotifyService,\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private atividadesService: AtividadesService,\r\n    private modalService: BsModalService,\r\n    private routerService: RouterService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n    this.setFormFilter();\r\n    this.setBreadCrumb();\r\n    this.registrarAcesso();\r\n    this.onDetailPanelEmitter();\r\n    this.setGrupoSelecionado();\r\n    this.onActiveRoute();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Tabela de Preços',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onActiveRoute() {\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n        if (Object.keys(_response).length > 0) this.form.patchValue(_response);\r\n\r\n        this.search(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  // Formulário\r\n  setFormFilter(): void {\r\n    this.form = this.formBuilder.group({\r\n      codMaterial: null,\r\n      descTabela: [null],\r\n      dataInicialVigencia: '',\r\n      dataFinalVigencia: '',\r\n      codSituacao: [1],\r\n      orderBy: [null],\r\n      orderType: [null],\r\n      pagina: [null],\r\n      registros: [this.itemsPerPage],\r\n      timestamp: [new Date().getTime()],\r\n    });\r\n  }\r\n\r\n  registrarAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  // Pesquisa\r\n  onFilter(): void {\r\n    this.form.get('timestamp').setValue(new Date().getTime());\r\n\r\n    this.router.navigate([], {\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n    this.itemsPerPage = this.form.value.registros;\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  // setRouterParams(params: any): void {\r\n  //   this.router.navigate([], {\r\n  //     relativeTo: this.activatedRoute,\r\n  //     queryParams: { q: btoa(JSON.stringify(params)) },\r\n  //   });\r\n  //   this.search(params);\r\n  // }\r\n\r\n  // verificaParams(): Object {\r\n  //   let params: any = {};\r\n\r\n  //   if (this.form.value.descTabela) {\r\n  //     params.descTabela = this.form.value.descTabela;\r\n  //   }\r\n\r\n  //   if (this.form.value.dataInicialVigencia) {\r\n  //     params.dataInicialVigencia = this.form.value.dataInicialVigencia;\r\n  //   }\r\n\r\n  //   if (this.form.value.dataFinalVigencia) {\r\n  //     params.dataFinalVigencia = this.form.value.dataFinalVigencia;\r\n  //   }\r\n\r\n  //   if (this.form.value.codSituacao) {\r\n  //     params.codSituacao = this.form.value.codSituacao;\r\n  //   }\r\n\r\n  //   params.pagina = this.form.value.pagina;\r\n  //   params.registros = this.form.value.registros;\r\n  //   params.orderBy = this.form.value.orderBy;\r\n  //   params.orderType = this.form.value.orderType;\r\n\r\n  //   return params;\r\n  // }\r\n\r\n  search(params: any): void {\r\n    if (!this.loaderFullScreen) this.loaderNavbar = true;\r\n\r\n    this.detailPanelService.hide();\r\n    this.dados = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.tabelaPrecosService\r\n      .getListaPrecos(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.loaderFullScreen = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;  \r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;           \r\n            this.dadosLoaded = true;\r\n            // if(this.form.value.codMaterial){\r\n            //   let hasData = this.dados.find((cod) => {\r\n            //      return cod.codPreco == this.form.value.codMaterial;\r\n            //   })\r\n            //   if(!hasData){\r\n            //     this.dadosEmpty = true;\r\n            //   }\r\n            // }\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onCheckPreco() {   \r\n            let dados = {\r\n              info: null,\r\n              precos: null\r\n            }\r\n            let precos;\r\n            this.dados.forEach(element => {\r\n              this.tabelaPrecosService.getDetalhes(element.codPreco)\r\n              .pipe(\r\n                finalize(() => {               \r\n                    this.loaderNavbar = false;\r\n                    this.detailPanelService.loadedFinished(false); \r\n                })\r\n              )\r\n              .subscribe({\r\n              next: (response: any) => {\r\n                response.data.assocGrupos.forEach(element2 => {\r\n                      this.otherDados.forEach(element3 => {\r\n                          if(element2.codGrupo == element3.codGrupo){\r\n                            precos = element2.precos;                            \r\n                            dados.info = element3;\r\n                            dados.precos = precos;\r\n                            this.otherDados2.push({\r\n                              'info': dados.info,\r\n                              'precos': dados.precos\r\n                            }); \r\n                          }\r\n                      }); \r\n                });       \r\n              }\r\n          });\r\n    });\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n    _params['orderBy'] = this.orderBy;\r\n    _params['orderType'] = this.orderType;\r\n    _params['dataFinalVigencia'] = '';\r\n    return _params;\r\n  }\r\n\r\n  // Detail Panel\r\n  onDetails(item) {\r\n    this.detalhes = item;\r\n    this.detailPanelService.show();\r\n    this.detailPanelTitle = `Materiais associados `;\r\n    this.setGrupoSelecionado();\r\n    // this.grupoSelecionado = grupo;\r\n    this.loaderNavbar = true;\r\n    this.otherDados = [];\r\n\r\n    const params = {\r\n      codGrupo: item.codGrupo,\r\n    };\r\n\r\n    this.tabelaPrecosService\r\n      .getDetailPanel(params)\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.otherDados = response.data;\r\n            this.otherDados2 = []; \r\n            this.onCheckPreco();\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.loadedFinished(false);\r\n  }\r\n\r\n  setGrupoSelecionado(): void {\r\n    this.grupoSelecionado = {\r\n      codGrupo: null,\r\n      nomeGrupo: null,\r\n      precos: [],\r\n    };\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  // Activate e Inactivate e borda Situação\r\n  onActivate(index: number, grupo: descricaoTabela): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateGrupo(index: number, grupo: any): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 1;\r\n    return this.tabelaPrecosService.activateGrupo(grupo.codPreco);\r\n  }\r\n\r\n  inactivateGrupo(index: number, grupo: any): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dados[index].codSituacao = 2;\r\n    return this.tabelaPrecosService.inactivateGrupo(grupo.codPreco);\r\n  }\r\n\r\n  onInactivate(index: number, grupo: descricaoTabela): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateGrupo(index, grupo) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(grupo);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dados[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  classStatusBorder(grupo: descricaoTabela): string {\r\n    let borderClass: string;\r\n\r\n    if (grupo.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    } else if (grupo.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onEdit(item: any): void {\r\n    this.router.navigate(['../editar', item.codPreco], {\r\n      relativeTo: this.activateRoute,\r\n    });\r\n  }\r\n\r\n  onCsv(item: any): void {\r\n    this.router.navigate(['../importar-csv', item.codPreco], {\r\n      relativeTo: this.activateRoute,\r\n    });\r\n  }\r\n\r\n  onClone(item: any, template): void {\r\n    this.tabelaPreco = item;\r\n    item.clone = true;\r\n    this.openModal(template);\r\n  }\r\n\r\n  // Outros\r\n  // onPageChanged(event: PageChangedEvent) {\r\n  //   if (this.form.value.pagina != event.page) {\r\n  //     this.detailPanelService.hide();\r\n  //     this.setGrupoSelecionado();\r\n  //     this.form.value.pagina = event.page;\r\n  //     this.onFilter();\r\n\r\n  //     this.scrollToFilter.nativeElement.scrollIntoView({\r\n  //       behavior: 'instant',\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    // this.scrollToFilter.nativeElement.scrollIntoView({\r\n    //   behavior: 'instant',\r\n    // });\r\n  }\r\n\r\n  refreshMainData(grupo: descricaoTabela): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (grupo.codPreco === this.dados[i].codPreco) {\r\n        this.dados[i].codSituacao = grupo.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n    });\r\n  }\r\n}\r\n","export default \"::ng-deep message {\\n  padding: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbW9kYWlzL2Nsb25lL2Nsb25lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UscUJBQUE7QUFBSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL21vZGFpcy9jbG9uZS9jbG9uZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcHtcclxuICBtZXNzYWdle1xyXG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxufSJdfQ== */\";","import { assocTabela } from './../models/tabela-precos';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialGestaoTabelaPrecosService } from './../tabela-precos.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialGestaoTabelaPrecosFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.tabelaPrecosService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      mensagem: null,\r\n      data: {\r\n        codPreco: null,\r\n        nomePreco: null,\r\n        codSituacao: null,\r\n        dataInicialVigencia: null,\r\n        dataFinalVigencia: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null,\r\n        assocGrupos: [],\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { descricaoTabela, assocTabela } from './models/tabela-precos';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { take, tap, retry } from 'rxjs/operators';\r\n\r\n/* Services */\r\nimport { ComercialService } from '../../comercial.service';\r\n\r\n/* Interfaces */\r\nimport { environment } from 'src/environments/environment';\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialGestaoTabelaPrecosService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/gestao/tabela-precos`;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    private comercialService: ComercialService\r\n  ) {}\r\n\r\n  getListaPrecos(params: any = []): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(): Observable<Object | JsonResponse> {\r\n    return this.comercialService.getEmpresas({ idEmpresa: [4,6,18,55,77,79,83], tipo: 'search' });\r\n  }\r\n\r\n  getTabelas(): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/tabelas`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDetalhes(codPreco: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codPreco}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  // getDetailPanel(codGrupo: number): Observable<Object | JsonResponse> {\r\n  //   return this.http\r\n  //     .get(`${this.API}/detail-panel/${codGrupo}`)\r\n  //     .pipe(take(1), retry(2));\r\n  // }\r\n\r\n  getDetailPanel(params: any = []): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/detail-panel`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getGrupos(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista/grupos`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociacoesGrupos(\r\n    codGrupo: number,\r\n    params?: any\r\n  ): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista/grupos/${codGrupo}`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAssociados(): Observable<any> {\r\n    return this.http.get(`${this.API}/associados`).pipe(take(1));\r\n  }\r\n\r\n  deleteAssociacaoPreco(item: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(\r\n        `${this.API}/associacao-precos/remover/${item.codAssociacao}/${item.codPreco}/${item.codGrupo}`\r\n      )\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  deleteAssociacaoGrupo(\r\n    codPreco: number,\r\n    codGrupo: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .delete(`${this.API}/grupo/remover/${codGrupo}/${codPreco}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  saveTabelaPrecos(\r\n    record: descricaoTabela,\r\n    action: string\r\n  ): Observable<Object | JsonResponse> {\r\n    if (action === 'update') {\r\n      return this.updateGrupo(record);\r\n    }\r\n\r\n    return this.saveGrupo(record);\r\n  }\r\n\r\n  private saveGrupo(\r\n    record: descricaoTabela\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/salvar`, record).pipe(take(1));\r\n  }\r\n\r\n  private updateGrupo(\r\n    record: descricaoTabela\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, record)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  // savePrecos(record: any, action: string): Observable<Object | JsonResponse> {\r\n  //   if (action === 'update') {\r\n  //     return this.updatePreco(record);\r\n  //   }\r\n\r\n  //   return this.savePreco(record);\r\n\r\n  // }\r\n\r\n  savePreco(record: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/precos/salvar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  updatePreco(record: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .put(`${this.API}/precos/atualizar`, record)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPreco(params: any = []) {\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n    return this.http\r\n      .get(`${this.API}/precos/lista`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  activateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .post(`${this.API}/ativar`, codGrupo)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  inactivateGrupo(codGrupo: number): Observable<Object | JsonResponse> {\r\n    return this.http.post(`${this.API}/inativar`, codGrupo).pipe(take(1));\r\n  }\r\n\r\n  getMateriais(params): Observable<Object | JsonResponse> {\r\n    return this.http.get(`${this.API}/materiais`,\r\n    { params: params}).pipe(take(1));\r\n  }\r\n\r\n  getMateriaisDetalhes(params: any): Observable<Object | JsonResponse> {\r\n\r\n    let httpParams = new HttpParams();\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http.get(`${this.API}/materiais/detalhes`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\nimport { ComercialService } from '../../../comercial.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n\r\n// Interfaces\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { PNotifyService } from '../../../../../shared/services/core/pnotify.service';\r\n\r\nimport { ComercialGestaoTabelaPrecosService } from '../tabela-precos.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\nimport { isBreakOrContinueStatement } from 'typescript';\r\n\r\n@Component({\r\n  selector: 'comercial-gestao-tabela-precos-importar-csv',\r\n  templateUrl: './importar-csv.component.html',\r\n  styleUrls: ['./importar-csv.component.scss']\r\n})\r\nexport class ComercialGestaoTabelaPrecosImportarCsvComponent implements OnInit {\r\n\r\n  appTitle: string = 'Importar CSV';\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n  loaderFullScreen = true;\r\n  loaderNavbar: boolean;\r\n  fileReaded;\r\n  nomePreco = '';\r\n  rows = [];\r\n  headers: any;\r\n  content;\r\n  row: any;\r\n  dados: any;\r\n  empresas = [];\r\n  codPreco: any;\r\n  elementsAdded = [];\r\n  fileValue;\r\n\r\n  tableConfigAssocGrupos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigPrecos: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 230,\r\n    hover: false,\r\n  };\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private comercialService: ComercialService,\r\n    private tabelaPrecosService: ComercialGestaoTabelaPrecosService,\r\n    private pnotifyService: PNotifyService,\r\n    private bsModalService: BsModalService,\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setBreadCrumb();\r\n    this.getTotalItems();\r\n    this.getEmpresas();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  // pega os valores dos depositos\r\n  getEmpresas(){\r\n    this.comercialService.getDepositos(null)\r\n    .subscribe({\r\n      next: (response: any) => {\r\n          response.result.forEach(element => {\r\n            if(element.idDeposito == 1 ||\r\n              element.idDeposito == 2 ||\r\n              element.idDeposito == 18 ||\r\n              element.idDeposito == 79 ||\r\n              element.idDeposito == 77 ||\r\n              element.idDeposito == 55){\r\n                this.empresas.push({codDeposito: element.idDeposito, nomeDeposito: element.nomeDeposito});\r\n              }\r\n          });      }\r\n    });\r\n  }\r\n\r\n  // limpa os\r\n  clearValues(){\r\n    this.content = null;\r\n    this.headers = null;\r\n    this.row = null;\r\n    this.rows = null;\r\n  }\r\n\r\n  // popula o CSV de modelo com todos os dados referente ao codigo do preco\r\n  populateModel(){\r\n    var arr = [];\r\n    arr.push(new Array('ID GRUPO','ID DEPOSITO','UF DESTINO','VALOR'));\r\n    this.dados.assocGrupos.forEach(element => {\r\n      let codGrupo = element.codGrupo;\r\n      element.precos.forEach(element2 => {\r\n        arr.push( new Array(codGrupo,element2.codEmpresa, element2.ufDestino.toUpperCase(),element2.valorMaterial));\r\n      });\r\n    });\r\n    this.rows = arr;\r\n  }\r\n\r\n  // pega todos os itens referente ao codigo de preco\r\n  getTotalItems(){\r\n    this.tabelaPrecosService\r\n      .getDetalhes(this.codPreco)\r\n      .subscribe({\r\n        next: (response: JsonResponse) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.nomePreco = this.dados.nomePreco;\r\n            this.populateModel();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.codPreco = params.id;\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Gestão',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Tabela de Preços',\r\n          routerLink: `/comercial/gestao/${params.idSubModulo}/tabela-precos/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  //cria arquivo de dowload separado por ponto e virgulas\r\n  downloadModel() {\r\n    let csvContent = \"data:text/csv;charset=utf-8,\" + this.rows.map(e => e.join(\";\")).join(\"\\n\");\r\n    var encodedUri = encodeURI(csvContent);\r\n    var link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"modelo-tabela-preco.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  changeListener(fileInput){\r\n    //le arquivo csv\r\n    this.fileReaded = fileInput.target.files[0];\r\n    let filename = fileInput.target.files[0].name;\r\n    let fileExtension = filename.substring(filename.lastIndexOf('.')+1, filename.length) || filename;\r\n    if(fileExtension == 'csv'){\r\n    let reader: FileReader = new FileReader();\r\n    reader.readAsText(this.fileReaded);\r\n\r\n      reader.onload = (e) => {\r\n      let csvuploaded = reader.result.toString();\r\n      let allTextLines = csvuploaded.split(/\\r|\\n|\\r/);\r\n\r\n\r\n        // headers = linhas de titulos\r\n        this.headers = allTextLines[0].split(';');\r\n        this.content = [];\r\n\r\n          for (let i = 1; i < allTextLines.length; i++) {\r\n            // divide por ponto e virgula\r\n            let data = allTextLines[i].split(';');\r\n            if (data.length === this.headers.length) {\r\n              let tarr = [];\r\n              for (let j = 0; j < this.headers.length; j++) {\r\n                tarr.push(data[j]);\r\n              }\r\n            // log em cada row para ver output\r\n            // console.log(tarr);\r\n            this.content.push(tarr);\r\n            this.checkLines();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.pnotifyService.error('É necessário subir um arquivo do tipo CSV!');\r\n    }\r\n    //reseta o input caso o usuario queira subir o mesmo arquivo\r\n    fileInput.target.value = null;\r\n  }\r\n\r\n  // checa em todas as linhas se o item ja está cadastrado ou não\r\n  checkLines(){\r\n    if(this.content.length > 0){\r\n      for(let i = 0; i < this.content.length; i++){\r\n        if(this.content[i] != undefined && this.content[i][2].length == 2){\r\n        this.content[i][4] = 'SEM CADASTRO';\r\n          this.dados.assocGrupos.forEach(element => {\r\n            if(element.codGrupo == this.content[i][0]){\r\n              element.precos.forEach(element2 => {\r\n                if(element2.codEmpresa == this.content[i][1]\r\n                  && element2.ufDestino.toUpperCase() == this.content[i][2]){\r\n                    this.content[i][4] = 'OK';\r\n                  }\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.loaderNavbar = false;\r\n          this.pnotifyService.error('Não foi encontrado nenhum item no arquivo CSV para exportação ou o modelo está incorreto.');\r\n          this.content = [];\r\n          break;\r\n        }\r\n      }\r\n      } else {\r\n        this.loaderNavbar = false;\r\n        this.pnotifyService.error('Não foi encontrado nenhum item no arquivo CSV para exportação ou o modelo está incorreto.');\r\n      }\r\n  }\r\n\r\n  //mostra os itens que foram atualizados e os novos itens cadastrados\r\n  loadModal(template: TemplateRef<any>){\r\n    this.bsModalService.show(template);\r\n  }\r\n\r\n  closeModal(){\r\n    this.bsModalService.hide(0);\r\n  }\r\n\r\n  // atualiza os dados já existentes e carrega os novos dados no objeto\r\n  updateValues(template: TemplateRef<any>) {\r\n  this.elementsAdded = [];\r\n  this.loaderNavbar = true;\r\n    if(this.content){\r\n      for(let i = 0; i <= this.content.length; i++){\r\n        if(this.content[i] != undefined){\r\n          this.dados.assocGrupos.forEach(element => {\r\n            if(element.codGrupo == this.content[i][0]){\r\n              element.precos.forEach(element2 => {\r\n                    var last = element.precos.at(-1);\r\n                    if(element2.ufDestino.toUpperCase() == this.content[i][2]\r\n                    && element2.codEmpresa == this.content[i][1]\r\n                    && this.content[i][4] == 'OK'){\r\n                      element2.valorMaterial = parseFloat(this.content[i][3]);\r\n                      this.elementsAdded.push({\r\n                        codGrupo: element.codGrupo,\r\n                        codEmpresa: element2.codEmpresa,\r\n                        ufDestino: element2.ufDestino.toUpperCase(),\r\n                        valorMaterial: parseFloat(element2.valorMaterial)});\r\n\r\n                    } else if(element.codGrupo == this.content[i][0]\r\n                    && this.content[i][4] == 'SEM CADASTRO'\r\n                    && element2 == last ) {\r\n                      let nomeEmpresa;\r\n                      this.empresas.forEach(element => {\r\n                        if(this.content[i][1] == element.codEmpresa){\r\n                          nomeEmpresa = element.nomeDeposito;\r\n                        }\r\n                      });\r\n                      element.precos.push({\r\n                        codAssociacao: null,\r\n                        codEmpresa: parseInt(this.content[i][1]),\r\n                        nomeEmpresa: nomeEmpresa,\r\n                        ufDestino: this.content[i][2],\r\n                        valorMaterial: parseFloat(this.content[i][3])\r\n\r\n                      });\r\n                      this.elementsAdded.push({\r\n                        codGrupo: element.codGrupo,\r\n                        codEmpresa: parseInt(this.content[i][1]),\r\n                        ufDestino: this.content[i][2].toUpperCase(),\r\n                        valorMaterial: parseFloat(this.content[i][3])});\r\n                    }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n      //salva os dados\r\n      this.saveDados(template);\r\n      } else {\r\n        this.loaderNavbar = false;\r\n        this.pnotifyService.error('Não foi encontrado nenhum arquivo CSV para exportação.');\r\n\r\n      }\r\n  }\r\n\r\n    saveDados(template){\r\n      if(this.elementsAdded.length > 0){\r\n      this.dados.dataInicialVigencia = new Date();\r\n      this.tabelaPrecosService.saveTabelaPrecos(this.dados, 'update')\r\n         .subscribe({\r\n          next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.loaderNavbar = false;\r\n            this.loadModal(template);\r\n            this.pnotifyService.success(response.mensagem);\r\n            this.headers = null;\r\n            this.content = null;\r\n\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.pnotifyService.error(response.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }, error: (error) => {\r\n          this.pnotifyService.error(error.message);\r\n          this.loaderNavbar = false;\r\n        }\r\n        });\r\n    } else {\r\n      this.clearValues();\r\n      this.loaderNavbar = false;\r\n      this.pnotifyService.error('Nenhum item foi adicionado, cheque se os dados estão corretos e se a tabela está de acordo com a tabela de modelo.');\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// ng-brazil\r\nimport { MASKS } from 'ng-brazil';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { ComercialGestaoTabelaPrecosService } from '../../tabela-precos.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n@Component({\r\n  selector: 'comercial-tabela-preco-clone',\r\n  templateUrl: './clone.component.html',\r\n  styleUrls: ['./clone.component.scss'],\r\n})\r\nexport class ComercialTabelaPrecoCloneComponent implements OnInit, OnChanges {\r\n  public MASKS = MASKS;\r\n\r\n  @Output() close: EventEmitter<any> = new EventEmitter();\r\n  @Input() formValue = {};\r\n\r\n  form: FormGroup;\r\n\r\n  loading = true;\r\n  saving = false;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localeService: BsLocaleService,\r\n    private service: ComercialGestaoTabelaPrecosService,\r\n    private dateService: DateService,\r\n    private pnotify: PNotifyService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /* this.setForm(); */\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!changes?.formValue) {\r\n      return;\r\n    }\r\n\r\n    let currentValue = changes?.formValue.currentValue;\r\n\r\n    if (!this.form) {\r\n      this.setForm();\r\n    }\r\n\r\n    this.getDetalhes(currentValue?.codPreco);\r\n  }\r\n\r\n  setForm() {\r\n    this.form = this.formBuilder.group({\r\n      codPreco: [null, [Validators.required]],\r\n      nomePreco: [null, [Validators.required]],\r\n      codTabelaClonada: [null],\r\n      dataInicialVigencia: [this.dateService.getToday(), [Validators.required]],\r\n      dataFinalVigencia: [null],\r\n      faixaDescontoComercial: [null],\r\n      faixaDescontoGerencial: [null],\r\n      percentualAcrescimo: [null],\r\n      percentualDesconto: [null],\r\n      assocGrupos: [null],\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.close.emit(true);\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n\r\n  saveTabelaPrecos(params) {\r\n    if (\r\n      params.dataFinalVigencia == '' ||\r\n      params.dataFinalVigencia == null ||\r\n      params.dataFinalVigencia == undefined\r\n    ) {\r\n      params['dataFinalVigencia'] = '';\r\n    }\r\n\r\n    if (params.percentualAcrescimo == 0) {\r\n      params.percentualAcrescimo = null;\r\n    }\r\n\r\n    if (params.percentualDesconto == 0) {\r\n      params.percentualDesconto = null;\r\n    }\r\n\r\n    params['codTabelaClonada'] = params?.codPreco?.toString()?.slice();\r\n\r\n    delete params['codPreco'];\r\n\r\n    const acrescimo = params?.percentualAcrescimo;\r\n    const desconto = params?.percentualDesconto;\r\n\r\n    if (acrescimo > 0) {\r\n      params?.assocGrupos?.forEach((element) => {\r\n        element.precos.forEach((preco) => {\r\n          preco.valorMaterial *= 1 + acrescimo / 100;\r\n        });\r\n      });\r\n    }\r\n\r\n    if (desconto > 0) {\r\n      params?.assocGrupos?.forEach((element) => {\r\n        element.precos.forEach((preco) => {\r\n          preco.valorMaterial *= 1 - desconto / 100;\r\n        });\r\n      });\r\n    }\r\n\r\n    this.saving = true;\r\n    this.service\r\n      .saveTabelaPrecos(params, 'insert')\r\n      .pipe(\r\n        finalize(() => {\r\n          this.saving = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['success'] == true) {\r\n            this.pnotify.success('Tabela criada com sucesso!');\r\n            this.onClose();\r\n          } else {\r\n            this.pnotify.error('Falha ao criar a tabela');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error('Ocorreu um erro ao processar a solicitação.');\r\n        }\r\n      });\r\n  }\r\n\r\n  onDesativarAcrescimo() {\r\n    if (this.form.value.percentualDesconto > 0) {\r\n      this.form.controls.percentualAcrescimo.disable();\r\n    } else if (\r\n      this.form.value.percentualDesconto == 0 ||\r\n      this.form.value.percentualDesconto == null\r\n    ) {\r\n      this.form.controls.percentualAcrescimo.enable();\r\n    }\r\n  }\r\n\r\n  onDesativarDesconto() {\r\n    if (this.form.value.percentualAcrescimo > 0) {\r\n      this.form.controls.percentualDesconto.disable();\r\n    } else if (\r\n      this.form.value.percentualAcrescimo == 0 ||\r\n      this.form.value.percentualAcrescimo == null\r\n    ) {\r\n      this.form.controls.percentualDesconto.enable();\r\n    }\r\n  }\r\n\r\n  getDetalhes(codTabela) {\r\n    this.loading = true;\r\n    this.service\r\n      .getDetalhes(codTabela)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response['success']) {\r\n            let data = response['data'];\r\n\r\n            data.dataInicialVigencia = this.dateService.getToday();\r\n            data.dataFinalVigencia = data?.dataFinalVigencia\r\n              ? new Date(data.dataFinalVigencia)\r\n              : '';\r\n            data.codTabelaClonada = data.codPreco?.toString()?.slice();\r\n\r\n            data?.assocGrupos?.map((grupo) => {\r\n              grupo?.precos?.map((preco) => {\r\n                preco.codAssociacao = '';\r\n              });\r\n            });\r\n\r\n            // delete data.codPreco;\r\n            delete data.nomeUsuario;\r\n\r\n            this.form.patchValue(data);\r\n          } else {\r\n            this.pnotify.error('Falha ao consultar os dados da tabela.');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.pnotify.error('Ocorreu um erro ao processar a solicitação.');\r\n        }\r\n      });\r\n  }\r\n\r\n  // Tratamento de erros\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n\r\n    if (field.errors != null) {\r\n      if (field.errors.hasOwnProperty('required') && field.touched) {\r\n        return 'required';\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"\\\"\\r\\n    (click)=\\\"onLimpar()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"tabela\\\">Tabela</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [closeOnSelect]=\\\"true\\\"\\r\\n                [items]=\\\"tabelas\\\"\\r\\n                formControlName=\\\"tabela\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"tabela\\\"\\r\\n                bindValue=\\\"codPreco\\\"\\r\\n                bindLabel=\\\"nomePreco\\\"\\r\\n                >\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">cód. material</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"codMaterial\\\" type=\\\"text\\\" formControlName=\\\"codMaterial\\\"\\r\\n                placeholder=\\\"Código material...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-4\\\">\\r\\n              <label for=\\\"nomeMaterial\\\">nome material</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"nomeMaterial\\\" type=\\\"text\\\" formControlName=\\\"nomeMaterial\\\"\\r\\n                placeholder=\\\"nome material...\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codLinha\\\">Linha</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [closeOnSelect]=\\\"true\\\"\\r\\n                [items]=\\\"linhas\\\"\\r\\n                formControlName=\\\"codLinha\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"codLinha\\\"\\r\\n                bindLabel=\\\"descricao\\\"\\r\\n                bindValue=\\\"id\\\"\\r\\n                >\\r\\n                <!-- (change)=\\\"onChangeLinha($event.id)\\\" -->\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!dadosEmpty && !boolimpar\\\">\\r\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-6 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codMaterial'\\\" [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th nowrap scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter value=\\\"Material\\\" [active]=\\\"orderBy == 'nomeMaterial'\\\" [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeMaterial')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dados\\\" [class.table-active]=\\\"item.codMaterial == codigoSelecionado\\\">\\r\\n            <td nowrap class=\\\"hover text-left\\\" [ngClass]=\\\"classStatusBorder(item)\\\" (click)=\\\"getMateriaisDetalhes(item)\\\">{{ item.codMaterial }}</td>\\r\\n            <td nowrap class=\\\"hover text-left\\\" (click)=\\\"getMateriaisDetalhes(item)\\\">{{ item.nomeMaterial }}</td>\\r\\n            <td></td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"dados.length > maxSize\\\">\\r\\n        <pagination [maxSize]=\\\"maxSize\\\" [(totalItems)]=\\\"totalItems\\\" (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\" [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"currentPage\\\" previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      <detail-panel panelTitle=\\\"{{materialSelecionado}}\\\">\\r\\n        <custom-table *ngIf=\\\"dadosDetalhes.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Empresa</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">UF</th>\\r\\n              <th scope=\\\"col\\\">Valor</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let item of dadosDetalhes\\\">\\r\\n              <td>{{ item.nomeEmpresa | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.ufDestino | uppercase }}</td>\\r\\n              <td>{{ item.valorMaterial | currency:'BRL' }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded && !boolimpar\\\"></empty-result>\\r\\n</app-body>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL2ltcG9ydGFyLWNzdi9pbXBvcnRhci1jc3YuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL3Zpc2FvLWNvbWVyY2lhbC92aXNhby1jb21lcmNpYWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialGestaoTabelaPrecosFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialGestaoTabelaPrecosListaComponent } from './lista/lista.component';\r\nimport { ComercialGestaoTabelaPrecosFormularioComponent } from './formulario/formulario.component';\r\nimport { ComercialGestaoTabelaPrecoVisaoComercialComponent } from './visao-comercial/visao-comercial.component';\r\nimport { ComercialGestaoTabelaPrecosImportarCsvComponent } from './importar-csv/importar-csv.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista', component: ComercialGestaoTabelaPrecosListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialGestaoTabelaPrecosFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialGestaoTabelaPrecosFormularioResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialGestaoTabelaPrecosFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialGestaoTabelaPrecosFormularioResolverGuard,\r\n    },\r\n  },\r\n  {\r\n    path: 'visao-comercial', component: ComercialGestaoTabelaPrecoVisaoComercialComponent\r\n  },\r\n  {\r\n    path: 'importar-csv/:id',\r\n    component: ComercialGestaoTabelaPrecosImportarCsvComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialGestaoTabelaPrecosRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2dlc3Rhby90YWJlbGEtcHJlY29zL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || !submittingForm || !submitAssocGrupo\\\" >\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"mtc-title mb-2\\\">Dados da tabela</div>\\r\\n        <hr>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-12\\\">\\r\\n            <label for=\\\"nomePreco\\\">Descrição da Tabela</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"email\\\"\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"nomePreco\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomePreco') + ' ' + onFieldRequired('nomePreco')\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomePreco')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataInicialVigencia\\\">Dt Inicio Vigência</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"dataInicialVigencia\\\"\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"dataInicialVigencia\\\"\\r\\n              bsDatepicker\\r\\n              [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"dataFinalVigencia\\\">Dt Fim Vigência</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataFinalVigencia\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"dataFinalVigencia\\\"\\r\\n            bsDatepicker\\r\\n            [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"faixaDescontoComercial\\\">Faixa de Desconto Comercial</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"faixaDescontoComercial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"faixaDescontoComercial\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"faixaDescontoGerencial\\\">Faixa de Desconto Gerencial</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"faixaDescontoGerencial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"faixaDescontoGerencial\\\"\\r\\n            currencyMask\\r\\n            [options]=\\\"{ align: 'left', thousands: '.', decimal: ',', prefix: '', suffix: '%' }\\\"\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n        <div class='mt-3' *ngIf=\\\"showGrupos && form.value.assocGrupos.length > 0\\\" formArrayName=\\\"assocGrupos\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Grupos associados</div>\\r\\n              <custom-table [config]=\\\"tableConfigAssocGrupos\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 90%\\\"></th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template #tbody let-tbody>\\r\\n                  <tr *ngFor=\\\"let item of assocGrupos.controls; let i = index\\\" [formGroupName]=\\\"i\\\" \\r\\n                  onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\r\\n                    <td style=\\\"width: 80%\\\">\\r\\n                      {{ form.value.assocGrupos[i].codGrupo }} - {{ form.value.assocGrupos[i].nomeGrupo | uppercase }}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Alterar valores do grupo\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalPercent(percentmateriais, i, item)\\\">\\r\\n                        <i class=\\\"fas fa-percent\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Materiais associados\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModalMateriais(templatemateriais, i, item)\\\">\\r\\n                        <i class=\\\"fas fa-question\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\" placement=\\\"left\\\" tooltip=\\\"Editar\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"openModal(template, i, item)\\\">\\r\\n                        <i class=\\\"fas fa-edit\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 5%\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"  placement=\\\"left\\\" (click)=\\\"onDeleteGrupo(i, item)\\\" tooltip=\\\"Excluir\\\">\\r\\n                        <i class=\\\"fas fa-trash\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"showGrupos && form.value.assocGrupos.length === 0\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <message\\r\\n                icon=\\\"fas fa-exchange-alt\\\"\\r\\n                text=\\\"Nenhuma associação encontrada\\\">\\r\\n              </message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col-lg-9\\\">\\r\\n          <div class=\\\"mtc-title\\\">Pesquisa grupos para associação</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"onFilter()\\\"\\r\\n              [disabled]=\\\"searching === true\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              <span>Pesquisar</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)='onFilter()'>Pesquisar</button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formFilter\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-9\\\">\\r\\n              <label for=\\\"grupo\\\">Descrição do grupo</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"idnomePreco\\\"\\r\\n                type=\\\"text\\\"\\r\\n                formControlName=\\\"grupo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"situacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"situacao\\\">\\r\\n                <option value=\\\"\\\">Todos</option>\\r\\n                <option value=\\\"0\\\">Inativo</option>\\r\\n                <option value=\\\"1\\\">Ativo</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n\\r\\n      <div>\\r\\n        <div>\\r\\n          <div *ngIf=\\\"dados.length > 0\\\">\\r\\n            <div class=\\\"row mb-2\\\" >\\r\\n              <div class=\\\"col mt-auto\\\">\\r\\n                <div class=\\\"mtc-title mb-0\\\">Seleção de grupos</div>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"d-flex justify-content-end\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                    (click)=\\\"onAssociarGrupos()\\\"\\r\\n                    [disabled]=\\\"searching === true\\\">\\r\\n                    <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                    <span>Associar</span>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n                  <ng-template #thead let-thead>\\r\\n                    <tr>\\r\\n                      <th\\r\\n                        scope=\\\"col\\\"\\r\\n                        class=\\\"text-center\\\"\\r\\n                        style=\\\"width: 5%\\\">\\r\\n                        <btn-icon\\r\\n                          [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                          size=\\\"small\\\"\\r\\n                          (click)=\\\"onToggleAll()\\\">\\r\\n                        </btn-icon>\\r\\n                      </th>\\r\\n                      <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Grupo</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                  <ng-template #tbody let-tbody>\\r\\n                    <tr *ngFor=\\\"let item of dados; let i = index;\\\">\\r\\n                      <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <btn-icon\\r\\n                          [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                          size=\\\"small\\\"\\r\\n                          (click)=\\\"onCheckGrupo(i, item)\\\">\\r\\n                        </btn-icon>\\r\\n                      </td>\\r\\n                      <td\\r\\n                        class=\\\"hover\\\"\\r\\n                        style=\\\"width: 95%\\\"\\r\\n                        (click)=\\\"onCheckGrupo(i, item)\\\">\\r\\n                        {{ item.nomeGrupo | uppercase }}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </custom-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"searching === true\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <message\\r\\n                  icon=\\\"fas fa-cog fa-spin\\\"\\r\\n                  text=\\\"Estamos pesquisando os materiais para você...\\\">\\r\\n                </message>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"searching === false\\\">\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <message\\r\\n                    icon=\\\"fas fa-box-open\\\"\\r\\n                    text=\\\"Nenhuma informação encontrada\\\">\\r\\n                  </message>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"dados.length === 0 && !firstSearch\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <message\\r\\n                    icon=\\\"fas fa-search\\\"\\r\\n                    text=\\\"Preecha os campos acima para pesquisar materiais\\\">\\r\\n                  </message>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    {{ this.codGrupo }} - {{ this.grupoNome }}\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModalUpdate(template)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form class=\\\"form-row mb-2\\\" [formGroup]=\\\"formPrecos\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"codEmpresa\\\">Empresa</label>\\r\\n        <ng-select\\r\\n          type='text'\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"unidades\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          [hideSelected]=\\\"true\\\"\\r\\n          [closeOnSelect]=\\\"true\\\"\\r\\n          placeholder=\\\"Selecione...\\\"\\r\\n          bindLabel=\\\"nomeEmpresa\\\"\\r\\n          bindValue=\\\"idEmpresa\\\"\\r\\n          formControlName=\\\"codEmpresa\\\"\\r\\n          >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-2\\\">\\r\\n        <label for=\\\"ufDestino\\\">UF Destino</label>\\r\\n        <ng-select\\r\\n        type=\\\"text\\\"\\r\\n        [searchable]=\\\"true\\\"\\r\\n        [clearable]=\\\"false\\\"\\r\\n        [items]=\\\"estados\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        [hideSelected]=\\\"true\\\"\\r\\n        [closeOnSelect]=\\\"true\\\"\\r\\n        placeholder=\\\"Selecione...\\\"\\r\\n        bindLabel=\\\"sigla\\\"\\r\\n        bindValue=\\\"sigla\\\"\\r\\n        formControlName=\\\"ufDestino\\\"\\r\\n        >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-3\\\">\\r\\n        <label for=\\\"valorMaterial\\\">Valor</label>\\r\\n        <input\\r\\n          style=\\\"text-align: center;\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"valorMaterial\\\"\\r\\n          currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 2 }\\\"\\r\\n          >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-1 d-flex justify-content-center align-self-center mt-3\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon-sm d-flex justify-content-center align-middle\\\" (click)=\\\"onAssociarPrecos()\\\" tooltip=\\\"Adicionar Valor\\\">\\r\\n        <i class=\\\"fas fa-plus\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n    <custom-table [config]=\\\"tableConfigPrecos\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Empresa</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">UF Destino</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of precosEstado; let i = index\\\">\\r\\n          <td style=\\\"width: 30%\\\" >\\r\\n            {{ item.nomeEmpresa | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            {{ item.ufDestino | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            <span *ngIf=\\\"enableEditIndex != i || editMode == false\\\">{{ item.valorMaterial | number:'1.2-2' }}</span>\\r\\n            <input *ngIf=\\\"editMode && enableEditIndex == i\\\" [(ngModel)]=\\\"valorMaterialAlterado\\\"\\r\\n            currencyMask [options]=\\\"{ align: 'left', prefix: '', thousands: '.', decimal: ',', precision: 2 }\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            style=\\\"width: 100%\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <button *ngIf=\\\"enableEditIndex != i || editMode == false\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"editMode = true;\\\" (click)=\\\"enableEdition(i, item)\\\" tooltip=\\\"Editar\\\">\\r\\n              <i class=\\\"fas fa-edit\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button *ngIf=\\\"editMode && enableEditIndex == i\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onUpdateValor(item, i, valorMaterialAlterado); editMode = false\\\" tooltip=\\\"Adicionar\\\">\\r\\n              <i class=\\\"fas fa-check\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button *ngIf=\\\"editMode && enableEditIndex == i\\\" type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"editMode = false\\\" tooltip=\\\"Cancelar\\\">\\r\\n              <i class=\\\"fas fa-times\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDeleteValor(item, i)\\\" tooltip=\\\"Excluir\\\">\\r\\n              <i class=\\\"fas fa-trash\\\"></i>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #templatemateriais>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    Materiais associados\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal(templatemateriais)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\" style=\\\"height:350px; overflow-x: hidden; overflow-y: scroll;\\\" (onClose)=\\\"select.handleClearClick()\\\">\\r\\n    <label for=\\\"assocGrupos\\\">Pesquisa:</label>\\r\\n    <ng-select\\r\\n        type=\\\"text\\\"\\r\\n        [searchable]=\\\"true\\\"\\r\\n        [clearable]=\\\"true\\\"\\r\\n        [items]=\\\"materiaisAssoc\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        [hideSelected]=\\\"false\\\"\\r\\n        [closeOnSelect]=\\\"true\\\"\\r\\n        (change)=\\\"changeFn(selection)\\\" \\r\\n        [(ngModel)]=\\\"selection\\\"\\r\\n        placeholder=\\\"Selecione...\\\"\\r\\n        bindLabel=\\\"nomeMaterial\\\"\\r\\n        bindValue=\\\"codMaterial\\\"\\r\\n        >\\r\\n        </ng-select>\\r\\n    <custom-table [config]=\\\"tableConfigPrecos\\\" class=\\\"m-3\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\">Código</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 50%\\\">Material</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Linha</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Classe</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody *ngIf=\\\"!showMaterial\\\">\\r\\n        <tr *ngFor=\\\"let item of materiaisAssoc; let i = index\\\">\\r\\n          <td>\\r\\n            {{ item.codMaterial }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 50%\\\">\\r\\n            {{ item.nomeMaterial | uppercase }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeLinha | uppercase}}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            {{ item.nomeClasse | uppercase }}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody *ngIf=\\\"showMaterial\\\">\\r\\n        <tr *ngFor=\\\"let item of materiaisAssoc2; let i = index\\\">\\r\\n          <td>\\r\\n            {{ item.codMaterial }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeMaterial | uppercase }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeLinha | uppercase }}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ item.nomeClasse | uppercase }}\\r\\n          </td>\\r\\n        </tr>       \\r\\n      </ng-template>\\r\\n    </custom-table>    \\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #percentmateriais>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    {{ this.codGrupo }} - {{ this.grupoNome }}\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModalUpdate(percentmateriais)\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form class=\\\"form-row mb-2\\\" [formGroup]=\\\"formPrecos\\\" autocomplete=\\\"off\\\"> \\r\\n      <div class=\\\"col-lg-3\\\">\\r\\n      </div>      \\r\\n      <div class=\\\"form-group col-lg-6\\\">\\r\\n        <label for=\\\"percent\\\">Digite a porcentagem:</label>        \\r\\n        <input\\r\\n          #percent\\r\\n          formControlName=\\\"percentual\\\"\\r\\n          style=\\\"text-align: center;\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          placeholder=\\\"0.0%\\\"\\r\\n          currencyMask [options]=\\\"{ align: 'center', prefix: '', suffix:'%', precision: 1, allowNegative: false }\\\"\\r\\n          >\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-lg-3 justify-content-center align-self-center mt-3\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon d-flex justify-content-center align-middle ml-1\\\" (click)=\\\"onUpdatePercentagem(percent.value)\\\" tooltip=\\\"Aumentar porcentagem de valor dos itens\\\">\\r\\n        <i class=\\\"fas fa-redo\\\"></i>\\r\\n        </button>\\r\\n      </div>      \\r\\n      <div class=\\\"col-lg-3\\\"></div>\\r\\n    </form>   \\r\\n    <custom-table [config]=\\\"tableConfigPrecos\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Empresa</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 20%\\\">UF Destino</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Valor</th>\\r\\n          <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let item of precosEstado; let i = index\\\">\\r\\n          <td style=\\\"width: 30%\\\" >\\r\\n            {{ item.nomeEmpresa | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            {{ item.ufDestino | uppercase }}\\r\\n          </td>\\r\\n          <td style=\\\"width: 20%\\\">\\r\\n            <span>{{ item.valorMaterial | number:'1.2-2' }}</span>           \\r\\n          </td>          \\r\\n          <td></td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>        \\r\\n  </div>\\r\\n   \\r\\n</ng-template>\";","export default \"::ng-deep .tooltip-inner {\\n  max-width: 700px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvZ2VzdGFvL3RhYmVsYS1wcmVjb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLnRvb2x0aXAtaW5uZXJ7XHJcbiAgICBtYXgtd2lkdGg6IDcwMHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Tabela de Preços\\\">\\r\\n  <!-- <button type=\\\"button\\\" [routerLink]=\\\"['../exportar-csv']\\\" style=\\\"color: #090;\\\">\\r\\n    Exportar CSV\\r\\n  </button> -->\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"descTabela\\\">Descrição da Tabela</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"descTabela\\\" type=\\\"text\\\" formControlName=\\\"descTabela\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descTabela')\\\" message=\\\"Descrição é obrigatório.\\\">\\r\\n              </invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"dataInicialVigencia\\\">Dt Inicio Vigência</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"dataInicialVigencia\\\" type=\\\"text\\\" formControlName=\\\"dataInicialVigencia\\\"\\r\\n                bsDatepicker\\r\\n                [ngClass]=\\\"onFieldError('dataInicialVigencia') + ' ' + onFieldRequired('dataInicialVigencia')\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"dataFinalVigencia\\\">Dt Fim Vigência</label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"dataFinalVigencia\\\" type=\\\"text\\\" formControlName=\\\"dataFinalVigencia\\\"\\r\\n                bsDatepicker [ngClass]=\\\"onFieldError('dataFinalVigencia') + ' ' + onFieldRequired('dataFinalVigencia')\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codMaterial\\\">Filtro de material</label>\\r\\n              <input class=\\\"form-control\\\"type=\\\"text\\\" id=\\\"codMaterial\\\" formControlName=\\\"codMaterial\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select class=\\\"form-control custom-select\\\" id=\\\"codSituacao\\\" formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"2\\\">Inativos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-1\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"registros\\\" formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"text-center hover\\\">\\r\\n              <thead-sorter value=\\\"Código\\\" [active]=\\\"orderBy == 'codPreco'\\\" [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('codPreco')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\">Descrição</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Dt Inicial</th>\\r\\n\\r\\n            <th scope=\\\"col\\\">Dt Final</th>\\r\\n\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              Usuário\\r\\n            </th>\\r\\n\\r\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of dadosPagination; let i = index;\\\"\\r\\n          onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\r\\n            <td class=\\\"text-center hover\\\" [ngClass]=\\\"classStatusBorder(item)\\\">\\r\\n              {{ item.codPreco }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.nomePreco | uppercase }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.dataInicialVigencia | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.dataFinalVigencia | date: 'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n            <td class=\\\"hover\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetails(item)\\\">\\r\\n              {{ item.nomeUsuario | uppercase }}\\r\\n\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n              <!-- <span  class=\\\"mr-3\\\" tooltip=\\\"Tabela Clonada, exibir detalhes.\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\r\\n                  <i class=\\\"far fa-clone\\\"></i>\\r\\n                </button>\\r\\n              </span> -->\\r\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Importar CSV\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onCsv(item)\\\">\\r\\n                  <i class=\\\"fas fa-table\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"item.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, item)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"item.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, item)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(item)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" [tooltip]=\\\"tolTemplate\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <ng-template #tolTemplate>\\r\\n                  <span *ngIf=\\\"!item.codTabelaClonada\\\">\\r\\n                    <strong>Tabela não clonada</strong>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"item.codTabelaClonada\\\">\\r\\n                    <table>\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <td colspan=\\\"2\\\">Tabela Clonada</td>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr>\\r\\n                          <th class=\\\"text-left\\\">Percentual de Acréscimo:&nbsp;</th>\\r\\n                          <td> {{ item.percentualAcrescimo / 100 | percent : '0.2-2' }}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th class=\\\"text-left\\\">Percentual de Desconto:&nbsp;</th>\\r\\n                          <td> {{ item.percentualDesconto / 100 | percent : '0.2-2' }}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                  <i class=\\\"far fa-clone\\\" [ngClass]=\\\"{'text-warning': item.codTabelaClonada}\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Clonar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onClone(item, modalClone)\\\">\\r\\n                  <i class=\\\"fas fa-clone\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>        \\r\\n      </custom-table>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n      \\r\\n      <detail-panel [panelTitle]=\\\"detailPanelTitle\\\">\\r\\n        <div class=\\\"d-flex w-100\\\" *ngIf=\\\"otherDados2.length == 0\\\">\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n          <strong>Carregando itens...</strong>\\r\\n        </div>\\r\\n        <custom-table [config]=\\\"tableConfigMateriais\\\" *ngIf=\\\"otherDados2.length > 0\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód Grupo</th>\\r\\n              <th scope=\\\"col\\\">Grupo</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Cód Material</th>\\r\\n              <th scope=\\\"col\\\">Material</th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor='let item of otherDados2'>\\r\\n              <td class=\\\"text-center\\\">{{ item.info.codGrupo }}</td>\\r\\n              <td>{{ item.info.nomeGrupo }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ item.info.codMaterial }}</td>\\r\\n              <td>{{ item.info.nomeMaterial }}</td>\\r\\n              <td>\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                  <i class=\\\"fas fa-money-bill-wave\\\" placement=\\\"left\\\" id=\\\"tooltip-preco\\\"        \\r\\n                  [tooltip]=\\\"tooltip\\\">\\r\\n                  <ng-template #tooltip>\\r\\n                  <div style=\\\"width: 100px;\\\">\\r\\n                    <span *ngFor=\\\"let item2 of item.precos; let i = index;\\\">\\r\\n                      {{ item2.ufDestino + ': R$ '}} {{  item2.valorMaterial | number:'1.2-2'  }}<br>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  </ng-template>\\r\\n                  </i>\\r\\n                </button>              \\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n      </detail-panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #modalClone>\\r\\n  <comercial-tabela-preco-clone (close)=\\\"modalRef.hide()\\\" [formValue]=\\\"tabelaPreco\\\"></comercial-tabela-preco-clone>\\r\\n</ng-template>\\r\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\"> \\r\\n<button type=\\\"button\\\">\\r\\n    <i class=\\\"fas fa-building\\\" placement=\\\"bottom\\\"   \\r\\n    [tooltip]=\\\"tooltip\\\">\\r\\n    <ng-template #tooltip>\\r\\n    <div style=\\\"width: 190px !important; font-size:0.60rem; text-align: center;\\\">\\r\\n      <span *ngFor=\\\"let empresa of empresas; let i = index;\\\">\\r\\n        {{ 'ID '+ empresa.codDeposito }} {{ ' - ' + empresa.nomeDeposito }}<br>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!empresas > 0\\\">\\r\\n      <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n      <strong>Carregando itens...</strong>\\r\\n    </div>\\r\\n    </ng-template>\\r\\n    </i>\\r\\n  </button>             \\r\\n<button type=\\\"button\\\" (click)=\\\"downloadModel()\\\">\\r\\n    Baixar arquivo de modelo\\r\\n</button>\\r\\n\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">   \\r\\n  <div class=\\\"row\\\">    \\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <div class=\\\"text-center\\\" *ngIf=\\\"!nomePreco\\\">\\r\\n        <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2 text-center\\\"></div>\\r\\n      </div>\\r\\n      <h3 *ngIf=\\\"nomePreco\\\">{{ codPreco }} - {{ nomePreco | uppercase}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-1\\\">\\r\\n        <label\\r\\n          for=\\\"novoCsv\\\"\\r\\n          class=\\\"d-flex justify-content-start align-items-center\\\"\\r\\n          style=\\\"cursor: pointer\\\">\\r\\n          <p class=\\\"btn btn-sm btn-outline-primary m-0\\\">\\r\\n            <i class=\\\"fas fa-plus\\\"></i>\\r\\n            <span>Enviar</span>\\r\\n          </p>\\r\\n        </label>\\r\\n        <input            \\r\\n            id=\\\"novoCsv\\\"\\r\\n            type=\\\"file\\\" \\r\\n            class=\\\"d-none\\\" \\r\\n            accept=\\\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\\\"\\r\\n            (change)=\\\"changeListener($event)\\\"/>       \\r\\n      </div>\\r\\n      <div class=\\\"col-1\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n        <i class=\\\"fas fa-question-circle\\\" placement=\\\"top\\\" [tooltip]=\\\"tooltip\\\">\\r\\n          <ng-template #tooltip>\\r\\n            <div style=\\\"width: 190px !important; font-size:0.63rem; text-align: center;\\\">\\r\\n              <span *ngFor=\\\"let empresa of empresas; let i = index;\\\">\\r\\n                {{ 'ID '+ empresa.codDeposito }} {{ ' - ' + empresa.nomeDeposito }}<br>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex w-100\\\" *ngIf=\\\"!empresas > 0\\\">\\r\\n              <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n              <strong>Carregando itens...</strong>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n      </div>      \\r\\n      <div class=\\\"col-2\\\">\\r\\n        <div class=\\\"d-flex justify-content-around\\\">         \\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"clearValues()\\\" [disabled]=\\\"!content\\\">\\r\\n            Limpar\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!content\\\" (click)=\\\"updateValues(template)\\\">\\r\\n            Importar\\r\\n            </button>                \\r\\n        </div>         \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">              \\r\\n              <custom-table [config]=\\\"tableConfigAssocGrupos\\\">\\r\\n                <ng-template #thead let-thead>\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\">Grupos associados</th>    \\r\\n                    <th class=\\\"text-center\\\">Informações</th>       \\r\\n                  </tr>                        \\r\\n                </ng-template>                \\r\\n                <ng-template #tbody let-tbody *ngIf=\\\"dados\\\">\\r\\n                  <tr *ngFor=\\\"let item of dados.assocGrupos; let i = index\\\"\\r\\n                  onclick=\\\"var s = this.parentNode.querySelector('tr.table-active'); s && s.classList.remove('table-active'); this.classList.add('table-active');\\\">\\r\\n                    <td>\\r\\n                      {{ item.codGrupo }} - {{ item.nomeGrupo | uppercase }}\\r\\n                    </td>    \\r\\n                    <td class=\\\"text-center\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\">\\r\\n                        <i class=\\\"fas fa-money-bill-wave\\\" placement=\\\"left\\\" id=\\\"tooltip-preco\\\"        \\r\\n                        [tooltip]=\\\"tooltip\\\">\\r\\n                        <ng-template #tooltip>\\r\\n                        <div style=\\\"width: 190px; font-size: 0.57rem\\\">\\r\\n                          <span *ngFor=\\\"let item2 of item.precos; let i = index;\\\">\\r\\n                            {{ item2.nomeEmpresa | uppercase  }} - {{ item2.ufDestino + ': R$ '}} {{  item2.valorMaterial | number:'1.2-2'  }}<br>\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        </ng-template>\\r\\n                        </i>\\r\\n                      </button>              \\r\\n                    </td>                                                \\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </custom-table>\\r\\n            </div>\\r\\n          </div>          \\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-6\\\">\\r\\n      <custom-table *ngIf=\\\"headers\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>            \\r\\n            <th scope=\\\"col\\\">Código</th>\\r\\n            <th scope=\\\"col\\\">Depósito</th>\\r\\n            <th scope=\\\"col\\\">UF</th> \\r\\n            <th scope=\\\"col\\\">Valor</th>\\r\\n            <th scope=\\\"col\\\">Situação \\r\\n              <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\"> \\r\\n              <i class=\\\"fas fa-exclamation-circle\\\" placement=\\\"left\\\" [tooltip]=\\\"tooltip2\\\">\\r\\n              <ng-template #tooltip2>\\r\\n                <div>\\r\\n                  <span>\\r\\n                    Mostrará se o código do grupo já está cadastrado (OK) ou não (SEM CADASTRO)\\r\\n                  </span>\\r\\n                </div>           \\r\\n              </ng-template>\\r\\n              </i>\\r\\n            </button>\\r\\n            </th>                    \\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody *ngIf=\\\"content\\\">\\r\\n            <tr *ngFor=\\\"let row of content\\\">\\r\\n                <td *ngFor=\\\"let col of row\\\">\\r\\n                  {{ col }}\\r\\n                </td>              \\r\\n              </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">\\r\\n    Registros atualizados do item {{ codPreco }} - {{ nomePreco }} \\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\" style=\\\"height:350px; overflow-x: hidden; overflow-y: scroll;\\\" (onClose)=\\\"select.handleClearClick()\\\">  \\r\\n    <div *ngIf=\\\"elementsAdded.length == 0\\\">\\r\\n      <p>Nenhum item foi atualizado.</p>\\r\\n    </div>  \\r\\n      <custom-table [config]=\\\"tableConfigPrecos\\\" class=\\\"m-3\\\" *ngIf=\\\"elementsAdded.length > 0\\\">    \\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Código</th>\\r\\n            <th scope=\\\"col\\\">Depósito</th>\\r\\n            <th scope=\\\"col\\\">UF</th>\\r\\n            <th scope=\\\"col\\\">Valor</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody *ngIf=\\\"elementsAdded.length > 0\\\">\\r\\n          <tr  *ngFor=\\\"let a of elementsAdded;\\\">\\r\\n            <td> \\r\\n             {{ a.codGrupo }}\\r\\n            </td>  \\r\\n            <td> \\r\\n              {{ a.codEmpresa }}\\r\\n             </td> \\r\\n             <td> \\r\\n              {{ a.ufDestino }}\\r\\n             </td> \\r\\n             <td> \\r\\n              {{ a.valorMaterial | number:'1.2-2'}}\\r\\n             </td>       \\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>    \\r\\n    </div>\\r\\n</ng-template>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialTidSoftwareService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  loadDependencies() {\r\n    let empresas = this.getEmpresas('vendas');\r\n    let linhas = this.getLinhas();\r\n    let modulosVendas = this.getModulosVendas();\r\n    let modulosProducaoTela = this.getModulosProducaoTela();\r\n\r\n    return forkJoin([\r\n      empresas,\r\n      linhas,\r\n      modulosVendas,\r\n      modulosProducaoTela\r\n    ]).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEmpresas(acao: any) {\r\n    return this.http\r\n      .get(`${this.API}/empresas/${acao}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getLinhas() {\r\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosVendas() {\r\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getModulosProducaoTela() {\r\n    return this.http\r\n      .get(`${this.API}/modulos/producao-tela`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  postGerarAcesso(data: any) {\r\n    return this.http\r\n      .post(`${this.API}/gerar-acesso`, data)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}