{"version":3,"sources":["./src/app/modules/comercial/cadastros/operadores-comerciais/operadores-comerciais-routing.module.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/operadores-comerciais.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/associacoes/associacoes.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario.component.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/lista/lista.component.ts","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/lista/lista.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/lista/lista.component.scss","./src/app/modules/comercial/cadastros/operadores-comerciais/associacoes/associacoes.component.scss","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario.component.scss","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/associacoes/associacoes.component.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario.component.html","./src/app/modules/comercial/cadastros/operadores-comerciais/operadores-comerciais.module.ts"],"names":[],"mappings":"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","file":"operadores-comerciais-operadores-comerciais-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosOperadorComercialFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosOperadorComercialListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosOperadorComercialFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosOperadorComercialListaComponent\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosOperadorComercialFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosOperadorComercialFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosOperadorComercialFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosOperadorComercialFormularioResolverGuard\n    },\n    canDeactivate: [FormDeactivateGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComercialCadastrosOperadorComercialModuleRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { OperadorComercial } from './models/operador-comercial';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosOperadorComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/operador-comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaOperadoresComerciais(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n  getDetalhes(codOperador: number): Observable<any> {\n    return this.http.get(`${this.API}/detalhes/${codOperador}`).pipe(take(1));\n  }\n\n  private saveOperadorComercial(operadorComercial: OperadorComercial) {\n    return this.http\n      .post(`${this.API}/salvar`, operadorComercial)\n      .pipe(take(1));\n  }\n\n  private updateOperadorComercial(operadorComercial: OperadorComercial) {\n    return this.http\n      .put(`${this.API}/atualizar`, operadorComercial)\n      .pipe(take(1));\n  }\n\n  save(operadorComercial: OperadorComercial): Observable<any> {\n    if (operadorComercial.codOperador !== null) {\n      return this.updateOperadorComercial(operadorComercial);\n    }\n\n    return this.saveOperadorComercial(operadorComercial);\n  }\n\n  activateOperadorComercial(codOperador: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codOperador).pipe(take(1));\n  }\n\n  inactivateOperadorComercial(codOperador: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codOperador).pipe(take(1));\n  }\n\n  getAssociacoesOperadores(codOperador: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/associacoes/${codOperador}`)\n      .pipe(take(1));\n  }\n\n  getHistoricoAssociacoes(codOperador: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/historico-associacoes/${codOperador}`)\n      .pipe(take(1));\n  }\n\n  postAssociacaoOperador(params: any) {\n    return this.http\n      .post(`${this.API}/salvar-associacao`, params)\n      .pipe(take(1));\n  }\n\n  deleteAssociacaoOperador(params: any): Observable<any> {\n    return this.http\n      .post(`${this.API}/excluir-associacao`, params)\n      .pipe(take(1));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialCadastrosOperadorComercialFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private operadorComercialService: ComercialCadastrosOperadorComercialService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.operadorComercialService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codOperador: null,\n        codSap: null,\n        codMtcorp: null,\n        nomeOperador: null,\n        sobrenomeOperador: null,\n        tipoOperador: null,\n        codSituacao: null,\n        codEquipe: null,\n        codEscritorio: null,\n        tipoPessoa: 'F',\n        cpf: null,\n        cnpj: null,\n        ie: null,\n        rg: null,\n        telefone: null,\n        whatsApp: null,\n        email: null,\n        cep: null,\n        logradouro: null,\n        numero: null,\n        complemento: null,\n        referencia: null,\n        bairro: null,\n        cidade: null,\n        estado: null,\n        banco: null,\n        agencia: null,\n        contaCorrente: null,\n        dataInicioContrato: null,\n        dataFinalContrato: null\n      }\n    });\n  }\n}\n","export default \"<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\"><hr></div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col mb-3 d-flex justify-content-between\\\">\\n        <div class=\\\"mtc-title mb-0\\\">Associação de operadores</div>\\n        <div>\\n          <div *ngIf=\\\"!showLoader\\\">\\n            <a\\n              class=\\\"text-primary mr-3\\\"\\n              href=\\\"javascript:void(0)\\\"\\n              (click)=\\\"onHistorico()\\\"\\n              *ngIf=\\\"associacoes.length > 0 && !associacoesEmpty\\\">\\n              <strong>Histórico</strong>\\n            </a>\\n            <a\\n              class=\\\"text-secondary\\\"\\n              href=\\\"javascript:void(0)\\\"\\n              (click)=\\\"onAdd()\\\">\\n              <strong>Adicionar</strong>\\n            </a>\\n          </div>\\n          <div class=\\\"d-flex w-100\\\" *ngIf=\\\"showLoader\\\">\\n            <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n            <strong>Aguarde...</strong>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <custom-table *ngIf=\\\"associacoes.length > 0 && !associacoesEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Nome do operador</th>\\n              <th scope=\\\"col\\\">Motivo</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Início</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Término</th>\\n              <th scope=\\\"col\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let associacao of associacoes\\\">\\n              <td>{{ associacao.nomeOperadorAssociacao | uppercase }}</td>\\n              <td>{{ associacao.motivo | uppercase }}</td>\\n              <td class=\\\"text-center\\\">{{ associacao.dataInicialAssociacao | date: 'dd/MM/yyyy' }}</td>\\n              <td class=\\\"text-center\\\">{{ associacao.dataFinalAssociacao | date: 'dd/MM/yyyy' }}</td>\\n              <td class=\\\"text-right\\\">\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn-icon-sm\\\"\\n                    [disabled]=\\\"showLoader\\\"\\n                    (click)=\\\"onDelete(associacao)\\\">\\n                    <i class=\\\"fas fa-trash\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"associacoesEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"mt-2 d-flex w-100\\\" *ngIf=\\\"!associacoesLoaded\\\">\\n          <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\n          <strong>Carregando associações...</strong>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #modalAssociacoes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Associação de operadores</h4>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"close pull-right\\\"\\n      [disabled]=\\\"submittingForm\\\"\\n      (click)=\\\"hideModal()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"operadores\\\">Selecione os operadores</label>\\n          <ng-select\\n            [items]=\\\"operadores\\\"\\n            [multiple]=\\\"true\\\"\\n            [closeOnSelect]=\\\"false\\\"\\n            labelForId=\\\"operadores\\\"\\n            bindValue=\\\"codOperador\\\"\\n            bindLabel=\\\"nomeCompleto\\\"\\n            formControlName=\\\"operadores\\\"\\n            [ngClass]=\\\"onFieldError('operadores') + ' ' + onFieldRequired(form.controls.operadores)\\\">\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('operadores')\\\" message=\\\"Selecione pelo menos um operador.\\\"></invalid-form-control>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"motivoAssociacao\\\">Motivo da associação</label>\\n          <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"false\\\"\\n            [items]=\\\"motivosAssociacao\\\"\\n            formControlName=\\\"motivoAssociacao\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            bindLabel=\\\"motivoAssociacao\\\"\\n            bindValue=\\\"codMotivoAssociacao\\\"\\n            [ngClass]=\\\"onFieldError('motivoAssociacao') + ' ' + onFieldRequired(form.controls.motivoAssociacao)\\\">\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('motivoAssociacao')\\\" message=\\\"Motivo da associação é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"dataInicio\\\">Início</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataInicio\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"dataInicio\\\"\\n            [ngClass]=\\\"onFieldError('dataInicio') + ' ' + onFieldRequired(form.controls.dataInicio)\\\">\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataInicio')\\\" message=\\\"Início da associação é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n        <div class=\\\"form-group col-lg-6\\\">\\n          <label for=\\\"dataTermino\\\">Término</label>\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dataTermino\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            formControlName=\\\"dataTermino\\\">\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-light\\\"\\n      [disabled]=\\\"submittingForm\\\"\\n      (click)=\\\"hideModal()\\\">\\n      Cancelar\\n    </button>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-primary\\\"\\n      [disabled]=\\\"submittingForm\\\"\\n      (click)=\\\"onSubmit()\\\">\\n      <span *ngIf=\\\"!submittingForm\\\">Salvar</span>\\n      <span *ngIf=\\\"submittingForm\\\">Aguarde</span>\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #modalHistoricoAssociacoes>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Histórico de associações</h4>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"close pull-right\\\"\\n      [disabled]=\\\"submittingForm\\\"\\n      (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <custom-table *ngIf=\\\"historicoAssociacoes.length > 0\\\">\\n      <ng-template #thead let-thead>\\n        <tr>\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n          <th scope=\\\"col\\\">Usuário</th>\\n          <th scope=\\\"col\\\">Alteração</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template #tbody let-tbody>\\n        <tr *ngFor=\\\"let historico of historicoAssociacoes\\\">\\n          <td class=\\\"text-center\\\">{{ historico.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\n          <td>{{ historico.nomeUsuario | uppercase }}</td>\\n          <td>{{ historico.mensagem | uppercase }}</td>\\n        </tr>\\n      </ng-template>\\n    </custom-table>\\n  </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { finalize, take } from 'rxjs/operators';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// ng-brazil\nimport { NgBrazilValidators } from 'ng-brazil';\nimport { utilsBr } from 'js-brasil';\n\n// Services\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ComercialCadastrosTipoOperadorService } from 'src/app/modules/comercial/cadastros/tipo-operadores/tipo-operadores.service';\nimport { ComercialCadastrosEquipeVendaService } from 'src/app/modules/comercial/cadastros/equipe-venda/equipe-venda.service';\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { CepService } from 'src/app/shared/services/ws/cep.service';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\nimport { OperadorComercial } from '../models/operador-comercial';\nimport { EquipeVenda } from '../../equipe-venda/models/equipe-venda';\n\n@Component({\n  selector: 'comercial-cadastros-operador-comercial-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class ComercialCadastrosOperadorComercialFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  public MASKS = utilsBr.MASKS;\n\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  codOperador: number = null;\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  tipoOperadores: Array<OperadorComercial> = [];\n  equipesVenda: Array<EquipeVenda> = [];\n  escritorios: Array<any> = [];\n  estados: Array<any> = [];\n\n  showModalAssociacoes: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private localeService: BsLocaleService,\n    private formBuilder: FormBuilder,\n    private operadorComercialService: ComercialCadastrosOperadorComercialService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private tipoOperadorService: ComercialCadastrosTipoOperadorService,\n    private equipeVendaService: ComercialCadastrosEquipeVendaService,\n    private comercialService: ComercialService,\n    private estadosService: EstadosService,\n    private dateService: DateService,\n    private confirmModalService: ConfirmModalService,\n    private cepService: CepService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormBuilder();\n    this.checkRouterParams();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar operador comercial';\n        this.codOperador = params.id;\n      } else {\n        this.appTitle = 'Novo operador comercial';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\n        },\n        {\n          descricao: 'Operadores comerciais',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/operadores-comerciais/lista`\n        },\n        {\n          descricao: this.appTitle\n        }\n      ];\n    });\n  }\n\n  getFormFields(): void {\n    this.formDependencies()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (\n            response[0].hasOwnProperty('success') &&\n            response[0].success === true\n          ) {\n            this.tipoOperadores = response[0].data;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n\n          if (\n            response[1].hasOwnProperty('success') &&\n            response[1].success === true\n          ) {\n            this.equipesVenda = response[1].data;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n\n          if (response[2].responseCode === 200) {\n            this.escritorios = response[2].result;\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n\n          this.estados = this.estadosService.getEstados();\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  formDependencies(): Observable<any> {\n    const tipoOperadores = this.tipoOperadorService.getListaTipoOperador({\n      codSituacao: 1\n    });\n    const equipesVenda = this.equipeVendaService.getListaEquipesVenda({\n      codSituacao: 1\n    });\n    const escritorios = this.comercialService.getEscritorios();\n\n    return forkJoin([tipoOperadores, equipesVenda, escritorios]).pipe(take(1));\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: OperadorComercial = this.activatedRoute.snapshot.data\n        .detalhes.data;\n\n      const dataInicioContrato: Date =\n        detalhes.dataInicioContrato === null\n          ? null\n          : this.dateService.convertStringToDate(\n              detalhes.dataInicioContrato,\n              'usa'\n            );\n\n      const dataFinalContrato: Date =\n        detalhes.dataFinalContrato === null\n          ? null\n          : this.dateService.convertStringToDate(\n              detalhes.dataFinalContrato,\n              'usa'\n            );\n\n      this.form = this.formBuilder.group({\n        codOperador: [detalhes.codOperador],\n        nomeOperador: [detalhes.nomeOperador, [Validators.required]],\n        sobrenomeOperador: [detalhes.sobrenomeOperador, [Validators.required]],\n        codTipoOperador: [detalhes.codTipoOperador, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n        codEquipe: [detalhes.codEquipe, [Validators.required]],\n        codEscritorio: [detalhes.codEscritorio, [Validators.required]],\n        tipoPessoa: [detalhes.tipoPessoa, [Validators.required]],\n        cpf: [detalhes.cpfCnpj],\n        cnpj: [detalhes.cpfCnpj],\n        rg: [detalhes.rgIe],\n        ie: [detalhes.rgIe],\n        telefone: [detalhes.telefone, [Validators.required]],\n        celular: [detalhes.celular, [Validators.required]],\n        email: [detalhes.email, [Validators.required, Validators.email]],\n        endereco: this.formBuilder.group({\n          cep: [detalhes.cep, [Validators.required]],\n          logradouro: [detalhes.logradouro, [Validators.required]],\n          numero: [detalhes.numero, [Validators.required]],\n          complemento: [detalhes.complemento],\n          referencia: [detalhes.referencia],\n          bairro: [detalhes.bairro, [Validators.required]],\n          cidade: [detalhes.cidade, [Validators.required]],\n          estado: [detalhes.estado, [Validators.required]]\n        }),\n        dadosBancarios: this.formBuilder.group({\n          banco: [detalhes.banco],\n          agencia: [detalhes.agencia],\n          contaCorrente: [detalhes.contaCorrente]\n        }),\n        dataInicioContrato: [dataInicioContrato, [Validators.required]],\n        dataFinalContrato: [dataFinalContrato]\n      });\n      this.setType(detalhes.tipoPessoa);\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n  }\n\n  checkRouterParams(): void {\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n\n          if (\n            params['showModalAssociacoes'] &&\n            params['showModalAssociacoes'] === 1\n          ) {\n            this.showModalAssociacoes = true;\n          }\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n  }\n\n  setType(tipoPessoa: string): void {\n    if (tipoPessoa === 'F') {\n      this.form.controls.cpf.markAsUntouched();\n      this.form.controls.cpf.enable();\n      this.form.controls.cpf.setValidators([\n        NgBrazilValidators.cpf,\n        Validators.required\n      ]);\n      this.form.controls.rg.markAsUntouched();\n      this.form.controls.rg.enable();\n      this.form.controls.rg.setValidators([Validators.required]);\n\n      this.form.controls.cnpj.setValue(null);\n      this.form.controls.cnpj.disable();\n      this.form.controls.ie.setValue(null);\n      this.form.controls.ie.disable();\n    } else if (tipoPessoa === 'J') {\n      this.form.controls.cnpj.markAsUntouched();\n      this.form.controls.cnpj.enable();\n      this.form.controls.cnpj.setValidators([\n        NgBrazilValidators.cnpj,\n        Validators.required\n      ]);\n      this.form.controls.ie.markAsUntouched();\n      this.form.controls.ie.enable();\n      this.form.controls.ie.setValidators([Validators.required]);\n\n      this.form.controls.cpf.setValue(null);\n      this.form.controls.cpf.disable();\n      this.form.controls.rg.setValue(null);\n      this.form.controls.rg.disable();\n    }\n\n    this.form.controls.cpf.updateValueAndValidity();\n    this.form.controls.cnpj.updateValueAndValidity();\n    this.form.controls.rg.updateValueAndValidity();\n    this.form.controls.ie.updateValueAndValidity();\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.operadorComercialService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  this.activatedRoute.queryParams.subscribe(\n                    (queryParams: any) => {\n                      if (queryParams.hasOwnProperty('q')) {\n                        this.router.navigate(['../../lista'], {\n                          relativeTo: this.activatedRoute\n                        });\n                      } else {\n                        if (params.hasOwnProperty('id')) {\n                          this.location.back();\n                        } else {\n                          this.checkAssociacoes(response.data);\n                        }\n                      }\n                    }\n                  );\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  checkAssociacoes(codOperador: number): void {\n    this.confirmModalService\n      .showConfirm(\n        null,\n        'Associação de operadores',\n        'Deseja associar outros operadores comerciais?',\n        'Cancelar',\n        'Confirmar'\n      )\n      .subscribe((response: boolean) =>\n        response\n          ? this.onConfirmAssociacoes(codOperador)\n          : this.onRefuseAssociacoes()\n      );\n  }\n\n  onConfirmAssociacoes(codOperador: number): void {\n    this.router.navigate(['../editar', codOperador], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify({ showModalAssociacoes: 1 })) }\n    });\n  }\n\n  onRefuseAssociacoes(): void {\n    this.router.navigate(['../lista'], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  onInputCep() {\n    if (this.form.get('endereco.cep').status == 'VALID') {\n      this.consultaCEP(this.form.value.endereco.cep);\n    }\n  }\n\n  consultaCEP(cep: string) {\n    this.loaderNavbar = true;\n\n    this.cepService\n      .getData(cep)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.hasOwnProperty('success') && response.success === true) {\n          this.form.patchValue({\n            endereco: {\n              logradouro: response.data.logradouro,\n              bairro: response.data.bairro,\n              cidade: response.data.localidade,\n              estado: response.data.uf\n            }\n          });\n        }\n      });\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable, forkJoin } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { ComercialCadastrosTipoOperadorService } from '../../tipo-operadores/tipo-operadores.service';\nimport { ComercialCadastrosEquipeVendaService } from '../../equipe-venda/equipe-venda.service';\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\n\n// Interfaces\nimport { OperadorComercial } from '../models/operador-comercial';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { TipoOperador } from '../../tipo-operadores/models/tipo-operador';\nimport { EquipeVenda } from '../../equipe-venda/models/equipe-venda';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-operador-comercial-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class ComercialCadastrosOperadorComercialListaComponent\n  implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green'\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red'\n    }\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n  orderBy = 'nomeOperador';\n  orderType = 'ASC';\n\n  tipoOperadores: Array<TipoOperador> = [];\n  equipesVenda: Array<EquipeVenda> = [];\n  escritorios: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<OperadorComercial> = [];\n  dadosPagination: Array<OperadorComercial> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private operadorComercialService: ComercialCadastrosOperadorComercialService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private tipoOperadorService: ComercialCadastrosTipoOperadorService,\n    private equipeVendaService: ComercialCadastrosEquipeVendaService,\n    private escritorioService: EscritoriosService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getFormFields();\n    this.setFormFilter();\n    this.titleService.setTitle('Operadores comerciais');\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home'\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\n        },\n        {\n          descricao: 'Operadores comerciais'\n        }\n      ];\n    });\n  }\n\n  getFormFields(): void {\n    this.loadDependencies()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (\n            response[0].hasOwnProperty('success') &&\n            response[0].success === true\n          ) {\n            this.tipoOperadores = response[0].data;\n\n            this.tipoOperadores.unshift({\n              codTipoOperador: 0,\n              tipo: 'EXIBIR TODOS',\n              codSituacao: null,\n              situacao: null,\n              nomeUsuario: null,\n              dataCadastro: null\n            });\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n\n          if (\n            response[1].hasOwnProperty('success') &&\n            response[1].success === true\n          ) {\n            this.equipesVenda = response[1].data;\n\n            this.equipesVenda.unshift({\n              codEquipeVenda: 0,\n              dsEquipeVenda: 'EXIBIR TODOS',\n              codCarteira: null,\n              codSituacao: null,\n              situacao: null,\n              codUsuario: null,\n              nomeUsuario: null,\n              dataCadastro: null,\n              codReferenteErp: null\n            });\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n\n          if (response[2].responseCode === 200) {\n            this.escritorios = response[2].result;\n\n            this.escritorios.unshift({\n              codEscritorio: 0,\n              nomeEscritorio: 'EXIBIR TODOS'\n            });\n          } else {\n            this.pnotifyService.error();\n            this.location.back();\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  loadDependencies(): Observable<any> {\n    const tipoOperadores = this.tipoOperadorService.getListaTipoOperador({\n      codSituacao: 1\n    });\n    const equipesVenda = this.equipeVendaService.getListaEquipesVenda({\n      codSituacao: 1\n    });\n    const escritorios = this.escritorioService.getEscritorios();\n\n    return forkJoin([tipoOperadores, equipesVenda, escritorios]);\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      cpfCnpj: [formValue.cpfCnpj],\n      rgIe: [formValue.rgIe],\n      nomeOperador: [formValue.nomeOperador],\n      codTipoOperador: [formValue.codTipoOperador],\n      codEquipe: [formValue.codEquipe],\n      codEscritorio: [formValue.codEscritorio],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required]\n    });\n\n    this.checkOrder();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      cpfCnpj: null,\n      rgIe: null,\n      nomeOperador: null,\n      codTipoOperador: 0,\n      codEquipe: 0,\n      codEscritorio: 0,\n      codSituacao: 0,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach(formKey => {\n            Object.keys(params).forEach(paramKey => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) }\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.cpfCnpj) {\n      params.cpfCnpj = this.form.value.cpfCnpj;\n    }\n\n    if (this.form.value.rgIe) {\n      params.rgIe = this.form.value.rgIe;\n    }\n\n    if (this.form.value.nomeOperador) {\n      params.nomeOperador = this.form.value.nomeOperador;\n    }\n\n    if (this.form.value.codTipoOperador) {\n      params.codTipoOperador = this.form.value.codTipoOperador;\n    }\n\n    if (this.form.value.codEquipe) {\n      params.codEquipe = this.form.value.codEquipe;\n    }\n\n    if (this.form.value.codEscritorio) {\n      params.codEscritorio = this.form.value.codEscritorio;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.totalItems = 0;\n\n    this.operadorComercialService\n      .getListaOperadoresComerciais(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(operadorComercial: OperadorComercial): string {\n    let borderClass: string;\n\n    if (operadorComercial.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (operadorComercial.codSituacao === 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant'\n    });\n  }\n\n  onEdit(operadorComercial: OperadorComercial): void {\n    this.router.navigate(['../editar', operadorComercial.codOperador], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  onActivate(index: number, operadorComercial: OperadorComercial): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result\n            ? this.activateOperadorComercial(index, operadorComercial)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(operadorComercial);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 2;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateOperadorComercial(\n    index: number,\n    operadorComercial: OperadorComercial\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.operadorComercialService.activateOperadorComercial(\n      operadorComercial.codOperador\n    );\n  }\n\n  onInactivate(index: number, operadorComercial: OperadorComercial): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap(result =>\n          result\n            ? this.inactivateOperadorComercial(index, operadorComercial)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(operadorComercial);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateOperadorComercial(\n    index: number,\n    operadorComercial: OperadorComercial\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 2;\n\n    return this.operadorComercialService.inactivateOperadorComercial(\n      operadorComercial.codOperador\n    );\n  }\n\n  refreshMainData(operadorComercial: OperadorComercial): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (operadorComercial.codOperador === this.dados[i].codOperador) {\n        this.dados[i].codSituacao = operadorComercial.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Operadores comerciais\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"cpfCnpj\\\">CPF/CNPJ</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"cpfCnpj\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"rgIe\\\">RG/IE</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"rgIe\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"nomeOperador\\\">Nome do operador</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"nomeOperador\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codTipoOperador\\\">Tipo de operador</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"tipoOperadores\\\"\\n                formControlName=\\\"codTipoOperador\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                bindLabel=\\\"tipo\\\"\\n                bindValue=\\\"codTipoOperador\\\">\\n              </ng-select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codEquipe\\\">Equipe de venda</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"equipesVenda\\\"\\n                formControlName=\\\"codEquipe\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                bindLabel=\\\"dsEquipeVenda\\\"\\n                bindValue=\\\"codEquipeVenda\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codEscritorio\\\">Escritório</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"escritorios\\\"\\n                formControlName=\\\"codEscritorio\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                bindLabel=\\\"nomeEscritorio\\\"\\n                bindValue=\\\"codEscritorio\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"codSituacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"codSituacao\\\"\\n                formControlName=\\\"codSituacao\\\">\\n                <option value=\\\"0\\\">Todos</option>\\n                <option value=\\\"1\\\">Ativos</option>\\n                <option value=\\\"2\\\">Inativos</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Nome do operador\\\"\\n                [active]=\\\"orderBy == 'nomeOperador'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeOperador')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Tipo\\\"\\n                [active]=\\\"orderBy == 'descTipoOperador'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('descTipoOperador')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Equipe\\\"\\n                [active]=\\\"orderBy == 'nomeEquipe'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeEquipe')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\n              <thead-sorter\\n                value=\\\"Escritório\\\"\\n                [active]=\\\"orderBy == 'nomeEscritorio'\\\"\\n                [sort]=\\\"orderType\\\"\\n                (click)=\\\"setOrderBy('nomeEscritorio')\\\">\\n              </thead-sorter>\\n            </th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let operadorComercial of dadosPagination; let i = index\\\">\\n            <td [ngClass]=\\\"classStatusBorder(operadorComercial)\\\">\\n              {{ operadorComercial.nomeCompleto | uppercase }}\\n            </td>\\n            <td>{{ operadorComercial.descTipoOperador | uppercase }}</td>\\n            <td>{{ operadorComercial.nomeEquipe | uppercase }}</td>\\n            <td>{{ operadorComercial.nomeEscritorio | uppercase }}</td>\\n            <td class=\\\"text-right\\\">\\n              <span *ngIf=\\\"operadorComercial.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, operadorComercial)\\\">\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\n                </button>\\n              </span>\\n              <span *ngIf=\\\"operadorComercial.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, operadorComercial)\\\">\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\n                </button>\\n              </span>\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(operadorComercial)\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\n\n  constructor(protected http: HttpClient) {}\n\n  getEmpresas(params?: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/empresas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getDepositos(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/depositos`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/linhas`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getClasses(params: any): Observable<Object> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/classes`, {\n        params: httpParams,\n      })\n      .pipe(take(1), retry(2));\n  }\n\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/materiais`, { params: httpParams })\n      .pipe(take(1), retry(2));\n  }\n\n  getPerfil(): Observable<Object> {\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\n  }\n\n  getEscritorios(): Observable<Object> {\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9vcGVyYWRvcmVzLWNvbWVyY2lhaXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9vcGVyYWRvcmVzLWNvbWVyY2lhaXMvYXNzb2NpYWNvZXMvYXNzb2NpYWNvZXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9vcGVyYWRvcmVzLWNvbWVyY2lhaXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  Input,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { forkJoin, Observable, EMPTY } from 'rxjs';\n\n// ngx-bootstrap\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\nimport { ComercialCadastrosMotivoAssociacaoService } from '../../motivo-associacao/motivo-associacao.service';\n\n// Interfaces\nimport { AssociacaoOperadorComercial } from '../models/associacao-operador-comercial';\nimport { MotivoAssociacao } from '../../motivo-associacao/models/motivo-associacao';\nimport { OperadorComercial } from '../models/operador-comercial';\n\n@Component({\n  selector: 'comercial-cadastros-operadores-comerciais-associacoes',\n  templateUrl: './associacoes.component.html',\n  styleUrls: ['./associacoes.component.scss'],\n})\nexport class ComercialCadastrosOperadorComercialAssociacoesComponent\n  implements OnInit, OnChanges\n{\n  @Input('codOperador') codOperador: number;\n  @Input('showModal') showModal = false;\n  @ViewChild('modalAssociacoes', {}) modalAssociacoes: TemplateRef<any>;\n  @ViewChild('modalHistoricoAssociacoes', {})\n  modalHistoricoAssociacoes: TemplateRef<any>;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  form: FormGroup;\n  submittingForm: boolean;\n\n  showLoader: boolean;\n\n  associacoes: Array<AssociacaoOperadorComercial> = [];\n  associacoesLoaded = false;\n  associacoesEmpty = false;\n\n  historicoAssociacoes: Array<any> = [];\n  historicoAssociacoesLoaded = false;\n\n  modalRef: BsModalRef;\n\n  dependenciesLoaded = false;\n  operadores: Array<OperadorComercial> = [];\n  motivosAssociacao: Array<MotivoAssociacao> = [];\n\n  constructor(\n    private localeService: BsLocaleService,\n    private formBuilder: FormBuilder,\n    private modalService: BsModalService,\n    private pnotifyService: PNotifyService,\n    private confirmModalService: ConfirmModalService,\n    private operadorComercialService: ComercialCadastrosOperadorComercialService,\n    private motivosAssociacaoService: ComercialCadastrosMotivoAssociacaoService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.checkAssociacoes();\n    this.setFormBuilder();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.showModal.currentValue === true) {\n      this.onAdd();\n    }\n  }\n\n  setFormBuilder(): void {\n    this.form = this.formBuilder.group({\n      operadores: [null, [Validators.required]],\n      motivoAssociacao: [null, [Validators.required]],\n      dataInicio: [null, [Validators.required]],\n      dataTermino: [null],\n    });\n  }\n\n  checkAssociacoes(): void {\n    if (this.codOperador !== null) {\n      this.getAssociacoesOperadores();\n    }\n  }\n\n  getAssociacoesOperadores(): void {\n    this.associacoes = [];\n    this.associacoesEmpty = false;\n    this.associacoesLoaded = false;\n    this.historicoAssociacoes = [];\n    this.historicoAssociacoesLoaded = false;\n\n    this.operadorComercialService\n      .getAssociacoesOperadores(this.codOperador)\n      .pipe(\n        finalize(() => {\n          this.associacoesLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.associacoes = response.data;\n          } else {\n            this.associacoesEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.associacoesEmpty = true;\n        }\n      });\n  }\n\n  onReloadAssociacoes(): void {\n    this.getAssociacoesOperadores();\n  }\n\n  onAdd(): void {\n    if (this.dependenciesLoaded === false) {\n      this.getFormFields();\n    } else {\n      this.openModal(this.modalAssociacoes);\n    }\n  }\n\n  getFormFields(): void {\n    this.showLoader = true;\n    this.operadores = [];\n    this.motivosAssociacao = [];\n\n    this.loadDepencencies()\n      .pipe(\n        finalize(() => {\n          this.showLoader = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (\n            response[0].hasOwnProperty('success') &&\n            response[0].success === true\n          ) {\n            if (\n              response[1].hasOwnProperty('success') &&\n              response[1].success === true\n            ) {\n              this.operadores = response[0].data;\n              this.motivosAssociacao = response[1].data;\n              this.dependenciesLoaded = true;\n              this.openModal(this.modalAssociacoes);\n            } else {\n              this.pnotifyService.error('A operação não pode ser realizada.');\n            }\n          } else {\n            this.pnotifyService.error('A operação não pode ser realizada.');\n          }\n        },\n        error: (error: any) => {\n          this.pnotifyService.error('A operação não pode ser realizada.');\n        }\n      });\n  }\n\n  loadDepencencies(): Observable<any> {\n    const operadores =\n      this.operadorComercialService.getListaOperadoresComerciais({\n        codSituacao: 1,\n      });\n    const motivosAssociacao =\n      this.motivosAssociacaoService.getListaMotivosAssociacao({\n        codSituacao: 1,\n      });\n\n    return forkJoin([operadores, motivosAssociacao]).pipe(take(1));\n  }\n\n  onDelete(associacaoOperadorComercial: AssociacaoOperadorComercial): void {\n    this.confirmDelete()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result\n            ? this.deleteAssociacaoOperador(associacaoOperadorComercial)\n            : EMPTY\n        ),\n        finalize(() => {\n          this.showLoader = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.onReloadAssociacoes();\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n        }\n      );\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação da associação?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteAssociacaoOperador(\n    associacaoOperadorComercial: AssociacaoOperadorComercial\n  ): Observable<any> {\n    this.showLoader = true;\n\n    return this.operadorComercialService.deleteAssociacaoOperador({\n      codAssociacao: associacaoOperadorComercial.codAssociacao,\n      codOperador: associacaoOperadorComercial.codOperador,\n    });\n  }\n\n  openModal(template: TemplateRef<any>, customClass?: string): void {\n    let config = {\n      keyboard: false,\n      ignoreBackdropClick: true,\n    };\n\n    if (customClass) {\n      Object.assign(config, { class: customClass });\n    }\n\n    this.modalRef = this.modalService.show(template, config);\n  }\n\n  hideModal(): void {\n    this.modalRef.hide();\n    this.form.reset();\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      this.submittingForm = true;\n\n      this.operadorComercialService\n        .postAssociacaoOperador(\n          Object.assign(this.form.value, { codOperador: this.codOperador })\n        )\n        .pipe(\n          finalize(() => {\n            this.submittingForm = false;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (\n              response.hasOwnProperty('mensagem') &&\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.pnotifyService.success(response.mensagem);\n              this.hideModal();\n              this.getAssociacoesOperadores();\n            } else if (\n              response.hasOwnProperty('mensagem') &&\n              response.hasOwnProperty('success') &&\n              response.success === false\n            ) {\n              this.pnotifyService.notice(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    }\n  }\n\n  onHistorico(): void {\n    if (this.historicoAssociacoesLoaded === false) {\n      this.showLoader = true;\n\n      this.operadorComercialService\n        .getHistoricoAssociacoes(this.codOperador)\n        .pipe(\n          finalize(() => {\n            this.showLoader = false;\n          })\n        )\n        .subscribe({\n          next: (response: any) => {\n            if (\n              response.hasOwnProperty('mensagem') &&\n              response.hasOwnProperty('success') &&\n              response.success === true\n            ) {\n              this.historicoAssociacoes = response.data;\n              this.historicoAssociacoesLoaded = true;\n              this.openModal(this.modalHistoricoAssociacoes, 'modal-xxl');\n            } else if (\n              response.hasOwnProperty('mensagem') &&\n              response.hasOwnProperty('success') &&\n              response.success === false\n            ) {\n              this.pnotifyService.notice(response.mensagem);\n            } else {\n              this.pnotifyService.error();\n            }\n          },\n          error: (error: any) => {\n            this.pnotifyService.error();\n          }\n        });\n    } else {\n      this.openModal(this.modalHistoricoAssociacoes, 'modal-xxl');\n    }\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"nomeOperador\\\">Nome</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"nomeOperador\\\"\\n              formControlName=\\\"nomeOperador\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('nomeOperador') + ' ' + onFieldRequired(form.controls.nomeOperador)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeOperador')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"sobrenomeOperador\\\">Sobrenome</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"sobrenomeOperador\\\"\\n              formControlName=\\\"sobrenomeOperador\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('sobrenomeOperador') + ' ' + onFieldRequired(form.controls.sobrenomeOperador)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sobrenomeOperador')\\\" message=\\\"Sobrenome é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codTipoOperador\\\">Tipo de operador</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipoOperadores\\\"\\n              formControlName=\\\"codTipoOperador\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"tipo\\\"\\n              bindValue=\\\"codTipoOperador\\\"\\n              [ngClass]=\\\"onFieldError('codTipoOperador') + ' ' + onFieldRequired(form.controls.codTipoOperador)\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codTipoOperador')\\\" message=\\\"Tipo de operador é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"1\\\">Ativo</option>\\n              <option value=\\\"2\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codEquipe\\\">Equipe de vendas</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"equipesVenda\\\"\\n              formControlName=\\\"codEquipe\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"dsEquipeVenda\\\"\\n              bindValue=\\\"codEquipeVenda\\\"\\n              [ngClass]=\\\"onFieldError('codEquipe') + ' ' + onFieldRequired(form.controls.codEquipe)\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEquipe')\\\" message=\\\"Equipe de venda é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codEscritorio\\\">Escritório</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"escritorios\\\"\\n              formControlName=\\\"codEscritorio\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              [ngClass]=\\\"onFieldError('codEscritorio') + ' ' + onFieldRequired(form.controls.codEscritorio)\\\">\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEscritorio')\\\" message=\\\"Escritório é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-12\\\">\\n            <label>Tipo de pessoa</label>\\n          </div>\\n          <div class=\\\"form-group col-12\\\">\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\" (click)=\\\"setType('F')\\\">\\n              <input\\n                type=\\\"radio\\\"\\n                id=\\\"tipoPessoaF\\\"\\n                name=\\\"tipoPessoa\\\"\\n                class=\\\"custom-control-input\\\"\\n                value=\\\"F\\\"\\n                formControlName=\\\"tipoPessoa\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"tipoPessoaF\\\">Pessoa física</label>\\n            </div>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\" (click)=\\\"setType('J')\\\">\\n              <input\\n                type=\\\"radio\\\"\\n                id=\\\"tipoPessoaJ\\\"\\n                name=\\\"tipoPessoa\\\"\\n                class=\\\"custom-control-input\\\"\\n                value=\\\"J\\\"\\n                formControlName=\\\"tipoPessoa\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"tipoPessoaJ\\\">Pessoa jurídica</label>\\n            </div>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('tipoPessoa')\\\" message=\\\"Tipo de pessoa é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\" *ngIf=\\\"form.value.tipoPessoa === 'F'\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"cpf\\\">CPF</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cpf\\\"\\n              formControlName=\\\"cpf\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('cpf') + ' ' + onFieldRequired(form.controls.cpf)\\\"\\n              cpf [textMask]=\\\"{ mask: MASKS.cpf.textMask }\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cpf')\\\" message=\\\"CPF é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"rg\\\">RG</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"rg\\\"\\n              formControlName=\\\"rg\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('rg') + ' ' + onFieldRequired(form.controls.rg)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('rg')\\\" message=\\\"RG é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\" *ngIf=\\\"form.value.tipoPessoa === 'J'\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"cnpj\\\">CNPJ</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"cnpj\\\"\\n              formControlName=\\\"cnpj\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('cnpj') + ' ' + onFieldRequired(form.controls.cnpj)\\\"\\n              cnpj [textMask]=\\\"{ mask: MASKS.cnpj.textMask }\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnpj')\\\" message=\\\"CNPJ é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"ie\\\">Inscrição estadual</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"ie\\\"\\n              formControlName=\\\"ie\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('ie') + ' ' + onFieldRequired(form.controls.ie)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ie')\\\" message=\\\"Inscrição estadual é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"telefone\\\">Telefone</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"telefone\\\"\\n              formControlName=\\\"telefone\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired(form.controls.telefone)\\\"\\n              telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone')\\\" message=\\\"Telefone é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"celular\\\">Celular</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"celular\\\"\\n              formControlName=\\\"celular\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('celular') + ' ' + onFieldRequired(form.controls.celular)\\\"\\n              telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('celular')\\\" message=\\\"Celular é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"email\\\">E-mail</label>\\n            <input\\n              type=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"email\\\"\\n              formControlName=\\\"email\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('email') + ' ' + onFieldRequired(form.controls.email)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email')\\\" message=\\\"E-mail é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div formGroupName=\\\"endereco\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <div class=\\\"mtc-title\\\">Endereço</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"cep\\\">CEP</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"cep\\\"\\n                formControlName=\\\"cep\\\"\\n                (input)=\\\"onInput(); onInputCep();\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('endereco.cep') + ' ' + onFieldRequired(form.controls.endereco, 'cep')\\\"\\n                cep [textMask]=\\\"{mask: MASKS.cep.textMask}\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.cep')\\\" message=\\\"CEP é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"logradouro\\\">Endereço</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"logradouro\\\"\\n                formControlName=\\\"logradouro\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('endereco.logradouro') + ' ' + onFieldRequired(form.controls.endereco, 'logradouro')\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.logradouro')\\\" message=\\\"Endereço é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"numero\\\">Número</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"numero\\\"\\n                formControlName=\\\"numero\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('endereco.numero') + ' ' + onFieldRequired(form.controls.endereco, 'numero')\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.numero')\\\" message=\\\"Número é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"complemento\\\">Complemento</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"complemento\\\"\\n                formControlName=\\\"complemento\\\"\\n                autocomplete=\\\"new-password\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"referencia\\\">Referência</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"referencia\\\"\\n                formControlName=\\\"referencia\\\"\\n                autocomplete=\\\"new-password\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"bairro\\\">Bairro</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"bairro\\\"\\n                formControlName=\\\"bairro\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\"\\n                [ngClass]=\\\"onFieldError('endereco.bairro') + ' ' + onFieldRequired(form.controls.endereco, 'bairro')\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.bairro')\\\" message=\\\"Bairro é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"numero\\\">Cidade</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"cidade\\\"\\n                formControlName=\\\"cidade\\\"\\n                (input)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('endereco.cidade') + ' ' + onFieldRequired(form.controls.endereco, 'cidade')\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.cidade')\\\" message=\\\"Cidade é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"estado\\\">Estado</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"estado\\\"\\n                formControlName=\\\"estado\\\"\\n                (change)=\\\"onInput()\\\"\\n                [ngClass]=\\\"onFieldError('endereco.estado') + ' ' + onFieldRequired(form.controls.endereco, 'estado')\\\">\\n                <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\n                <option *ngFor=\\\"let item of estados\\\" [value]=\\\"item.sigla\\\">{{ item.descricao }}</option>\\n              </select>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.estado')\\\" message=\\\"Estado é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </div>\\n        <div formGroupName=\\\"dadosBancarios\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <div class=\\\"mtc-title\\\">Dados bancários</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"banco\\\">Banco</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"banco\\\"\\n                formControlName=\\\"banco\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"agencia\\\">Agência</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"agencia\\\"\\n                formControlName=\\\"agencia\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"contaCorrente\\\">Conta corrente</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"contaCorrente\\\"\\n                formControlName=\\\"contaCorrente\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\"><hr></div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <div class=\\\"mtc-title\\\">Contrato</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"dataInicioContrato\\\">Início</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicioContrato\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicioContrato\\\"\\n                [ngClass]=\\\"onFieldError('dataInicioContrato') + ' ' + onFieldRequired(form.controls.dataInicioContrato)\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataInicioContrato')\\\" message=\\\"Início do contrato é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-6\\\">\\n              <label for=\\\"dataFinalContrato\\\">Término</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinalContrato\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinalContrato\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"codOperador !== null\\\">\\n    <comercial-cadastros-operadores-comerciais-associacoes\\n      [codOperador]=\\\"codOperador\\\"\\n      [showModal]=\\\"showModalAssociacoes\\\">\\n    </comercial-cadastros-operadores-comerciais-associacoes>\\n  </div>\\n</app-body>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosOperadorComercialModuleRoutingModule } from './operadores-comerciais-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosOperadorComercialListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosOperadorComercialFormularioComponent } from './formulario/formulario.component';\nimport { ComercialCadastrosOperadorComercialAssociacoesComponent } from './associacoes/associacoes.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosOperadorComercialListaComponent,\n    ComercialCadastrosOperadorComercialFormularioComponent,\n    ComercialCadastrosOperadorComercialAssociacoesComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosOperadorComercialModuleRoutingModule,\n    SharedModule,\n    TemplatesModule\n  ],\n  providers: [PNotifyService]\n})\nexport class ComercialCadastrosOperadorComercialModule {}\n"],"sourceRoot":"webpack:///"}