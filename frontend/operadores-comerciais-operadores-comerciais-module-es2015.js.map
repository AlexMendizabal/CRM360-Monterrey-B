{"version":3,"sources":["./src/app/modules/comercial/cadastros/operadores-comerciais/operadores-comerciais-routing.module.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/operadores-comerciais.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario-resolver.guard.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/associacoes/associacoes.component.html","./src/app/shared/modules/confirm-modal/confirm-modal.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario.component.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/lista/lista.component.ts","./src/app/shared/services/core/date.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/lista/lista.component.html","./src/app/modules/comercial/comercial.service.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/lista/lista.component.scss","./src/app/modules/comercial/cadastros/operadores-comerciais/associacoes/associacoes.component.scss","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario.component.scss","./src/app/guards/form-deactivate.guard.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/associacoes/associacoes.component.ts","./src/app/modules/comercial/cadastros/operadores-comerciais/formulario/formulario.component.html","./src/app/modules/comercial/cadastros/operadores-comerciais/operadores-comerciais.module.ts"],"names":[],"mappings":"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","file":"operadores-comerciais-operadores-comerciais-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosOperadorComercialFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosOperadorComercialListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosOperadorComercialFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosOperadorComercialListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosOperadorComercialFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosOperadorComercialFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosOperadorComercialFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosOperadorComercialFormularioResolverGuard\r\n    },\r\n    canDeactivate: [FormDeactivateGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComercialCadastrosOperadorComercialModuleRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { OperadorComercial } from './models/operador-comercial';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosOperadorComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial/cadastros/operador-comercial`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaOperadoresComerciais(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDetalhes(codOperador: number): Observable<any> {\r\n    return this.http.get(`${this.API}/detalhes/${codOperador}`).pipe(take(1));\r\n  }\r\n\r\n  private saveOperadorComercial(operadorComercial: OperadorComercial) {\r\n    return this.http\r\n      .post(`${this.API}/salvar`, operadorComercial)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private updateOperadorComercial(operadorComercial: OperadorComercial) {\r\n    return this.http\r\n      .put(`${this.API}/atualizar`, operadorComercial)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  save(operadorComercial: OperadorComercial): Observable<any> {\r\n    if (operadorComercial.codOperador !== null) {\r\n      return this.updateOperadorComercial(operadorComercial);\r\n    }\r\n\r\n    return this.saveOperadorComercial(operadorComercial);\r\n  }\r\n\r\n  activateOperadorComercial(codOperador: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codOperador).pipe(take(1));\r\n  }\r\n\r\n  inactivateOperadorComercial(codOperador: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codOperador).pipe(take(1));\r\n  }\r\n\r\n  getAssociacoesOperadores(codOperador: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/associacoes/${codOperador}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getHistoricoAssociacoes(codOperador: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/historico-associacoes/${codOperador}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  postAssociacaoOperador(params: any) {\r\n    return this.http\r\n      .post(`${this.API}/salvar-associacao`, params)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  deleteAssociacaoOperador(params: any): Observable<any> {\r\n    return this.http\r\n      .post(`${this.API}/excluir-associacao`, params)\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialCadastrosOperadorComercialFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private operadorComercialService: ComercialCadastrosOperadorComercialService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.operadorComercialService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codOperador: null,\r\n        codSap: null,\r\n        codMtcorp: null,\r\n        nomeOperador: null,\r\n        sobrenomeOperador: null,\r\n        tipoOperador: null,\r\n        codSituacao: null,\r\n        codEquipe: null,\r\n        codEscritorio: null,\r\n        tipoPessoa: 'F',\r\n        cpf: null,\r\n        cnpj: null,\r\n        ie: null,\r\n        rg: null,\r\n        telefone: null,\r\n        whatsApp: null,\r\n        email: null,\r\n        cep: null,\r\n        logradouro: null,\r\n        numero: null,\r\n        complemento: null,\r\n        referencia: null,\r\n        bairro: null,\r\n        cidade: null,\r\n        estado: null,\r\n        banco: null,\r\n        agencia: null,\r\n        contaCorrente: null,\r\n        dataInicioContrato: null,\r\n        dataFinalContrato: null\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"row justify-content-center\\\">\\r\\n  <div class=\\\"col-lg-8\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col\\\"><hr></div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"form-group col mb-3 d-flex justify-content-between\\\">\\r\\n        <div class=\\\"mtc-title mb-0\\\">Associação de operadores</div>\\r\\n        <div>\\r\\n          <div *ngIf=\\\"!showLoader\\\">\\r\\n            <a\\r\\n              class=\\\"text-primary mr-3\\\"\\r\\n              href=\\\"javascript:void(0)\\\"\\r\\n              (click)=\\\"onHistorico()\\\"\\r\\n              *ngIf=\\\"associacoes.length > 0 && !associacoesEmpty\\\">\\r\\n              <strong>Histórico</strong>\\r\\n            </a>\\r\\n            <a\\r\\n              class=\\\"text-secondary\\\"\\r\\n              href=\\\"javascript:void(0)\\\"\\r\\n              (click)=\\\"onAdd()\\\">\\r\\n              <strong>Adicionar</strong>\\r\\n            </a>\\r\\n          </div>\\r\\n          <div class=\\\"d-flex w-100\\\" *ngIf=\\\"showLoader\\\">\\r\\n            <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n            <strong>Aguarde...</strong>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <custom-table *ngIf=\\\"associacoes.length > 0 && !associacoesEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Nome do operador</th>\\r\\n              <th scope=\\\"col\\\">Motivo</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Início</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Término</th>\\r\\n              <th scope=\\\"col\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let associacao of associacoes\\\">\\r\\n              <td>{{ associacao.nomeOperadorAssociacao | uppercase }}</td>\\r\\n              <td>{{ associacao.motivo | uppercase }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ associacao.dataInicialAssociacao | date: 'dd/MM/yyyy' }}</td>\\r\\n              <td class=\\\"text-center\\\">{{ associacao.dataFinalAssociacao | date: 'dd/MM/yyyy' }}</td>\\r\\n              <td class=\\\"text-right\\\">\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn-icon-sm\\\"\\r\\n                    [disabled]=\\\"showLoader\\\"\\r\\n                    (click)=\\\"onDelete(associacao)\\\">\\r\\n                    <i class=\\\"fas fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"associacoesEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"mt-2 d-flex w-100\\\" *ngIf=\\\"!associacoesLoaded\\\">\\r\\n          <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n          <strong>Carregando associações...</strong>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #modalAssociacoes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Associação de operadores</h4>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"close pull-right\\\"\\r\\n      [disabled]=\\\"submittingForm\\\"\\r\\n      (click)=\\\"hideModal()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"operadores\\\">Selecione os operadores</label>\\r\\n          <ng-select\\r\\n            [items]=\\\"operadores\\\"\\r\\n            [multiple]=\\\"true\\\"\\r\\n            [closeOnSelect]=\\\"false\\\"\\r\\n            labelForId=\\\"operadores\\\"\\r\\n            bindValue=\\\"codOperador\\\"\\r\\n            bindLabel=\\\"nomeCompleto\\\"\\r\\n            formControlName=\\\"operadores\\\"\\r\\n            [ngClass]=\\\"onFieldError('operadores') + ' ' + onFieldRequired(form.controls.operadores)\\\">\\r\\n          </ng-select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('operadores')\\\" message=\\\"Selecione pelo menos um operador.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"motivoAssociacao\\\">Motivo da associação</label>\\r\\n          <ng-select\\r\\n            [searchable]=\\\"true\\\"\\r\\n            [clearable]=\\\"false\\\"\\r\\n            [items]=\\\"motivosAssociacao\\\"\\r\\n            formControlName=\\\"motivoAssociacao\\\"\\r\\n            [virtualScroll]=\\\"true\\\"\\r\\n            bindLabel=\\\"motivoAssociacao\\\"\\r\\n            bindValue=\\\"codMotivoAssociacao\\\"\\r\\n            [ngClass]=\\\"onFieldError('motivoAssociacao') + ' ' + onFieldRequired(form.controls.motivoAssociacao)\\\">\\r\\n          </ng-select>\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('motivoAssociacao')\\\" message=\\\"Motivo da associação é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"dataInicio\\\">Início</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataInicio\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"dataInicio\\\"\\r\\n            [ngClass]=\\\"onFieldError('dataInicio') + ' ' + onFieldRequired(form.controls.dataInicio)\\\">\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('dataInicio')\\\" message=\\\"Início da associação é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-lg-6\\\">\\r\\n          <label for=\\\"dataTermino\\\">Término</label>\\r\\n          <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dataTermino\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            formControlName=\\\"dataTermino\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-light\\\"\\r\\n      [disabled]=\\\"submittingForm\\\"\\r\\n      (click)=\\\"hideModal()\\\">\\r\\n      Cancelar\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      [disabled]=\\\"submittingForm\\\"\\r\\n      (click)=\\\"onSubmit()\\\">\\r\\n      <span *ngIf=\\\"!submittingForm\\\">Salvar</span>\\r\\n      <span *ngIf=\\\"submittingForm\\\">Aguarde</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #modalHistoricoAssociacoes>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Histórico de associações</h4>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"close pull-right\\\"\\r\\n      [disabled]=\\\"submittingForm\\\"\\r\\n      (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <custom-table *ngIf=\\\"historicoAssociacoes.length > 0\\\">\\r\\n      <ng-template #thead let-thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n          <th scope=\\\"col\\\">Usuário</th>\\r\\n          <th scope=\\\"col\\\">Alteração</th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template #tbody let-tbody>\\r\\n        <tr *ngFor=\\\"let historico of historicoAssociacoes\\\">\\r\\n          <td class=\\\"text-center\\\">{{ historico.dataLog | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n          <td>{{ historico.nomeUsuario | uppercase }}</td>\\r\\n          <td>{{ historico.mensagem | uppercase }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </custom-table>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { forkJoin, Observable, Subscription } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// ng-brazil\r\nimport { NgBrazilValidators } from 'ng-brazil';\r\nimport { utilsBr } from 'js-brasil';\r\n\r\n// Services\r\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ComercialCadastrosTipoOperadorService } from 'src/app/modules/comercial/cadastros/tipo-operadores/tipo-operadores.service';\r\nimport { ComercialCadastrosEquipeVendaService } from 'src/app/modules/comercial/cadastros/equipe-venda/equipe-venda.service';\r\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\r\nimport { EstadosService } from 'src/app/shared/services/requests/estados.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { CepService } from 'src/app/shared/services/ws/cep.service';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\nimport { OperadorComercial } from '../models/operador-comercial';\r\nimport { EquipeVenda } from '../../equipe-venda/models/equipe-venda';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-operador-comercial-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss']\r\n})\r\nexport class ComercialCadastrosOperadorComercialFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  public MASKS = utilsBr.MASKS;\r\n\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  codOperador: number = null;\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  tipoOperadores: Array<OperadorComercial> = [];\r\n  equipesVenda: Array<EquipeVenda> = [];\r\n  escritorios: Array<any> = [];\r\n  estados: Array<any> = [];\r\n\r\n  showModalAssociacoes: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private localeService: BsLocaleService,\r\n    private formBuilder: FormBuilder,\r\n    private operadorComercialService: ComercialCadastrosOperadorComercialService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private tipoOperadorService: ComercialCadastrosTipoOperadorService,\r\n    private equipeVendaService: ComercialCadastrosEquipeVendaService,\r\n    private comercialService: ComercialService,\r\n    private estadosService: EstadosService,\r\n    private dateService: DateService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private cepService: CepService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFormFields();\r\n    this.setFormBuilder();\r\n    this.checkRouterParams();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar operador comercial';\r\n        this.codOperador = params.id;\r\n      } else {\r\n        this.appTitle = 'Novo operador comercial';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`\r\n        },\r\n        {\r\n          descricao: 'Operadores comerciais',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/operadores-comerciais/lista`\r\n        },\r\n        {\r\n          descricao: this.appTitle\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.formDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (\r\n            response[0].hasOwnProperty('success') &&\r\n            response[0].success === true\r\n          ) {\r\n            this.tipoOperadores = response[0].data;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n\r\n          if (\r\n            response[1].hasOwnProperty('success') &&\r\n            response[1].success === true\r\n          ) {\r\n            this.equipesVenda = response[1].data;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n\r\n          if (response[2].responseCode === 200) {\r\n            this.escritorios = response[2].result;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n\r\n          this.estados = this.estadosService.getEstados();\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  formDependencies(): Observable<any> {\r\n    const tipoOperadores = this.tipoOperadorService.getListaTipoOperador({\r\n      codSituacao: 1\r\n    });\r\n    const equipesVenda = this.equipeVendaService.getListaEquipesVenda({\r\n      codSituacao: 1\r\n    });\r\n    const escritorios = this.comercialService.getEscritorios();\r\n\r\n    return forkJoin([tipoOperadores, equipesVenda, escritorios]).pipe(take(1));\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: OperadorComercial = this.activatedRoute.snapshot.data\r\n        .detalhes.data;\r\n\r\n      const dataInicioContrato: Date =\r\n        detalhes.dataInicioContrato === null\r\n          ? null\r\n          : this.dateService.convertStringToDate(\r\n              detalhes.dataInicioContrato,\r\n              'usa'\r\n            );\r\n\r\n      const dataFinalContrato: Date =\r\n        detalhes.dataFinalContrato === null\r\n          ? null\r\n          : this.dateService.convertStringToDate(\r\n              detalhes.dataFinalContrato,\r\n              'usa'\r\n            );\r\n\r\n      this.form = this.formBuilder.group({\r\n        codOperador: [detalhes.codOperador],\r\n        nomeOperador: [detalhes.nomeOperador, [Validators.required]],\r\n        sobrenomeOperador: [detalhes.sobrenomeOperador, [Validators.required]],\r\n        codTipoOperador: [detalhes.codTipoOperador, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n        codEquipe: [detalhes.codEquipe, [Validators.required]],\r\n        codEscritorio: [detalhes.codEscritorio, [Validators.required]],\r\n        tipoPessoa: [detalhes.tipoPessoa, [Validators.required]],\r\n        cpf: [detalhes.cpfCnpj],\r\n        cnpj: [detalhes.cpfCnpj],\r\n        rg: [detalhes.rgIe],\r\n        ie: [detalhes.rgIe],\r\n        telefone: [detalhes.telefone, [Validators.required]],\r\n        celular: [detalhes.celular, [Validators.required]],\r\n        email: [detalhes.email, [Validators.required, Validators.email]],\r\n        endereco: this.formBuilder.group({\r\n          cep: [detalhes.cep, [Validators.required]],\r\n          logradouro: [detalhes.logradouro, [Validators.required]],\r\n          numero: [detalhes.numero, [Validators.required]],\r\n          complemento: [detalhes.complemento],\r\n          referencia: [detalhes.referencia],\r\n          bairro: [detalhes.bairro, [Validators.required]],\r\n          cidade: [detalhes.cidade, [Validators.required]],\r\n          estado: [detalhes.estado, [Validators.required]]\r\n        }),\r\n        dadosBancarios: this.formBuilder.group({\r\n          banco: [detalhes.banco],\r\n          agencia: [detalhes.agencia],\r\n          contaCorrente: [detalhes.contaCorrente]\r\n        }),\r\n        dataInicioContrato: [dataInicioContrato, [Validators.required]],\r\n        dataFinalContrato: [dataFinalContrato]\r\n      });\r\n      this.setType(detalhes.tipoPessoa);\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n  }\r\n\r\n  checkRouterParams(): void {\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n\r\n          if (\r\n            params['showModalAssociacoes'] &&\r\n            params['showModalAssociacoes'] === 1\r\n          ) {\r\n            this.showModalAssociacoes = true;\r\n          }\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  setType(tipoPessoa: string): void {\r\n    if (tipoPessoa === 'F') {\r\n      this.form.controls.cpf.markAsUntouched();\r\n      this.form.controls.cpf.enable();\r\n      this.form.controls.cpf.setValidators([\r\n        NgBrazilValidators.cpf,\r\n        Validators.required\r\n      ]);\r\n      this.form.controls.rg.markAsUntouched();\r\n      this.form.controls.rg.enable();\r\n      this.form.controls.rg.setValidators([Validators.required]);\r\n\r\n      this.form.controls.cnpj.setValue(null);\r\n      this.form.controls.cnpj.disable();\r\n      this.form.controls.ie.setValue(null);\r\n      this.form.controls.ie.disable();\r\n    } else if (tipoPessoa === 'J') {\r\n      this.form.controls.cnpj.markAsUntouched();\r\n      this.form.controls.cnpj.enable();\r\n      this.form.controls.cnpj.setValidators([\r\n        NgBrazilValidators.cnpj,\r\n        Validators.required\r\n      ]);\r\n      this.form.controls.ie.markAsUntouched();\r\n      this.form.controls.ie.enable();\r\n      this.form.controls.ie.setValidators([Validators.required]);\r\n\r\n      this.form.controls.cpf.setValue(null);\r\n      this.form.controls.cpf.disable();\r\n      this.form.controls.rg.setValue(null);\r\n      this.form.controls.rg.disable();\r\n    }\r\n\r\n    this.form.controls.cpf.updateValueAndValidity();\r\n    this.form.controls.cnpj.updateValueAndValidity();\r\n    this.form.controls.rg.updateValueAndValidity();\r\n    this.form.controls.ie.updateValueAndValidity();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.operadorComercialService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  this.activatedRoute.queryParams.subscribe(\r\n                    (queryParams: any) => {\r\n                      if (queryParams.hasOwnProperty('q')) {\r\n                        this.router.navigate(['../../lista'], {\r\n                          relativeTo: this.activatedRoute\r\n                        });\r\n                      } else {\r\n                        if (params.hasOwnProperty('id')) {\r\n                          this.location.back();\r\n                        } else {\r\n                          this.checkAssociacoes(response.data);\r\n                        }\r\n                      }\r\n                    }\r\n                  );\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  checkAssociacoes(codOperador: number): void {\r\n    this.confirmModalService\r\n      .showConfirm(\r\n        null,\r\n        'Associação de operadores',\r\n        'Deseja associar outros operadores comerciais?',\r\n        'Cancelar',\r\n        'Confirmar'\r\n      )\r\n      .subscribe((response: boolean) =>\r\n        response\r\n          ? this.onConfirmAssociacoes(codOperador)\r\n          : this.onRefuseAssociacoes()\r\n      );\r\n  }\r\n\r\n  onConfirmAssociacoes(codOperador: number): void {\r\n    this.router.navigate(['../editar', codOperador], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify({ showModalAssociacoes: 1 })) }\r\n    });\r\n  }\r\n\r\n  onRefuseAssociacoes(): void {\r\n    this.router.navigate(['../lista'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  onInputCep() {\r\n    if (this.form.get('endereco.cep').status == 'VALID') {\r\n      this.consultaCEP(this.form.value.endereco.cep);\r\n    }\r\n  }\r\n\r\n  consultaCEP(cep: string) {\r\n    this.loaderNavbar = true;\r\n\r\n    this.cepService\r\n      .getData(cep)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe((response: any) => {\r\n        if (response.hasOwnProperty('success') && response.success === true) {\r\n          this.form.patchValue({\r\n            endereco: {\r\n              logradouro: response.data.logradouro,\r\n              bairro: response.data.bairro,\r\n              cidade: response.data.localidade,\r\n              estado: response.data.uf\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable, forkJoin } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ComercialCadastrosTipoOperadorService } from '../../tipo-operadores/tipo-operadores.service';\r\nimport { ComercialCadastrosEquipeVendaService } from '../../equipe-venda/equipe-venda.service';\r\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\r\n\r\n// Interfaces\r\nimport { OperadorComercial } from '../models/operador-comercial';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { TipoOperador } from '../../tipo-operadores/models/tipo-operador';\r\nimport { EquipeVenda } from '../../equipe-venda/models/equipe-venda';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-operador-comercial-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class ComercialCadastrosOperadorComercialListaComponent\r\n  implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red'\r\n    }\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'nomeOperador';\r\n  orderType = 'ASC';\r\n\r\n  tipoOperadores: Array<TipoOperador> = [];\r\n  equipesVenda: Array<EquipeVenda> = [];\r\n  escritorios: Array<any> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<OperadorComercial> = [];\r\n  dadosPagination: Array<OperadorComercial> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private operadorComercialService: ComercialCadastrosOperadorComercialService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private tipoOperadorService: ComercialCadastrosTipoOperadorService,\r\n    private equipeVendaService: ComercialCadastrosEquipeVendaService,\r\n    private escritorioService: EscritoriosService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.getFormFields();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Operadores comerciais');\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home'\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`\r\n        },\r\n        {\r\n          descricao: 'Operadores comerciais'\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.loadDependencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (\r\n            response[0].hasOwnProperty('success') &&\r\n            response[0].success === true\r\n          ) {\r\n            this.tipoOperadores = response[0].data;\r\n\r\n            this.tipoOperadores.unshift({\r\n              codTipoOperador: 0,\r\n              tipo: 'EXIBIR TODOS',\r\n              codSituacao: null,\r\n              situacao: null,\r\n              nomeUsuario: null,\r\n              dataCadastro: null\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n\r\n          if (\r\n            response[1].hasOwnProperty('success') &&\r\n            response[1].success === true\r\n          ) {\r\n            this.equipesVenda = response[1].data;\r\n\r\n            this.equipesVenda.unshift({\r\n              codEquipeVenda: 0,\r\n              dsEquipeVenda: 'EXIBIR TODOS',\r\n              codCarteira: null,\r\n              codSituacao: null,\r\n              situacao: null,\r\n              codUsuario: null,\r\n              nomeUsuario: null,\r\n              dataCadastro: null,\r\n              codReferenteErp: null\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n\r\n          if (response[2].responseCode === 200) {\r\n            this.escritorios = response[2].result;\r\n\r\n            this.escritorios.unshift({\r\n              codEscritorio: 0,\r\n              nomeEscritorio: 'EXIBIR TODOS'\r\n            });\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.location.back();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.location.back();\r\n        }\r\n      });\r\n  }\r\n\r\n  loadDependencies(): Observable<any> {\r\n    const tipoOperadores = this.tipoOperadorService.getListaTipoOperador({\r\n      codSituacao: 1\r\n    });\r\n    const equipesVenda = this.equipeVendaService.getListaEquipesVenda({\r\n      codSituacao: 1\r\n    });\r\n    const escritorios = this.escritorioService.getEscritorios();\r\n\r\n    return forkJoin([tipoOperadores, equipesVenda, escritorios]);\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      cpfCnpj: [formValue.cpfCnpj],\r\n      rgIe: [formValue.rgIe],\r\n      nomeOperador: [formValue.nomeOperador],\r\n      codTipoOperador: [formValue.codTipoOperador],\r\n      codEquipe: [formValue.codEquipe],\r\n      codEscritorio: [formValue.codEscritorio],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required]\r\n    });\r\n\r\n    this.checkOrder();\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      cpfCnpj: null,\r\n      rgIe: null,\r\n      nomeOperador: null,\r\n      codTipoOperador: 0,\r\n      codEquipe: 0,\r\n      codEscritorio: 0,\r\n      codSituacao: 0,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach(formKey => {\r\n            Object.keys(params).forEach(paramKey => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) }\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.cpfCnpj) {\r\n      params.cpfCnpj = this.form.value.cpfCnpj;\r\n    }\r\n\r\n    if (this.form.value.rgIe) {\r\n      params.rgIe = this.form.value.rgIe;\r\n    }\r\n\r\n    if (this.form.value.nomeOperador) {\r\n      params.nomeOperador = this.form.value.nomeOperador;\r\n    }\r\n\r\n    if (this.form.value.codTipoOperador) {\r\n      params.codTipoOperador = this.form.value.codTipoOperador;\r\n    }\r\n\r\n    if (this.form.value.codEquipe) {\r\n      params.codEquipe = this.form.value.codEquipe;\r\n    }\r\n\r\n    if (this.form.value.codEscritorio) {\r\n      params.codEscritorio = this.form.value.codEscritorio;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.totalItems = 0;\r\n\r\n    this.operadorComercialService\r\n      .getListaOperadoresComerciais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(operadorComercial: OperadorComercial): string {\r\n    let borderClass: string;\r\n\r\n    if (operadorComercial.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (operadorComercial.codSituacao === 2) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant'\r\n    });\r\n  }\r\n\r\n  onEdit(operadorComercial: OperadorComercial): void {\r\n    this.router.navigate(['../editar', operadorComercial.codOperador], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, operadorComercial: OperadorComercial): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result\r\n            ? this.activateOperadorComercial(index, operadorComercial)\r\n            : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(operadorComercial);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 2;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateOperadorComercial(\r\n    index: number,\r\n    operadorComercial: OperadorComercial\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.operadorComercialService.activateOperadorComercial(\r\n      operadorComercial.codOperador\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, operadorComercial: OperadorComercial): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap(result =>\r\n          result\r\n            ? this.inactivateOperadorComercial(index, operadorComercial)\r\n            : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(operadorComercial);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateOperadorComercial(\r\n    index: number,\r\n    operadorComercial: OperadorComercial\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 2;\r\n\r\n    return this.operadorComercialService.inactivateOperadorComercial(\r\n      operadorComercial.codOperador\r\n    );\r\n  }\r\n\r\n  refreshMainData(operadorComercial: OperadorComercial): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (operadorComercial.codOperador === this.dados[i].codOperador) {\r\n        this.dados[i].codSituacao = operadorComercial.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  // Función para obtener la fecha de inicio de la semana actual (lunes)\r\n  getStartOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const startOfWeek = new Date(currentDate);\r\n\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + (currentDate.getDay() === 0 ? -6 : 1));\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    return startOfWeek;\r\n  }\r\n\r\n  // Función para obtener la fecha de fin de la semana actual (domingo)\r\n  getEndOfWeek(): Date {\r\n    const currentDate = new Date();\r\n    const endOfWeek = new Date(currentDate);\r\n\r\n    endOfWeek.setDate(currentDate.getDate() - currentDate.getDay() + 7);\r\n    endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n    return endOfWeek;\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Operadores comerciais\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row\\\" #scrollToFilter>\\r\\n    <div class=\\\"col\\\">\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"cpfCnpj\\\">CPF/CNPJ</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"cpfCnpj\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"rgIe\\\">RG/IE</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"rgIe\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"nomeOperador\\\">Nome do operador</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                formControlName=\\\"nomeOperador\\\"\\r\\n                (keydown.enter)=\\\"onFilter()\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-2\\\">\\r\\n              <label for=\\\"codTipoOperador\\\">Tipo de operador</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"tipoOperadores\\\"\\r\\n                formControlName=\\\"codTipoOperador\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                bindLabel=\\\"tipo\\\"\\r\\n                bindValue=\\\"codTipoOperador\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codEquipe\\\">Equipe de venda</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"equipesVenda\\\"\\r\\n                formControlName=\\\"codEquipe\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                bindLabel=\\\"dsEquipeVenda\\\"\\r\\n                bindValue=\\\"codEquipeVenda\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codEscritorio\\\">Escritório</label>\\r\\n              <ng-select\\r\\n                [searchable]=\\\"true\\\"\\r\\n                [clearable]=\\\"false\\\"\\r\\n                [items]=\\\"escritorios\\\"\\r\\n                formControlName=\\\"codEscritorio\\\"\\r\\n                [virtualScroll]=\\\"true\\\"\\r\\n                bindLabel=\\\"nomeEscritorio\\\"\\r\\n                bindValue=\\\"codEscritorio\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"codSituacao\\\">Situação</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                id=\\\"codSituacao\\\"\\r\\n                formControlName=\\\"codSituacao\\\">\\r\\n                <option value=\\\"0\\\">Todos</option>\\r\\n                <option value=\\\"1\\\">Ativos</option>\\r\\n                <option value=\\\"2\\\">Inativos</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"registros\\\">Registros</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"registros\\\"\\r\\n                formControlName=\\\"registros\\\">\\r\\n                <option>25</option>\\r\\n                <option>50</option>\\r\\n                <option>100</option>\\r\\n                <option>200</option>\\r\\n                <option>300</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Nome do operador\\\"\\r\\n                [active]=\\\"orderBy == 'nomeOperador'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeOperador')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Tipo\\\"\\r\\n                [active]=\\\"orderBy == 'descTipoOperador'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('descTipoOperador')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Equipe\\\"\\r\\n                [active]=\\\"orderBy == 'nomeEquipe'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeEquipe')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\" class=\\\"hover\\\">\\r\\n              <thead-sorter\\r\\n                value=\\\"Escritório\\\"\\r\\n                [active]=\\\"orderBy == 'nomeEscritorio'\\\"\\r\\n                [sort]=\\\"orderType\\\"\\r\\n                (click)=\\\"setOrderBy('nomeEscritorio')\\\">\\r\\n              </thead-sorter>\\r\\n            </th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let operadorComercial of dadosPagination; let i = index\\\">\\r\\n            <td [ngClass]=\\\"classStatusBorder(operadorComercial)\\\">\\r\\n              {{ operadorComercial.nomeCompleto | uppercase }}\\r\\n            </td>\\r\\n            <td>{{ operadorComercial.descTipoOperador | uppercase }}</td>\\r\\n            <td>{{ operadorComercial.nomeEquipe | uppercase }}</td>\\r\\n            <td>{{ operadorComercial.nomeEscritorio | uppercase }}</td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <span *ngIf=\\\"operadorComercial.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, operadorComercial)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"operadorComercial.codSituacao == 2\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, operadorComercial)\\\">\\r\\n                  <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(operadorComercial)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n      <empty-result\\r\\n        message=\\\"Nenhuma informação encontrada\\\"\\r\\n        class=\\\"my-3\\\"\\r\\n        *ngIf=\\\"dadosEmpty\\\">\\r\\n      </empty-result>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n        <pagination\\r\\n          [maxSize]=\\\"maxSize\\\"\\r\\n          [(totalItems)]=\\\"totalItems\\\"\\r\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n          [boundaryLinks]=\\\"true\\\"\\r\\n          [(ngModel)]=\\\"currentPage\\\"\\r\\n          previousText=\\\"&lsaquo;\\\"\\r\\n          nextText=\\\"&rsaquo;\\\"\\r\\n          firstText=\\\"&laquo;\\\"\\r\\n          lastText=\\\"&raquo;\\\">\\r\\n        </pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialService {\r\n  private readonly API = `http://23.254.204.187/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getEmpresas(params?: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/empresas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getDepositos(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/depositos`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getAlmacen(params?: any): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/almacen`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhasId(id: any) {\r\n    return this.http.get(`${this.API}/linhas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getSublineasId(id: any) {\r\n    return this.http.get(`${this.API}/sublineas/${id}`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  sincronizarMateriales() {\r\n    return this.http.get(`${this.API}/sincronizar`).pipe(take(1), retry(2));\r\n  }\r\n  getMateriales(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesLista(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales/lista`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n\r\n\r\n  getMaterialesOferta(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio`,  {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getMaterialesOfertaVendedor(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_lista_precio_vendedor`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getUpSellService(params: any) {\r\n    return this.http\r\n      .get(\r\n        `${this.API}/materiales_suplementarios`, {\r\n        params: params,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getLinhas(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/linhas`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getClasses(params: any): Observable<Object> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/classes`, {\r\n        params: httpParams,\r\n      })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getMateriais(params: any = []): Observable<Object | JsonResponse> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/materiais`, { params: httpParams })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getPerfil(): Observable<Object> {\r\n    return this.http.get(`${this.API}/perfil`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getEscritorios(): Observable<Object> {\r\n    return this.http.get(`${this.API}/escritorios`).pipe(take(1), retry(2));\r\n  }\r\n  getPresentacionMaterial(): Observable<Object> {\r\n    return this.http\r\n      .get(`${this.API}/presentacion_materiales`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCliente(codCliente) {\r\n    return this.http.get(`${this.API}/clientes/detalhes/${codCliente}`).pipe(take(1));\r\n  }\r\n\r\n  getListarPrecios() {\r\n    return this.http.get(`${this.API}/vendedor/lista_precio`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getTodosVendedores() {\r\n    return this.http.get(`${this.API}/vendedor/allvendedor`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n  getCentrosLogisticos() {\r\n    return this.http.get(`${this.API}/almacen/centros_logisticos`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9vcGVyYWRvcmVzLWNvbWVyY2lhaXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9vcGVyYWRvcmVzLWNvbWVyY2lhaXMvYXNzb2NpYWNvZXMvYXNzb2NpYWNvZXMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy9vcGVyYWRvcmVzLWNvbWVyY2lhaXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  Input,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize, take, switchMap } from 'rxjs/operators';\r\nimport { forkJoin, Observable, EMPTY } from 'rxjs';\r\n\r\n// ngx-bootstrap\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { ComercialCadastrosOperadorComercialService } from '../operadores-comerciais.service';\r\nimport { ComercialCadastrosMotivoAssociacaoService } from '../../motivo-associacao/motivo-associacao.service';\r\n\r\n// Interfaces\r\nimport { AssociacaoOperadorComercial } from '../models/associacao-operador-comercial';\r\nimport { MotivoAssociacao } from '../../motivo-associacao/models/motivo-associacao';\r\nimport { OperadorComercial } from '../models/operador-comercial';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-operadores-comerciais-associacoes',\r\n  templateUrl: './associacoes.component.html',\r\n  styleUrls: ['./associacoes.component.scss'],\r\n})\r\nexport class ComercialCadastrosOperadorComercialAssociacoesComponent\r\n  implements OnInit, OnChanges\r\n{\r\n  @Input('codOperador') codOperador: number;\r\n  @Input('showModal') showModal = false;\r\n  @ViewChild('modalAssociacoes', {}) modalAssociacoes: TemplateRef<any>;\r\n  @ViewChild('modalHistoricoAssociacoes', {})\r\n  modalHistoricoAssociacoes: TemplateRef<any>;\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  form: FormGroup;\r\n  submittingForm: boolean;\r\n\r\n  showLoader: boolean;\r\n\r\n  associacoes: Array<AssociacaoOperadorComercial> = [];\r\n  associacoesLoaded = false;\r\n  associacoesEmpty = false;\r\n\r\n  historicoAssociacoes: Array<any> = [];\r\n  historicoAssociacoesLoaded = false;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  dependenciesLoaded = false;\r\n  operadores: Array<OperadorComercial> = [];\r\n  motivosAssociacao: Array<MotivoAssociacao> = [];\r\n\r\n  constructor(\r\n    private localeService: BsLocaleService,\r\n    private formBuilder: FormBuilder,\r\n    private modalService: BsModalService,\r\n    private pnotifyService: PNotifyService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private operadorComercialService: ComercialCadastrosOperadorComercialService,\r\n    private motivosAssociacaoService: ComercialCadastrosMotivoAssociacaoService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkAssociacoes();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.showModal.currentValue === true) {\r\n      this.onAdd();\r\n    }\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    this.form = this.formBuilder.group({\r\n      operadores: [null, [Validators.required]],\r\n      motivoAssociacao: [null, [Validators.required]],\r\n      dataInicio: [null, [Validators.required]],\r\n      dataTermino: [null],\r\n    });\r\n  }\r\n\r\n  checkAssociacoes(): void {\r\n    if (this.codOperador !== null) {\r\n      this.getAssociacoesOperadores();\r\n    }\r\n  }\r\n\r\n  getAssociacoesOperadores(): void {\r\n    this.associacoes = [];\r\n    this.associacoesEmpty = false;\r\n    this.associacoesLoaded = false;\r\n    this.historicoAssociacoes = [];\r\n    this.historicoAssociacoesLoaded = false;\r\n\r\n    this.operadorComercialService\r\n      .getAssociacoesOperadores(this.codOperador)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.associacoesLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.associacoes = response.data;\r\n          } else {\r\n            this.associacoesEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.associacoesEmpty = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  onReloadAssociacoes(): void {\r\n    this.getAssociacoesOperadores();\r\n  }\r\n\r\n  onAdd(): void {\r\n    if (this.dependenciesLoaded === false) {\r\n      this.getFormFields();\r\n    } else {\r\n      this.openModal(this.modalAssociacoes);\r\n    }\r\n  }\r\n\r\n  getFormFields(): void {\r\n    this.showLoader = true;\r\n    this.operadores = [];\r\n    this.motivosAssociacao = [];\r\n\r\n    this.loadDepencencies()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showLoader = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (\r\n            response[0].hasOwnProperty('success') &&\r\n            response[0].success === true\r\n          ) {\r\n            if (\r\n              response[1].hasOwnProperty('success') &&\r\n              response[1].success === true\r\n            ) {\r\n              this.operadores = response[0].data;\r\n              this.motivosAssociacao = response[1].data;\r\n              this.dependenciesLoaded = true;\r\n              this.openModal(this.modalAssociacoes);\r\n            } else {\r\n              this.pnotifyService.error('A operação não pode ser realizada.');\r\n            }\r\n          } else {\r\n            this.pnotifyService.error('A operação não pode ser realizada.');\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.pnotifyService.error('A operação não pode ser realizada.');\r\n        }\r\n      });\r\n  }\r\n\r\n  loadDepencencies(): Observable<any> {\r\n    const operadores =\r\n      this.operadorComercialService.getListaOperadoresComerciais({\r\n        codSituacao: 1,\r\n      });\r\n    const motivosAssociacao =\r\n      this.motivosAssociacaoService.getListaMotivosAssociacao({\r\n        codSituacao: 1,\r\n      });\r\n\r\n    return forkJoin([operadores, motivosAssociacao]).pipe(take(1));\r\n  }\r\n\r\n  onDelete(associacaoOperadorComercial: AssociacaoOperadorComercial): void {\r\n    this.confirmDelete()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result\r\n            ? this.deleteAssociacaoOperador(associacaoOperadorComercial)\r\n            : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.showLoader = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.onReloadAssociacoes();\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmDelete(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação da associação?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  deleteAssociacaoOperador(\r\n    associacaoOperadorComercial: AssociacaoOperadorComercial\r\n  ): Observable<any> {\r\n    this.showLoader = true;\r\n\r\n    return this.operadorComercialService.deleteAssociacaoOperador({\r\n      codAssociacao: associacaoOperadorComercial.codAssociacao,\r\n      codOperador: associacaoOperadorComercial.codOperador,\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, customClass?: string): void {\r\n    let config = {\r\n      keyboard: false,\r\n      ignoreBackdropClick: true,\r\n    };\r\n\r\n    if (customClass) {\r\n      Object.assign(config, { class: customClass });\r\n    }\r\n\r\n    this.modalRef = this.modalService.show(template, config);\r\n  }\r\n\r\n  hideModal(): void {\r\n    this.modalRef.hide();\r\n    this.form.reset();\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      this.submittingForm = true;\r\n\r\n      this.operadorComercialService\r\n        .postAssociacaoOperador(\r\n          Object.assign(this.form.value, { codOperador: this.codOperador })\r\n        )\r\n        .pipe(\r\n          finalize(() => {\r\n            this.submittingForm = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (\r\n              response.hasOwnProperty('mensagem') &&\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.pnotifyService.success(response.mensagem);\r\n              this.hideModal();\r\n              this.getAssociacoesOperadores();\r\n            } else if (\r\n              response.hasOwnProperty('mensagem') &&\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false\r\n            ) {\r\n              this.pnotifyService.notice(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onHistorico(): void {\r\n    if (this.historicoAssociacoesLoaded === false) {\r\n      this.showLoader = true;\r\n\r\n      this.operadorComercialService\r\n        .getHistoricoAssociacoes(this.codOperador)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.showLoader = false;\r\n          })\r\n        )\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if (\r\n              response.hasOwnProperty('mensagem') &&\r\n              response.hasOwnProperty('success') &&\r\n              response.success === true\r\n            ) {\r\n              this.historicoAssociacoes = response.data;\r\n              this.historicoAssociacoesLoaded = true;\r\n              this.openModal(this.modalHistoricoAssociacoes, 'modal-xxl');\r\n            } else if (\r\n              response.hasOwnProperty('mensagem') &&\r\n              response.hasOwnProperty('success') &&\r\n              response.success === false\r\n            ) {\r\n              this.pnotifyService.notice(response.mensagem);\r\n            } else {\r\n              this.pnotifyService.error();\r\n            }\r\n          },\r\n          error: (error: any) => {\r\n            this.pnotifyService.error();\r\n          }\r\n        });\r\n    } else {\r\n      this.openModal(this.modalHistoricoAssociacoes, 'modal-xxl');\r\n    }\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"nomeOperador\\\">Nome</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"nomeOperador\\\"\\r\\n              formControlName=\\\"nomeOperador\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('nomeOperador') + ' ' + onFieldRequired(form.controls.nomeOperador)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('nomeOperador')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"sobrenomeOperador\\\">Sobrenome</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"sobrenomeOperador\\\"\\r\\n              formControlName=\\\"sobrenomeOperador\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('sobrenomeOperador') + ' ' + onFieldRequired(form.controls.sobrenomeOperador)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('sobrenomeOperador')\\\" message=\\\"Sobrenome é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codTipoOperador\\\">Tipo de operador</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"tipoOperadores\\\"\\r\\n              formControlName=\\\"codTipoOperador\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"tipo\\\"\\r\\n              bindValue=\\\"codTipoOperador\\\"\\r\\n              [ngClass]=\\\"onFieldError('codTipoOperador') + ' ' + onFieldRequired(form.controls.codTipoOperador)\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codTipoOperador')\\\" message=\\\"Tipo de operador é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\">Ativo</option>\\r\\n              <option value=\\\"2\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codEquipe\\\">Equipe de vendas</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"equipesVenda\\\"\\r\\n              formControlName=\\\"codEquipe\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"dsEquipeVenda\\\"\\r\\n              bindValue=\\\"codEquipeVenda\\\"\\r\\n              [ngClass]=\\\"onFieldError('codEquipe') + ' ' + onFieldRequired(form.controls.codEquipe)\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEquipe')\\\" message=\\\"Equipe de venda é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codEscritorio\\\">Escritório</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"escritorios\\\"\\r\\n              formControlName=\\\"codEscritorio\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              [ngClass]=\\\"onFieldError('codEscritorio') + ' ' + onFieldRequired(form.controls.codEscritorio)\\\">\\r\\n            </ng-select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codEscritorio')\\\" message=\\\"Escritório é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-12\\\">\\r\\n            <label>Tipo de pessoa</label>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-12\\\">\\r\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\" (click)=\\\"setType('F')\\\">\\r\\n              <input\\r\\n                type=\\\"radio\\\"\\r\\n                id=\\\"tipoPessoaF\\\"\\r\\n                name=\\\"tipoPessoa\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                value=\\\"F\\\"\\r\\n                formControlName=\\\"tipoPessoa\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"tipoPessoaF\\\">Pessoa física</label>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\" (click)=\\\"setType('J')\\\">\\r\\n              <input\\r\\n                type=\\\"radio\\\"\\r\\n                id=\\\"tipoPessoaJ\\\"\\r\\n                name=\\\"tipoPessoa\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                value=\\\"J\\\"\\r\\n                formControlName=\\\"tipoPessoa\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"tipoPessoaJ\\\">Pessoa jurídica</label>\\r\\n            </div>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('tipoPessoa')\\\" message=\\\"Tipo de pessoa é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\" *ngIf=\\\"form.value.tipoPessoa === 'F'\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"cpf\\\">CPF</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"cpf\\\"\\r\\n              formControlName=\\\"cpf\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('cpf') + ' ' + onFieldRequired(form.controls.cpf)\\\"\\r\\n              cpf [textMask]=\\\"{ mask: MASKS.cpf.textMask }\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cpf')\\\" message=\\\"CPF é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"rg\\\">RG</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"rg\\\"\\r\\n              formControlName=\\\"rg\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('rg') + ' ' + onFieldRequired(form.controls.rg)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('rg')\\\" message=\\\"RG é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\" *ngIf=\\\"form.value.tipoPessoa === 'J'\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"cnpj\\\">CNPJ</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"cnpj\\\"\\r\\n              formControlName=\\\"cnpj\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('cnpj') + ' ' + onFieldRequired(form.controls.cnpj)\\\"\\r\\n              cnpj [textMask]=\\\"{ mask: MASKS.cnpj.textMask }\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cnpj')\\\" message=\\\"CNPJ é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"ie\\\">Inscrição estadual</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"ie\\\"\\r\\n              formControlName=\\\"ie\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('ie') + ' ' + onFieldRequired(form.controls.ie)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ie')\\\" message=\\\"Inscrição estadual é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"telefone\\\">Telefone</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"telefone\\\"\\r\\n              formControlName=\\\"telefone\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('telefone') + ' ' + onFieldRequired(form.controls.telefone)\\\"\\r\\n              telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('telefone')\\\" message=\\\"Telefone é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"celular\\\">Celular</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"celular\\\"\\r\\n              formControlName=\\\"celular\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('celular') + ' ' + onFieldRequired(form.controls.celular)\\\"\\r\\n              telefone [textMask]=\\\"{ mask: MASKS.telefone.textMaskFunction }\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('celular')\\\" message=\\\"Celular é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"email\\\">E-mail</label>\\r\\n            <input\\r\\n              type=\\\"email\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"email\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('email') + ' ' + onFieldRequired(form.controls.email)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('email')\\\" message=\\\"E-mail é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formGroupName=\\\"endereco\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\"><hr></div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Endereço</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"cep\\\">CEP</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"cep\\\"\\r\\n                formControlName=\\\"cep\\\"\\r\\n                (input)=\\\"onInput(); onInputCep();\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco.cep') + ' ' + onFieldRequired(form.controls.endereco, 'cep')\\\"\\r\\n                cep [textMask]=\\\"{mask: MASKS.cep.textMask}\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.cep')\\\" message=\\\"CEP é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"logradouro\\\">Endereço</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"logradouro\\\"\\r\\n                formControlName=\\\"logradouro\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco.logradouro') + ' ' + onFieldRequired(form.controls.endereco, 'logradouro')\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.logradouro')\\\" message=\\\"Endereço é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"numero\\\">Número</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"numero\\\"\\r\\n                formControlName=\\\"numero\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco.numero') + ' ' + onFieldRequired(form.controls.endereco, 'numero')\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.numero')\\\" message=\\\"Número é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"complemento\\\">Complemento</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"complemento\\\"\\r\\n                formControlName=\\\"complemento\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"referencia\\\">Referência</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"referencia\\\"\\r\\n                formControlName=\\\"referencia\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"bairro\\\">Bairro</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"bairro\\\"\\r\\n                formControlName=\\\"bairro\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco.bairro') + ' ' + onFieldRequired(form.controls.endereco, 'bairro')\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.bairro')\\\" message=\\\"Bairro é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"numero\\\">Cidade</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"cidade\\\"\\r\\n                formControlName=\\\"cidade\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco.cidade') + ' ' + onFieldRequired(form.controls.endereco, 'cidade')\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.cidade')\\\" message=\\\"Cidade é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"estado\\\">Estado</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"estado\\\"\\r\\n                formControlName=\\\"estado\\\"\\r\\n                (change)=\\\"onInput()\\\"\\r\\n                [ngClass]=\\\"onFieldError('endereco.estado') + ' ' + onFieldRequired(form.controls.endereco, 'estado')\\\">\\r\\n                <option value=\\\"\\\">SELECIONE UMA OPÇÃO</option>\\r\\n                <option *ngFor=\\\"let item of estados\\\" [value]=\\\"item.sigla\\\">{{ item.descricao }}</option>\\r\\n              </select>\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('endereco.estado')\\\" message=\\\"Estado é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div formGroupName=\\\"dadosBancarios\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\"><hr></div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Dados bancários</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"banco\\\">Banco</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"banco\\\"\\r\\n                formControlName=\\\"banco\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"agencia\\\">Agência</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"agencia\\\"\\r\\n                formControlName=\\\"agencia\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"contaCorrente\\\">Conta corrente</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"contaCorrente\\\"\\r\\n                formControlName=\\\"contaCorrente\\\"\\r\\n                (input)=\\\"onInput()\\\"\\r\\n                autocomplete=\\\"new-password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\"><hr></div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <div class=\\\"mtc-title\\\">Contrato</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"dataInicioContrato\\\">Início</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataInicioContrato\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataInicioContrato\\\"\\r\\n                [ngClass]=\\\"onFieldError('dataInicioContrato') + ' ' + onFieldRequired(form.controls.dataInicioContrato)\\\">\\r\\n              <invalid-form-control [show]=\\\"onFieldInvalid('dataInicioContrato')\\\" message=\\\"Início do contrato é obrigatório.\\\"></invalid-form-control>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-6\\\">\\r\\n              <label for=\\\"dataFinalContrato\\\">Término</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dataFinalContrato\\\"\\r\\n                type=\\\"text\\\"\\r\\n                bsDatepicker\\r\\n                [bsConfig]=\\\"bsConfig\\\"\\r\\n                formControlName=\\\"dataFinalContrato\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"codOperador !== null\\\">\\r\\n    <comercial-cadastros-operadores-comerciais-associacoes\\r\\n      [codOperador]=\\\"codOperador\\\"\\r\\n      [showModal]=\\\"showModalAssociacoes\\\">\\r\\n    </comercial-cadastros-operadores-comerciais-associacoes>\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosOperadorComercialModuleRoutingModule } from './operadores-comerciais-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosOperadorComercialListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosOperadorComercialFormularioComponent } from './formulario/formulario.component';\r\nimport { ComercialCadastrosOperadorComercialAssociacoesComponent } from './associacoes/associacoes.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosOperadorComercialListaComponent,\r\n    ComercialCadastrosOperadorComercialFormularioComponent,\r\n    ComercialCadastrosOperadorComercialAssociacoesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosOperadorComercialModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule\r\n  ],\r\n  providers: [PNotifyService]\r\n})\r\nexport class ComercialCadastrosOperadorComercialModule {}\r\n"],"sourceRoot":"webpack:///"}