{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/titulos-agenda/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.service.ts"],"names":["ComercialCadastrosTitulosAgendaListaComponent","activatedRoute","router","location","formBuilder","titulosAgendaService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","titulosAgenda","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setTitulosAgendaSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","descricaoTitulo","codTitulo","codSituacao","pagina","registros","required","checkOrder","nomeEscritorio","codEmpresa","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","titulosAgendaSelecionado","codCarteira","situacao","codUsuario","nomeUsuario","dataCadastro","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaTitulosAgenda","pipe","next","response","hasOwnProperty","success","data","slice","error","mensagem","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","show","setTimeout","loadedFinished","console","log","index","confirmActivate","asObservable","result","activateTitulosAgenda","refreshMainData","showConfirm","confirmInactive","inactivateTitulosAgenda","i","selector","template","ComercialCadastrosTitulosAgendaFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosTitulosAgendaModuleRoutingModule","imports","forChild","exports","ComercialCadastrosTitulosAgendaModule","declarations","forRoot","providers","FormDeactivateGuard","route","state","formCanDeactivate","ComercialCadastrosTitulosAgendaFormularioResolverGuard","getDetalhes","ComercialCadastrosTitulosAgendaService","http","API","httpParams","param","append","post","put","updateTitulosAgenda","saveTitulosAgenda","codigo"],"mappings":"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","file":"titulos-agenda-titulos-agenda-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header appTitle=\\\"Títulos para agenda do vendedor\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    [routerLink]=\\\"['../novo']\\\">\\r\\n    Adicionar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n     <div class=\\\"row\\\" #scrollToFilter>\\r\\n      <div class=\\\"col\\\">\\r\\n        <advanced-filter>\\r\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <div class=\\\"form-group col-lg-7\\\">\\r\\n                <label for=\\\"descricaoTitulo\\\">Título para agenda do vendedor</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"descricaoTitulo\\\"\\r\\n                  (keydown.enter)=\\\"onFilter()\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-3\\\">\\r\\n                <label for=\\\"codSituacao\\\">Situação</label>\\r\\n                <select\\r\\n                  class=\\\"form-control custom-select\\\"\\r\\n                  id=\\\"codSituacao\\\"\\r\\n                  formControlName=\\\"codSituacao\\\">\\r\\n                  <option value=\\\"2\\\">Todos</option>\\r\\n                  <option value=\\\"1\\\">Ativos</option>\\r\\n                  <option value=\\\"0\\\">Inativos</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-lg-2\\\">\\r\\n                <label for=\\\"registros\\\">Registros</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"registros\\\"\\r\\n                  formControlName=\\\"registros\\\">\\r\\n                  <option>25</option>\\r\\n                  <option>50</option>\\r\\n                  <option>100</option>\\r\\n                  <option>200</option>\\r\\n                  <option>300</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </advanced-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <subtitles\\r\\n          [data]=\\\"subtitles\\\"\\r\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n        </subtitles>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\r\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\r\\n          <ng-template #thead let-thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Título de Agenda de Vendedoores</th>\\r\\n              <!-- <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th> -->\\r\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template #tbody let-tbody>\\r\\n            <tr *ngFor=\\\"let titulosAgenda of dadosPagination; let i = index\\\" [class.table-active]=\\\"titulosAgenda.codTitulo == titulosAgendaSelecionado.codTitulo\\\">\\r\\n              <td\\r\\n                class=\\\"hover\\\"\\r\\n                [ngClass]=\\\"classStatusBorder(titulosAgenda)\\\"\\r\\n                (click)=\\\"onDetails(titulosAgenda)\\\">\\r\\n                {{ titulosAgenda.descricaoTitulo | uppercase }}\\r\\n              </td>\\r\\n              <!-- <td\\r\\n                class=\\\"text-center hover\\\"\\r\\n                (click)=\\\"onDetails(titulosAgenda)\\\">\\r\\n                {{ titulosAgenda.situacao | uppercase }}\\r\\n              </td> -->\\r\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\r\\n                <span *ngIf=\\\"titulosAgenda.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, titulosAgenda)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"titulosAgenda.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, titulosAgenda)\\\">\\r\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(titulosAgenda)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </custom-table>\\r\\n        <empty-result\\r\\n          message=\\\"Nenhuma informação encontrada\\\"\\r\\n          class=\\\"my-3\\\"\\r\\n          *ngIf=\\\"dadosEmpty\\\">\\r\\n        </empty-result>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\r\\n          <pagination\\r\\n            [maxSize]=\\\"maxSize\\\"\\r\\n            [(totalItems)]=\\\"totalItems\\\"\\r\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n            [boundaryLinks]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"currentPage\\\"\\r\\n            previousText=\\\"&lsaquo;\\\"\\r\\n            nextText=\\\"&rsaquo;\\\"\\r\\n            firstText=\\\"&laquo;\\\"\\r\\n            lastText=\\\"&raquo;\\\">\\r\\n          </pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\r\\n        <detail-panel panelTitle=\\\"Última alteração\\\">\\r\\n          <custom-table>\\r\\n            <ng-template #thead let-thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\r\\n                <th scope=\\\"col\\\">Usuário</th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n            <ng-template #tbody let-tbody>\\r\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\r\\n                <td class=\\\"text-center\\\">{{ alteracao.dataCadastro | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </custom-table>\\r\\n        </detail-panel>\\r\\n      </div>\\r\\n    </div>\\r\\n  </app-body>\\r\\n\";","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { Subscription, EMPTY, Observable } from 'rxjs';\r\nimport { take, switchMap, finalize } from 'rxjs/operators';\r\n\r\n// ngx-bootstrap\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\n\r\n// Services\r\nimport { ComercialCadastrosTitulosAgendaService } from '../titulos-agenda.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\r\n\r\n// Interfaces\r\nimport { TitulosAgenda } from '../models/titulos-agenda';\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-titulos-agenda-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss'],\r\n})\r\nexport class ComercialCadastrosTitulosAgendaListaComponent implements OnInit {\r\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\r\n\r\n  loaderNavbar = false;\r\n  loaderFullScreen = true;\r\n\r\n  breadCrumbTree: Array<Breadcrumb> = [];\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true,\r\n  };\r\n\r\n  activatedRouteSubscription: Subscription;\r\n\r\n  showDetailPanelSubscription: Subscription;\r\n  showDetailPanel = false;\r\n\r\n  form: FormGroup;\r\n  orderBy = 'codTitulo';\r\n  orderType = 'ASC';\r\n\r\n  titulosAgenda: Array<any> = [];\r\n\r\n  maxSize = 10;\r\n  itemsPerPage = 300;\r\n  currentPage = 1;\r\n  totalItems = 0;\r\n\r\n  dados: Array<TitulosAgenda> = [];\r\n  dadosPagination: Array<TitulosAgenda> = [];\r\n  dadosLoaded = false;\r\n  dadosEmpty = false;\r\n\r\n  titulosAgendaSelecionado: TitulosAgenda;\r\n  alteracoes: TitulosAgenda[] = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService,\r\n    private confirmModalService: ConfirmModalService,\r\n    private detailPanelService: DetailPanelService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormFilter();\r\n    this.titleService.setTitle('Motivo de Associação');\r\n    this.onDetailPanelEmitter();\r\n    this.setTitulosAgendaSelecionado();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.showDetailPanelSubscription.unsubscribe();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\r\n        },\r\n        {\r\n          descricao: 'Títulos para agenda do vendedor',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  onDetailPanelEmitter(): void {\r\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\r\n      (event: any) => {\r\n        this.showDetailPanel = event.showing;\r\n      }\r\n    );\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    const formValue: any = this.checkRouterParams();\r\n\r\n    this.form = this.formBuilder.group({\r\n      descricaoTitulo: [formValue.descricaoTitulo],\r\n      codTitulo: [formValue.codTitulo],\r\n      codSituacao: [formValue.codSituacao],\r\n      orderBy: [formValue.orderBy],\r\n      orderType: [formValue.orderType],\r\n      pagina: [formValue.pagina],\r\n      registros: [formValue.registros, Validators.required],\r\n    });\r\n\r\n    this.checkOrder();\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  checkRouterParams(): Object {\r\n    let formValue = {\r\n      nomeEscritorio: null,\r\n      codEmpresa: 0,\r\n      codSituacao: 1,\r\n      orderBy: this.orderBy,\r\n      orderType: this.orderType,\r\n      pagina: 1,\r\n      registros: this.itemsPerPage,\r\n    };\r\n\r\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (queryParams: any) => {\r\n        if (Object.keys(queryParams).length > 0) {\r\n          let params = atob(queryParams['q']);\r\n          params = JSON.parse(params);\r\n          this.search(params);\r\n\r\n          Object.keys(formValue).forEach((formKey) => {\r\n            Object.keys(params).forEach((paramKey) => {\r\n              if (\r\n                formKey == paramKey &&\r\n                formValue[formKey] != params[paramKey]\r\n              ) {\r\n                if (!isNaN(Number(params[paramKey]))) {\r\n                  formValue[formKey] = Number(params[paramKey]);\r\n                } else {\r\n                  formValue[formKey] = params[paramKey];\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n    this.activatedRouteSubscription.unsubscribe();\r\n\r\n    return formValue;\r\n  }\r\n\r\n  checkOrder(): void {\r\n    if (this.form.value.orderBy !== this.orderBy) {\r\n      this.orderBy = this.form.value.orderBy;\r\n    }\r\n\r\n    if (this.form.value.orderType !== this.orderType) {\r\n      this.orderType = this.form.value.orderType;\r\n    }\r\n  }\r\n\r\n  setTitulosAgendaSelecionado(): void {\r\n    this.titulosAgendaSelecionado = {\r\n      codTitulo: -1,\r\n      descricaoTitulo: null,\r\n      codCarteira: null,\r\n      codSituacao: null,\r\n      situacao: null,\r\n      codUsuario: null,\r\n      nomeUsuario: null,\r\n      dataCadastro: null,\r\n    };\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  setOrderBy(column: string): void {\r\n    if (this.orderBy === column) {\r\n      if (this.orderType == 'DESC') {\r\n        this.orderType = 'ASC';\r\n      } else if (this.orderType == 'ASC') {\r\n        this.orderType = 'DESC';\r\n      }\r\n    } else {\r\n      this.orderBy = column;\r\n      this.orderType = 'ASC';\r\n    }\r\n\r\n    this.form.value.orderBy = this.orderBy;\r\n    this.form.value.orderType = this.orderType;\r\n\r\n    this.onFilter();\r\n  }\r\n\r\n  onFilter(): void {\r\n    if (this.form.valid) {\r\n      this.itemsPerPage = this.form.value.registros;\r\n      this.currentPage = 1;\r\n      this.setRouterParams(this.verificaParams());\r\n    }\r\n  }\r\n\r\n  setRouterParams(params: any): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: { q: btoa(JSON.stringify(params)) },\r\n    });\r\n    this.search(params);\r\n  }\r\n\r\n  verificaParams(): Object {\r\n    let params: any = {};\r\n\r\n    if (this.form.value.descricaoTitulo) {\r\n      params.descricaoTitulo = this.form.value.descricaoTitulo;\r\n    }\r\n\r\n    if (this.form.value.codSituacao) {\r\n      params.codSituacao = this.form.value.codSituacao;\r\n    }\r\n\r\n    params.orderBy = this.form.value.orderBy;\r\n    params.orderType = this.form.value.orderType;\r\n\r\n    return params;\r\n  }\r\n\r\n  search(params: any): void {\r\n    this.loaderNavbar = true;\r\n    this.dados = [];\r\n    this.dadosPagination = [];\r\n    this.dadosLoaded = false;\r\n    this.dadosEmpty = false;\r\n    this.detailPanelService.hide();\r\n\r\n    this.titulosAgendaService\r\n      .getListaTitulosAgenda(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n          this.dadosLoaded = true;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            this.dados = response.data;\r\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\r\n            this.totalItems = this.dados.length;\r\n            this.dadosLoaded = true;\r\n          } else if (\r\n            response.hasOwnProperty('success') &&\r\n            response.success === false\r\n          ) {\r\n            this.dadosEmpty = true;\r\n          } else {\r\n            this.pnotifyService.error();\r\n            this.dadosEmpty = true;\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.dadosEmpty = true;\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  classStatusBorder(titulosAgenda: TitulosAgenda): string {\r\n    let borderClass: string;\r\n\r\n    if (titulosAgenda.codSituacao === 1) {\r\n      borderClass = 'border-success';\r\n    } else if (titulosAgenda.codSituacao === 0) {\r\n      borderClass = 'border-danger';\r\n    }\r\n\r\n    return borderClass;\r\n  }\r\n\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    const startItem = (event.page - 1) * event.itemsPerPage;\r\n    const endItem = event.page * event.itemsPerPage;\r\n    this.dadosPagination = this.dados.slice(startItem, endItem);\r\n\r\n    this.scrollToFilter.nativeElement.scrollIntoView({\r\n      behavior: 'instant',\r\n    });\r\n  }\r\n\r\n  onDetails(titulosAgenda: TitulosAgenda): void {\r\n    this.getAlteracoes({\r\n      codTitulo: titulosAgenda.codTitulo,\r\n      codSituacao: titulosAgenda.codSituacao,\r\n    });\r\n    this.loaderNavbar = true;\r\n    this.detailPanelService.show();\r\n    this.setTitulosAgendaSelecionado();\r\n    this.titulosAgendaSelecionado = titulosAgenda;\r\n  }\r\n\r\n  getAlteracoes(params: Partial<TitulosAgenda>) {\r\n    this.titulosAgendaService\r\n      .getListaTitulosAgenda(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          setTimeout(() => {\r\n            this.loaderNavbar = false;\r\n          }, 500);\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.hasOwnProperty('success') && response.success === true) {\r\n            // Não está vazio.\r\n            this.detailPanelService.loadedFinished(false);\r\n            this.alteracoes = response.data;\r\n          } else {\r\n            this.detailPanelService.loadedFinished(true);\r\n            this.alteracoes = [];\r\n          }\r\n          console.log(this.alteracoes)\r\n        },\r\n        error: (error: any) => {\r\n          // Vazio e com erro.\r\n          this.detailPanelService.loadedFinished(true);\r\n\r\n          if (error.error.hasOwnProperty('mensagem')) {\r\n            this.pnotifyService.error(error.error.mensagem);\r\n          } else {\r\n            this.pnotifyService.error();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onEdit(titulosAgenda: TitulosAgenda): void {\r\n    this.router.navigate(['../editar', titulosAgenda.codTitulo], {\r\n      relativeTo: this.activatedRoute,\r\n    });\r\n  }\r\n\r\n  onActivate(index: number, titulosAgenda: TitulosAgenda): void {\r\n    this.confirmActivate()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.activateTitulosAgenda(index, titulosAgenda) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(titulosAgenda);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 0;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmActivate(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      null,\r\n      null,\r\n      'Deseja realmente prosseguir com a ativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  activateTitulosAgenda(\r\n    index: number,\r\n    titulosAgenda: TitulosAgenda\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n    this.dadosPagination[index].codSituacao = 1;\r\n\r\n    return this.titulosAgendaService.activateTitulosAgenda(\r\n      titulosAgenda.codTitulo\r\n    );\r\n  }\r\n\r\n  onInactivate(index: number, titulosAgenda: TitulosAgenda): void {\r\n    this.confirmInactive()\r\n      .asObservable()\r\n      .pipe(\r\n        take(1),\r\n        switchMap((result) =>\r\n          result ? this.inactivateTitulosAgenda(index, titulosAgenda) : EMPTY\r\n        ),\r\n        finalize(() => {\r\n          this.loaderNavbar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (success: any) => {\r\n          this.pnotifyService.success();\r\n          this.refreshMainData(titulosAgenda);\r\n        },\r\n        (error: any) => {\r\n          this.pnotifyService.error();\r\n          this.dadosPagination[index].codSituacao = 1;\r\n        }\r\n      );\r\n  }\r\n\r\n  confirmInactive(): any {\r\n    return this.confirmModalService.showConfirm(\r\n      'inactivate',\r\n      'Confirmar inativação',\r\n      'Deseja realmente prosseguir com a inativação do registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  inactivateTitulosAgenda(\r\n    index: number,\r\n    titulosAgenda: TitulosAgenda\r\n  ): Observable<any> {\r\n    this.loaderNavbar = true;\r\n\r\n    this.dadosPagination[index].codSituacao = 0;\r\n\r\n    return this.titulosAgendaService.inactivateTitulosAgenda(\r\n      titulosAgenda.codTitulo\r\n    );\r\n  }\r\n\r\n  refreshMainData(titulosAgenda: TitulosAgenda): void {\r\n    for (let i = 0; i < this.dados.length; i++) {\r\n      if (titulosAgenda.codTitulo === this.dados[i].codTitulo) {\r\n        this.dados[i].codSituacao = titulosAgenda.codSituacao;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXR1bG9zLWFnZW5kYS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXR1bG9zLWFnZW5kYS9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\r\n\r\n// Services\r\nimport { ComercialCadastrosTitulosAgendaService } from '../titulos-agenda.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\n\r\n// Interfaces\r\nimport { TitulosAgenda } from '../models/titulos-agenda';\r\n\r\n@Component({\r\n  selector: 'comercial-cadastros-titulos-agenda-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.scss'],\r\n})\r\nexport class ComercialCadastrosTitulosAgendaFormularioComponent\r\n  implements OnInit, IFormCanDeactivate {\r\n  loaderNavbar: boolean;\r\n  loaderFullScreen = true;\r\n\r\n  appTitle: string;\r\n  breadCrumbTree: Array<any> = [];\r\n\r\n  form: FormGroup;\r\n  formChanged = false;\r\n  submittingForm: boolean;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder,\r\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService,\r\n    private pnotifyService: PNotifyService,\r\n    private atividadesService: AtividadesService,\r\n    private titleService: TitleService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrarAcesso();\r\n    this.setBreadCrumb();\r\n    this.setFormBuilder();\r\n  }\r\n\r\n  registrarAcesso(): void {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb(): void {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      if (params.id) {\r\n        this.appTitle = 'Editar Título';\r\n      } else {\r\n        this.appTitle = 'Novo Título';\r\n      }\r\n\r\n      this.titleService.setTitle(this.appTitle);\r\n\r\n      this.breadCrumbTree = [\r\n        {\r\n          descricao: 'Home',\r\n          routerLink: '/comercial/home',\r\n        },\r\n        {\r\n          descricao: 'Cadastros',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\r\n        },\r\n        {\r\n          descricao: 'Títulos para agenda do vendedor',\r\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/titulos-agenda/lista`,\r\n        },\r\n        {\r\n          descricao: this.appTitle,\r\n        },\r\n      ];\r\n    });\r\n  }\r\n\r\n  setFormBuilder(): void {\r\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\r\n      const detalhes: TitulosAgenda = this.activatedRoute.snapshot.data.detalhes\r\n        .data;\r\n\r\n      this.form = this.formBuilder.group({\r\n        codTitulo: [detalhes.codTitulo],\r\n        descricaoTitulo: [detalhes.descricaoTitulo, [Validators.required]],\r\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\r\n      });\r\n    } else {\r\n      this.pnotifyService.error();\r\n      this.location.back();\r\n    }\r\n\r\n    this.loaderFullScreen = false;\r\n  }\r\n\r\n  onFieldError(field: string): string {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any): boolean {\r\n    field = this.form.get(field);\r\n\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(\r\n    abstractControl: AbstractControl,\r\n    abstractControlField?: string\r\n  ): string {\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n\r\n    if (abstractControlField) {\r\n      for (const controlName in abstractControl['controls']) {\r\n        if (abstractControl['controls'][controlName]) {\r\n          if (\r\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\r\n            controlName == abstractControlField\r\n          ) {\r\n            return 'is-required';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.pristine) {\r\n      this.location.back();\r\n    } else {\r\n      if (this.form.valid) {\r\n        this.loaderNavbar = true;\r\n        this.submittingForm = true;\r\n\r\n        this.titulosAgendaService\r\n          .save(this.form.value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.loaderNavbar = false;\r\n              this.submittingForm = false;\r\n            })\r\n          )\r\n          .subscribe({\r\n            next: (response: any) => {\r\n              if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === true\r\n              ) {\r\n                this.form.reset();\r\n                this.formChanged = false;\r\n                this.pnotifyService.success(response.mensagem);\r\n\r\n                this.activatedRoute.params.subscribe((params: any) => {\r\n                  if (params.hasOwnProperty('id')) {\r\n                    this.location.back();\r\n                  } else {\r\n                    this.router.navigate(['../lista'], {\r\n                      relativeTo: this.activatedRoute,\r\n                    });\r\n                  }\r\n                });\r\n              } else if (\r\n                response.hasOwnProperty('mensagem') &&\r\n                response.hasOwnProperty('success') &&\r\n                response.success === false\r\n              ) {\r\n                this.pnotifyService.notice(response.mensagem);\r\n              } else {\r\n                this.pnotifyService.error();\r\n              }\r\n            },\r\n            error: (error: any) => {\r\n              this.pnotifyService.error();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.formChanged = true;\r\n  }\r\n\r\n  formCanDeactivate(): boolean {\r\n    if (this.formChanged) {\r\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\r\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onCancel()\\\"\\r\\n    [disabled]=\\\"submittingForm\\\">\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button\\r\\n    type=\\\"button\\\"\\r\\n    (click)=\\\"onSubmit()\\\"\\r\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\r\\n    Salvar\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <form [formGroup]=\\\"form\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col\\\">\\r\\n            <label for=\\\"descricaoTitulo\\\">Título para agenda do vendedor</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"descricaoTitulo\\\"\\r\\n              formControlName=\\\"descricaoTitulo\\\"\\r\\n              (input)=\\\"onInput()\\\"\\r\\n              autocomplete=\\\"new-password\\\"\\r\\n              [ngClass]=\\\"onFieldError('descricaoTitulo') + ' ' + onFieldRequired(form.controls.descricaoTitulo)\\\">\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricaoTitulo')\\\" message=\\\"Nome do Título é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"form-group col-lg-6\\\">\\r\\n            <label for=\\\"codSituacao\\\">Situação</label>\\r\\n            <select\\r\\n              class=\\\"form-control custom-select\\\"\\r\\n              id=\\\"codSituacao\\\"\\r\\n              formControlName=\\\"codSituacao\\\"\\r\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\r\\n              <option value=\\\"1\\\" selected >Ativo</option>\\r\\n              <option value=\\\"0\\\">Inativo</option>\\r\\n            </select>\\r\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informacion serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Guards\r\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\r\nimport { ComercialCadastrosTitulosAgendaFormularioResolverGuard } from './formulario/formulario-resolver.guard';\r\n\r\n// Components\r\nimport { ComercialCadastrosTitulosAgendaListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosTitulosAgendaFormularioComponent } from './formulario/formulario.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lista',\r\n    component: ComercialCadastrosTitulosAgendaListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: ComercialCadastrosTitulosAgendaFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosTitulosAgendaFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: 'editar/:id',\r\n    component: ComercialCadastrosTitulosAgendaFormularioComponent,\r\n    resolve: {\r\n      detalhes: ComercialCadastrosTitulosAgendaFormularioResolverGuard,\r\n    },\r\n    canDeactivate: [FormDeactivateGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'lista',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ComercialCadastrosTitulosAgendaModuleRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// ng-brazil\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgBrazil } from 'ng-brazil';\r\n\r\n// PNotify\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n// Modules\r\nimport { ComercialCadastrosTitulosAgendaModuleRoutingModule } from './titulos-agenda-routing.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\n// Components\r\nimport { ComercialCadastrosTitulosAgendaListaComponent } from './lista/lista.component';\r\nimport { ComercialCadastrosTitulosAgendaFormularioComponent } from './formulario/formulario.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialCadastrosTitulosAgendaListaComponent,\r\n    ComercialCadastrosTitulosAgendaFormularioComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    TextMaskModule,\r\n    NgBrazil,\r\n    ComercialCadastrosTitulosAgendaModuleRoutingModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n  ],\r\n  providers: [PNotifyService],\r\n})\r\nexport class ComercialCadastrosTitulosAgendaModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Interfaces\r\nimport { IFormCanDeactivate } from './iform-candeactivate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\r\n  canDeactivate(\r\n    component: IFormCanDeactivate,\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return component.formCanDeactivate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n// Services\r\nimport { ComercialCadastrosTitulosAgendaService } from '../titulos-agenda.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosTitulosAgendaFormularioResolverGuard\r\n  implements Resolve<any> {\r\n  constructor(\r\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    if (route.params && route.params.id) {\r\n      return this.titulosAgendaService.getDetalhes(route.params.id);\r\n    }\r\n\r\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\r\n    return of({\r\n      success: true,\r\n      data: {\r\n        codTitulo: null,\r\n        descricaoTitulo: null,\r\n        codCarteira: null,\r\n        codSituacao: null,\r\n        situacao: null,\r\n        codUsuario: null,\r\n        nomeUsuario: null,\r\n        dataCadastro: null,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { TitulosAgenda } from './models/titulos-agenda';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialCadastrosTitulosAgendaService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/titulos-agenda`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getListaTitulosAgenda(params: any): Observable<any> {\r\n    let httpParams = new HttpParams();\r\n\r\n    for (let param in params) {\r\n      httpParams = httpParams.append(param, params[param]);\r\n    }\r\n\r\n    return this.http\r\n      .get(`${this.API}/lista`, { params: httpParams })\r\n      .pipe(take(1));\r\n  }\r\n\r\n\r\n  getDetalhes(codTitulo: number): Observable<any> {\r\n    return this.http\r\n      .get(`${this.API}/detalhes/${codTitulo}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  private saveTitulosAgenda(titulosAgenda: TitulosAgenda) {\r\n    return this.http.post(`${this.API}/salvar`, titulosAgenda).pipe(take(1));\r\n  }\r\n\r\n  private updateTitulosAgenda(titulosAgenda: TitulosAgenda) {\r\n    return this.http.put(`${this.API}/atualizar`, titulosAgenda).pipe(take(1));\r\n  }\r\n\r\n  save(titulosAgenda: TitulosAgenda): Observable<any> {\r\n    if (titulosAgenda.codTitulo !== null) {\r\n      return this.updateTitulosAgenda(titulosAgenda);\r\n    }\r\n\r\n    return this.saveTitulosAgenda(titulosAgenda);\r\n  }\r\n\r\n  activateTitulosAgenda(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\r\n  }\r\n\r\n  inactivateTitulosAgenda(codigo: number): Observable<any> {\r\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\r\n  }\r\n}\r\n"]}