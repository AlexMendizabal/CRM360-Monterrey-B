{"version":3,"sources":["webpack:///src/app/modules/comercial/cadastros/titulos-agenda/lista/lista.component.html","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/lista/lista.component.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/lista/lista.component.scss","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda-routing.module.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.module.ts","webpack:///src/app/guards/form-deactivate.guard.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/formulario/formulario-resolver.guard.ts","webpack:///src/app/modules/comercial/cadastros/titulos-agenda/titulos-agenda.service.ts"],"names":["ComercialCadastrosTitulosAgendaListaComponent","activatedRoute","router","location","formBuilder","titulosAgendaService","pnotifyService","atividadesService","titleService","confirmModalService","detailPanelService","loaderNavbar","loaderFullScreen","breadCrumbTree","subtitles","id","text","color","tableConfig","subtitleBorder","showDetailPanel","orderBy","orderType","titulosAgenda","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","dadosLoaded","dadosEmpty","alteracoes","getPNotify","registrarAcesso","setBreadCrumb","setFormFilter","setTitle","onDetailPanelEmitter","setTitulosAgendaSelecionado","showDetailPanelSubscription","unsubscribe","subscribe","params","descricao","routerLink","config","event","showing","formValue","checkRouterParams","form","group","descricaoTitulo","codTitulo","codSituacao","pagina","registros","required","checkOrder","nomeEscritorio","codEmpresa","activatedRouteSubscription","queryParams","Object","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","value","titulosAgendaSelecionado","codCarteira","situacao","codUsuario","nomeUsuario","dataCadastro","field","onFieldInvalid","get","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","column","onFilter","valid","setRouterParams","verificaParams","navigate","relativeTo","q","btoa","stringify","hide","getListaTitulosAgenda","pipe","next","response","hasOwnProperty","success","data","slice","error","mensagem","borderClass","startItem","page","endItem","scrollToFilter","nativeElement","scrollIntoView","behavior","getAlteracoes","show","setTimeout","loadedFinished","console","log","index","confirmActivate","asObservable","result","activateTitulosAgenda","refreshMainData","showConfirm","confirmInactive","inactivateTitulosAgenda","i","selector","template","ComercialCadastrosTitulosAgendaFormularioComponent","formChanged","setFormBuilder","appTitle","idSubModulo","snapshot","detalhes","back","pristine","submittingForm","save","reset","notice","confirm","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","resolve","canDeactivate","redirectTo","pathMatch","ComercialCadastrosTitulosAgendaModuleRoutingModule","imports","forChild","exports","ComercialCadastrosTitulosAgendaModule","declarations","forRoot","providers","FormDeactivateGuard","route","state","formCanDeactivate","ComercialCadastrosTitulosAgendaFormularioResolverGuard","getDetalhes","ComercialCadastrosTitulosAgendaService","http","API","httpParams","param","append","post","put","updateTitulosAgenda","saveTitulosAgenda","codigo"],"mappings":"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","file":"titulos-agenda-titulos-agenda-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Títulos para agenda do vendedor\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n     <div class=\\\"row\\\" #scrollToFilter>\\n      <div class=\\\"col\\\">\\n        <advanced-filter>\\n          <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-lg-7\\\">\\n                <label for=\\\"descricaoTitulo\\\">Título para agenda do vendedor</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"descricaoTitulo\\\"\\n                  (keydown.enter)=\\\"onFilter()\\\">\\n              </div>\\n              <div class=\\\"form-group col-lg-3\\\">\\n                <label for=\\\"codSituacao\\\">Situação</label>\\n                <select\\n                  class=\\\"form-control custom-select\\\"\\n                  id=\\\"codSituacao\\\"\\n                  formControlName=\\\"codSituacao\\\">\\n                  <option value=\\\"2\\\">Todos</option>\\n                  <option value=\\\"1\\\">Ativos</option>\\n                  <option value=\\\"0\\\">Inativos</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group col-lg-2\\\">\\n                <label for=\\\"registros\\\">Registros</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"registros\\\"\\n                  formControlName=\\\"registros\\\">\\n                  <option>25</option>\\n                  <option>50</option>\\n                  <option>100</option>\\n                  <option>200</option>\\n                  <option>300</option>\\n                </select>\\n              </div>\\n            </div>\\n          </form>\\n        </advanced-filter>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <subtitles\\n          [data]=\\\"subtitles\\\"\\n          [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        </subtitles>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-5 pr-0': showDetailPanel}\\\">\\n        <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Título de Agenda de Vendedoores</th>\\n              <!-- <th scope=\\\"col\\\" class=\\\"text-center\\\">Situação</th> -->\\n              <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let titulosAgenda of dadosPagination; let i = index\\\" [class.table-active]=\\\"titulosAgenda.codTitulo == titulosAgendaSelecionado.codTitulo\\\">\\n              <td\\n                class=\\\"hover\\\"\\n                [ngClass]=\\\"classStatusBorder(titulosAgenda)\\\"\\n                (click)=\\\"onDetails(titulosAgenda)\\\">\\n                {{ titulosAgenda.descricaoTitulo | uppercase }}\\n              </td>\\n              <!-- <td\\n                class=\\\"text-center hover\\\"\\n                (click)=\\\"onDetails(titulosAgenda)\\\">\\n                {{ titulosAgenda.situacao | uppercase }}\\n              </td> -->\\n              <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span *ngIf=\\\"titulosAgenda.codSituacao == 1\\\" class=\\\"mr-3\\\" tooltip=\\\"Inativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onInactivate(i, titulosAgenda)\\\">\\n                    <i class=\\\"fas fa-toggle-on\\\"></i>\\n                  </button>\\n                </span>\\n                <span *ngIf=\\\"titulosAgenda.codSituacao == 0\\\" class=\\\"mr-3\\\" tooltip=\\\"Ativar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onActivate(i, titulosAgenda)\\\">\\n                    <i class=\\\"fas fa-toggle-off\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onEdit(titulosAgenda)\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmpty\\\">\\n        </empty-result>\\n        <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n          <pagination\\n            [maxSize]=\\\"maxSize\\\"\\n            [(totalItems)]=\\\"totalItems\\\"\\n            (pageChanged)=\\\"onPageChanged($event)\\\"\\n            [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n            [boundaryLinks]=\\\"true\\\"\\n            [(ngModel)]=\\\"currentPage\\\"\\n            previousText=\\\"&lsaquo;\\\"\\n            nextText=\\\"&rsaquo;\\\"\\n            firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n          </pagination>\\n        </div>\\n      </div>\\n      <div class=\\\"col-7\\\" [hidden]=\\\"!showDetailPanel\\\">\\n        <detail-panel panelTitle=\\\"Última alteração\\\">\\n          <custom-table>\\n            <ng-template #thead let-thead>\\n              <tr>\\n                <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n                <th scope=\\\"col\\\">Usuário</th>\\n              </tr>\\n            </ng-template>\\n            <ng-template #tbody let-tbody>\\n              <tr *ngFor=\\\"let alteracao of alteracoes\\\">\\n                <td class=\\\"text-center\\\">{{ alteracao.dataCadastro | date: 'dd/MM/yyyy HH:mm' }}</td>\\n                <td>{{ alteracao.nomeUsuario | uppercase }}</td>\\n              </tr>\\n            </ng-template>\\n          </custom-table>\\n        </detail-panel>\\n      </div>\\n    </div>\\n  </app-body>\\n\";","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n// Services\nimport { ComercialCadastrosTitulosAgendaService } from '../titulos-agenda.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\n// Interfaces\nimport { TitulosAgenda } from '../models/titulos-agenda';\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'comercial-cadastros-titulos-agenda-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialCadastrosTitulosAgendaListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  form: FormGroup;\n  orderBy = 'codTitulo';\n  orderType = 'ASC';\n\n  titulosAgenda: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<TitulosAgenda> = [];\n  dadosPagination: Array<TitulosAgenda> = [];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  titulosAgendaSelecionado: TitulosAgenda;\n  alteracoes: TitulosAgenda[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private confirmModalService: ConfirmModalService,\n    private detailPanelService: DetailPanelService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormFilter();\n    this.titleService.setTitle('Motivo de Associação');\n    this.onDetailPanelEmitter();\n    this.setTitulosAgendaSelecionado();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Títulos para agenda do vendedor',\n        },\n      ];\n    });\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      descricaoTitulo: [formValue.descricaoTitulo],\n      codTitulo: [formValue.codTitulo],\n      codSituacao: [formValue.codSituacao],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n      pagina: [formValue.pagina],\n      registros: [formValue.registros, Validators.required],\n    });\n\n    this.checkOrder();\n    this.loaderFullScreen = false;\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      nomeEscritorio: null,\n      codEmpresa: 0,\n      codSituacao: 1,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  checkOrder(): void {\n    if (this.form.value.orderBy !== this.orderBy) {\n      this.orderBy = this.form.value.orderBy;\n    }\n\n    if (this.form.value.orderType !== this.orderType) {\n      this.orderType = this.form.value.orderType;\n    }\n  }\n\n  setTitulosAgendaSelecionado(): void {\n    this.titulosAgendaSelecionado = {\n      codTitulo: -1,\n      descricaoTitulo: null,\n      codCarteira: null,\n      codSituacao: null,\n      situacao: null,\n      codUsuario: null,\n      nomeUsuario: null,\n      dataCadastro: null,\n    };\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.descricaoTitulo) {\n      params.descricaoTitulo = this.form.value.descricaoTitulo;\n    }\n\n    if (this.form.value.codSituacao) {\n      params.codSituacao = this.form.value.codSituacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    this.titulosAgendaService\n      .getListaTitulosAgenda(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  classStatusBorder(titulosAgenda: TitulosAgenda): string {\n    let borderClass: string;\n\n    if (titulosAgenda.codSituacao === 1) {\n      borderClass = 'border-success';\n    } else if (titulosAgenda.codSituacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  onDetails(titulosAgenda: TitulosAgenda): void {\n    this.getAlteracoes({\n      codTitulo: titulosAgenda.codTitulo,\n      codSituacao: titulosAgenda.codSituacao,\n    });\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setTitulosAgendaSelecionado();\n    this.titulosAgendaSelecionado = titulosAgenda;\n  }\n\n  getAlteracoes(params: Partial<TitulosAgenda>) {\n    this.titulosAgendaService\n      .getListaTitulosAgenda(params)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.alteracoes = response.data;\n          } else {\n            this.detailPanelService.loadedFinished(true);\n            this.alteracoes = [];\n          }\n          console.log(this.alteracoes)\n        },\n        error: (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  onEdit(titulosAgenda: TitulosAgenda): void {\n    this.router.navigate(['../editar', titulosAgenda.codTitulo], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  onActivate(index: number, titulosAgenda: TitulosAgenda): void {\n    this.confirmActivate()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.activateTitulosAgenda(index, titulosAgenda) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(titulosAgenda);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 0;\n        }\n      );\n  }\n\n  confirmActivate(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente prosseguir com a ativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  activateTitulosAgenda(\n    index: number,\n    titulosAgenda: TitulosAgenda\n  ): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].codSituacao = 1;\n\n    return this.titulosAgendaService.activateTitulosAgenda(\n      titulosAgenda.codTitulo\n    );\n  }\n\n  onInactivate(index: number, titulosAgenda: TitulosAgenda): void {\n    this.confirmInactive()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.inactivateTitulosAgenda(index, titulosAgenda) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(titulosAgenda);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].codSituacao = 1;\n        }\n      );\n  }\n\n  confirmInactive(): any {\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  inactivateTitulosAgenda(\n    index: number,\n    titulosAgenda: TitulosAgenda\n  ): Observable<any> {\n    this.loaderNavbar = true;\n\n    this.dadosPagination[index].codSituacao = 0;\n\n    return this.titulosAgendaService.inactivateTitulosAgenda(\n      titulosAgenda.codTitulo\n    );\n  }\n\n  refreshMainData(titulosAgenda: TitulosAgenda): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (titulosAgenda.codTitulo === this.dados[i].codTitulo) {\n        this.dados[i].codSituacao = titulosAgenda.codSituacao;\n        return;\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXR1bG9zLWFnZW5kYS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NhZGFzdHJvcy90aXR1bG9zLWFnZW5kYS9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n// Interfaces\nimport { IFormCanDeactivate } from 'src/app/guards/iform-candeactivate';\n\n// Services\nimport { ComercialCadastrosTitulosAgendaService } from '../titulos-agenda.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { TitulosAgenda } from '../models/titulos-agenda';\n\n@Component({\n  selector: 'comercial-cadastros-titulos-agenda-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialCadastrosTitulosAgendaFormularioComponent\n  implements OnInit, IFormCanDeactivate {\n  loaderNavbar: boolean;\n  loaderFullScreen = true;\n\n  appTitle: string;\n  breadCrumbTree: Array<any> = [];\n\n  form: FormGroup;\n  formChanged = false;\n  submittingForm: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService,\n    private pnotifyService: PNotifyService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      if (params.id) {\n        this.appTitle = 'Editar Título';\n      } else {\n        this.appTitle = 'Novo Título';\n      }\n\n      this.titleService.setTitle(this.appTitle);\n\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Cadastros',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Títulos para agenda do vendedor',\n          routerLink: `/comercial/cadastros/${params.idSubModulo}/titulos-agenda/lista`,\n        },\n        {\n          descricao: this.appTitle,\n        },\n      ];\n    });\n  }\n\n  setFormBuilder(): void {\n    if (this.activatedRoute.snapshot.data.detalhes.success === true) {\n      const detalhes: TitulosAgenda = this.activatedRoute.snapshot.data.detalhes\n        .data;\n\n      this.form = this.formBuilder.group({\n        codTitulo: [detalhes.codTitulo],\n        descricaoTitulo: [detalhes.descricaoTitulo, [Validators.required]],\n        codSituacao: [detalhes.codSituacao, [Validators.required]],\n      });\n    } else {\n      this.pnotifyService.error();\n      this.location.back();\n    }\n\n    this.loaderFullScreen = false;\n  }\n\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.form.pristine) {\n      this.location.back();\n    } else {\n      if (this.form.valid) {\n        this.loaderNavbar = true;\n        this.submittingForm = true;\n\n        this.titulosAgendaService\n          .save(this.form.value)\n          .pipe(\n            finalize(() => {\n              this.loaderNavbar = false;\n              this.submittingForm = false;\n            })\n          )\n          .subscribe({\n            next: (response: any) => {\n              if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === true\n              ) {\n                this.form.reset();\n                this.formChanged = false;\n                this.pnotifyService.success(response.mensagem);\n\n                this.activatedRoute.params.subscribe((params: any) => {\n                  if (params.hasOwnProperty('id')) {\n                    this.location.back();\n                  } else {\n                    this.router.navigate(['../lista'], {\n                      relativeTo: this.activatedRoute,\n                    });\n                  }\n                });\n              } else if (\n                response.hasOwnProperty('mensagem') &&\n                response.hasOwnProperty('success') &&\n                response.success === false\n              ) {\n                this.pnotifyService.notice(response.mensagem);\n              } else {\n                this.pnotifyService.error();\n              }\n            },\n            error: (error: any) => {\n              this.pnotifyService.error();\n            }\n          });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.location.back();\n  }\n\n  onInput(): void {\n    this.formChanged = true;\n  }\n\n  formCanDeactivate(): boolean {\n    if (this.formChanged) {\n      if (confirm('Este cliente no forma parte de tu cartera?')) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!form.valid || submittingForm\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <form [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"descricaoTitulo\\\">Título para agenda do vendedor</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"descricaoTitulo\\\"\\n              formControlName=\\\"descricaoTitulo\\\"\\n              (input)=\\\"onInput()\\\"\\n              autocomplete=\\\"new-password\\\"\\n              [ngClass]=\\\"onFieldError('descricaoTitulo') + ' ' + onFieldRequired(form.controls.descricaoTitulo)\\\">\\n            <invalid-form-control [show]=\\\"onFieldInvalid('descricaoTitulo')\\\" message=\\\"Nome do Título é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-lg-6\\\">\\n            <label for=\\\"codSituacao\\\">Situação</label>\\n            <select\\n              class=\\\"form-control custom-select\\\"\\n              id=\\\"codSituacao\\\"\\n              formControlName=\\\"codSituacao\\\"\\n              [ngClass]=\\\"onFieldError('codSituacao') + ' ' + onFieldRequired(form.controls.codSituacao)\\\">\\n              <option value=\\\"1\\\" selected >Ativo</option>\\n              <option value=\\\"0\\\">Inativo</option>\\n            </select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('codSituacao')\\\" message=\\\"Situação é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\nimport { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\nimport { ComercialCadastrosTitulosAgendaFormularioResolverGuard } from './formulario/formulario-resolver.guard';\n\n// Components\nimport { ComercialCadastrosTitulosAgendaListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosTitulosAgendaFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: 'lista',\n    component: ComercialCadastrosTitulosAgendaListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialCadastrosTitulosAgendaFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTitulosAgendaFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: 'editar/:id',\n    component: ComercialCadastrosTitulosAgendaFormularioComponent,\n    resolve: {\n      detalhes: ComercialCadastrosTitulosAgendaFormularioResolverGuard,\n    },\n    canDeactivate: [FormDeactivateGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'lista',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialCadastrosTitulosAgendaModuleRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialCadastrosTitulosAgendaModuleRoutingModule } from './titulos-agenda-routing.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n// Components\nimport { ComercialCadastrosTitulosAgendaListaComponent } from './lista/lista.component';\nimport { ComercialCadastrosTitulosAgendaFormularioComponent } from './formulario/formulario.component';\n\n@NgModule({\n  declarations: [\n    ComercialCadastrosTitulosAgendaListaComponent,\n    ComercialCadastrosTitulosAgendaFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialCadastrosTitulosAgendaModuleRoutingModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialCadastrosTitulosAgendaModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanDeactivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n// Interfaces\nimport { IFormCanDeactivate } from './iform-candeactivate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDeactivateGuard implements CanDeactivate<IFormCanDeactivate> {\n  canDeactivate(\n    component: IFormCanDeactivate,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return component.formCanDeactivate();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n// Services\nimport { ComercialCadastrosTitulosAgendaService } from '../titulos-agenda.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosTitulosAgendaFormularioResolverGuard\n  implements Resolve<any> {\n  constructor(\n    private titulosAgendaService: ComercialCadastrosTitulosAgendaService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    if (route.params && route.params.id) {\n      return this.titulosAgendaService.getDetalhes(route.params.id);\n    }\n\n    // É implementado o método \"of\" para manter a tipagem de retorno com Observable.\n    return of({\n      success: true,\n      data: {\n        codTitulo: null,\n        descricaoTitulo: null,\n        codCarteira: null,\n        codSituacao: null,\n        situacao: null,\n        codUsuario: null,\n        nomeUsuario: null,\n        dataCadastro: null,\n      },\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Interfaces\nimport { TitulosAgenda } from './models/titulos-agenda';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialCadastrosTitulosAgendaService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/cadastros/titulos-agenda`;\n\n  constructor(protected http: HttpClient) {}\n\n  getListaTitulosAgenda(params: any): Observable<any> {\n    let httpParams = new HttpParams();\n\n    for (let param in params) {\n      httpParams = httpParams.append(param, params[param]);\n    }\n\n    return this.http\n      .get(`${this.API}/lista`, { params: httpParams })\n      .pipe(take(1));\n  }\n\n\n  getDetalhes(codTitulo: number): Observable<any> {\n    return this.http\n      .get(`${this.API}/detalhes/${codTitulo}`)\n      .pipe(take(1));\n  }\n\n  private saveTitulosAgenda(titulosAgenda: TitulosAgenda) {\n    return this.http.post(`${this.API}/salvar`, titulosAgenda).pipe(take(1));\n  }\n\n  private updateTitulosAgenda(titulosAgenda: TitulosAgenda) {\n    return this.http.put(`${this.API}/atualizar`, titulosAgenda).pipe(take(1));\n  }\n\n  save(titulosAgenda: TitulosAgenda): Observable<any> {\n    if (titulosAgenda.codTitulo !== null) {\n      return this.updateTitulosAgenda(titulosAgenda);\n    }\n\n    return this.saveTitulosAgenda(titulosAgenda);\n  }\n\n  activateTitulosAgenda(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/ativar`, codigo).pipe(take(1));\n  }\n\n  inactivateTitulosAgenda(codigo: number): Observable<any> {\n    return this.http.post(`${this.API}/inativar`, codigo).pipe(take(1));\n  }\n}\n"]}