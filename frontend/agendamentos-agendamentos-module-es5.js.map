{"version":3,"sources":["webpack:///src/app/modules/logistica/yms/agendamentos/drag-and-drop/drag-and-drop.component.html","webpack:///src/app/modules/logistica/yms/agendamentos/lista/lista.component.html","webpack:///src/app/modules/logistica/yms/agendamentos/modais/notas-fiscais/notas-fiscais.component.ts","webpack:///src/app/modules/logistica/yms/agendamentos/services/agendamentos.service.ts","webpack:///src/app/modules/logistica/yms/agendamentos/modais/veiculos/veiculos.component.html","webpack:///src/app/modules/logistica/yms/agendamentos/modais/materiais/materiais.component.scss","webpack:///src/app/modules/logistica/yms/agendamentos/agendamentos.module.ts","webpack:///src/app/modules/logistica/yms/agendamentos/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/yms/agendamentos/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/yms/agendamentos/modais/veiculos/veiculos.component.ts","webpack:///src/app/modules/logistica/yms/agendamentos/lista/lista.component.ts","webpack:///src/app/modules/logistica/yms/agendamentos/agendamentos-routing.module.ts","webpack:///src/app/modules/logistica/yms/agendamentos/modais/materiais/materiais.component.html","webpack:///src/app/modules/logistica/yms/agendamentos/lista/lista.component.scss","webpack:///src/app/modules/logistica/yms/agendamentos/drag-and-drop/drag-and-drop.component.scss","webpack:///src/app/modules/logistica/yms/agendamentos/modais/notas-fiscais/notas-fiscais.component.scss","webpack:///src/app/modules/logistica/yms/agendamentos/modais/notas-fiscais/notas-fiscais.component.html","webpack:///src/app/modules/logistica/yms/agendamentos/modais/veiculos/veiculos.component.scss","webpack:///src/app/modules/logistica/yms/agendamentos/modais/materiais/materiais.component.ts","webpack:///src/app/modules/logistica/yms/agendamentos/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/yms/agendamentos/drag-and-drop/drag-and-drop.component.ts"],"names":["LogisticaYmsAgendamentosModaisNotasFiscaisComponent","formBuilder","notasFiscaisService","select","close","loading","noNotasFiscais","itemsPerPage","totalItems","currentPage","notasFiscais","setFormBuilder","form","group","buscarPor","pesquisa","required","ID_MATE","NR_NOTA_FISC","NM_MATE","DS_LOTE","TT_MATE_ORIG","NM_FORN","NM_EMPR","DS_UNID_MEDI","PAGI","IN_STAT","TT_REGI_PAGI","get","value","params","getNotasFiscais","pipe","subscribe","response","status","body","error","event","setValue","page","nota","emit","onClose","selector","template","LogisticaYmsAgendamentosService","http","API","observe","id","etapas","post","materiais","providedIn","LogisticaYmsAgendamentosModule","declarations","imports","forRoot","LogisticaYmsAgendamentosCadastroComponent","pnotify","activatedRoute","router","localeService","agendamentosService","titleService","pdfService","modalService","atividadesService","veiculoService","tipoVeiculoService","filiaisService","tiposCircuitoService","noCircuito","sobrepor","breadCrumbTree","formData","noVeiculos","loadingNavBar","loadingCalculo","loadingMateriais","circuitos","descricao","icone","check","totalItemsMaterial","begin","end","MASKS","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","registrarAcesso","setBreadCrumb","onActivatedRoute","getTipoVeiculo","getFiliais","getTiposCircuito","_params","snapshot","hasOwnProperty","getAgendamento","onAddMaterial","ID_LOGI_VEIC","loadingTipoVeiculo","veiculo","patchValue","controls","NM_TRAN","reset","updateValueAndValidity","NM_MOTO","ID_LOGI_VEIC_TIPO","notice","ID_LOGI_TRAN","enable","markAsTouched","ID_LOGI_MOTO","transportadora","motorista","material","fg","index","ID","modalRef","show","animated","hide","newData","Date","valid","DT_INIC_PREV","formMateriais","_id","download","window","print","data","noResult","loadingFiliais","IN_PAGI","filiais","message","loadingTiposCircuito","tiposCircuito","idSubModulo","appTitle","setTitle","routerLink","getTipoVeiculos","tipoVeiculo","ID_LOGI_YMS_AGEN","ID_LOGI_YMS_ETAP","PLAC","disabled","NM_VEIC_TIPO","DS_AGEN","DS_OBSE","ID_LOGI_FILI","ID_LOGI_YMS_CIRC_TIPO","array","push","UUID_MATE","NR_PEDI","ID_LOGI_ENMA_NOFI_MATE","TT_MATE","min","field","onFieldInvalid","touched","formControl","validator","validationResult","postAgendamentos","console","log","postMateriais","success","formGroup","onNestedFieldInvalid","nestedForm","length","at","removeAt","request","getRawValue","promise","forEach","Promise","resolve","responses","navigate","relativeTo","LogisticaYmsAgendamentosModaisVeiculosComponent","veiculos","getVeiculos","LogisticaYmsAgendamentosListaComponent","route","xlsxService","dateService","routerService","detailPanelService","confirmModalService","motoristaService","showDetailPanel","totalItens","tableConfig","subtitleBorder","tipos","cod","nome","subtitles","text","color","buildForm","onDetailPanelEmitter","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","getAgendamentos","getParams","showDetailPanelSubscription","config","showing","TIME","getTime","NR_MATR","NM_USUA","DT_INCL","DT_ATUA","onFilter","setBase64UrlParams","agendamentos","agendamentoSelecionada","loadedFinished","_obj","prop","convertToUrlDate","borderClass","stat","confirmChange","asObservable","result","showConfirm","toLocaleDateString","split","dataExport","listagemExport","concat","exportFile","routes","path","component","LogisticaYmsAgendamentosRoutingModule","forChild","exports","LogisticaYmsAgendamentosModaisMateriaisComponent","noMateriais","ID_REFE_ERP","NM_CLAS","NM_LINH","getMateriais","LogisticaYmsAgendamentosDragAndDropComponent","dropzones","document","querySelectorAll","cards","card","addEventListener","dragstart","drag","dragend","dropzone","dragenter","dragover","dragleave","drop","classList","add","remove","childElementCount","i","children","item","contains","cardBeingDragged","querySelector","appendChild"],"mappings":"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","file":"agendamentos-agendamentos-module-es5.js","sourcesContent":["export default \"<!-- \\n<div class=\\\"row m-0\\\">\\n  <div class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let etapa of circuitos;let last = last; let first = first\\\">\\n    <div class=\\\"dropzone px-3\\\" placement=\\\"left\\\">\\n      <strong class=\\\"my-auto text-uppercase\\\" [ngClass]=\\\"etapa?.check == 1 ? 'text-success' : ''\\\" style=\\\"font-size: 11px;\\\">\\n        {{ etapa?.descricao }}\\n      </strong>\\n      <div class=\\\"rounded-circle text-white icon-40 card m-auto\\\" [id]=\\\"etapa?.id\\\" draggable=\\\"true\\\" [ngClass]=\\\"etapa?.check == 0 ? 'bg-secondary' : 'bg-success'\\\">\\n        <i [class]=\\\"etapa?.icone\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"mt-2\\\" *ngIf=\\\"!last\\\">\\n      <div class=\\\"border-bottom border-secondary p-3\\\">\\n        <div *ngIf=\\\"etapa?.check === 1\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row m-4 p-4\\\"></div>\\n<div class=\\\"row m-4 p-4\\\"></div>\\n<div class=\\\"row m-4 p-4\\\"></div> -->\\n<div class=\\\"row m-4 \\\">\\n  <div class=\\\"justify-content-between mx-4\\\"> \\n    <div class=\\\"sobrepor\\\" *ngIf=\\\"loading\\\" ></div>\\n    <strong class=\\\"my-auto text-uppercase text-success\\\" style=\\\"font-size: 11px;\\\">\\n      Veículo\\n    </strong>\\n    <div class=\\\"rounded-circle text-white icon-40 card m-auto bg-success\\\" draggable=\\\"true\\\">\\n      <i class=\\\"fas fa-truck\\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let etapa of circuitos;let last = last; let first = first\\\">\\n    <div class=\\\"dropzone rounded-circle\\\" [id]=\\\"etapa?.id\\\" placement=\\\"left\\\">\\n      <div class=\\\"text-center\\\">\\n        <strong class=\\\"my-auto text-uppercase\\\"  [ngClass]=\\\"etapa?.check == 1 ? 'text-success' : ''\\\" style=\\\"font-size: 11px;\\\">\\n          {{ etapa?.descricao }}\\n        </strong>\\n      </div>\\n      <div class=\\\"dropzone-item\\\" *ngIf=\\\"etapa?.check == 0\\\">\\n        <div class=\\\"rounded-circle text-white icon-40 m-auto bg-secondary\\\" >\\n          <i [class]=\\\"etapa?.icone\\\"></i>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"etapa?.check == 1\\\">\\n        <div class=\\\"rounded-circle text-white icon-40 m-auto bg-success\\\">\\n          <i [class]=\\\"etapa?.icone\\\"></i>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"mt-2\\\" *ngIf=\\\"!last\\\">\\n      <div class=\\\"border-bottom border-secondary p-3\\\">\\n        <div *ngIf=\\\"etapa?.check === 1\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"text-right mt-auto\\\" *ngIf=\\\"loading\\\" >\\n    <div class=\\\"spinner-border text-dark\\\"></div>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row m-4 \\\">\\n  <div class=\\\"justify-content-between mx-4\\\"> \\n    <div class=\\\"sobrepor\\\" *ngIf=\\\"loading\\\" ></div>\\n    <strong class=\\\"my-auto text-uppercase text-success\\\" style=\\\"font-size: 11px;\\\">\\n      Veículo\\n    </strong>\\n    <div class=\\\"rounded-circle text-white icon-40 card m-auto bg-success\\\" draggable=\\\"true\\\">\\n      <i class=\\\"fas fa-truck\\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let etapa of circuitos;let last = last; let first = first\\\">\\n    <div class=\\\"dropzone rounded-circle\\\" [id]=\\\"etapa?.id\\\" placement=\\\"left\\\">\\n      <div class=\\\"text-center\\\">\\n        <strong class=\\\"my-auto text-uppercase\\\"  [ngClass]=\\\"etapa?.check == 1 ? 'text-success' : ''\\\" style=\\\"font-size: 11px;\\\">\\n          {{ etapa?.descricao }}\\n        </strong>\\n      </div>\\n      <div class=\\\"dropzone-item\\\" *ngIf=\\\"etapa?.check == 0\\\">\\n        <div class=\\\"rounded-circle text-white icon-40 m-auto bg-secondary\\\" >\\n          <i [class]=\\\"etapa?.icone\\\"></i>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"etapa?.check == 1\\\">\\n        <div class=\\\"rounded-circle text-white icon-40 m-auto bg-success\\\">\\n          <i [class]=\\\"etapa?.icone\\\"></i>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"mt-2\\\" *ngIf=\\\"!last\\\">\\n      <div class=\\\"border-bottom border-secondary p-3\\\">\\n        <div *ngIf=\\\"etapa?.check === 1\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"text-right mt-auto\\\" *ngIf=\\\"loading\\\" >\\n    <div class=\\\"spinner-border text-dark\\\"></div>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row m-4 \\\">\\n  <div class=\\\"justify-content-between mx-4\\\"> \\n    <div class=\\\"sobrepor\\\" *ngIf=\\\"loading\\\" ></div>\\n    <strong class=\\\"my-auto text-uppercase text-success\\\" style=\\\"font-size: 11px;\\\">\\n      Veículo\\n    </strong>\\n    <div class=\\\"rounded-circle text-white icon-40 card m-auto bg-success\\\" draggable=\\\"true\\\">\\n      <i class=\\\"fas fa-truck\\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex justify-content-between\\\" *ngFor=\\\"let etapa of circuitos;let last = last; let first = first\\\">\\n    <div class=\\\"dropzone rounded-circle\\\" [id]=\\\"etapa?.id\\\" placement=\\\"left\\\">\\n      <div class=\\\"text-center\\\">\\n        <strong class=\\\"my-auto text-uppercase\\\"  [ngClass]=\\\"etapa?.check == 1 ? 'text-success' : ''\\\" style=\\\"font-size: 11px;\\\">\\n          {{ etapa?.descricao }}\\n        </strong>\\n      </div>\\n      <div class=\\\"dropzone-item\\\" *ngIf=\\\"etapa?.check == 0\\\">\\n        <div class=\\\"rounded-circle text-white icon-40 m-auto bg-secondary\\\" >\\n          <i [class]=\\\"etapa?.icone\\\"></i>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"etapa?.check == 1\\\">\\n        <div class=\\\"rounded-circle text-white icon-40 m-auto bg-success\\\">\\n          <i [class]=\\\"etapa?.icone\\\"></i>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"mt-2\\\" *ngIf=\\\"!last\\\">\\n      <div class=\\\"border-bottom border-secondary p-3\\\">\\n        <div *ngIf=\\\"etapa?.check === 1\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"text-right mt-auto\\\" *ngIf=\\\"loading\\\" >\\n    <div class=\\\"spinner-border text-dark\\\"></div>\\n  </div>\\n</div>\\n<hr>\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"AGENDAMENTOS\\\">\\n  <button\\n  type=\\\"button\\\"\\n  (click)=\\\"onExport()\\\"\\n  [disabled]=\\\"loadingNavBar || noResult\\\">\\n  Exportar\\n</button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-2\\\">\\n              <label for=\\\"placa\\\">Placa</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"placa\\\"\\n                formControlName=\\\"PLAC\\\"\\n                placeholder=\\\"Digite...\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"NM_MOTO\\\">Motorista</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_MOTO\\\"\\n                formControlName=\\\"NM_MOTO\\\"\\n                placeholder=\\\"Digite...\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"filiais\\\">Filial</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"filiais\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingFiliais\\\"\\n                labelForId=\\\"ID_LOGI_FILI\\\"\\n                bindLabel=\\\"NM_FILI\\\"\\n                bindValue=\\\"ID_LOGI_FILI\\\"\\n                id=\\\"ID_LOGI_FILI\\\"\\n                formControlName=\\\"ID_LOGI_FILI\\\"\\n                >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"tiposCircuito\\\">Tipo de Circuito</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"tiposCircuito\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingTiposCircuito\\\"\\n              labelForId=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n              bindLabel=\\\"NM_CIRC_TIPO\\\"\\n              bindValue=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n              id=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n              formControlName=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n              >\\n            </ng-select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-2 \\\">\\n              <label for=\\\"IN_STAT\\\">Situação</label>\\n              <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"tipos\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"tipo\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"cod\\\"\\n              id=\\\"tipo\\\"\\n              (change)=\\\"onFilter()\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              (keydown.enter)=\\\"onFilter()\\\"\\n              placeholder=\\\"Selecione...\\\"\\n            >\\n            </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-md-1 \\\">\\n              <label>Registros</label>\\n              <select \\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"TT_REGI_PAGI\\\"\\n                (keydown.enter)=\\\"onFilter()\\\"\\n                (change)=\\\"setPageRegistros($event.target.value)\\\"  \\n              >\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"25\\\">25</option>\\n                <option value=\\\"50\\\">50</option>\\n                <option value=\\\"100\\\">100</option>\\n                <option value=\\\"250\\\">250</option>\\n                <option value=\\\"500\\\">500</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"d-flex\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div class=\\\"p-0\\\" [ngClass]=\\\"{'col': !showDetailPanel, 'col-6': showDetailPanel}\\\">\\n      <div class=\\\"w-100\\\">\\n        <custom-table  [config]=\\\"tableConfig\\\" class=\\\"text-center\\\" *ngIf=\\\"!noResult\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" >ID</th>\\n              <th scope=\\\"col\\\" >Data</th>\\n              <th scope=\\\"col\\\" >Veículo</th>\\n              <th scope=\\\"col\\\" >Tipo Circuito</th>\\n              <th scope=\\\"col\\\" >Filial</th>\\n              <th scope=\\\"col\\\" >Motorista</th>\\n              <th scope=\\\"col\\\" >Transportadora</th>\\n              <th scope=\\\"col\\\" style=\\\"width:120px\\\"[hidden]=\\\"showDetailPanel\\\"></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let agendamento of agendamentos\\\"  [class.table-active]=\\\"agendamento?.ID_LOGI_YMS_ETAP == agendamentoSelecionada?.ID_LOGI_ENMA_FHNC_OCPR && showDetailPanel\\\">\\n              <td  [ngClass]=\\\"agendamento.IN_STAT == '1' ? 'border-success' : 'border-danger'\\\">\\n              {{agendamento.ID_LOGI_YMS_AGEN }}\\n              </td>\\n              <td >{{ agendamento.DT_INIC_PREV | date: 'dd/MM/yyyy'}}</td>\\n              <td >{{ agendamento.NM_ETAP_TIPO | uppercase}}</td>\\n              <td >{{ agendamento.NM_ETAP_TIPO | uppercase}}</td>\\n              <td >{{ agendamento.NM_ETAP_TIPO | uppercase}}</td>\\n              <td >{{ agendamento.NM_ETAP_TIPO | uppercase}}</td>\\n              <td >{{ agendamento.NM_ETAP_TIPO | uppercase}}</td>\\n              <td class=\\\"align-middle\\\" [hidden]=\\\"showDetailPanel\\\">\\n                <span class=\\\"mr-3\\\" [tooltip]=\\\"agendamento.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"changeType(agendamento)\\\">\\n                    <i [ngClass]=\\\"agendamento.IN_STAT == '1' ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\" tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./../', agendamento.ID_LOGI_YMS_ETAP]\\\">\\n                    <i class=\\\"fas fa-edit\\\"></i>\\n                  </button>\\n                </span>\\n                <span class=\\\"mr-3\\\"  tooltip=\\\"Detalhes\\\" placement=\\\"left\\\" container=\\\"body\\\" >\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(agendamento)\\\">\\n                    <i class=\\\"fas fa-search\\\"></i>                  \\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table><br>\\n      </div>\\n      <div *ngIf=\\\"totalItems > itemsPerPage\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 pr-0\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Histórico de alteração\\\">\\n        <custom-table>\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Data</th>\\n              <th scope=\\\"col\\\">Usuário</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr>\\n              <td class=\\\"text-center\\\" *ngIf=\\\"agendamentoSelecionada?.DT_INCL != null && agendamentoSelecionada?.DT_ATUA == null \\\">{{ agendamentoSelecionada?.DT_INCL | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td class=\\\"text-center\\\" *ngIf=\\\"agendamentoSelecionada?.DT_INCL != null && agendamentoSelecionada?.DT_ATUA != null \\\">{{ agendamentoSelecionada?.DT_ATUA | date: 'dd/MM/yyyy HH:mm' }}</td>\\n              <td>{{ agendamentoSelecionada?.NM_USUA | uppercase }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 80%\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { LogisticaEntradaMateriaisNotasFiscaisService } from './../../../../entrada-materiais/notas-fiscais/services/notas-fiscais.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'logistica-yms-agendamentos-modais-notas-fiscais',\n  templateUrl: './notas-fiscais.component.html',\n  styleUrls: ['./notas-fiscais.component.scss']\n})\nexport class LogisticaYmsAgendamentosModaisNotasFiscaisComponent implements OnInit {\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n\n  loading = false;\n  noNotasFiscais = true;\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  notasFiscais = [];\n\n  form: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private notasFiscaisService: LogisticaEntradaMateriaisNotasFiscaisService,\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      buscarPor: ['NR_NOTA_FISC'],\n      pesquisa: [null, Validators.required],\n      ID_MATE: [null],\n      NR_NOTA_FISC: [null],\n      NM_MATE: [null],\n      DS_LOTE: [null],\n      TT_MATE_ORIG: [null],\n      NM_FORN: [null],\n      NM_EMPR: [null],\n      DS_UNID_MEDI: [null],\n      PAGI: 1,\n      IN_STAT: ['1'],\n      TT_REGI_PAGI: [this.itemsPerPage],\n    });\n  }\n\n  getNotasFiscais() {\n    \n    const buscarPor = this.form.get('buscarPor').value ?? '';\n    const pesquisa = this.form.get('pesquisa').value ?? '';\n\n    let params = {}\n\n    if(buscarPor){\n      params[buscarPor] = pesquisa;\n    }\n\n    params['PAGI'] = this.form.get('PAGI').value;\n    params['TT_REGI_PAGI'] = 100;\n\n    this.loading = true;\n\n    this.notasFiscaisService\n      .getNotasFiscais(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.notasFiscais = response['body']['data'];\n            this.totalItems = response.body['total'];\n            this.noNotasFiscais=false;\n          } else {\n            this.notasFiscais = [];\n            this.noNotasFiscais=true;\n          }\n        },\n        (error) => {\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.getNotasFiscais();\n  }\n\n  onSelect(nota){\n    this.select.emit(nota);\n    this.onClose();\n  }\n\n  onClose(){\n    this.close.emit(true);\n  }\n\n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n// services\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ILogisticaYmsAgendamentos } from '../models/agendamentos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogisticaYmsAgendamentosService {\n  private readonly API = environment.API;\n\n  constructor(private http: HttpClient) {}\n\n\n  getAgendamentos(params?) {\n    return this.http.get(\n      `${this.API}/logistica/yms/agendamentos`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n\n  getAgendamento(id: number) {\n    return this.http.get(\n      `${this.API}/logistica/yms/agendamentos/${id}`,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postAgendamentos(etapas: ILogisticaYmsAgendamentos) {\n    return this.http.post(\n      `${this.API}/logistica/yms/agendamentos`,\n      etapas,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  postMateriais(materiais) {\n    return this.http.post(\n      `${this.API}/logistica/yms/agendamentos/materiais`,\n      materiais,\n      {\n        observe: 'response',\n      }\n    );\n  }\n    \n  getMateriais(params?) {\n    return this.http.get(\n      `${this.API}/common/v2/materiais`,\n      {\n        params: params,\n        observe: 'response',\n      }\n    );\n  }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n  <h4>Pesquisa de Veículos</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"IN_STAT\\\">Situação</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"IN_STAT\\\"\\n          >\\n            <option value=\\\"1\\\">Ativo</option>\\n            <option value=\\\"0\\\">Inativo</option>\\n            <option value=\\\"\\\">Exibir Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"buscarPor\\\"\\n          >\\n            <option value=\\\"ID_LOGI_VEIC\\\">ID</option>\\n            <option value=\\\"PLAC\\\" selected>Placa</option>\\n            <option value=\\\"NM_MOTO\\\">Motorista</option>\\n            <option value=\\\"NM_TRAN\\\">Transportadora</option>\\n            <option value=\\\"NM_VEIC_TIPO\\\">Tipo de Veículo</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"form-group col-6\\\">\\n          <label>TERMO DE PESQUISA</label>\\n          <div class=\\\"input-group\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"pesquisa\\\"\\n              >\\n              <div class=\\\"input-group-append\\\">\\n                <span \\n                  [tooltip]=\\\"form.valid == false ? 'Digite um termo de pesquisa':''\\\"\\n                  container=\\\"body\\\"\\n                  placement =\\\"left\\\"\\n                >\\n                  <button\\n                  style=\\\"height: 25px;\\\"\\n                    [disabled]=\\\"form.valid == false\\\"\\n                    class=\\\"input-group-text hover\\\"\\n                    (click)=\\\"getVeiculos()\\\"\\n                    >\\n                    <i class=\\\"fas fa-search\\\"></i>\\n                  </button>\\n                </span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n  <custom-table *ngIf=\\\"!noVeiculos\\\" class=\\\"text-center\\\">\\n    <ng-template #thead let-thead>\\n      <tr>\\n        <th>ID </th>\\n        <th>Placa</th>\\n        <th>Tipo de Veículo</th>\\n        <th>Nome Motorista</th>\\n        <th>Transportadora</th>\\n        <th></th>\\n      </tr>\\n    </ng-template>\\n    <ng-template #tbody let-tbody>\\n      <tr *ngFor=\\\"let veiculo of veiculos\\\">\\n        <td >{{ veiculo.ID_LOGI_VEIC }}</td>\\n        <td>{{ veiculo.PLAC }}</td>\\n        <td>{{ veiculo.NM_VEIC_TIPO }}</td>\\n        <td>{{ veiculo.NM_MOTO }}</td>\\n        <td>{{ veiculo.NM_TRAN }}</td>\\n        <td>\\n          <button\\n            class=\\\"btn-icon-sm\\\"\\n            tooltip=\\\"Salvar Informações\\\"\\n            container=\\\"body\\\"\\n            (click)=\\\"onSelect(veiculo)\\\"\\n          >\\n            <i class=\\\"far fa-save\\\"></i>\\n          </button>\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </custom-table>\\n  <div *ngIf=\\\"totalItems > itemsPerPage\\\" >\\n    Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n    <pagination\\n      [maxSize]=\\\"10\\\"\\n      [totalItems]=\\\"totalItems\\\"\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n      [boundaryLinks]=\\\"true\\\"\\n      [(ngModel)]=\\\"currentPage\\\"\\n      previousText=\\\"&lsaquo;\\\"\\n      nextText=\\\"&rsaquo;\\\"\\n      firstText=\\\"&laquo;\\\"\\n      lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2FnZW5kYW1lbnRvcy9tb2RhaXMvbWF0ZXJpYWlzL21hdGVyaWFpcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9hZ2VuZGFtZW50b3MvbW9kYWlzL21hdGVyaWFpcy9tYXRlcmlhaXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b25bZGlzYWJsZWRde1xuICBjdXJzb3I6IG5vLWRyb3A7XG59Il19 */\";","import { LogisticaVeiculosModule } from './../../cadastros/veiculos/veiculos.module';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\nimport { LogisticaVeiculosModaisTransportadorasComponent } from './../../cadastros/veiculos/modais/transportadoras/transportadoras.component';\nimport { LogisticaVeiculosModaisMotoristasComponent } from './../../cadastros/veiculos/modais/motoristas/motoristas.component';\nimport { NgBrazil } from 'ng-brazil';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\nimport { LogisticaYmsAgendamentosListaComponent } from './lista/lista.component';\nimport { LogisticaYmsAgendamentosCadastroComponent } from './cadastro/cadastro.component';\n\nimport { LogisticaYmsAgendamentosRoutingModule } from './agendamentos-routing.module';\nimport { LogisticaYmsAgendamentosModaisVeiculosComponent } from './modais/veiculos/veiculos.component';\nimport { LogisticaYmsAgendamentosModaisMateriaisComponent } from './modais/materiais/materiais.component';\nimport { LogisticaYmsAgendamentosModaisNotasFiscaisComponent } from './modais/notas-fiscais/notas-fiscais.component';\nimport { LogisticaYmsAgendamentosDragAndDropComponent } from './drag-and-drop/drag-and-drop.component';\n\n@NgModule({\n  declarations: [\n    LogisticaYmsAgendamentosListaComponent,\n    LogisticaYmsAgendamentosCadastroComponent,\n    LogisticaYmsAgendamentosModaisVeiculosComponent,\n    LogisticaYmsAgendamentosModaisMateriaisComponent,\n    LogisticaYmsAgendamentosModaisNotasFiscaisComponent,\n    LogisticaYmsAgendamentosDragAndDropComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TextMaskModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    CurrencyMaskModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    LogisticaYmsAgendamentosRoutingModule,\n    LogisticaVeiculosModule\n  ]\n})\nexport class LogisticaYmsAgendamentosModule { }\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Agendamentos\\\">\\n  <button \\n    [disabled]=\\\"form.valid === false || loadingNavBar === true\\\"\\n    (click)=\\\"postAgendamentos()\\\"\\n    >\\n    Avançar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"sobrepor\\\" *ngIf=\\\"sobrepor\\\"></div>\\n      <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n        <div class=\\\"mtc-title\\\">Dados do Agendamento</div>\\n        <div class=\\\"form-row \\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"DS_AGEN\\\">Descrição</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"DS_AGEN\\\"\\n              formControlName=\\\"DS_AGEN\\\"\\n              placeholder=\\\"Digite...\\\"\\n              [ngClass]=\\\"onFieldError('DS_AGEN') + ' ' + onFieldRequired('DS_AGEN')\\\"\\n            />\\n            <invalid-form-control [show]=\\\"onFieldInvalid('DS_AGEN')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"DT_INIC\\\">Previsão de chegada</label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n              </div>\\n              <input\\n              class=\\\"form-control\\\"\\n              id=\\\"DT_INIC_PREV\\\"\\n              type=\\\"text\\\"\\n              bsDatepicker\\n              placeholder=\\\"Selecione...\\\"\\n              [bsConfig]=\\\"bsConfig\\\"\\n              formControlName=\\\"DT_INIC_PREV\\\"\\n                [ngClass]=\\\"onFieldError('DT_INIC_PREV') + ' ' + onFieldRequired('DT_INIC_PREV')\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('DT_INIC_PREV')\\\" message=\\\"Data prevista de chegada é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row \\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"filiais\\\">Filial</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"true\\\"\\n              [items]=\\\"filiais\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [loading]=\\\"loadingFiliais\\\"\\n              labelForId=\\\"ID_LOGI_FILI\\\"\\n              bindLabel=\\\"NM_FILI\\\"\\n              bindValue=\\\"ID_LOGI_FILI\\\"\\n              id=\\\"ID_LOGI_FILI\\\"\\n              formControlName=\\\"ID_LOGI_FILI\\\"\\n              [ngClass]=\\\"onFieldError('ID_LOGI_FILI') + ' ' + onFieldRequired('ID_LOGI_FILI')\\\"\\n              >\\n            </ng-select>\\n            <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_FILI')\\\" message=\\\"Filial é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"tiposCircuito\\\">Tipo de Circuito</label>\\n            <ng-select\\n            [searchable]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [items]=\\\"tiposCircuito\\\"\\n            [virtualScroll]=\\\"true\\\"\\n            placeholder=\\\"Selecione...\\\"\\n            [loading]=\\\"loadingTiposCircuito\\\"\\n            labelForId=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n            bindLabel=\\\"NM_CIRC_TIPO\\\"\\n            bindValue=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n            id=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n            formControlName=\\\"ID_LOGI_YMS_CIRC_TIPO\\\"\\n            [ngClass]=\\\"onFieldError('ID_LOGI_YMS_CIRC_TIPO') + ' ' + onFieldRequired('ID_LOGI_YMS_CIRC_TIPO')\\\"\\n            >\\n          </ng-select>\\n          <invalid-form-control [show]=\\\"onFieldInvalid('ID_LOGI_YMS_CIRC_TIPO')\\\" message=\\\"Tipo de circuito é obrigatório.\\\"></invalid-form-control>\\n          </div>\\n        </div>\\n        <fieldset class=\\\"border-top pt-2 mt-4\\\">\\n          <legend \\n          class=\\\"text-center mb-0\\\"\\n          style=\\\"font-size: larger; width: auto;\\\">Dados do Veículo</legend>\\n          <div class=\\\"form-row \\\">\\n            <div class=\\\"form-group col-md-6 \\\">\\n              <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n                <label class=\\\"my-auto\\\" for=\\\"PLAC\\\">Placa</label>\\n                <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" >\\n                  <a\\n                    class=\\\"text-primary\\\"\\n                    href=\\\"javascript:void(0)\\\"\\n                    (click)=\\\"openModal(modalVeiculos)\\\">\\n                    <strong *ngIf=\\\"!this.form.get('PLAC').value\\\">Selecionar</strong>\\n                    <strong *ngIf=\\\"this.form.get('PLAC').value\\\">Trocar</strong>\\n                  </a>\\n                </div>\\n              </div>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"PLAC\\\"\\n                formControlName=\\\"PLAC\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [ngClass]=\\\"onFieldError('PLAC') + ' ' + onFieldRequired('PLAC')\\\"\\n              />\\n              <invalid-form-control [show]=\\\"onFieldInvalid('PLAC')\\\" message=\\\"Veículo é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n                <label class=\\\"my-auto\\\" for=\\\"ID_LOGI_VEIC_TIPO\\\">Tipo de Veículo</label>\\n                <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"!this.form.get('ID_LOGI_VEIC_TIPO').value && this.form.get('PLAC').value\\\">\\n                  <a\\n                    class=\\\"text-primary\\\"\\n                    href=\\\"javascript:void(0)\\\"\\n                    [routerLink]=\\\"[getLinkAddTipoVeiculo()]\\\"\\n                    target=\\\"_blank\\\">\\n                    <strong>Adicionar</strong>\\n                  </a>\\n                  <span class=\\\"mx-2\\\">|</span>\\n                  <btn-icon\\n                  icon=\\\"fas fa-redo-alt\\\"\\n                  size=\\\"small\\\"\\n                  class=\\\"mr-2\\\"\\n                  tooltip=\\\"Recarregar\\\"\\n                  (click)=\\\"onReloadContatos()\\\">\\n                </btn-icon>\\n                </div>\\n              </div>\\n              <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"NM_VEIC_TIPO\\\"\\n              readonly\\n              formControlName=\\\"NM_VEIC_TIPO\\\"\\n              placeholder=\\\"Selecione...\\\"\\n              [ngClass]=\\\"onFieldError('NM_VEIC_TIPO') + ' ' + onFieldRequired('NM_VEIC_TIPO')\\\"\\n            />\\n              <invalid-form-control [show]=\\\"onFieldInvalid('NM_VEIC_TIPO')\\\" message=\\\"Tipo de veículo é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row \\\">\\n            <div class=\\\"form-group col-md \\\">\\n              <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n                <label class=\\\"my-auto\\\" for=\\\"NM_MOTO\\\">Motorista</label>\\n                <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\"  *ngIf=\\\"this.form.get('PLAC').value\\\">\\n                  <a\\n                    class=\\\"text-primary\\\"\\n                    href=\\\"javascript:void(0)\\\"\\n                    (click)=\\\"openModal(modalMotoristas)\\\">\\n                    <strong *ngIf=\\\"this.form.get('NM_MOTO').value\\\">Trocar</strong>\\n                    <strong *ngIf=\\\"!this.form.get('NM_MOTO').value\\\">Selecionar</strong>\\n                  </a>\\n                  <span class=\\\"mx-2\\\" *ngIf=\\\"this.form.get('NM_MOTO').value\\\">|</span>\\n                  <a\\n                    class=\\\"text-secondary\\\"\\n                    href=\\\"javascript:void(0)\\\"\\n                    (click)=\\\"onDetalhesMotorista()\\\"\\n                    *ngIf=\\\"this.form.get('NM_MOTO').value\\\">\\n                    <strong>Detalhes</strong>\\n                  </a>\\n                </div>\\n              </div>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_MOTO\\\"\\n                formControlName=\\\"NM_MOTO\\\"\\n                readonly\\n                placeholder=\\\"Selecione...\\\"\\n                [ngClass]=\\\"onFieldError('NM_MOTO') + ' ' + onFieldRequired('NM_MOTO')\\\"\\n              />\\n              <invalid-form-control [show]=\\\"onFieldInvalid('NM_MOTO')\\\" message=\\\"Motorista é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row \\\">\\n            <div class=\\\"form-group col-md \\\">\\n              <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n                <label class=\\\"my-auto\\\" for=\\\"NM_TRAN\\\">Transportadora</label>\\n                <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 11px\\\" *ngIf=\\\"this.form.get('PLAC').value\\\" >\\n                  <a\\n                    class=\\\"text-primary\\\"\\n                    href=\\\"javascript:void(0)\\\"\\n                    (click)=\\\"openModal(modalTransportadoras)\\\">\\n                    <strong *ngIf=\\\"this.form.get('NM_TRAN').value\\\">Trocar</strong>\\n                    <strong *ngIf=\\\"!this.form.get('NM_TRAN').value\\\">Selecionar</strong>\\n                  </a>\\n                  <span class=\\\"mx-2\\\" *ngIf=\\\"this.form.get('NM_TRAN').value\\\">|</span>\\n                  <a\\n                    class=\\\"text-secondary\\\"\\n                    href=\\\"javascript:void(0)\\\"\\n                    (click)=\\\"onDetalhesTransportadora()\\\"\\n                    *ngIf=\\\"this.form.get('NM_TRAN').value\\\">\\n                    <strong>Detalhes</strong>\\n                  </a>\\n                </div>\\n              </div>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"NM_TRAN\\\"\\n                formControlName=\\\"NM_TRAN\\\"\\n                readonly\\n                placeholder=\\\"Selecione...\\\"\\n                [ngClass]=\\\"onFieldError('NM_TRAN') + ' ' + onFieldRequired('NM_TRAN')\\\"\\n              />\\n              <invalid-form-control [show]=\\\"onFieldInvalid('NM_TRAN')\\\" message=\\\"Transportadora é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </fieldset>\\n        <fieldset class=\\\"border-top pt-2 mt-4\\\">\\n          <legend \\n          class=\\\"text-center mb-0\\\"\\n          style=\\\"font-size: larger; width: auto;\\\">Materiais</legend>\\n          <div class=\\\"row\\\" *ngIf=\\\"loadingMateriais\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-cog fa-spin\\\"\\n                text=\\\"Estamos pesquisando os materiais para você...\\\">\\n              </message>\\n            </div>\\n          </div>\\n          <div formArrayName=\\\"materiais\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col mb-0 d-flex justify-content-between\\\">\\n                <div class=\\\"mtc-title\\\"></div>\\n                <div>\\n                  <a\\n                    class=\\\"text-secondary\\\"\\n                    (click)=\\\"onAddMaterial()\\\"\\n                    href=\\\"javascript:void(0)\\\">\\n                    <b>Adicionar</b>\\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-row\\\"  *ngFor=\\\"let item of formMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n              <div class=\\\"form-group col mb-0\\\">\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-md-3 \\\">\\n                    <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n                      <label class=\\\"my-auto\\\" for=\\\"NR_NOTA_FISC\\\">Nota Fiscal</label>\\n                      <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\" >\\n                        <a\\n                          class=\\\"text-primary\\\"\\n                          href=\\\"javascript:void(0)\\\"\\n                          (click)=\\\"openModal(modalNotasFiscais, i)\\\">\\n                          <strong>Selecionar</strong>\\n                        </a>\\n                      </div>\\n                    </div>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"NR_NOTA_FISC\\\"\\n                      formControlName=\\\"NR_NOTA_FISC\\\"\\n                      placeholder=\\\"Digite...\\\"\\n                      [ngClass]=\\\"onNestedFieldError('materiais', i, 'NR_NOTA_FISC') + ' ' + onNestedFieldRequired('materiais', i, 'NR_NOTA_FISC')\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"form-group col-md-5 \\\">\\n                    <label for=\\\"NR_PEDI\\\">Pedido</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"Digite...\\\"\\n                      id=\\\"NR_PEDI\\\"\\n                      formControlName=\\\"NR_PEDI\\\"\\n                      [ngClass]=\\\"onNestedFieldError('materiais', i, 'NR_PEDI') + ' ' + onNestedFieldRequired('materiais', i, 'NR_PEDI')\\\">\\n                  </div>\\n                  <div class=\\\"form-group col-md-3 \\\">\\n                    <label for=\\\"DS_UNID_MEDI\\\">Unidade de Medida</label>\\n                    <select \\n                    class=\\\"form-control custom-select\\\"\\n                    id=\\\"DS_UNID_MEDI\\\"\\n                    formControlName=\\\"DS_UNID_MEDI\\\"\\n                    [ngClass]=\\\"onNestedFieldError('materiais', i, 'DS_UNID_MEDI') + ' ' + onNestedFieldRequired('materiais', i, 'DS_UNID_MEDI')\\\"\\n                  >\\n                    <option >KG</option>\\n                    <option >TON</option>\\n                    <option >PC</option>\\n                    <option >UN</option>\\n                  </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"form-group col-md-3 \\\">\\n                    <label for=\\\"TT_MATE\\\">Quantidade</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"TT_MATE\\\"\\n                      formControlName=\\\"TT_MATE\\\"\\n                      currencyMask [options]=\\\"{ align: 'right', prefix: '' , thousands: '.', decimal: ',' , precision: 3 }\\\"\\n                      [ngClass]=\\\"onNestedFieldError('materiais', i, 'TT_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'TT_MATE')\\\">\\n                  </div>\\n                  <div class=\\\"form-group col-md-8 \\\">\\n                    <div class=\\\"mb-0 d-flex justify-content-between w-100\\\" style=\\\"height: 22px\\\">\\n                      <label class=\\\"my-auto\\\" for=\\\"NM_MATE\\\">Material</label>\\n                      <div class=\\\"my-auto text-uppercase\\\" style=\\\"font-size: 10px\\\">\\n                        <a\\n                          class=\\\"text-primary\\\"\\n                          href=\\\"javascript:void(0)\\\"\\n                          (click)=\\\"openModal(modalMateriais, i)\\\">\\n                          <strong>Selecionar</strong>\\n                        </a>\\n                      </div>\\n                    </div>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"NM_MATE\\\"\\n                      formControlName=\\\"NM_MATE\\\"\\n                      [ngClass]=\\\"onNestedFieldError('materiais', i, 'NM_MATE') + ' ' + onNestedFieldRequired('materiais', i, 'NM_MATE')\\\">\\n                  </div>\\n                  <div class=\\\"col-1 my-auto pt-3 d-flex justify-content-center\\\">\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn-icon\\\"\\n                      (click)=\\\"onDeleteMaterial(i)\\\">\\n                      <i class=\\\"fas fa-trash\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n                <hr class=\\\"w-100\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </fieldset>\\n        <div class=\\\"row \\\">\\n          <div class=\\\"form-group col mb-0\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-block btn-outline-secondary mt-auto\\\"\\n              (click)=\\\"onSearchTime()\\\"\\n              [disabled]=\\\"loadingCalculo\\\">\\n              <div *ngIf=\\\"!loadingCalculo\\\">\\n                <i class=\\\"fas fa-search\\\"></i>\\n                <span>Buscar horários disponíveis</span>\\n              </div>\\n              <div *ngIf=\\\"loadingCalculo\\\">\\n                <i class=\\\"fas fa-cog fa-spin\\\"></i>\\n                <span>Aguarde</span>\\n              </div>\\n            </button>\\n          </div> \\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"loadingCalculo\\\" >\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-cog fa-spin\\\"\\n              text=\\\"Estamos pesquisando os horários disponíveis para você...\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <div class=\\\"row m-auto\\\">\\n          <div class=\\\"form-group col-2 mb-0\\\">\\n            <button \\n              type=\\\"button\\\" \\n              class=\\\"btn btn-block btn-outline-secondary mt-2 p-2\\\"\\n              (click)=\\\"onSetTime($event)\\\"\\n              >\\n              <span aria-hidden=\\\"true\\\">\\n              <i class=\\\"fas fa-clock\\\"></i>\\n              </span>12:00\\n            </button>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"form-row justify-content-center\\\">\\n          <div class=\\\"form-group col\\\">\\n            <label for=\\\"DS_OBSE\\\" >Observação:</label>\\n            <textarea class=\\\"form-control\\\" id=\\\"DS_OBSE\\\" formControlName=\\\"DS_OBSE\\\" rows=\\\"3\\\"></textarea>\\n          </div>\\n        </div> -->\\n      </form>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row\\\"  *ngIf=\\\"noCircuito\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-file\\\"\\n            text=\\\"Preecha os campos ao lado para que possamos montar o seu circuito\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div id=\\\"scrollDetalhes\\\" class=\\\"d-flex\\\">\\n        <div class=\\\"row w-100\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"mtc-title\\\">Dados do Circuito</div>\\n            <div *ngFor=\\\"let etapa of circuitos; let last = last; let first = first\\\" [ngClass]=\\\"fist ? 'mt-4' : ''\\\">\\n              <div class=\\\"d-flex w-100\\\" [tooltip]=\\\"etapa?.descricao\\\" placement=\\\"left\\\">\\n                <div class=\\\"rounded-circle text-white icon-40\\\" [ngClass]=\\\"etapa?.check == 0 ? 'bg-secondary' : 'bg-primary'\\\">\\n                  <i [class]=\\\"etapa?.icone\\\"></i>\\n                </div>\\n                <strong class=\\\"my-auto ml-3 text-truncate\\\" [ngClass]=\\\"etapa?.check == 1 ? 'text-primary' : ''\\\">\\n                  {{ etapa?.descricao }}\\n                </strong>\\n              </div>\\n              <div class=\\\"my-1\\\" *ngIf=\\\"!last\\\">\\n                <div class=\\\"ml-1\\\">\\n                  <div class=\\\"border-left border-secondary ml-3 p-2\\\">\\n                    <div *ngIf=\\\"etapa?.check === 1\\\"></div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6 text-right\\\">\\n            <button\\n            type=\\\"button\\\"\\n            class=\\\"btn-icon-sm mx-3\\\"\\n            tooltip=\\\"Download\\\"\\n            container=\\\"body\\\"\\n            (click)=\\\"onDownload()\\\"\\n            [disabled] = \\\"loadingMateriais\\\"\\n          >\\n            <i class=\\\"far fa-save\\\"></i>\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn-icon-sm mr-3\\\"\\n            tooltip=\\\"Imprimir\\\"\\n            container=\\\"body\\\"\\n            [disabled] = \\\"loadingMateriais\\\" \\n            (click)=\\\"onPrint()\\\"\\n          >\\n            <i class=\\\"fas fa-print\\\"></i>\\n          </button>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <ng-template #modalVeiculos>\\n    <logistica-yms-agendamentos-modais-veiculos\\n    (select)=\\\"onVeiculo($event)\\\"\\n    (close)=\\\"modalRef.hide()\\\"\\n    >\\n    </logistica-yms-agendamentos-modais-veiculos>\\n  </ng-template>\\n  <ng-template #modalMotoristas>\\n    <logistica-veiculos-modais-motoristas\\n      (select)=\\\"onMotorista($event)\\\"\\n      (close)=\\\"modalRef.hide()\\\"\\n    >\\n    </logistica-veiculos-modais-motoristas>\\n  </ng-template>\\n  <ng-template #modalTransportadoras>\\n    <logistica-veiculos-modais-transportadoras\\n      (select)=\\\"onTransportadora($event)\\\"\\n      (close)=\\\"modalRef.hide()\\\"\\n    >\\n    </logistica-veiculos-modais-transportadoras>\\n  </ng-template>\\n  <ng-template #modalMateriais>\\n    <logistica-yms-agendamentos-modais-materiais\\n    (select)=\\\"onMaterial($event)\\\"\\n    (close)=\\\"modalRef.hide()\\\"\\n    >\\n    </logistica-yms-agendamentos-modais-materiais>\\n  </ng-template>\\n  <ng-template #modalNotasFiscais>\\n    <logistica-yms-agendamentos-modais-notas-fiscais\\n    (select)=\\\"onNotasFiscais($event)\\\"\\n    (close)=\\\"modalRef.hide()\\\"\\n    >\\n    </logistica-yms-agendamentos-modais-notas-fiscais>\\n  </ng-template>\\n</app-body>\";","import { PdfService } from 'src/app/shared/services/core/pdf.service';\nimport { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\nimport { LogisticaYmsTiposCircuitoService } from './../../tipos-circuito/services/tipos-circuito.service';\nimport { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { LogisticaFiliaisService } from './../../../cadastros/filiais/services/filiais.service';\nimport { LogisticaTipoVeiculoService } from './../../../cadastros/tipo-veiculo/services/tipo-veiculo.service';\nimport { ILogisticaTipoVeiculo } from './../../../cadastros/tipo-veiculo/models/tipo-veiculo';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LogisticaVeiculoService } from './../../../cadastros/veiculos/services/veiculo.service';\nimport { ILogisticaVeiculo } from './../../../cadastros/veiculos/models/veiculo';\nimport { LogisticaYmsCircuitosService } from './../../circuitos/services/circuitos.service';\n//Services\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n//Bootstrap\nimport { utilsBr } from 'js-brasil';\nimport { BsDatepickerConfig, BsModalRef, BsLocaleService } from 'ngx-bootstrap';\n//Angular\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray,\n} from '@angular/forms';\n//rxjs\nimport { Subscription, forkJoin } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LogisticaYmsAgendamentosService } from '../services/agendamentos.service';\n//interfaces\nimport { ILogisticaYmsAgendamentos } from '../models/agendamentos';\nimport { isNull } from 'util';\nimport { ILogisticaYmsCircuitos } from '../../circuitos/models/circuitos';\n\n@Component({\n  selector: 'logistica-yms-agendamentos-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss'],\n})\nexport class LogisticaYmsAgendamentosCadastroComponent\n  implements OnInit {\n  noResult: boolean;\n  noCircuito:boolean = true;\n  sobrepor = false;\n  $activatedRouteSubscription: Subscription;\n  breadCrumbTree: Array<any> = [];\n  form: FormGroup;\n  appTitle: string;\n  index:number;\n  modalRef: BsModalRef;\n  formData: Array<FormData> = [];\n  bsConfig: Partial<BsDatepickerConfig>;\n  veiculos: Array<ILogisticaVeiculo>;\n  tipoVeiculo: Array<ILogisticaTipoVeiculo>;\n  tiposCircuito: Array<ILogisticaYmsTiposCircuito>;\n  filiais: Array<ILogisticaFiliais>;\n  //loading\n  noVeiculos = true;\n  loading = false;\n  loadingNavBar = false;\n  loadingCalculo:boolean = false;\n  loadingMateriais:boolean = false;\n  loadingTipoVeiculo:boolean;\n  loadingTiposCircuito:boolean;\n  loadingFiliais: boolean;\n\n  circuitos= [\n    {\n      id:1,\n      descricao: 'Portaria',\n      icone:'fas fa-portrait',\n      check: 1\n    },\n    {\n      id:2,\n      descricao: 'Balança',\n      icone:'fas fa-balance-scale-left',\n      check: 0\n\n    },\n    {\n      id:3,\n      descricao: 'Estacionamento',\n      icone:'fas fa-sign',\n      check: 0\n    },\n    {\n      id:4,\n      descricao: 'Galpão 2',\n      icone:'fas fa-warehouse',\n      check: 0\n\n    },\n    {\n      id:5,\n      descricao: 'Galpão 27',\n      icone:'fas fa-warehouse',\n      check: 0\n    },    {\n      id:6,\n      descricao: 'Balança',\n      icone:'fas fa-balance-scale-left',\n      check: 0\n\n    },\n    {\n      id:7,\n      descricao: 'Finalizado',\n      icone:'fas fa-check',\n      check: 0\n    }\n  ]\n  /* Pagination */\n  itemsPerPage = 10;\n  totalItems = 10;\n  totalItemsMaterial = 10;\n  currentPage = 1;\n  begin = 0;\n  end = 10;\n  /* Pagination */\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pnotify: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private localeService: BsLocaleService,\n    private agendamentosService: LogisticaYmsAgendamentosService,\n    private titleService: TitleService,\n    private pdfService: PdfService,\n    private modalService: BsModalService,\n    private atividadesService: AtividadesService,\n    private veiculoService: LogisticaVeiculoService,\n    private tipoVeiculoService: LogisticaTipoVeiculoService,\n    private filiaisService: LogisticaFiliaisService,\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n  public MASKS = utilsBr.MASKS;\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.setFormBuilder();\n    this.onActivatedRoute();\n    this.getTipoVeiculo();\n    this.getFiliais();\n    this.getTiposCircuito();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onActivatedRoute() {\n    const _params = this.activatedRoute.snapshot.params;\n    if (_params.hasOwnProperty('id')){\n      this.getAgendamento(_params['id']); \n    } else{\n      this.onAddMaterial();\n    }\n  }\n\n  \n  getLinkAddTipoVeiculo(): string {    \n    return `/logistica/cadastros/veiculos/${this.form.value.ID_LOGI_VEIC}`;\n  }\n\n  onReloadTipoVeiculo(): void {\n    if (this.loadingTipoVeiculo === false) {\n      this.getTipoVeiculo(this.form.value.ID_LOGI_VEIC);\n    }\n  }\n\n  onSobrepor(){\n    this.sobrepor == true ? false : true;\n  }\n\n\n  onVeiculo(veiculo){\n    this.form.patchValue(veiculo);\n    this.form.controls.NM_TRAN.reset()\n    this.form.controls.NM_TRAN.updateValueAndValidity()\n    this.form.controls.NM_MOTO.reset()\n    this.form.controls.NM_MOTO.updateValueAndValidity()\n\n    if(!veiculo.ID_LOGI_VEIC_TIPO){\n      this.pnotify.notice('Esse Veículo não possui um tipo cadastrado!')\n    }\n\n    if(!veiculo.ID_LOGI_TRAN){\n      this.form.controls.NM_TRAN.enable()\n      this.form.controls.NM_TRAN.markAsTouched()\n    }\n\n    if(!veiculo.ID_LOGI_MOTO){\n      this.form.controls.NM_MOTO.enable()\n      this.form.controls.NM_MOTO.markAsTouched()\n    }\n  }\n\n  onTransportadora(transportadora){\n    this.form.patchValue(transportadora);\n  }\n\n  onMotorista(motorista){\n    this.form.patchValue(motorista);\n  }\n\n  onMaterial(material){\n    const fg = this.form.get('materiais') as FormArray;\n    // fg.controls[this.index].patchValue(material);\n    fg.controls[this.index].get('NM_MATE').patchValue(material.NM_MATE);\n    fg.controls[this.index].get('UUID_MATE').patchValue(material.ID);\n    fg.controls[this.index].get('ID_MATE').patchValue(material.ID_MATE);\n  }\n\n  openModal(template: TemplateRef<any>, index?) {\n    this.index = index;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-xl',\n    });\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  onSearchTime(){\n    const newData = new Date();\n\n    if(this.form.valid == false){\n      this.pnotify.notice('Preencha o formulário');\n      return;\n    }\n\n    if(this.form.get('DT_INIC_PREV').value < newData){\n      this.pnotify.notice('Favor inserir uma data maior que a data atual');\n      this.form.controls.DT_INIC_PREV.markAsTouched();\n      return;\n    }\n\n    if(this.formMateriais.valid ==false){\n      this.pnotify.notice('Informe os dados dos materiais');\n      return;\n    }\n\n\n    //Fazer a consulta dos horários disponiveis //\n\n  }\n\n  onDownload(params?) {\n    this.pnotify.notice('Documento PDF será gerado em breve!')\n    const _id = params['ID_LOGI_YMS_AGEN'];\n    this.pdfService.download('agendamento-pdf', `Agendamento - ${_id}`);\n  }\n\n  onPrint(){\n    \n    window.print();\n  }\n  \n\n  getAgendamento(id: number) {\n    this.loading = true;\n    this.agendamentosService\n      .getAgendamento(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const data : ILogisticaYmsAgendamentos = response.body['data'][0]\n            this.form.patchValue(data) \n            this.noResult = false;\n          } else {\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n          this.noResult = true;\n        }\n      );\n  }\n\n  getFiliais() {\n    this.loadingFiliais = true;\n    this.filiaisService\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingFiliais = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      }),\n      (error) => {\n        this.filiais = [];\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      };\n  }\n\n  getTiposCircuito() {\n    this.loadingTiposCircuito = true;\n    this.tiposCircuitoService\n      .getTiposCircuito({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposCircuito = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposCircuito = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      }),\n      (error: any) => {\n        this.tiposCircuito= [];\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n\n  setBreadCrumb(): void {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.appTitle = 'Cadastro';\n    this.titleService.setTitle(this.appTitle);\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/logistica/home',\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Agendamentos',\n        routerLink: `../`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  getTipoVeiculo(params?) {\n    this.loadingTipoVeiculo = true;\n    this.tipoVeiculoService\n      .getTipoVeiculos({...params, IN_STAT: '1' })\n      .pipe(\n        finalize(() => {\n          this.loadingTipoVeiculo = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.tipoVeiculo = response.body['data'];\n          } else {\n            this.tipoVeiculo = []\n          }\n        },\n        (error: any) => {\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      ID_LOGI_YMS_AGEN: [null],\n      ID_LOGI_YMS_ETAP: [null],\n      PLAC:[{value:null, disabled:true }, [Validators.required]],\n      ID_LOGI_VEIC_TIPO: [null],\n      ID_LOGI_VEIC:[null],\n      NM_MOTO:[{value:null, disabled:true }, [Validators.required]],\n      NM_TRAN:[{value:null, disabled:true }, [Validators.required]],\n      NM_VEIC_TIPO:[{value:null, disabled:true }, [Validators.required]],\n      DS_AGEN: [null, [Validators.required]],\n      IN_STAT: [isNull],\n      DT_INIC_PREV: [null, [Validators.required]],\n      DS_OBSE: [null],\n      ID_LOGI_FILI: [null, [Validators.required]],\n      ID_LOGI_YMS_CIRC_TIPO: [null, [Validators.required]],\n      materiais: this.formBuilder.array([]),\n    });\n  }\n\n  get formMateriais() {\n    return this.form.get('materiais') as FormArray;\n  }\n\n  onAddMaterial(index?:number) {\n    this.formMateriais.push(\n      this.formBuilder.group({\n        UUID_MATE:[null],\n        NR_NOTA_FISC:[null, [Validators.required]],\n        NR_PEDI:[null,[Validators.required]],\n        ID_LOGI_ENMA_NOFI_MATE:[null],\n        DS_UNID_MEDI: ['TON', [Validators.required]],\n        TT_MATE: [null, [Validators.required, Validators.min(0.01)]],\n        NM_MATE: [{value: null , disabled: true}, [Validators.required]],\n      })\n    );\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  postAgendamentos() {\n    this.loadingNavBar = true;\n    this.agendamentosService\n      .postAgendamentos(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.status === 200) {\n            const id = response.body['data'];\n            console.log(id)\n            this.form.get('ID_LOGI_YMS_AGEN').setValue(id);\n            this.postMateriais(id);\n            this.pnotify.success();\n            // this.router.navigate(['../'], {\n            //   relativeTo: this.activatedRoute,\n            // });\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error: any) => {\n          const message = error.error.message\n          message ? this.pnotify.error(message): this.pnotify.error();\n        }\n      );\n  }\n\n  onNestedFieldError(formGroup: string, index: number, field: string) {\n    if (this.onNestedFieldInvalid(formGroup, index, field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onNestedFieldInvalid(formGroup: string, index: number, field: any) {\n    let nestedForm: any = this.form.controls[formGroup];\n    field = nestedForm.controls[index].get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onNestedFieldRequired(formGroup: string, index: number, field: string) {\n    let required = false;\n    let formControl = new FormControl();\n    let nestedForm: any = this.form.controls[formGroup];\n\n    if (nestedForm.controls[index].get(field).validator) {\n      let validationResult = nestedForm.controls[index]\n        .get(field)\n        .validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  onDeleteMaterial(index: number) {\n    if (this.formMateriais.length === 1) {\n      this.pnotify.notice('Informe ao menos um material.');\n      return\n    }\n    let materiais = this.formMateriais.at(index).value;\n    materiais = {...materiais,'IN_STAT':'0'}\n    if(!materiais['ID_LOGI_AGEN_MATE']){\n      this.formMateriais.removeAt(index);\n      return;\n    }\n    this.loadingNavBar= true;\n    this.agendamentosService\n      .postMateriais(materiais)\n        .pipe(\n          finalize(() => {\n            this.loadingNavBar= false;\n          })\n        )\n        .subscribe(\n          (response) => {\n            if (response.status === 200) {\n              this.formMateriais.removeAt(index);\n              this.pnotify.success();\n            } else {\n              this.pnotify.error();\n            }\n          },\n          (error) => {\n            this.pnotify.error();\n          }\n        );\n  }\n  \n\n  async postMateriais(id:number){\n    let request = [];\n    const materiais = this.formMateriais.getRawValue();\n    if (!materiais){\n      return\n    }\n    const promise = () => {\n      materiais.forEach(material => {\n        const params = {...material,'ID_LOGI_YMS_AGEN':id}\n        request.push(this.agendamentosService\n          .postMateriais(params)\n      )});\n    }\n    await Promise.resolve(promise());\n    forkJoin(request)\n    .pipe(\n      finalize(() => {\n        this.loading = false;\n        this.loadingNavBar = false;\n      })\n    )\n    .subscribe(\n      (responses: Array<any>) => {\n        responses.forEach(response => {\n          if(response.status === 200 ){\n            this.pnotify.success('Material, salvo com sucesso!');\n            this.router.navigate(['../'], {\n              relativeTo: this.activatedRoute,\n            });\n          } else{\n            this.pnotify.error();\n          }\n        });\n      },\n      (error: any) => {\n        try {\n          this.pnotify.error(error.error.message);\n        } catch (error) {\n          this.pnotify.error();\n        }\n      }\n    )\n  }\n\n  onSetTime(event){\n    console.log(event)\n  }\n}\n","import { LogisticaVeiculoService } from './../../../../cadastros/veiculos/services/veiculo.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'logistica-yms-agendamentos-modais-veiculos',\n  templateUrl: './veiculos.component.html',\n  styleUrls: ['./veiculos.component.scss']\n})\nexport class LogisticaYmsAgendamentosModaisVeiculosComponent implements OnInit {\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n\n  loading = false;\n  noVeiculos = true;\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  veiculos = [];\n\n  form: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private veiculoService: LogisticaVeiculoService,\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      buscarPor: ['PLAC'],\n      pesquisa: [null, Validators.required],\n      ID_LOGI_VEIC:[null],\n      PLAC:[null],\n      NM_MOTO:[null],\n      NM_TRAN:[null],\n      NM_VEIC_TIPO:[null],\n      PAGI: 1,\n      IN_STAT: ['1'],\n      TT_REGI_PAGI: [this.itemsPerPage],\n    });\n  }\n\n  getVeiculos() {\n    \n    const buscarPor = this.form.get('buscarPor').value ?? '';\n    const pesquisa = this.form.get('pesquisa').value ?? '';\n\n    let params = {}\n\n    if(buscarPor){\n      params[buscarPor] = pesquisa;\n    }\n\n    params['PAGI'] = this.form.get('PAGI').value;\n    params['TT_REGI_PAGI'] = 100;\n\n    this.loading = true;\n\n    this.veiculoService\n      .getVeiculos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.veiculos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noVeiculos=false;\n          } else {\n            this.veiculos = [];\n            this.noVeiculos=true;\n          }\n        },\n        (error) => {\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.getVeiculos();\n  }\n\n  onSelect(veiculo){\n    this.select.emit(veiculo);\n    this.onClose();\n  }\n\n  onClose(){\n    this.close.emit(true);\n  }\n\n}\n","import { LogisticaYmsTiposCircuitoService } from './../../tipos-circuito/services/tipos-circuito.service';\nimport { LogisticaFiliaisService } from './../../../cadastros/filiais/services/filiais.service';\nimport { ILogisticaFiliais } from './../../../cadastros/filiais/models/filiais';\nimport { ILogisticaYmsTiposCircuito } from './../../tipos-circuito/models/tipos-circuito';\nimport { ILogisticaMotorista } from './../../../cadastros/motoristas/models/motorista';\nimport { LogisticaMotoristaService } from './../../../cadastros/motoristas/services/motorista.service';\nimport { ILogisticaYmsSetores } from './../../setores/models/setores';\nimport { ILogisticaYmsCircuitos } from './../../circuitos/models/circuitos';\nimport { LogisticaYmsSetoresService } from './../../setores/services/setores.service';\nimport { LogisticaYmsCircuitosService } from './../../circuitos/services/circuitos.service';\n//angular\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { LogisticaYmsAgendamentosService } from '../services/agendamentos.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { XlsxService } from 'src/app/shared/modules/xlsx/xlsx.service';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n// rxjs\nimport { finalize, take, switchMap } from 'rxjs/operators';\nimport { Subscription, EMPTY } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\n\n//Interfaces\nimport { ILogisticaYmsAgendamentos } from '../models/agendamentos';\n\n\n@Component({\n  selector: 'logistica-yms-agendamentos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class LogisticaYmsAgendamentosListaComponent\n  implements OnInit, OnDestroy {\n    \n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  noResult: boolean;\n  loadingAgendamentos: boolean;\n  modalRef: BsModalRef;\n  form: FormGroup;\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n  $activatedRouteSubscription: Subscription;\n\n  //LOADINGS\n  loading = true; \n  loadingNavBar = false\n  loadingTiposCircuito:boolean;\n  loadingFiliais: boolean;\n\n  //VARIAVEIS\n  totalItens: any = [];\n  agendamentos: Array<ILogisticaYmsAgendamentos>;\n  agendamentoSelecionada: ILogisticaYmsAgendamentos;\n  tiposCircuito: Array<ILogisticaYmsTiposCircuito>;\n  filiais: Array<ILogisticaFiliais>;\n  // CUSTOM TABLE\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  // Tipos de Situação dos Agendamentos (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Ativos',\n    },\n    {\n      cod: '2',\n      nome: 'Inativos',\n    },\n  ];\n\n  // Subtitles (Ativo/Inativo)\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private xlsxService: XlsxService,\n    private dateService: DateService,\n    private routerService: RouterService,\n    private activatedRoute: ActivatedRoute,\n    private detailPanelService: DetailPanelService,\n    private confirmModalService: ConfirmModalService,\n    private motoristaService: LogisticaMotoristaService,\n    private agendamentosService: LogisticaYmsAgendamentosService,\n    private filiaisService: LogisticaFiliaisService,\n    private tiposCircuitoService: LogisticaYmsTiposCircuitoService\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n    this.onDetailPanelEmitter();\n    this.getFiliais();\n    this.getTiposCircuito();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        if (_response.hasOwnProperty('TT_REGI_PAGI'))\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n          this.getAgendamentos(this.getParams());\n      }\n    );\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  getFiliais() {\n    this.loadingFiliais = true;\n    this.filiaisService\n      .getFiliais({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingFiliais = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.filiais = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      }),\n      (error) => {\n        this.filiais = [];\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      };\n  }\n\n  getTiposCircuito() {\n    this.loadingTiposCircuito = true;\n    this.tiposCircuitoService\n      .getTiposCircuito({ IN_STAT: '1', IN_PAGI: '0' })\n      .pipe(\n        finalize(() => {\n          this.loadingTiposCircuito = false;\n        })\n      )\n      .subscribe((response) => {\n        if (response.status === 200) {\n          this.tiposCircuito = response.body['data'];\n        }else{\n          this.pnotify.notice('Nenhum registro encontrado!')\n        }\n      }),\n      (error: any) => {\n        this.tiposCircuito= [];\n        const message = error.error.message\n        message ? this.pnotify.error(message): this.pnotify.error();\n      }\n  }\n\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_YMS_CIRC_TIPO: [null],\n      ID_LOGI_FILI: [null],\n      ID_LOGI_MOTO:[null],\n      NM_MOTO: [null],\n      PLAC: [null],\n      IN_STAT: [null],\n      DS_OBSE: [null],\n      NR_MATR: [null],\n      NM_USUA: [null],\n      DT_INCL: [null],\n      DT_ATUA: [null],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'YMS',\n        routerLink: `/logistica/yms/${id}`,\n      },\n      {\n        descricao: 'Agendamentos',\n      },\n    ];\n  }\n\n  onFilter() {\n    this.detailPanelService.hide();\n    this.form.get('PAGI').setValue(1);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onDetails(agendamentos: ILogisticaYmsAgendamentos): void {\n    this.detailPanelService.show();\n    this.agendamentoSelecionada = agendamentos;\n    this.detailPanelService.loadedFinished(false);\n  }\n\n  getAgendamentos(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n    this.agendamentosService\n      .getAgendamentos(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.agendamentos = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.noResult = true;\n            this.agendamentos = [];\n          }\n        },\n        (error: any) => {\n          try {\n            this.noResult = true;\n            this.pnotify.error(error.error.message);\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n\n\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  classStatusBorder(agendamentos: ILogisticaYmsAgendamentos): string {\n    let borderClass: string;\n\n    if (agendamentos.IN_STAT == 1) {\n      borderClass = 'border-success';\n    } else if (agendamentos.IN_STAT == 2) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  changeType(params: ILogisticaYmsAgendamentos) {\n    const stat = params.IN_STAT == 1 ? 0 : 1;\n\n    this.confirmChange(stat)\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) => {\n          if (!result) return EMPTY;\n\n          this.loadingNavBar = true;\n          params.IN_STAT = stat;\n          return this.agendamentosService.postAgendamentos(params);\n        }),\n        finalize(() => {\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotify.success();\n        },\n        (error: any) => {\n          params.IN_STAT = params.IN_STAT == 1 ? 0 : 1;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  confirmChange(stat): any {\n    if (stat == 1)\n      return this.confirmModalService.showConfirm(\n        null,\n        null,\n        'Deseja realmente prosseguir com a ativação do registro?',\n        'Cancelar',\n        'Confirmar'\n      );\n\n    return this.confirmModalService.showConfirm(\n      'inactivate',\n      'Confirmar inativação',\n      'Deseja realmente prosseguir com a inativação do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onExport(): void {\n    let data = new Date().toLocaleDateString().split('/'),\n      dataExport = `${data[0]}${data[1]}${data[2]}`;\n\n    let listagemExport: any = [];\n    listagemExport = this.agendamentos.concat(this.totalItens);\n\n    this.xlsxService.exportFile(listagemExport, `Agendamentos${dataExport}`);\n  }\n}\n","import { LogisticaYmsAgendamentosDragAndDropComponent } from './drag-and-drop/drag-and-drop.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\nimport { LogisticaYmsAgendamentosCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaYmsAgendamentosListaComponent } from './lista/lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaYmsAgendamentosListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaYmsAgendamentosCadastroComponent,\n  },\n  {\n    path: 'drag',\n    component: LogisticaYmsAgendamentosDragAndDropComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaYmsAgendamentosCadastroComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogisticaYmsAgendamentosRoutingModule {}\n","export default \"<div class=\\\"modal-header\\\">\\n  <h4>Pesquisa de Materiais</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"IN_STAT\\\">Situação</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"IN_STAT\\\"\\n          >\\n            <option value=\\\"1\\\">Ativo</option>\\n            <option value=\\\"0\\\">Inativo</option>\\n            <option value=\\\"\\\">Exibir Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"buscarPor\\\"\\n          >\\n          <option value=\\\"ID_REFE_ERP\\\">ID ERP</option>\\n          <option value=\\\"NM_MATE\\\" selected> Nome Material</option>\\n          <option value=\\\"NM_CLAS\\\">Classe</option>\\n          <option value=\\\"NM_LINH\\\">Linha</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"form-group col-6\\\">\\n          <label>TERMO DE PESQUISA</label>\\n          <div class=\\\"input-group\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"pesquisa\\\"\\n              >\\n              <div class=\\\"input-group-append\\\">\\n                <span \\n                  [tooltip]=\\\"form.valid == false ? 'Digite um termo de pesquisa':''\\\"\\n                  container=\\\"body\\\"\\n                  placement =\\\"left\\\"\\n                >\\n                  <button\\n                  style=\\\"height: 25px;\\\"\\n                    [disabled]=\\\"form.valid == false\\\"\\n                    class=\\\"input-group-text hover\\\"\\n                    (click)=\\\"getMateriais()\\\"\\n                    >\\n                    <i class=\\\"fas fa-search\\\"></i>\\n                  </button>\\n                </span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n  <custom-table *ngIf=\\\"!noMateriais\\\" class=\\\"text-center\\\">\\n    <ng-template #thead let-thead>\\n      <tr>\\n        <th>ID ERP</th>\\n        <th>Nome Material</th>\\n        <th>Classe</th>\\n        <th>Linha</th>\\n        <th>Unidade de Medida</th>\\n        <th></th>\\n      </tr>\\n    </ng-template>\\n    <ng-template #tbody let-tbody>\\n      <tr *ngFor=\\\"let material of materiais | slice : begin : end; let i = index\\\">\\n        <td>{{ material.ID_REFE_ERP }}</td>\\n        <td>{{ material.NM_MATE }}</td>\\n        <td>{{ material.NM_CLAS }}</td>\\n        <td>{{ material.NM_LINH }}</td>\\n        <td>{{ material.NM_APOI_UNID_MEDI }} </td>\\n        <td>\\n          <button\\n            class=\\\"btn-icon-sm\\\"\\n            tooltip=\\\"Salvar Informações\\\"\\n            container=\\\"body\\\"\\n            (click)=\\\"onSelect(material)\\\"\\n          >\\n            <i class=\\\"far fa-save\\\"></i>\\n          </button>\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </custom-table>\\n  <div *ngIf=\\\"totalItems > itemsPerPage\\\" >\\n    Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n    <pagination\\n      [maxSize]=\\\"10\\\"\\n      [totalItems]=\\\"totalItems\\\"\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n      [boundaryLinks]=\\\"true\\\"\\n      [(ngModel)]=\\\"currentPage\\\"\\n      previousText=\\\"&lsaquo;\\\"\\n      nextText=\\\"&rsaquo;\\\"\\n      firstText=\\\"&laquo;\\\"\\n      lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9hZ2VuZGFtZW50b3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MifQ== */\";","export default \".highlight {\\n  opacity: 0.7;\\n}\\n\\n.dropzone {\\n  width: 150px;\\n}\\n\\n.card, .dropzone {\\n  transition: 0.3s;\\n}\\n\\n.is-dragging {\\n  cursor: move;\\n}\\n\\n.sobrepor {\\n  z-index: 2000;\\n  background: white;\\n  opacity: 0.5;\\n  height: 100%;\\n  width: 100%;\\n  position: absolute;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2FnZW5kYW1lbnRvcy9kcmFnLWFuZC1kcm9wL2RyYWctYW5kLWRyb3AuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxZQUFBO0FBQUY7O0FBRUE7RUFDRSxZQUFBO0FBQ0Y7O0FBQ0E7RUFDQyxnQkFBQTtBQUVEOztBQUNBO0VBQ0UsWUFBQTtBQUVGOztBQUNBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFFRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3ltcy9hZ2VuZGFtZW50b3MvZHJhZy1hbmQtZHJvcC9kcmFnLWFuZC1kcm9wLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uaGlnaGxpZ2h0e1xuICBvcGFjaXR5OiAwLjc7O1xufVxuLmRyb3B6b25le1xuICB3aWR0aDogMTUwcHg7XG59XG4uY2FyZCwuZHJvcHpvbmV7XG4gdHJhbnNpdGlvbjogLjNzO1xufVxuXG4uaXMtZHJhZ2dpbmd7XG4gIGN1cnNvcjogbW92ZTtcbn1cblxuLnNvYnJlcG9ye1xuICB6LWluZGV4OiAyMDAwO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgb3BhY2l0eTogMC41O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbiJdfQ== */\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2FnZW5kYW1lbnRvcy9tb2RhaXMvbm90YXMtZmlzY2Fpcy9ub3Rhcy1maXNjYWlzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2FnZW5kYW1lbnRvcy9tb2RhaXMvbm90YXMtZmlzY2Fpcy9ub3Rhcy1maXNjYWlzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uW2Rpc2FibGVkXXtcbiAgY3Vyc29yOiBuby1kcm9wO1xufSJdfQ== */\";","export default \"<div class=\\\"modal-header\\\">\\n  <h4>Pesquisa de Notas Fiscais</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <advanced-filter>\\n    <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"IN_STAT\\\">Situação</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"IN_STAT\\\"\\n          >\\n            <option value=\\\"1\\\">Ativo</option>\\n            <option value=\\\"0\\\">Inativo</option>\\n            <option value=\\\"\\\">Exibir Todos</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"cdItem\\\">BUSCAR POR</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            formControlName=\\\"buscarPor\\\"\\n          >\\n          <option value=\\\"ID_MATE\\\">ID</option>\\n          <option value=\\\"NR_NOTA_FISC\\\" selected>Nota Fiscal</option>\\n          <option value=\\\"DS_LOTE\\\">Lote</option>\\n          <option value=\\\"NM_MATE\\\">Material</option>\\n          <option value=\\\"NM_FORN\\\">Fornecedor</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"form-group col-6\\\">\\n          <label>TERMO DE PESQUISA</label>\\n          <div class=\\\"input-group\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"pesquisa\\\"\\n              >\\n              <div class=\\\"input-group-append\\\">\\n                <span \\n                  [tooltip]=\\\"form.valid == false ? 'Digite um termo de pesquisa':''\\\"\\n                  container=\\\"body\\\"\\n                  placement =\\\"left\\\"\\n                >\\n                  <button\\n                  style=\\\"height: 25px;\\\"\\n                    [disabled]=\\\"form.valid == false\\\"\\n                    class=\\\"input-group-text hover\\\"\\n                    (click)=\\\"getNotasFiscais()\\\"\\n                    >\\n                    <i class=\\\"fas fa-search\\\"></i>\\n                  </button>\\n                </span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"spinner-border\\\" role=\\\"status\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"sr-only\\\">Loading...</span>\\n  </div>\\n  <custom-table *ngIf=\\\"!noNotasFiscais\\\" class=\\\"text-center\\\">\\n    <ng-template #thead let-thead>\\n      <tr>\\n        <th>ID NF</th>\\n        <th>Nota Fiscal</th>\\n        <th>Lote</th>\\n        <th>Nome Material</th>\\n        <th>Total de Material</th>\\n        <th>Fornecedor</th>\\n        <th></th>\\n      </tr>\\n    </ng-template>\\n    <ng-template #tbody let-tbody>\\n      <tr *ngFor=\\\"let notas of notasFiscais\\\">\\n        <td>{{ notas.ID_LOGI_ENMA_NOFI }}</td>\\n        <td>{{ notas.NR_NOTA_FISC }}</td>\\n        <td >{{ notas.DS_LOTE || 'NÃO INFORMADO' }}</td>\\n        <td>{{ notas.NM_MATE }}</td>\\n        <td>{{ notas.TT_MATE_ORIG }} {{ notas.DS_UNID_MEDI }}</td>\\n        <td>{{ notas.NM_FORN }} </td>\\n        <td>\\n          <button\\n            class=\\\"btn-icon-sm\\\"\\n            tooltip=\\\"Salvar Informações\\\"\\n            container=\\\"body\\\"\\n            (click)=\\\"onSelect(notas)\\\"\\n          >\\n            <i class=\\\"far fa-save\\\"></i>\\n          </button>\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </custom-table>\\n  <div *ngIf=\\\"totalItems > itemsPerPage\\\" >\\n    Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n    <pagination\\n      [maxSize]=\\\"10\\\"\\n      [totalItems]=\\\"totalItems\\\"\\n      (pageChanged)=\\\"onPageChanged($event)\\\"\\n      [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n      [boundaryLinks]=\\\"true\\\"\\n      [(ngModel)]=\\\"currentPage\\\"\\n      previousText=\\\"&lsaquo;\\\"\\n      nextText=\\\"&rsaquo;\\\"\\n      firstText=\\\"&laquo;\\\"\\n      lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\";","export default \"button[disabled] {\\n  cursor: no-drop;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2FnZW5kYW1lbnRvcy9tb2RhaXMvdmVpY3Vsb3MvdmVpY3Vsb3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS95bXMvYWdlbmRhbWVudG9zL21vZGFpcy92ZWljdWxvcy92ZWljdWxvcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbltkaXNhYmxlZF17XG4gIGN1cnNvcjogbm8tZHJvcDtcbn0iXX0= */\";","import { LogisticaYmsAgendamentosService } from './../../services/agendamentos.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'logistica-yms-agendamentos-modais-materiais',\n  templateUrl: './materiais.component.html',\n  styleUrls: ['./materiais.component.scss']\n})\nexport class LogisticaYmsAgendamentosModaisMateriaisComponent implements OnInit {\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n\n  loading = false;\n  noMateriais = true;\n  /* Pagination */\n  itemsPerPage = 100;\n  totalItems = 10;\n  currentPage = 1;\n  begin = 0;\n  end = 100;\n  /* Pagination */\n\n  materiais = [];\n\n  form: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private agendamentosService: LogisticaYmsAgendamentosService,\n  ) { }\n\n  ngOnInit(): void {\n    this.setFormBuilder();\n  }\n\n  //formulario\n  setFormBuilder(): void {\n\n    this.form = this.formBuilder.group({\n      buscarPor: ['NM_MATE'],\n      pesquisa: [null, Validators.required],\n      ID_REFE_ERP:[null],\n      NM_MATE:[null],\n      NM_CLAS:[null],\n      NM_LINH:[null],\n      IN_STAT: ['1'],\n      PAGI: 1,\n      TT_REGI_PAGI: [this.itemsPerPage],\n    });\n  }\n\n  getMateriais() {\n    \n    const buscarPor = this.form.get('buscarPor').value ?? '';\n    const pesquisa = this.form.get('pesquisa').value ?? '';\n\n    let params = {}\n\n    if(buscarPor){\n      params[buscarPor] = pesquisa;\n    }\n\n    params['PAGI'] = this.form.get('PAGI').value;\n    params['TT_REGI_PAGI'] = 100;\n\n    this.loading = true;\n\n    this.agendamentosService\n      .getMateriais(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.materiais = response.body['result'];;\n            this.totalItems = response.body['result'].length;\n            this.noMateriais=false;\n          } else {\n            this.materiais = [];\n            this.noMateriais=true;\n          }\n        },\n        (error) => {\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n\n  onSelect(material){\n    this.select.emit(material);\n    this.onClose();\n  }\n\n  onClose(){\n    this.close.emit(true);\n  }\n\n}\n","export default \".sobrepor {\\n  z-index: 2000;\\n  background: white;\\n  opacity: 0.5;\\n  height: 100%;\\n  width: 100%;\\n  position: absolute;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EveW1zL2FnZW5kYW1lbnRvcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2lzdGljYS95bXMvYWdlbmRhbWVudG9zL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNvYnJlcG9ye1xuICB6LWluZGV4OiAyMDAwO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgb3BhY2l0eTogMC41O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59Il19 */\";","import { element } from 'protractor';\nimport { Component, OnInit, AfterViewInit, ViewChildren } from '@angular/core';\nimport { subscribeOn } from 'rxjs/operators';\n\n@Component({\n  selector: 'drag-and-drop',\n  templateUrl: './drag-and-drop.component.html',\n  styleUrls: ['./drag-and-drop.component.scss']\n})\nexport class LogisticaYmsAgendamentosDragAndDropComponent implements OnInit, AfterViewInit {\n  dropzones: any\n  id= 8\n  loading:boolean=false;\n  circuitos= [\n    {\n      id:1,\n      descricao: 'Portaria',\n      icone:'fas fa-portrait',\n      check: 1\n    },\n    {\n      id:2,\n      descricao: 'Balança',\n      icone:'fas fa-balance-scale-left',\n      check: 0\n\n    },\n    {\n      id:3,\n      descricao: 'Estacionamento',\n      icone:'fas fa-sign',\n      check: 0\n    },\n    {\n      id:4,\n      descricao: 'Galpão 2',\n      icone:'fas fa-warehouse',\n      check: 0\n\n    },\n    {\n      id:5,\n      descricao: 'Galpão 27',\n      icone:'fas fa-warehouse',\n      check: 0\n    },    {\n      id:6,\n      descricao: 'Balança',\n      icone:'fas fa-balance-scale-left',\n      check: 0\n\n    },\n    {\n      id:7,\n      descricao: 'Finalizado',\n      icone:'fas fa-check',\n      check: 0\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(){\n    const dropzones = document.querySelectorAll(\".dropzone\")\n    const cards = document.querySelectorAll(\".card\")\n    cards.forEach(card =>{\n      card.addEventListener('dragstart', dragstart)\n      card.addEventListener('drag', drag)\n      card.addEventListener('dragend', dragend)\n    })\n\n    dropzones.forEach(dropzone =>{\n      dropzone.addEventListener('dragenter',dragenter)\n      dropzone.addEventListener('dragover', dragover)\n      dropzone.addEventListener('dragleave', dragleave)\n      dropzone.addEventListener('drop',drop)\n    })\n\n    function dragstart(){\n      dropzones.forEach(dropzones =>dropzones.classList.add('highlight'));\n      this.classList.add('is-dragging')\n    }\n\n    function drag(){\n      // console.log('drag')\n    }\n  \n    function dragend(){\n      dropzones.forEach(dropzone =>{\n        dropzone.classList.remove('highlight');\n        if(dropzone.childElementCount == 2){\n          return\n        }\n        \n        for (let i = 0; i < dropzone.children.length ; i++) {\n          let item = dropzone.children[i].classList.contains('dropzone-item')\n          if(item){\n            dropzone.children[i].classList.add('d-none')\n          }\n        }\n      });\n      this.classList.remove('is-dragging')\n    }\n  \n  \n    function dragenter(){\n    }\n  \n    function dragover(){\n\n    for (let i = 0; i < this.children.length ; i++) {\n      let item = this.children[i].classList.contains('d-none')\n      if(item){\n        this.children[i].classList.remove('d-none')\n      }\n    }\n\n      const cardBeingDragged = document.querySelector('.is-dragging')\n      this.classList.remove('highlight')\n      this.appendChild(cardBeingDragged)\n    }\n\n    function dragleave(){\n      this.classList.add('highlight')\n    }\n  \n    function drop(){\n\n    }\n\n  }\n\n  \n\n\n\n\n\n}\n"]}