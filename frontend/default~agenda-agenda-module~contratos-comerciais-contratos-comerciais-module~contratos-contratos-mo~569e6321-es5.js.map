{"version":3,"sources":["webpack:///node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///node_modules/date-fns/esm/previousWednesday/index.js","webpack:///node_modules/date-fns/esm/_lib/assign/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack:///node_modules/date-fns/esm/subWeeks/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","webpack:///node_modules/date-fns/esm/toDate/index.js","webpack:///node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///node_modules/date-fns/esm/formatRFC3339/index.js","webpack:///node_modules/date-fns/esm/isExists/index.js","webpack:///node_modules/date-fns/esm/eachDayOfInterval/index.js","webpack:///node_modules/date-fns/esm/startOfToday/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js","webpack:///node_modules/date-fns/esm/getHours/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///node_modules/date-fns/esm/startOfMinute/index.js","webpack:///node_modules/date-fns/esm/formatDistanceStrict/index.js","webpack:///node_modules/date-fns/esm/differenceInWeeks/index.js","webpack:///node_modules/date-fns/esm/hoursToMilliseconds/index.js","webpack:///node_modules/date-fns/esm/startOfISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js","webpack:///node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///node_modules/date-fns/esm/isYesterday/index.js","webpack:///node_modules/date-fns/esm/startOfISOWeek/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///node_modules/date-fns/esm/startOfYear/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///node_modules/date-fns/esm/areIntervalsOverlapping/index.js","webpack:///node_modules/date-fns/esm/eachWeekendOfMonth/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js","webpack:///node_modules/date-fns/esm/monthsToQuarters/index.js","webpack:///node_modules/date-fns/esm/isThisWeek/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js","webpack:///node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///node_modules/date-fns/esm/getMinutes/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/parseISO/index.js","webpack:///node_modules/date-fns/esm/previousDay/index.js","webpack:///node_modules/date-fns/esm/_lib/defaultLocale/index.js","webpack:///node_modules/date-fns/esm/getMilliseconds/index.js","webpack:///node_modules/date-fns/esm/formatISODuration/index.js","webpack:///node_modules/date-fns/esm/setMinutes/index.js","webpack:///node_modules/date-fns/esm/eachMonthOfInterval/index.js","webpack:///src/app/modules/comercial/services/vendedores.service.ts","webpack:///node_modules/date-fns/esm/nextTuesday/index.js","webpack:///node_modules/date-fns/esm/getISOWeeksInYear/index.js","webpack:///node_modules/date-fns/esm/minutesToSeconds/index.js","webpack:///node_modules/date-fns/esm/clamp/index.js","webpack:///node_modules/date-fns/esm/weeksToDays/index.js","webpack:///node_modules/date-fns/esm/isWednesday/index.js","webpack:///node_modules/date-fns/esm/getTime/index.js","webpack:///node_modules/date-fns/esm/setDayOfYear/index.js","webpack:///node_modules/date-fns/esm/setYear/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js","webpack:///node_modules/date-fns/esm/eachMinuteOfInterval/index.js","webpack:///src/app/modules/comercial/templates/filtro-vendedor-escritorio-date/filtro-vendedor-escritorio-date.component.scss","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js","webpack:///node_modules/date-fns/esm/startOfDecade/index.js","webpack:///node_modules/date-fns/esm/intlFormat/index.js","webpack:///node_modules/date-fns/esm/setISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/yearsToQuarters/index.js","webpack:///node_modules/date-fns/esm/nextSunday/index.js","webpack:///node_modules/date-fns/esm/minutesToMilliseconds/index.js","webpack:///node_modules/date-fns/esm/getWeekYear/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack:///node_modules/date-fns/esm/sub/index.js","webpack:///node_modules/date-fns/esm/formatDistanceToNow/index.js","webpack:///node_modules/date-fns/esm/addBusinessDays/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/utils.js","webpack:///node_modules/date-fns/esm/lastDayOfDecade/index.js","webpack:///node_modules/date-fns/esm/addDays/index.js","webpack:///node_modules/date-fns/esm/isLeapYear/index.js","webpack:///node_modules/date-fns/esm/getDefaultOptions/index.js","webpack:///node_modules/date-fns/esm/millisecondsToHours/index.js","webpack:///node_modules/date-fns/esm/nextMonday/index.js","webpack:///node_modules/date-fns/esm/startOfMonth/index.js","webpack:///src/app/modules/comercial/templates/templates.module.ts","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js","webpack:///node_modules/date-fns/esm/hoursToSeconds/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarYears/index.js","webpack:///node_modules/date-fns/esm/isThisSecond/index.js","webpack:///node_modules/date-fns/esm/differenceInMonths/index.js","webpack:///node_modules/date-fns/esm/isSameSecond/index.js","webpack:///node_modules/date-fns/esm/getISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/differenceInYears/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///src/app/modules/comercial/templates/mapa-metas/mapa-metas.component.ts","webpack:///node_modules/date-fns/esm/nextDay/index.js","webpack:///node_modules/date-fns/esm/addSeconds/index.js","webpack:///node_modules/date-fns/esm/startOfHour/index.js","webpack:///node_modules/date-fns/esm/getDecade/index.js","webpack:///node_modules/date-fns/esm/isMatch/index.js","webpack:///node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///node_modules/date-fns/esm/isLastDayOfMonth/index.js","webpack:///node_modules/date-fns/esm/addHours/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js","webpack:///node_modules/date-fns/esm/getDayOfYear/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js","webpack:///node_modules/date-fns/esm/isAfter/index.js","webpack:///node_modules/date-fns/esm/eachWeekendOfYear/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///node_modules/date-fns/esm/formatDistance/index.js","webpack:///node_modules/date-fns/esm/lastDayOfQuarter/index.js","webpack:///node_modules/date-fns/esm/isSameDay/index.js","webpack:///node_modules/date-fns/esm/addISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/millisecondsToMinutes/index.js","webpack:///node_modules/date-fns/esm/getDay/index.js","webpack:///node_modules/date-fns/esm/endOfYear/index.js","webpack:///node_modules/date-fns/esm/isSaturday/index.js","webpack:///node_modules/date-fns/esm/isThursday/index.js","webpack:///node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","webpack:///node_modules/date-fns/esm/isPast/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","webpack:///node_modules/date-fns/esm/daysToWeeks/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///node_modules/date-fns/esm/endOfMinute/index.js","webpack:///node_modules/date-fns/esm/roundToNearestMinutes/index.js","webpack:///node_modules/date-fns/esm/addMinutes/index.js","webpack:///node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///node_modules/date-fns/esm/add/index.js","webpack:///src/app/modules/comercial/templates/filtro-vendedor-escritorio/filtro-vendedor-escritorio.component.ts","webpack:///node_modules/date-fns/esm/intlFormatDistance/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///src/app/modules/comercial/templates/filtro-vendedor-escritorio/filtro-vendedor-escritorio.component.html","webpack:///node_modules/date-fns/esm/isSameWeek/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///node_modules/date-fns/esm/intervalToDuration/index.js","webpack:///node_modules/date-fns/esm/compareAsc/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js","webpack:///node_modules/date-fns/esm/secondsToMilliseconds/index.js","webpack:///node_modules/date-fns/esm/endOfWeek/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/createSuper.js","webpack:///node_modules/date-fns/esm/parse/index.js","webpack:///node_modules/date-fns/esm/startOfDay/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js","webpack:///node_modules/date-fns/esm/isThisMinute/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js","webpack:///node_modules/date-fns/esm/isThisYear/index.js","webpack:///node_modules/date-fns/esm/getISODay/index.js","webpack:///node_modules/date-fns/esm/differenceInDays/index.js","webpack:///node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack:///node_modules/date-fns/esm/getDaysInMonth/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js","webpack:///node_modules/date-fns/esm/parseJSON/index.js","webpack:///node_modules/date-fns/esm/endOfSecond/index.js","webpack:///node_modules/date-fns/esm/previousFriday/index.js","webpack:///node_modules/date-fns/esm/isTuesday/index.js","webpack:///node_modules/date-fns/esm/setISOWeek/index.js","webpack:///node_modules/date-fns/esm/formatRelative/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack:///node_modules/date-fns/esm/endOfDecade/index.js","webpack:///node_modules/date-fns/esm/minutesToHours/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/formatISO9075/index.js","webpack:///node_modules/date-fns/esm/fromUnixTime/index.js","webpack:///node_modules/date-fns/esm/setMilliseconds/index.js","webpack:///src/app/shared/services/core/date.service.ts","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack:///node_modules/date-fns/esm/lightFormat/index.js","webpack:///node_modules/date-fns/esm/getQuarter/index.js","webpack:///src/app/modules/comercial/templates/filtro-vendedor-escritorio-date/filtro-vendedor-escritorio-date.component.ts","webpack:///node_modules/date-fns/esm/isValid/index.js","webpack:///node_modules/date-fns/esm/subSeconds/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js","webpack:///node_modules/date-fns/esm/isSameQuarter/index.js","webpack:///node_modules/date-fns/esm/setDefaultOptions/index.js","webpack:///node_modules/date-fns/esm/endOfISOWeek/index.js","webpack:///node_modules/date-fns/esm/isToday/index.js","webpack:///node_modules/date-fns/esm/max/index.js","webpack:///node_modules/date-fns/esm/getDate/index.js","webpack:///node_modules/date-fns/esm/isSameISOWeekYear/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///node_modules/date-fns/esm/eachHourOfInterval/index.js","webpack:///node_modules/date-fns/esm/subQuarters/index.js","webpack:///node_modules/date-fns/esm/formatDuration/index.js","webpack:///node_modules/date-fns/esm/isThisHour/index.js","webpack:///node_modules/date-fns/esm/isFriday/index.js","webpack:///node_modules/date-fns/esm/subBusinessDays/index.js","webpack:///node_modules/date-fns/esm/isThisISOWeek/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js","webpack:///node_modules/date-fns/esm/isSameMonth/index.js","webpack:///node_modules/date-fns/esm/startOfSecond/index.js","webpack:///node_modules/date-fns/esm/subHours/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js","webpack:///node_modules/date-fns/esm/setHours/index.js","webpack:///src/app/modules/comercial/templates/mapa-metas/mapa-metas.component.html","webpack:///node_modules/date-fns/esm/setWeek/index.js","webpack:///node_modules/date-fns/esm/subDays/index.js","webpack:///node_modules/date-fns/esm/quartersToYears/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js","webpack:///node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///node_modules/date-fns/esm/startOfYesterday/index.js","webpack:///node_modules/date-fns/esm/endOfTomorrow/index.js","webpack:///node_modules/date-fns/esm/isWithinInterval/index.js","webpack:///node_modules/date-fns/esm/eachWeekendOfInterval/index.js","webpack:///src/app/modules/comercial/lote/lote.service.ts","webpack:///node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///node_modules/date-fns/esm/subMinutes/index.js","webpack:///node_modules/date-fns/esm/differenceInQuarters/index.js","webpack:///node_modules/date-fns/esm/differenceInBusinessDays/index.js","webpack:///node_modules/date-fns/esm/nextFriday/index.js","webpack:///node_modules/date-fns/esm/getSeconds/index.js","webpack:///node_modules/date-fns/esm/startOfWeek/index.js","webpack:///node_modules/date-fns/esm/milliseconds/index.js","webpack:///node_modules/date-fns/esm/index.js","webpack:///node_modules/date-fns/esm/endOfYesterday/index.js","webpack:///node_modules/date-fns/esm/previousThursday/index.js","webpack:///node_modules/date-fns/esm/endOfISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/formatRFC7231/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js","webpack:///node_modules/date-fns/esm/previousSunday/index.js","webpack:///node_modules/date-fns/esm/formatISO/index.js","webpack:///node_modules/date-fns/esm/getMonth/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js","webpack:///node_modules/date-fns/esm/eachQuarterOfInterval/index.js","webpack:///node_modules/date-fns/esm/getYear/index.js","webpack:///node_modules/date-fns/esm/addMonths/index.js","webpack:///node_modules/date-fns/esm/yearsToMonths/index.js","webpack:///node_modules/date-fns/esm/eachYearOfInterval/index.js","webpack:///node_modules/date-fns/esm/previousTuesday/index.js","webpack:///node_modules/date-fns/esm/isBefore/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js","webpack:///node_modules/date-fns/esm/getWeek/index.js","webpack:///node_modules/date-fns/esm/min/index.js","webpack:///node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack:///node_modules/date-fns/esm/nextSaturday/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js","webpack:///node_modules/date-fns/esm/compareDesc/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///src/app/modules/comercial/lote/ruta/ruta.component.html","webpack:///node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///node_modules/date-fns/esm/lastDayOfISOWeek/index.js","webpack:///node_modules/date-fns/esm/lastDayOfWeek/index.js","webpack:///node_modules/date-fns/esm/isWeekend/index.js","webpack:///node_modules/date-fns/esm/set/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarDays/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/nextThursday/index.js","webpack:///node_modules/date-fns/esm/isSunday/index.js","webpack:///node_modules/date-fns/esm/previousSaturday/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js","webpack:///node_modules/date-fns/esm/setISODay/index.js","webpack:///node_modules/date-fns/esm/hoursToMinutes/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js","webpack:///node_modules/date-fns/esm/locale/en-US/index.js","webpack:///node_modules/date-fns/esm/startOfTomorrow/index.js","webpack:///node_modules/date-fns/esm/differenceInMinutes/index.js","webpack:///node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack:///node_modules/date-fns/esm/endOfMonth/index.js","webpack:///node_modules/date-fns/esm/isTomorrow/index.js","webpack:///src/app/modules/comercial/templates/mapa-metas/mapa-metas.component.scss","webpack:///node_modules/date-fns/esm/isSameYear/index.js","webpack:///node_modules/date-fns/esm/lastDayOfMonth/index.js","webpack:///node_modules/date-fns/esm/getDaysInYear/index.js","webpack:///node_modules/date-fns/esm/getWeekOfMonth/index.js","webpack:///node_modules/date-fns/esm/eachWeekOfInterval/index.js","webpack:///node_modules/date-fns/esm/setDay/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///node_modules/date-fns/esm/previousMonday/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/endOfToday/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/Parser.js","webpack:///node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///node_modules/date-fns/esm/differenceInHours/index.js","webpack:///node_modules/date-fns/esm/nextWednesday/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js","webpack:///node_modules/date-fns/esm/setMonth/index.js","webpack:///src/app/modules/comercial/templates/filtro-vendedor-escritorio-date/filtro-vendedor-escritorio-date.component.html","webpack:///node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/Setter.js","webpack:///node_modules/date-fns/esm/closestTo/index.js","webpack:///node_modules/date-fns/esm/getUnixTime/index.js","webpack:///node_modules/date-fns/esm/isDate/index.js","webpack:///node_modules/date-fns/esm/setWeekYear/index.js","webpack:///node_modules/date-fns/esm/subISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/subMonths/index.js","webpack:///node_modules/date-fns/esm/endOfDay/index.js","webpack:///node_modules/date-fns/esm/setQuarter/index.js","webpack:///node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarMonths/index.js","webpack:///node_modules/date-fns/esm/getWeeksInMonth/index.js","webpack:///node_modules/date-fns/esm/differenceInSeconds/index.js","webpack:///node_modules/date-fns/esm/startOfWeekYear/index.js","webpack:///node_modules/date-fns/esm/endOfQuarter/index.js","webpack:///node_modules/date-fns/esm/isSameISOWeek/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///node_modules/date-fns/esm/addWeeks/index.js","webpack:///node_modules/date-fns/esm/endOfHour/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///src/app/modules/comercial/lote/ruta/ruta.component.ts","webpack:///node_modules/date-fns/esm/isSameMinute/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///node_modules/date-fns/esm/getISOWeek/index.js","webpack:///node_modules/date-fns/esm/format/index.js","webpack:///node_modules/date-fns/esm/subYears/index.js","webpack:///node_modules/date-fns/esm/secondsToHours/index.js","webpack:///src/app/modules/comercial/lote/ruta/ruta.component.scss","webpack:///node_modules/date-fns/esm/monthsToYears/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/constants.js","webpack:///node_modules/date-fns/esm/millisecondsToSeconds/index.js","webpack:///node_modules/date-fns/esm/setDate/index.js","webpack:///node_modules/date-fns/esm/quartersToMonths/index.js","webpack:///node_modules/date-fns/esm/addQuarters/index.js","webpack:///node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/isThisMonth/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///node_modules/date-fns/esm/secondsToMinutes/index.js","webpack:///node_modules/date-fns/esm/isFuture/index.js","webpack:///node_modules/date-fns/esm/differenceInISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/startOfQuarter/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///node_modules/date-fns/esm/_lib/defaultOptions/index.js","webpack:///node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///node_modules/date-fns/esm/isThisQuarter/index.js","webpack:///node_modules/date-fns/esm/constants/index.js","webpack:///node_modules/date-fns/esm/isFirstDayOfMonth/index.js","webpack:///node_modules/date-fns/esm/lastDayOfYear/index.js","webpack:///node_modules/date-fns/esm/isMonday/index.js","webpack:///node_modules/date-fns/esm/setSeconds/index.js","webpack:///node_modules/date-fns/esm/closestIndexTo/index.js","webpack:///src/app/modules/comercial/templates/filtro-vendedor-escritorio/filtro-vendedor-escritorio.component.scss","webpack:///node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack:///src/app/modules/comercial/dashboard/vendedor/vendedor.service.ts","webpack:///node_modules/date-fns/esm/_lib/roundingMethods/index.js","webpack:///node_modules/date-fns/esm/isSameHour/index.js","webpack:///node_modules/date-fns/esm/isEqual/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack:///node_modules/date-fns/esm/addYears/index.js"],"names":["lastDayOfISOWeekYear","dirtyDate","arguments","year","fourthOfJanuary","Date","setFullYear","setHours","date","setDate","getDate","addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","previousWednesday","assign","target","object","TypeError","property","Object","prototype","hasOwnProperty","call","setUTCDay","dirtyDay","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","weekStartsOn","locale","RangeError","day","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate","subWeeks","dirtyAmount","amount","MILLISECONDS_IN_WEEK","differenceInCalendarWeeks","dirtyDateLeft","dirtyDateRight","startOfWeekLeft","startOfWeekRight","timestampLeft","getTime","timestampRight","round","toDate","argument","argStr","console","warn","Error","stack","NaN","toInteger","dirtyNumber","Number","isNaN","ceil","floor","formatRFC3339","_options$fractionDigi","concat","originalDate","fractionDigits","month","getMonth","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","fractionalSecond","milliseconds","getMilliseconds","fractionalSeconds","pow","offset","tzOffset","getTimezoneOffset","absoluteOffset","hourOffset","minuteOffset","isExists","eachDayOfInterval","dirtyInterval","_options$step","interval","startDate","start","endDate","end","endTime","dates","currentDate","step","push","startOfToday","now","TimestampSecondsParser","_Parser","_super","_this","_len","args","Array","_key","apply","key","value","parse","dateString","set","_date","_flags","timestampIsSet","hours","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","other","formatRelative","token","_baseDate","_options","startOfMinute","setSeconds","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyBaseDate","_options$roundingMeth","formatDistance","comparison","localizeOptions","addSuffix","Boolean","dateLeft","dateRight","roundingMethod","String","roundingMethodFn","minutes","timezoneOffset","dstNormalizedMinutes","defaultUnit","unit","seconds","roundedMinutes","days","months","years","differenceInWeeks","hoursToMilliseconds","startOfISOWeekYear","Hour1to12Parser","match","hour12h","ordinalNumber","validate","isPM","getUTCHours","setUTCHours","_classCallCheck","instance","Constructor","isYesterday","startOfISOWeek","formatDistanceLocale","lessThanXSeconds","one","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","result","tokenValue","replace","startOfYear","cleanDate","startOfUTCWeek","areIntervalsOverlapping","intervalLeft","intervalRight","leftStartTime","leftEndTime","rightStartTime","rightEndTime","inclusive","eachWeekendOfMonth","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","e","LocalWeekParser","week","monthsToQuarters","quarters","isThisWeek","ISOTimezoneWithZParser","basicOptionalMinutes","basic","basicOptionalSeconds","extendedOptionalSeconds","extended","flags","Hour0to23Parser","hour23h","DayOfYearParser","dayOfYear","getUTCFullYear","isLeapYear","setUTCMonth","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","differenceInCalendarQuarters","yearDiff","quarterDiff","differenceInCalendarISOWeekYears","parseISO","_options$additionalDi","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","timestamp","time","parseTime","timezone","parseTimezone","getUTCMonth","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","array","split","timeString","test","substr","exec","regex","RegExp","captures","parseInt","century","slice","isWeekDate","parseDateUnit","dayOfWeek","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","setUTCFullYear","max","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","isoWeekYear","fourthOfJanuaryDay","daysInMonths","isLeapYearIndex","_year","_hours","previousDay","delta","formatISODuration","duration","_duration$years","_duration$months","_duration$days","_duration$hours","_duration$minutes","_duration$seconds","setMinutes","dirtyMinutes","eachMonthOfInterval","setMonth","ComercialVendedoresService","http","API","API_CADASTROS","get","pipe","id","params","codCliente","providedIn","nextTuesday","getISOWeeksInYear","thisYear","nextYear","minutesToSeconds","clamp","weeksToDays","weeks","isWednesday","getDay","setDayOfYear","dirtyDayOfYear","setYear","dirtyYear","ISOTimezoneParser","ExtendedYearParser","eachMinuteOfInterval","startTime","DayPeriodParser","dayPeriod","width","context","startOfDecade","decade","intlFormat","formatOrLocale","localeOptions","_localeOptions","formatOptions","isFormatOptions","Intl","DateTimeFormat","opts","undefined","setISOWeekYear","dirtyISOWeekYear","yearsToQuarters","nextSunday","minutesToMilliseconds","getWeekYear","_options$firstWeekCon","firstWeekContainsDate","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","TimestampMillisecondsParser","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate","formatDistanceToNow","addBusinessDays","startedOnWeekend","fullWeeks","restDays","mapValue","parseFnResult","mapFn","rest","parseNumericPattern","pattern","matchResult","parseTimezonePattern","parseAnyDigitsSigned","anyDigitsSigned","parseNDigits","n","singleDigit","twoDigits","threeDigits","fourDigits","parseNDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","lastDayOfDecade","addDays","getDefaultOptions","millisecondsToHours","nextMonday","startOfMonth","ComercialTemplatesModule","declarations","imports","forRoot","exports","StandAloneMonthParser","valueCallback","hoursToSeconds","differenceInCalendarYears","isThisSecond","differenceInMonths","difference","isLastMonthNotFull","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","getISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","differenceInYears","isLastYearNotFull","_unsupportedIterableToArray","o","minLen","constructor","name","from","ComercialTemplatesMapaMetasComponent","dashboardService","zone","dateService","showHeader","loaderStyle","onData","pastChartsEmpty","currChartsEmpty","pastToneladasEmpty","pastClientesEmpty","pastExtrasEmpty","currToneladasEmpty","currClientesEmpty","currExtrasEmpty","onDestroy","renderMonthFilters","getChartsData","idEscritorio","idVendedor","runOutsideAngular","pastChartToneladas","dispose","pastChartClientes","pastChartExtras","currChartToneladas","currChartClientes","currChartExtras","chartLoaded","escritorio","vendedor","resetChartsData","getMetas","subscribe","response","renderCharts","responseCode","emit","passado","toneladas","keys","renderChart","handleEmpty","clientes","extras","corrente","type","data","chartId","chart","hiddenState","properties","opacity","innerRadius","extraGoalValue","calcExtraGoalValue","progresso","meta","axisMax","axisUnidade","unidade","rangeRedMax","rangeYellowMax","rangeGreenMax","rangeBlackMax","labelText","tipo","progressValue","goalValue","percentValue","percentual","toFixed","handMax","axis","xAxes","min","strictMinMax","renderer","radius","inside","ticks","template","strokeOpacity","grid","disabled","labels","adapter","add","text","axis2","rangeRed","axisRanges","create","endValue","axisFill","fillOpacity","fill","rangeYellow","rangeGreen","rangeDivider","rangeOverGoal","label","radarContainer","createChild","isMeasured","x","y","horizontalCenter","verticalCenter","html","hand","hands","startWidth","pin","currDate","pastDate","currMonth","getFullMonth","pastMonth","activeMonth","setTimeout","selector","nextDay","addSeconds","startOfHour","getDecade","isMatch","formatString","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","localize","era","signedYear","Y","signedWeekYear","weekYear","R","u","Q","quarter","q","M","L","w","I","isoWeek","d","D","E","localDayOfWeek","c","i","isoDayOfWeek","a","dayPeriodEnumValue","toLowerCase","b","B","h","H","K","k","m","s","S","X","_localize","_originalDate","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","t","T","dirtyDelimiter","absOffset","delimiter","isLastDayOfMonth","MILLISECONDS_IN_HOUR","addHours","AMPMMidnightParser","getDayOfYear","YearParser","isTwoDigitYear","normalizedTwoDigitYear","isAfter","dirtyDateToCompare","dateToCompare","eachWeekendOfYear","getUTCWeek","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_TWO_MONTHS","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","lastDayOfQuarter","currentMonth","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","addISOWeekYears","millisecondsToMinutes","endOfYear","isSaturday","isThursday","formatDistanceToNowStrict","isPast","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","daysToWeeks","MILLISECONDS_IN_DAY","getUTCDayOfYear","startOfYearTimestamp","endOfMinute","roundToNearestMinutes","_options$nearestTo","nearestTo","remainderMinutes","addedMinutes","addMinutes","dateLongFormatter","formatLong","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","dateTime","longFormatters","p","P","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","ComercialTemplatesFiltroVendedorEscritorioComponent","location","comercialService","vendedoresService","formBuilder","pnotifyService","profile","formValue","loaderFullScreen","filteredVendedores","getPNotify","checkUserProfile","setFormFilter","coordenador","gestor","adminOnly","getEscritoriosVendedores","getVinculoOperadores","loadEscritoriosVendedores","showAll","nomeVendedor","nomeEscritorio","next","escritorios","handleLoadDependenciesError","vendedores","unshift","nome","error","getEscritorios","getVendedores","back","form","group","required","setValue","controls","clearValidators","valid","getVendedoresSucursal","onInput","filter","intlFormatDistance","baseDate","diffInSeconds","rtf","RelativeTimeFormat","localeMatcher","numeric","style","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","rem100","values","defaultWidth","argumentCallback","formattingValues","defaultFormattingWidth","getTimezoneOffsetInMilliseconds","utcDate","UTC","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","_assertThisInitialized","self","ReferenceError","intervalToDuration","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds","compareAsc","_inherits","subClass","superClass","writable","configurable","defineProperty","StandAloneQuarterParser","secondsToMilliseconds","endOfWeek","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","NewTarget","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","subFnOptions","setters","tokens","map","substring","firstCharacter","longFormatter","join","usedTokens","_iterator","_step","_loop","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleTokens","isArray","incompatibleToken","find","usedToken","includes","fullToken","parseResult","run","v","setter","cleanEscapedString","done","_ret","err","f","uniquePrioritySetters","priority","sort","index","subPriority","setterArray","_iterator2","_step2","startOfDay","QuarterParser","DayParser","isThisMinute","ISOWeekYearParser","firstWeekOfYear","isThisYear","getISODay","compareLocalAsc","differenceInDays","isLastDayNotFull","differenceInMilliseconds","getDaysInMonth","monthIndex","lastDayOfMonth","MonthParser","parseJSON","parts","endOfSecond","setMilliseconds","previousFriday","isTuesday","setISOWeek","dirtyISOWeek","utcBaseDate","formatStr","StandAloneLocalDayParser","wholeWeekDays","endOfDecade","minutesToHours","startOfUTCISOWeekYear","formatISO9075","_options$format","_options$representati","representation","dateDelimiter","timeDelimiter","separator","fromUnixTime","dirtyUnixTime","unixTime","dirtyMilliseconds","DateService","dateA","dateB","showTime","weekDay","getHourMinute","hourB","padStart","timeSplit","stringDate","dateType","stringDateSplit","dateSplit","parsers","lightFormat","formatter","matches","getQuarter","ComercialTemplatesFiltroVendedorEscritorioDateComponent","loteService","rutaService","ultima_visita","ultimaVisita","nombre","estadoCliente","sucursal_id","vendedor_id","visita_id","estado_id","idSucursal","idUltimaVisita","idEstado","filtrarMapas","vendedorSeleccionado","indiceVendedor","escritorioNoVacio","item","isValid","subSeconds","getUTCWeekYear","LocalWeekYearParser","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","setDefaultOptions","newOptions","_property","endOfISOWeek","isToday","dirtyDatesArray","datesArray","forEach","dayOfMonth","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","_typeof","obj","Symbol","iterator","eachHourOfInterval","subQuarters","defaultFormat","formatDuration","_options$zero","_options$delimiter","zero","reduce","acc","toUpperCase","isThisHour","isFriday","subBusinessDays","isThisISOWeek","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","DateParser","isSameMonth","startOfSecond","subHours","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","matchPattern","parsePattern","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","ISODayParser","dirtyHours","setWeek","dirtyWeek","subDays","quartersToYears","Hour0To11Parser","hour11h","numberOfDigits","startOfYesterday","endOfTomorrow","isWithinInterval","eachWeekendOfInterval","dateInterval","weekends","ComercialLoteService","log","post","_arrayLikeToArray","arr","len","arr2","subMinutes","differenceInQuarters","differenceInBusinessDays","calendarDifference","nextFriday","startOfWeek","daysInYear","totalDays","totalSeconds","endOfYesterday","previousThursday","endOfISOWeekYear","formatRFC7231","dayName","monthName","FractionOfSecondParser","setUTCMilliseconds","previousSunday","formatISO","ISOWeekParser","eachQuarterOfInterval","startDateQuarter","endDateQuarter","currentQuarter","getYear","addMonths","endOfDesiredMonth","daysInMonth","yearsToMonths","eachYearOfInterval","previousTuesday","isBefore","LocalDayParser","Hour1To24Parser","hour24h","getWeek","cloneObject","nextSaturday","EraParser","compareDesc","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","subMilliseconds","lastDayOfISOWeek","lastDayOfWeek","isWeekend","differenceInCalendarDays","startOfDayLeft","startOfDayRight","getUTCISOWeekYear","nextThursday","isSunday","previousSaturday","SecondParser","setUTCSeconds","setISODay","hoursToMinutes","MinuteParser","setUTCMinutes","code","startOfTomorrow","differenceInMinutes","requiredArgs","endOfMonth","isTomorrow","isSameYear","getDaysInYear","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","remainingDaysAfterFirstWeek","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","setDay","buildLocalizeFn","dirtyIndex","valuesArray","_defaultWidth","_width","previousMonday","getUTCISOWeek","endOfToday","Parser","_utcDate","_value","_possibleConstructorReturn","differenceInHours","nextWednesday","AMPMParser","dirtyMonth","dateWithDesiredMonth","_toPropertyKey","arg","startOfUTCWeekYear","firstWeek","TIMEZONE_UNIT_PRIORITY","Setter","ValueSetter","_Setter","validateValue","DateToSystemTimezoneSetter","_Setter2","_super2","_this2","convertedDate","closestTo","timeToCompare","minDistance","distance","getUnixTime","isDate","setWeekYear","dirtyWeekYear","subISOWeekYears","setUTCISOWeek","subMonths","endOfDay","setQuarter","dirtyQuarter","oldQuarter","addMilliseconds","differenceInCalendarMonths","monthDiff","getWeeksInMonth","differenceInSeconds","startOfWeekYear","endOfQuarter","isSameISOWeek","_toPrimitive","hint","prim","toPrimitive","res","addWeeks","endOfHour","_defineProperty","enumerable","ComercialLoteRutaComponent","router","activatedRoute","authService","atividadesService","titleService","datePipe","user","getCurrentUser","breadCrumbTree","descricao","routerLink","showFilter","showCalendar","showPermissionDenied","view","viewDate","activeDayIsOpen","mapas","atividades","latitud","longitud","filteredGestiones","selectedIconUrl","queryParamsChecked","mostrarSpinner","enviarDatosSubject","registrarAcesso","getPerfil","setTitle","gestiones","hasVinculoOperadores","checkRouterParams","fetchEvents","info","event","activatedRouteSubscription","queryParams","atob","JSON","formKey","paramKey","unsubscribe","getStart","getEnd","paramsObj","queryDate","inicio","fim","marker","selectedMarker","getRutaClientes","mapa","markers","ID_VENDEDOR","color","icon","nuevoCliente","checked","codClient","id_cliente","codigoCliente","CODIGO_CLIENTE","NOMBRE","direccion","DIRECCION","fechaVisita","FECHA_INICIO","id_vendedor","indice","selectVendedorDefault","cliente","vendedorEncontrado","registro","findIndex","splice","getGestiones","msgSuccess","msgError","datos","reload","complete","newValue","codTitulo","setRouterParams","navigate","relativeTo","btoa","stringify","queryParamsHandling","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","_setPrototypeOf","getISOWeek","dirtyFormatStr","formatterOptions","matched","subYears","secondsToHours","monthsToYears","numericPatterns","timezonePatterns","millisecondsToSeconds","dirtyDayOfMonth","quartersToMonths","addQuarters","getOverlappingDaysInIntervals","dirtyIntervalLeft","dirtyIntervalRight","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","startOfUTCISOWeek","isThisMonth","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","_e2","secondsToMinutes","isFuture","differenceInISOWeekYears","isLastISOWeekYearNotFull","startOfQuarter","buildMatchPatternFn","string","matchedString","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","isThisQuarter","daysInWeek","maxTime","millisecondsInMinute","millisecondsInHour","millisecondsInSecond","minTime","minutesInHour","monthsInQuarter","monthsInYear","quartersInYear","secondsInHour","secondsInMinute","secondsInDay","secondsInWeek","secondsInYear","secondsInMonth","secondsInQuarter","isFirstDayOfMonth","lastDayOfYear","isMonday","dirtySeconds","closestIndexTo","buildMatchFn","findKey","predicate","dateFormats","full","medium","timeFormats","dateTimeFormats","formats","setUTCWeek","ComercialDashboardVendedorService","roundingMap","trunc","defaultRoundingMethod","getRoundingMethod","method","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isEqual","dirtyLeftDate","dirtyRightDate","buildFormatLongFn","setUTCISODay","addYears"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASA,oBAAT,CAA8BC,SAA9B,EAAyC;AACtD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIC,IAAI,GAAG,yEAAeF,SAAf,CAAX;AACA,YAAIG,eAAe,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAtB;AACAD,uBAAe,CAACE,WAAhB,CAA4BH,IAAI,GAAG,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACAC,uBAAe,CAACG,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACA,YAAIC,IAAI,GAAG,yEAAeJ,eAAf,CAAX;AACAI,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiB,CAA9B;AACA,eAAOF,IAAP;;;;;;;;;;;;;;;;;;AChCF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASG,eAAT,CAAyBC,MAAzB,EAAiCC,YAAjC,EAA+C;AAC5D,YAAIC,IAAI,GAAGF,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,EAA9B;AACA,YAAIG,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASL,MAAT,EAAiBM,QAAjB,EAAb;;AACA,eAAOH,MAAM,CAACI,MAAP,GAAgBN,YAAvB,EAAqC;AACnCE,gBAAM,GAAG,MAAMA,MAAf;AACD;;AACD,eAAOD,IAAI,GAAGC,MAAd;;;;;;;;;;;;;;;;;;ACNF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASK,iBAAT,CAA2BZ,IAA3B,EAAiC;AAC9C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASa,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AAC7C,YAAID,MAAM,IAAI,IAAd,EAAoB;AAClB,gBAAM,IAAIE,SAAJ,CAAc,+DAAd,CAAN;AACD;;AACD,aAAK,IAAIC,QAAT,IAAqBF,MAArB,EAA6B;AAC3B,cAAIG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,MAArC,EAA6CE,QAA7C,CAAJ,EAA4D;AAC1D;AACAH,kBAAM,CAACG,QAAD,CAAN,GAAmBF,MAAM,CAACE,QAAD,CAAzB;AACD;AACF;;AACD,eAAOH,MAAP;;;;;;;;;;;;;;;;;;ACVF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIe,eAASQ,SAAT,CAAmB7B,SAAnB,EAA8B8B,QAA9B,EAAwCC,OAAxC,EAAiD;AAC9D,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,+EAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,oFAArB;AACA,YAAIC,YAAY,GAAG,oEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB,CAJ8D,CAM9D;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAG,oEAAUd,QAAV,CAAV;AACA,YAAIe,UAAU,GAAGtC,IAAI,CAACuC,SAAL,EAAjB;AACA,YAAIC,SAAS,GAAGH,GAAG,GAAG,CAAtB;AACA,YAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AACA,YAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGP,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCG,GAApC,GAA0CC,UAArD;AACAtC,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAApC;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS6C,QAAT,CAAkBpD,SAAlB,EAA6BqD,WAA7B,EAA0C;AACvD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,mEAASrD,SAAT,EAAoB,CAACsD,MAArB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIC,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCe,eAASC,yBAAT,CAAmCC,aAAnC,EAAkDC,cAAlD,EAAkE3B,OAAlE,EAA2E;AACxF,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAI0D,eAAe,GAAG,sEAAYF,aAAZ,EAA2B1B,OAA3B,CAAtB;AACA,YAAI6B,gBAAgB,GAAG,sEAAYF,cAAZ,EAA4B3B,OAA5B,CAAvB;AACA,YAAI8B,aAAa,GAAGF,eAAe,CAACG,OAAhB,KAA4B,8FAAgCH,eAAhC,CAAhD;AACA,YAAII,cAAc,GAAGH,gBAAgB,CAACE,OAAjB,KAA6B,8FAAgCF,gBAAhC,CAAlD,CALwF,CAOxF;AACA;AACA;;AACA,eAAO7C,IAAI,CAACiD,KAAL,CAAW,CAACH,aAAa,GAAGE,cAAjB,IAAmCR,oBAA9C,CAAP;;;;;;;;;;;;;;;;;;AClDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,eAASU,MAAT,CAAgBC,QAAhB,EAA0B;AACvC,mFAAa,CAAb,EAAgBjE,SAAhB;AACA,YAAIkE,MAAM,GAAG1C,MAAM,CAACC,SAAP,CAAiBT,QAAjB,CAA0BW,IAA1B,CAA+BsC,QAA/B,CAAb,CAFuC,CAIvC;;AACA,YAAIA,QAAQ,YAAY9D,IAApB,IAA4B,kFAAQ8D,QAAR,MAAsB,QAAtB,IAAkCC,MAAM,KAAK,eAA7E,EAA8F;AAC5F;AACA,iBAAO,IAAI/D,IAAJ,CAAS8D,QAAQ,CAACJ,OAAT,EAAT,CAAP;AACD,SAHD,MAGO,IAAI,OAAOI,QAAP,KAAoB,QAApB,IAAgCC,MAAM,KAAK,iBAA/C,EAAkE;AACvE,iBAAO,IAAI/D,IAAJ,CAAS8D,QAAT,CAAP;AACD,SAFM,MAEA;AACL,cAAI,CAAC,OAAOA,QAAP,KAAoB,QAApB,IAAgCC,MAAM,KAAK,iBAA5C,KAAkE,OAAOC,OAAP,KAAmB,WAAzF,EAAsG;AACpG;AACAA,mBAAO,CAACC,IAAR,CAAa,oNAAb,EAFoG,CAGpG;;AACAD,mBAAO,CAACC,IAAR,CAAa,IAAIC,KAAJ,GAAYC,KAAzB;AACD;;AACD,iBAAO,IAAInE,IAAJ,CAASoE,GAAT,CAAP;AACD;;;;;;;;;;;;;;;;;;AClDH;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASC,SAAT,CAAmBC,WAAnB,EAAgC;AAC7C,YAAIA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,IAAxC,IAAgDA,WAAW,KAAK,KAApE,EAA2E;AACzE,iBAAOF,GAAP;AACD;;AACD,YAAI7D,MAAM,GAAGgE,MAAM,CAACD,WAAD,CAAnB;;AACA,YAAIE,KAAK,CAACjE,MAAD,CAAT,EAAmB;AACjB,iBAAOA,MAAP;AACD;;AACD,eAAOA,MAAM,GAAG,CAAT,GAAaI,IAAI,CAAC8D,IAAL,CAAUlE,MAAV,CAAb,GAAiCI,IAAI,CAAC+D,KAAL,CAAWnE,MAAX,CAAxC;;;;;;;;;;;;;;;;;;ACRF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+Be,eAASoE,aAAT,CAAuB/E,SAAvB,EAAkC+B,OAAlC,EAA2C;AACxD,YAAIiD,qBAAJ;;AACA,YAAI/E,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIK,SAAJ,CAAc,kCAAkC0D,MAAlC,CAAyChF,SAAS,CAACiB,MAAnD,EAA2D,UAA3D,CAAd,CAAN;AACD;;AACD,YAAIgE,YAAY,GAAG,iEAAOlF,SAAP,CAAnB;;AACA,YAAI,CAAC,kEAAQkF,YAAR,CAAL,EAA4B;AAC1B,gBAAM,IAAIvC,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAIwC,cAAc,GAAGR,MAAM,CAAC,CAACK,qBAAqB,GAAGjD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoD,cAAnF,MAAuG,IAAvG,IAA+GH,qBAAqB,KAAK,KAAK,CAA9I,GAAkJA,qBAAlJ,GAA0K,CAA3K,CAA3B,CATwD,CAWxD;;AACA,YAAI,EAAEG,cAAc,IAAI,CAAlB,IAAuBA,cAAc,IAAI,CAA3C,CAAJ,EAAmD;AACjD,gBAAM,IAAIxC,UAAJ,CAAe,oDAAf,CAAN;AACD;;AACD,YAAIC,GAAG,GAAG,8EAAgBsC,YAAY,CAACzE,OAAb,EAAhB,EAAwC,CAAxC,CAAV;AACA,YAAI2E,KAAK,GAAG,8EAAgBF,YAAY,CAACG,QAAb,KAA0B,CAA1C,EAA6C,CAA7C,CAAZ;AACA,YAAInF,IAAI,GAAGgF,YAAY,CAACI,WAAb,EAAX;AACA,YAAIC,IAAI,GAAG,8EAAgBL,YAAY,CAACM,QAAb,EAAhB,EAAyC,CAAzC,CAAX;AACA,YAAIC,MAAM,GAAG,8EAAgBP,YAAY,CAACQ,UAAb,EAAhB,EAA2C,CAA3C,CAAb;AACA,YAAIC,MAAM,GAAG,8EAAgBT,YAAY,CAACU,UAAb,EAAhB,EAA2C,CAA3C,CAAb;AACA,YAAIC,gBAAgB,GAAG,EAAvB;;AACA,YAAIV,cAAc,GAAG,CAArB,EAAwB;AACtB,cAAIW,YAAY,GAAGZ,YAAY,CAACa,eAAb,EAAnB;AACA,cAAIC,iBAAiB,GAAGjF,IAAI,CAAC+D,KAAL,CAAWgB,YAAY,GAAG/E,IAAI,CAACkF,GAAL,CAAS,EAAT,EAAad,cAAc,GAAG,CAA9B,CAA1B,CAAxB;AACAU,0BAAgB,GAAG,MAAM,8EAAgBG,iBAAhB,EAAmCb,cAAnC,CAAzB;AACD;;AACD,YAAIe,MAAM,GAAG,EAAb;AACA,YAAIC,QAAQ,GAAGjB,YAAY,CAACkB,iBAAb,EAAf;;AACA,YAAID,QAAQ,KAAK,CAAjB,EAAoB;AAClB,cAAIE,cAAc,GAAGtF,IAAI,CAACC,GAAL,CAASmF,QAAT,CAArB;AACA,cAAIG,UAAU,GAAG,8EAAgB,wEAAUD,cAAc,GAAG,EAA3B,CAAhB,EAAgD,CAAhD,CAAjB;AACA,cAAIE,YAAY,GAAG,8EAAgBF,cAAc,GAAG,EAAjC,EAAqC,CAArC,CAAnB,CAHkB,CAIlB;;AACA,cAAIxF,IAAI,GAAGsF,QAAQ,GAAG,CAAX,GAAe,GAAf,GAAqB,GAAhC;AACAD,gBAAM,GAAG,GAAGjB,MAAH,CAAUpE,IAAV,EAAgBoE,MAAhB,CAAuBqB,UAAvB,EAAmC,GAAnC,EAAwCrB,MAAxC,CAA+CsB,YAA/C,CAAT;AACD,SAPD,MAOO;AACLL,gBAAM,GAAG,GAAT;AACD;;AACD,eAAO,GAAGjB,MAAH,CAAU/E,IAAV,EAAgB,GAAhB,EAAqB+E,MAArB,CAA4BG,KAA5B,EAAmC,GAAnC,EAAwCH,MAAxC,CAA+CrC,GAA/C,EAAoD,GAApD,EAAyDqC,MAAzD,CAAgEM,IAAhE,EAAsE,GAAtE,EAA2EN,MAA3E,CAAkFQ,MAAlF,EAA0F,GAA1F,EAA+FR,MAA/F,CAAsGU,MAAtG,EAA8GV,MAA9G,CAAqHY,gBAArH,EAAuIZ,MAAvI,CAA8IiB,MAA9I,CAAP;;;;;;;;;;;;;;;;;;AC1EF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBe,eAASM,QAAT,CAAkBtG,IAAlB,EAAwBkF,KAAxB,EAA+BxC,GAA/B,EAAoC;AACjD,YAAI3C,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIK,SAAJ,CAAc,mCAAmCtB,SAAS,CAACiB,MAA7C,GAAsD,UAApE,CAAN;AACD;;AACD,YAAIX,IAAI,GAAG,IAAIH,IAAJ,CAASF,IAAT,EAAekF,KAAf,EAAsBxC,GAAtB,CAAX;AACA,eAAOrC,IAAI,CAAC+E,WAAL,OAAuBpF,IAAvB,IAA+BK,IAAI,CAAC8E,QAAL,OAAoBD,KAAnD,IAA4D7E,IAAI,CAACE,OAAL,OAAmBmC,GAAtF;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+Be,eAAS6D,iBAAT,CAA2BC,aAA3B,EAA0C3E,OAA1C,EAAmD;AAChE,YAAI4E,aAAJ;;AACA,mFAAa,CAAb,EAAgB1G,SAAhB;AACA,YAAI2G,QAAQ,GAAGF,aAAa,IAAI,EAAhC;AACA,YAAIG,SAAS,GAAG,iEAAOD,QAAQ,CAACE,KAAhB,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAIC,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd,CANgE,CAQhE;;AACA,YAAI,EAAE+C,SAAS,CAAC/C,OAAV,MAAuBmD,OAAzB,CAAJ,EAAuC;AACrC,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIuE,KAAK,GAAG,EAAZ;AACA,YAAIC,WAAW,GAAGN,SAAlB;AACAM,mBAAW,CAAC7G,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACA,YAAI8G,IAAI,GAAGzC,MAAM,CAAC,CAACgC,aAAa,GAAG5E,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACqF,IAA3E,MAAqF,IAArF,IAA6FT,aAAa,KAAK,KAAK,CAApH,GAAwHA,aAAxH,GAAwI,CAAzI,CAAjB;AACA,YAAIS,IAAI,GAAG,CAAP,IAAYxC,KAAK,CAACwC,IAAD,CAArB,EAA6B,MAAM,IAAIzE,UAAJ,CAAe,gDAAf,CAAN;;AAC7B,eAAOwE,WAAW,CAACrD,OAAZ,MAAyBmD,OAAhC,EAAyC;AACvCC,eAAK,CAACG,IAAN,CAAW,iEAAOF,WAAP,CAAX;AACAA,qBAAW,CAAC3G,OAAZ,CAAoB2G,WAAW,CAAC1G,OAAZ,KAAwB2G,IAA5C;AACAD,qBAAW,CAAC7G,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACD;;AACD,eAAO4G,KAAP;;;;;;;;;;;;;;;;;;ACvDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;AAmBe,eAASI,YAAT,GAAwB;AACrC,eAAO,qEAAWlH,IAAI,CAACmH,GAAL,EAAX,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAIC,sBAAsB,GAAG,aAAa,UAAUC,OAAV,EAAmB;AAClE,4FAAUD,sBAAV,EAAkCC,OAAlC;;AACA,YAAIC,MAAM,GAAG,uFAAaF,sBAAb,CAAb;;AACA,iBAASA,sBAAT,GAAkC;AAChC,cAAIG,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBH,sBAAtB;;AACA,eAAK,IAAII,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,GAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAaH,sBAAb,EAAqC,CAAC;AACpCS,aAAG,EAAE,OAD+B;AAEpCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2B;AAChC,mBAAO,uEAAqBA,UAArB,CAAP;AACD;AAJmC,SAAD,EAKlC;AACDH,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAaC,KAAb,EAAoBC,MAApB,EAA4BL,KAA5B,EAAmC;AACxC,mBAAO,CAAC,IAAI9H,IAAJ,CAAS8H,KAAK,GAAG,IAAjB,CAAD,EAAyB;AAC9BM,4BAAc,EAAE;AADc,aAAzB,CAAP;AAGD;AANA,SALkC,CAArC;AAaA,eAAOhB,sBAAP;AACD,OA5BgD,CA4B/C,iDA5B+C,CAA1C;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAShC,QAAT,CAAkBxF,SAAlB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIyI,KAAK,GAAGlI,IAAI,CAACiF,QAAL,EAAZ;AACA,eAAOiD,KAAP;;;;;;;;;;;;;;;;;;ACvBF;;AAAA,UAAIC,oBAAoB,GAAG;AACzBC,gBAAQ,EAAE,oBADe;AAEzBC,iBAAS,EAAE,kBAFc;AAGzBC,aAAK,EAAE,cAHkB;AAIzBC,gBAAQ,EAAE,iBAJe;AAKzBC,gBAAQ,EAAE,aALe;AAMzBC,aAAK,EAAE;AANkB,OAA3B;;AAQA,UAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+BZ,KAA/B,EAAsCa,SAAtC,EAAiDC,QAAjD,EAA2D;AAC9E,eAAOV,oBAAoB,CAACQ,KAAD,CAA3B;AACD,OAFD;AAGe;;;AAAA,uCAAAD,cAAA;;;;;;;;;;;;;;;;ACXf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASI,aAAT,CAAuBrJ,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAAC+I,UAAL,CAAgB,CAAhB,EAAmB,CAAnB;AACA,eAAO/I,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,UAAIgJ,sBAAsB,GAAG,OAAO,EAApC;AACA,UAAIC,cAAc,GAAG,KAAK,EAA1B;AACA,UAAIC,gBAAgB,GAAGD,cAAc,GAAG,EAAxC;AACA,UAAIE,eAAe,GAAGF,cAAc,GAAG,GAAvC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFe,eAASG,oBAAT,CAA8B3J,SAA9B,EAAyC4J,aAAzC,EAAwD7H,OAAxD,EAAiE;AAC9E,YAAIC,IAAJ,EAAUI,eAAV,EAA2ByH,qBAA3B;;AACA,mFAAa,CAAb,EAAgB5J,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIE,MAAM,GAAG,CAACV,IAAI,GAAG,CAACI,eAAe,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAA7E,MAAyF,IAAzF,IAAiGN,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJI,cAAc,CAACE,MAAvK,MAAmL,IAAnL,IAA2LV,IAAI,KAAK,KAAK,CAAzM,GAA6MA,IAA7M,GAAoN,mEAAjO;;AACA,YAAI,CAACU,MAAM,CAACoH,cAAZ,EAA4B;AAC1B,gBAAM,IAAInH,UAAJ,CAAe,sDAAf,CAAN;AACD;;AACD,YAAIoH,UAAU,GAAG,qEAAW/J,SAAX,EAAsB4J,aAAtB,CAAjB;;AACA,YAAIhF,KAAK,CAACmF,UAAD,CAAT,EAAuB;AACrB,gBAAM,IAAIpH,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAIqH,eAAe,GAAG,qEAAO,0EAAYjI,OAAZ,CAAP,EAA6B;AACjDkI,mBAAS,EAAEC,OAAO,CAACnI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACkI,SAA3D,CAD+B;AAEjDF,oBAAU,EAAEA;AAFqC,SAA7B,CAAtB;AAIA,YAAII,QAAJ;AACA,YAAIC,SAAJ;;AACA,YAAIL,UAAU,GAAG,CAAjB,EAAoB;AAClBI,kBAAQ,GAAG,iEAAOP,aAAP,CAAX;AACAQ,mBAAS,GAAG,iEAAOpK,SAAP,CAAZ;AACD,SAHD,MAGO;AACLmK,kBAAQ,GAAG,iEAAOnK,SAAP,CAAX;AACAoK,mBAAS,GAAG,iEAAOR,aAAP,CAAZ;AACD;;AACD,YAAIS,cAAc,GAAGC,MAAM,CAAC,CAACT,qBAAqB,GAAG9H,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAAnF,MAAuG,IAAvG,IAA+GR,qBAAqB,KAAK,KAAK,CAA9I,GAAkJA,qBAAlJ,GAA0K,OAA3K,CAA3B;AACA,YAAIU,gBAAJ;;AACA,YAAIF,cAAc,KAAK,OAAvB,EAAgC;AAC9BE,0BAAgB,GAAGxJ,IAAI,CAAC+D,KAAxB;AACD,SAFD,MAEO,IAAIuF,cAAc,KAAK,MAAvB,EAA+B;AACpCE,0BAAgB,GAAGxJ,IAAI,CAAC8D,IAAxB;AACD,SAFM,MAEA,IAAIwF,cAAc,KAAK,OAAvB,EAAgC;AACrCE,0BAAgB,GAAGxJ,IAAI,CAACiD,KAAxB;AACD,SAFM,MAEA;AACL,gBAAM,IAAIrB,UAAJ,CAAe,mDAAf,CAAN;AACD;;AACD,YAAImD,YAAY,GAAGsE,SAAS,CAACtG,OAAV,KAAsBqG,QAAQ,CAACrG,OAAT,EAAzC;AACA,YAAI0G,OAAO,GAAG1E,YAAY,GAAGyD,sBAA7B;AACA,YAAIkB,cAAc,GAAG,8FAAgCL,SAAhC,IAA6C,8FAAgCD,QAAhC,CAAlE,CAtC8E,CAwC9E;AACA;;AACA,YAAIO,oBAAoB,GAAG,CAAC5E,YAAY,GAAG2E,cAAhB,IAAkClB,sBAA7D;AACA,YAAIoB,WAAW,GAAG5I,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC6I,IAA5E;AACA,YAAIA,IAAJ;;AACA,YAAI,CAACD,WAAL,EAAkB;AAChB,cAAIH,OAAO,GAAG,CAAd,EAAiB;AACfI,gBAAI,GAAG,QAAP;AACD,WAFD,MAEO,IAAIJ,OAAO,GAAG,EAAd,EAAkB;AACvBI,gBAAI,GAAG,QAAP;AACD,WAFM,MAEA,IAAIJ,OAAO,GAAGhB,cAAd,EAA8B;AACnCoB,gBAAI,GAAG,MAAP;AACD,WAFM,MAEA,IAAIF,oBAAoB,GAAGjB,gBAA3B,EAA6C;AAClDmB,gBAAI,GAAG,KAAP;AACD,WAFM,MAEA,IAAIF,oBAAoB,GAAGhB,eAA3B,EAA4C;AACjDkB,gBAAI,GAAG,OAAP;AACD,WAFM,MAEA;AACLA,gBAAI,GAAG,MAAP;AACD;AACF,SAdD,MAcO;AACLA,cAAI,GAAGN,MAAM,CAACK,WAAD,CAAb;AACD,SA7D6E,CA+D9E;;;AACA,YAAIC,IAAI,KAAK,QAAb,EAAuB;AACrB,cAAIC,OAAO,GAAGN,gBAAgB,CAACzE,YAAY,GAAG,IAAhB,CAA9B;AACA,iBAAOpD,MAAM,CAACoH,cAAP,CAAsB,UAAtB,EAAkCe,OAAlC,EAA2Cb,eAA3C,CAAP,CAFqB,CAIrB;AACD,SALD,MAKO,IAAIY,IAAI,KAAK,QAAb,EAAuB;AAC5B,cAAIE,cAAc,GAAGP,gBAAgB,CAACC,OAAD,CAArC;AACA,iBAAO9H,MAAM,CAACoH,cAAP,CAAsB,UAAtB,EAAkCgB,cAAlC,EAAkDd,eAAlD,CAAP,CAF4B,CAI5B;AACD,SALM,MAKA,IAAIY,IAAI,KAAK,MAAb,EAAqB;AAC1B,cAAInC,KAAK,GAAG8B,gBAAgB,CAACC,OAAO,GAAG,EAAX,CAA5B;AACA,iBAAO9H,MAAM,CAACoH,cAAP,CAAsB,QAAtB,EAAgCrB,KAAhC,EAAuCuB,eAAvC,CAAP,CAF0B,CAI1B;AACD,SALM,MAKA,IAAIY,IAAI,KAAK,KAAb,EAAoB;AACzB,cAAIG,IAAI,GAAGR,gBAAgB,CAACG,oBAAoB,GAAGlB,cAAxB,CAA3B;AACA,iBAAO9G,MAAM,CAACoH,cAAP,CAAsB,OAAtB,EAA+BiB,IAA/B,EAAqCf,eAArC,CAAP,CAFyB,CAIzB;AACD,SALM,MAKA,IAAIY,IAAI,KAAK,OAAb,EAAsB;AAC3B,cAAII,MAAM,GAAGT,gBAAgB,CAACG,oBAAoB,GAAGjB,gBAAxB,CAA7B;AACA,iBAAOuB,MAAM,KAAK,EAAX,IAAiBL,WAAW,KAAK,OAAjC,GAA2CjI,MAAM,CAACoH,cAAP,CAAsB,QAAtB,EAAgC,CAAhC,EAAmCE,eAAnC,CAA3C,GAAiGtH,MAAM,CAACoH,cAAP,CAAsB,SAAtB,EAAiCkB,MAAjC,EAAyChB,eAAzC,CAAxG,CAF2B,CAI3B;AACD,SALM,MAKA,IAAIY,IAAI,KAAK,MAAb,EAAqB;AAC1B,cAAIK,KAAK,GAAGV,gBAAgB,CAACG,oBAAoB,GAAGhB,eAAxB,CAA5B;AACA,iBAAOhH,MAAM,CAACoH,cAAP,CAAsB,QAAtB,EAAgCmB,KAAhC,EAAuCjB,eAAvC,CAAP;AACD;;AACD,cAAM,IAAIrH,UAAJ,CAAe,mEAAf,CAAN;;;;;;;;;;;;;;;;;;AC5LF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCe,eAASuI,iBAAT,CAA2Bf,QAA3B,EAAqCC,SAArC,EAAgDrI,OAAhD,EAAyD;AACtE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIgD,IAAI,GAAG,2EAAiBkH,QAAjB,EAA2BC,SAA3B,IAAwC,CAAnD;AACA,eAAO,wFAAkBrI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAA5E,EAA4FpH,IAA5F,CAAP;;;;;;;;;;;;;;;;;;AC/CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASkI,mBAAT,CAA6B1C,KAA7B,EAAoC;AACjD,mFAAa,CAAb,EAAgBxI,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAW2D,KAAK,GAAG,sEAAnB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAAS2C,kBAAT,CAA4BpL,SAA5B,EAAuC;AACpD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIC,IAAI,GAAG,yEAAeF,SAAf,CAAX;AACA,YAAIG,eAAe,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAtB;AACAD,uBAAe,CAACE,WAAhB,CAA4BH,IAA5B,EAAkC,CAAlC,EAAqC,CAArC;AACAC,uBAAe,CAACG,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACA,YAAIC,IAAI,GAAG,yEAAeJ,eAAf,CAAX;AACA,eAAOI,IAAP;;;;;;;;;;;;;;;;;;AC/BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAI8K,eAAe,GAAG,aAAa,UAAU5D,OAAV,EAAmB;AAC3D,4FAAU4D,eAAV,EAA2B5D,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAa2D,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAI1D,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB0D,eAAtB;;AACA,eAAK,IAAIzD,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa0D,eAAb,EAA8B,CAAC;AAC7BpD,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgBqC,OAApC,EAA6CnD,UAA7C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAb4B,SAAD,EAc3B;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAd2B,EAmB3B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC,gBAAIwD,IAAI,GAAGnL,IAAI,CAACoL,WAAL,MAAsB,EAAjC;;AACA,gBAAID,IAAI,IAAIxD,KAAK,GAAG,EAApB,EAAwB;AACtB3H,kBAAI,CAACqL,WAAL,CAAiB1D,KAAK,GAAG,EAAzB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC;AACD,aAFD,MAEO,IAAI,CAACwD,IAAD,IAASxD,KAAK,KAAK,EAAvB,EAA2B;AAChC3H,kBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACD,aAFM,MAEA;AACLrL,kBAAI,CAACqL,WAAL,CAAiB1D,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACD;;AACD,mBAAO3H,IAAP;AACD;AAZA,SAnB2B,CAA9B;AAiCA,eAAO8K,eAAP;AACD,OAhDyC,CAgDxC,iDAhDwC,CAAnC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASQ,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC7D,YAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,gBAAM,IAAIxK,SAAJ,CAAc,mCAAd,CAAN;AACD;;;;;;;;;;;;;;;;;;ACHH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASyK,WAAT,CAAqBhM,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,oEAAUD,SAAV,EAAqB,kEAAQI,IAAI,CAACmH,GAAL,EAAR,EAAoB,CAApB,CAArB,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAAS0E,cAAT,CAAwBjM,SAAxB,EAAmC;AAChD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,sEAAYD,SAAZ,EAAuB;AAC5ByC,sBAAY,EAAE;AADc,SAAvB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;;AAAA,UAAIyJ,oBAAoB,GAAG;AACzBC,wBAAgB,EAAE;AAChBC,aAAG,EAAE,oBADW;AAEhBpD,eAAK,EAAE;AAFS,SADO;AAKzBqD,gBAAQ,EAAE;AACRD,aAAG,EAAE,UADG;AAERpD,eAAK,EAAE;AAFC,SALe;AASzBsD,mBAAW,EAAE,eATY;AAUzBC,wBAAgB,EAAE;AAChBH,aAAG,EAAE,oBADW;AAEhBpD,eAAK,EAAE;AAFS,SAVO;AAczBwD,gBAAQ,EAAE;AACRJ,aAAG,EAAE,UADG;AAERpD,eAAK,EAAE;AAFC,SAde;AAkBzByD,mBAAW,EAAE;AACXL,aAAG,EAAE,cADM;AAEXpD,eAAK,EAAE;AAFI,SAlBY;AAsBzB0D,cAAM,EAAE;AACNN,aAAG,EAAE,QADC;AAENpD,eAAK,EAAE;AAFD,SAtBiB;AA0BzB2D,aAAK,EAAE;AACLP,aAAG,EAAE,OADA;AAELpD,eAAK,EAAE;AAFF,SA1BkB;AA8BzB4D,mBAAW,EAAE;AACXR,aAAG,EAAE,cADM;AAEXpD,eAAK,EAAE;AAFI,SA9BY;AAkCzB6D,cAAM,EAAE;AACNT,aAAG,EAAE,QADC;AAENpD,eAAK,EAAE;AAFD,SAlCiB;AAsCzB8D,oBAAY,EAAE;AACZV,aAAG,EAAE,eADO;AAEZpD,eAAK,EAAE;AAFK,SAtCW;AA0CzB+D,eAAO,EAAE;AACPX,aAAG,EAAE,SADE;AAEPpD,eAAK,EAAE;AAFA,SA1CgB;AA8CzBgE,mBAAW,EAAE;AACXZ,aAAG,EAAE,cADM;AAEXpD,eAAK,EAAE;AAFI,SA9CY;AAkDzBiE,cAAM,EAAE;AACNb,aAAG,EAAE,QADC;AAENpD,eAAK,EAAE;AAFD,SAlDiB;AAsDzBkE,kBAAU,EAAE;AACVd,aAAG,EAAE,aADK;AAEVpD,eAAK,EAAE;AAFG,SAtDa;AA0DzBmE,oBAAY,EAAE;AACZf,aAAG,EAAE,eADO;AAEZpD,eAAK,EAAE;AAFK;AA1DW,OAA3B;;AA+DA,UAAIc,cAAc,GAAG,SAASA,cAAT,CAAwBZ,KAAxB,EAA+BkE,KAA/B,EAAsCrL,OAAtC,EAA+C;AAClE,YAAIsL,MAAJ;AACA,YAAIC,UAAU,GAAGpB,oBAAoB,CAAChD,KAAD,CAArC;;AACA,YAAI,OAAOoE,UAAP,KAAsB,QAA1B,EAAoC;AAClCD,gBAAM,GAAGC,UAAT;AACD,SAFD,MAEO,IAAIF,KAAK,KAAK,CAAd,EAAiB;AACtBC,gBAAM,GAAGC,UAAU,CAAClB,GAApB;AACD,SAFM,MAEA;AACLiB,gBAAM,GAAGC,UAAU,CAACtE,KAAX,CAAiBuE,OAAjB,CAAyB,WAAzB,EAAsCH,KAAK,CAACnM,QAAN,EAAtC,CAAT;AACD;;AACD,YAAIc,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACkI,SAAtD,EAAiE;AAC/D,cAAIlI,OAAO,CAACgI,UAAR,IAAsBhI,OAAO,CAACgI,UAAR,GAAqB,CAA/C,EAAkD;AAChD,mBAAO,QAAQsD,MAAf;AACD,WAFD,MAEO;AACL,mBAAOA,MAAM,GAAG,MAAhB;AACD;AACF;;AACD,eAAOA,MAAP;AACD,OAlBD;AAmBe;;;AAAA,uCAAAvD,cAAA;;;;;;;;;;;;;;;;AClFf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS0D,WAAT,CAAqBxN,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIwN,SAAS,GAAG,iEAAOzN,SAAP,CAAhB;AACA,YAAIO,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;AACAG,YAAI,CAACF,WAAL,CAAiBoN,SAAS,CAACnI,WAAV,EAAjB,EAA0C,CAA1C,EAA6C,CAA7C;AACA/E,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIe,eAASmN,cAAT,CAAwB1N,SAAxB,EAAmC+B,OAAnC,EAA4C;AACzD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,+EAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,oFAArB;AACA,YAAIC,YAAY,GAAG,oEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB,CAJyD,CAMzD;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAACuC,SAAL,EAAV;AACA,YAAIG,IAAI,GAAG,CAACL,GAAG,GAAGH,YAAN,GAAqB,CAArB,GAAyB,CAA1B,IAA+BG,GAA/B,GAAqCH,YAAhD;AACAlC,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAApC;AACA1C,YAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,eAAOrL,IAAP;;;;;;;;;;;;;;;;;;ACnBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDe,eAASoN,uBAAT,CAAiCC,YAAjC,EAA+CC,aAA/C,EAA8D9L,OAA9D,EAAuE;AACpF,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAI6N,aAAa,GAAG,iEAAOF,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAAC9G,KAAhF,EAAuFhD,OAAvF,EAApB;AACA,YAAIiK,WAAW,GAAG,iEAAOH,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAAC5G,GAAhF,EAAqFlD,OAArF,EAAlB;AACA,YAAIkK,cAAc,GAAG,iEAAOH,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAAC/G,KAAnF,EAA0FhD,OAA1F,EAArB;AACA,YAAImK,YAAY,GAAG,iEAAOJ,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAAC7G,GAAnF,EAAwFlD,OAAxF,EAAnB,CALoF,CAOpF;;AACA,YAAI,EAAEgK,aAAa,IAAIC,WAAjB,IAAgCC,cAAc,IAAIC,YAApD,CAAJ,EAAuE;AACrE,gBAAM,IAAItL,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIZ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACmM,SAAtD,EAAiE;AAC/D,iBAAOJ,aAAa,IAAIG,YAAjB,IAAiCD,cAAc,IAAID,WAA1D;AACD;;AACD,eAAOD,aAAa,GAAGG,YAAhB,IAAgCD,cAAc,GAAGD,WAAxD;;;;;;;;;;;;;;;;;;ACvEF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAASI,kBAAT,CAA4BnO,SAA5B,EAAuC;AACpD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAI4G,SAAS,GAAG,uEAAa7G,SAAb,CAAhB;AACA,YAAI4E,KAAK,CAACiC,SAAS,CAAC/C,OAAV,EAAD,CAAT,EAAgC,MAAM,IAAInB,UAAJ,CAAe,4BAAf,CAAN;AAChC,YAAIoE,OAAO,GAAG,qEAAW/G,SAAX,CAAd;AACA,eAAO,gFAAsB;AAC3B8G,eAAK,EAAED,SADoB;AAE3BG,aAAG,EAAED;AAFsB,SAAtB,CAAP;;;;;;;;;;;;;;;;;;ACpCF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASqH,yBAAT,GAAqC;AAClD,YAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACC,SAA/C,EAA0D,OAAO,KAAP;AAC1D,YAAID,OAAO,CAACC,SAAR,CAAkBC,IAAtB,EAA4B,OAAO,KAAP;AAC5B,YAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AACjC,YAAI;AACFtE,iBAAO,CAACxI,SAAR,CAAkB+M,OAAlB,CAA0B7M,IAA1B,CAA+ByM,OAAO,CAACC,SAAR,CAAkBpE,OAAlB,EAA2B,EAA3B,EAA+B,YAAY,CAAE,CAA7C,CAA/B;AACA,iBAAO,IAAP;AACD,SAHD,CAGE,OAAOwE,CAAP,EAAU;AACV,iBAAO,KAAP;AACD;;;;;;;;;;;;;;;;;;ACTH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAUoE;;;AAC7D,UAAIC,eAAe,GAAG,aAAa,UAAUlH,OAAV,EAAmB;AAC3D,4FAAUkH,eAAV,EAA2BlH,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAaiH,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAIhH,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBgH,eAAtB;;AACA,eAAK,IAAI/G,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAagH,eAAb,EAA8B,CAAC;AAC7B1G,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgB0F,IAApC,EAA0CxG,UAA1C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAb4B,SAAD,EAc3B;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAd2B,EAmB3B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkCnG,OAAlC,EAA2C;AAChD,mBAAO,8EAAe,yEAAWxB,IAAX,EAAiB2H,KAAjB,EAAwBnG,OAAxB,CAAf,EAAiDA,OAAjD,CAAP;AACD;AAJA,SAnB2B,CAA9B;AAyBA,eAAO4M,eAAP;AACD,OAxCyC,CAwCxC,iDAxCwC,CAAnC;;;;;;;;;;;;;;;;;ACXP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASE,gBAAT,CAA0B7D,MAA1B,EAAkC;AAC/C,mFAAa,CAAb,EAAgB/K,SAAhB;AACA,YAAI6O,QAAQ,GAAG9D,MAAM,GAAG,mEAAxB;AACA,eAAOjK,IAAI,CAAC+D,KAAL,CAAWgK,QAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCe,eAASC,UAAT,CAAoB/O,SAApB,EAA+B+B,OAA/B,EAAwC;AACrD,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,eAAO,qEAAWD,SAAX,EAAsBI,IAAI,CAACmH,GAAL,EAAtB,EAAkCxF,OAAlC,CAAP;;;;;;;;;;;;;;;;;;ACpCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQoD;;;AAC7C,UAAIiN,sBAAsB,GAAG,aAAa,UAAUvH,OAAV,EAAmB;AAClE,4FAAUuH,sBAAV,EAAkCvH,OAAlC;;AACA,YAAIC,MAAM,GAAG,uFAAasH,sBAAb,CAAb;;AACA,iBAASA,sBAAT,GAAkC;AAChC,cAAIrH,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBqH,sBAAtB;;AACA,eAAK,IAAIpH,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAaqH,sBAAb,EAAqC,CAAC;AACpC/G,aAAG,EAAE,OAD+B;AAEpCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkC;AACvC,oBAAQA,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,uEAAqB,+DAAiB+F,oBAAtC,EAA4D7G,UAA5D,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAO,uEAAqB,+DAAiB8G,KAAtC,EAA6C9G,UAA7C,CAAP;;AACF,mBAAK,MAAL;AACE,uBAAO,uEAAqB,+DAAiB+G,oBAAtC,EAA4D/G,UAA5D,CAAP;;AACF,mBAAK,OAAL;AACE,uBAAO,uEAAqB,+DAAiBgH,uBAAtC,EAA+DhH,UAA/D,CAAP;;AACF,mBAAK,KAAL;AACA;AACE,uBAAO,uEAAqB,+DAAiBiH,QAAtC,EAAgDjH,UAAhD,CAAP;AAXJ;AAaD;AAhBmC,SAAD,EAiBlC;AACDH,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmB+O,KAAnB,EAA0BpH,KAA1B,EAAiC;AACtC,gBAAIoH,KAAK,CAAC9G,cAAV,EAA0B;AACxB,qBAAOjI,IAAP;AACD;;AACD,mBAAO,IAAIH,IAAJ,CAASG,IAAI,CAACuD,OAAL,KAAiBoE,KAA1B,CAAP;AACD;AAPA,SAjBkC,CAArC;AA0BA,eAAO8G,sBAAP;AACD,OAzCgD,CAyC/C,iDAzC+C,CAA1C;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAIO,eAAe,GAAG,aAAa,UAAU9H,OAAV,EAAmB;AAC3D,4FAAU8H,eAAV,EAA2B9H,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAa6H,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAI5H,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB4H,eAAtB;;AACA,eAAK,IAAI3H,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa4H,eAAb,EAA8B,CAAC;AAC7BtH,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgBsG,OAApC,EAA6CpH,UAA7C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAb4B,SAAD,EAc3B;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAd2B,EAmB3B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACqL,WAAL,CAAiB1D,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACA,mBAAO3H,IAAP;AACD;AALA,SAnB2B,CAA9B;AA0BA,eAAOgP,eAAP;AACD,OAzCyC,CAyCxC,iDAzCwC,CAAnC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAIE,eAAe,GAAG,aAAa,UAAUhI,OAAV,EAAmB;AAC3D,4FAAUgI,eAAV,EAA2BhI,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAa+H,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAI9H,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB8H,eAAtB;;AACA,eAAK,IAAI7H,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,aAA/C,EAA8D,CAA9D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa8H,eAAb,EAA8B,CAAC;AAC7BxH,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACA,mBAAK,IAAL;AACE,uBAAO,sEAAoB,8DAAgBwG,SAApC,EAA+CtH,UAA/C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AATJ;AAWD;AAd4B,SAAD,EAe3B;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBlL,IAAlB,EAAwB2H,KAAxB,EAA+B;AACpC,gBAAIhI,IAAI,GAAGK,IAAI,CAACoP,cAAL,EAAX;AACA,gBAAIC,UAAU,GAAG,kEAAgB1P,IAAhB,CAAjB;;AACA,gBAAI0P,UAAJ,EAAgB;AACd,qBAAO1H,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;AACD,aAFD,MAEO;AACL,qBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;AACD;AACF;AAVA,SAf2B,EA0B3B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACsP,WAAL,CAAiB,CAAjB,EAAoB3H,KAApB;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SA1B2B,CAA9B;AAkCA,eAAOkP,eAAP;AACD,OAlDyC,CAkDxC,iDAlDwC,CAAnC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAIK,wBAAwB,GAAG,CAAC,GAAD,EAAM,IAAN,CAA/B;AACA,UAAIC,uBAAuB,GAAG,CAAC,IAAD,EAAO,MAAP,CAA9B;;AACO,eAASC,yBAAT,CAAmC9G,KAAnC,EAA0C;AAC/C,eAAO4G,wBAAwB,CAACG,OAAzB,CAAiC/G,KAAjC,MAA4C,CAAC,CAApD;AACD;;AACM,eAASgH,wBAAT,CAAkChH,KAAlC,EAAyC;AAC9C,eAAO6G,uBAAuB,CAACE,OAAxB,CAAgC/G,KAAhC,MAA2C,CAAC,CAAnD;AACD;;AACM,eAASiH,mBAAT,CAA6BjH,KAA7B,EAAoCkH,MAApC,EAA4CC,KAA5C,EAAmD;AACxD,YAAInH,KAAK,KAAK,MAAd,EAAsB;AACpB,gBAAM,IAAIvG,UAAJ,CAAe,qCAAqCsC,MAArC,CAA4CmL,MAA5C,EAAoD,wCAApD,EAA8FnL,MAA9F,CAAqGoL,KAArG,EAA4G,gFAA5G,CAAf,CAAN;AACD,SAFD,MAEO,IAAInH,KAAK,KAAK,IAAd,EAAoB;AACzB,gBAAM,IAAIvG,UAAJ,CAAe,iCAAiCsC,MAAjC,CAAwCmL,MAAxC,EAAgD,wCAAhD,EAA0FnL,MAA1F,CAAiGoL,KAAjG,EAAwG,gFAAxG,CAAf,CAAN;AACD,SAFM,MAEA,IAAInH,KAAK,KAAK,GAAd,EAAmB;AACxB,gBAAM,IAAIvG,UAAJ,CAAe,+BAA+BsC,MAA/B,CAAsCmL,MAAtC,EAA8C,oDAA9C,EAAoGnL,MAApG,CAA2GoL,KAA3G,EAAkH,gFAAlH,CAAf,CAAN;AACD,SAFM,MAEA,IAAInH,KAAK,KAAK,IAAd,EAAoB;AACzB,gBAAM,IAAIvG,UAAJ,CAAe,iCAAiCsC,MAAjC,CAAwCmL,MAAxC,EAAgD,oDAAhD,EAAsGnL,MAAtG,CAA6GoL,KAA7G,EAAoH,gFAApH,CAAf,CAAN;AACD;;;;;;;;;;;;;;;;;;ACjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS3K,UAAT,CAAoB1F,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIwK,OAAO,GAAGjK,IAAI,CAACmF,UAAL,EAAd;AACA,eAAO8E,OAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAAS8F,4BAAT,CAAsC7M,aAAtC,EAAqDC,cAArD,EAAqE;AAClF,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI6M,QAAQ,GAAGpG,QAAQ,CAAC7E,WAAT,KAAyB8E,SAAS,CAAC9E,WAAV,EAAxC;AACA,YAAIkL,WAAW,GAAG,qEAAWrG,QAAX,IAAuB,qEAAWC,SAAX,CAAzC;AACA,eAAOmG,QAAQ,GAAG,CAAX,GAAeC,WAAtB;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASC,gCAAT,CAA0ChN,aAA1C,EAAyDC,cAAzD,EAAyE;AACtF,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,eAAO,yEAAewD,aAAf,IAAgC,yEAAeC,cAAf,CAAvC;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCe,eAASgN,QAAT,CAAkBxM,QAAlB,EAA4BnC,OAA5B,EAAqC;AAClD,YAAI4O,qBAAJ;;AACA,mFAAa,CAAb,EAAgB1Q,SAAhB;AACA,YAAI2Q,gBAAgB,GAAG,wEAAU,CAACD,qBAAqB,GAAG5O,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC6O,gBAAnF,MAAyG,IAAzG,IAAiHD,qBAAqB,KAAK,KAAK,CAAhJ,GAAoJA,qBAApJ,GAA4K,CAAtL,CAAvB;;AACA,YAAIC,gBAAgB,KAAK,CAArB,IAA0BA,gBAAgB,KAAK,CAA/C,IAAoDA,gBAAgB,KAAK,CAA7E,EAAgF;AAC9E,gBAAM,IAAIjO,UAAJ,CAAe,oCAAf,CAAN;AACD;;AACD,YAAI,EAAE,OAAOuB,QAAP,KAAoB,QAApB,IAAgCzC,MAAM,CAACC,SAAP,CAAiBT,QAAjB,CAA0BW,IAA1B,CAA+BsC,QAA/B,MAA6C,iBAA/E,CAAJ,EAAuG;AACrG,iBAAO,IAAI9D,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAIqM,WAAW,GAAGC,eAAe,CAAC5M,QAAD,CAAjC;AACA,YAAI3D,IAAJ;;AACA,YAAIsQ,WAAW,CAACtQ,IAAhB,EAAsB;AACpB,cAAIwQ,eAAe,GAAGC,SAAS,CAACH,WAAW,CAACtQ,IAAb,EAAmBqQ,gBAAnB,CAA/B;AACArQ,cAAI,GAAG0Q,SAAS,CAACF,eAAe,CAACG,cAAjB,EAAiCH,eAAe,CAAC7Q,IAAjD,CAAhB;AACD;;AACD,YAAI,CAACK,IAAD,IAASqE,KAAK,CAACrE,IAAI,CAACuD,OAAL,EAAD,CAAlB,EAAoC;AAClC,iBAAO,IAAI1D,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAI2M,SAAS,GAAG5Q,IAAI,CAACuD,OAAL,EAAhB;AACA,YAAIsN,IAAI,GAAG,CAAX;AACA,YAAIlL,MAAJ;;AACA,YAAI2K,WAAW,CAACO,IAAhB,EAAsB;AACpBA,cAAI,GAAGC,SAAS,CAACR,WAAW,CAACO,IAAb,CAAhB;;AACA,cAAIxM,KAAK,CAACwM,IAAD,CAAT,EAAiB;AACf,mBAAO,IAAIhR,IAAJ,CAASoE,GAAT,CAAP;AACD;AACF;;AACD,YAAIqM,WAAW,CAACS,QAAhB,EAA0B;AACxBpL,gBAAM,GAAGqL,aAAa,CAACV,WAAW,CAACS,QAAb,CAAtB;;AACA,cAAI1M,KAAK,CAACsB,MAAD,CAAT,EAAmB;AACjB,mBAAO,IAAI9F,IAAJ,CAASoE,GAAT,CAAP;AACD;AACF,SALD,MAKO;AACL,cAAIxE,SAAS,GAAG,IAAII,IAAJ,CAAS+Q,SAAS,GAAGC,IAArB,CAAhB,CADK,CAEL;AACA;AACA;AACA;AACA;;AACA,cAAI/D,MAAM,GAAG,IAAIjN,IAAJ,CAAS,CAAT,CAAb;AACAiN,gBAAM,CAAChN,WAAP,CAAmBL,SAAS,CAAC2P,cAAV,EAAnB,EAA+C3P,SAAS,CAACwR,WAAV,EAA/C,EAAwExR,SAAS,CAACmD,UAAV,EAAxE;AACAkK,gBAAM,CAAC/M,QAAP,CAAgBN,SAAS,CAAC2L,WAAV,EAAhB,EAAyC3L,SAAS,CAACyR,aAAV,EAAzC,EAAoEzR,SAAS,CAAC0R,aAAV,EAApE,EAA+F1R,SAAS,CAAC2R,kBAAV,EAA/F;AACA,iBAAOtE,MAAP;AACD;;AACD,eAAO,IAAIjN,IAAJ,CAAS+Q,SAAS,GAAGC,IAAZ,GAAmBlL,MAA5B,CAAP;AACD;;AACD,UAAI0L,QAAQ,GAAG;AACbC,yBAAiB,EAAE,MADN;AAEbC,yBAAiB,EAAE,OAFN;AAGbR,gBAAQ,EAAE;AAHG,OAAf;AAKA,UAAIS,SAAS,GAAG,+DAAhB;AACA,UAAIC,SAAS,GAAG,2EAAhB;AACA,UAAIC,aAAa,GAAG,+BAApB;;AACA,eAASnB,eAAT,CAAyB1I,UAAzB,EAAqC;AACnC,YAAIyI,WAAW,GAAG,EAAlB;AACA,YAAIqB,KAAK,GAAG9J,UAAU,CAAC+J,KAAX,CAAiBP,QAAQ,CAACC,iBAA1B,CAAZ;AACA,YAAIO,UAAJ,CAHmC,CAKnC;AACA;;AACA,YAAIF,KAAK,CAAChR,MAAN,GAAe,CAAnB,EAAsB;AACpB,iBAAO2P,WAAP;AACD;;AACD,YAAI,IAAIwB,IAAJ,CAASH,KAAK,CAAC,CAAD,CAAd,CAAJ,EAAwB;AACtBE,oBAAU,GAAGF,KAAK,CAAC,CAAD,CAAlB;AACD,SAFD,MAEO;AACLrB,qBAAW,CAACtQ,IAAZ,GAAmB2R,KAAK,CAAC,CAAD,CAAxB;AACAE,oBAAU,GAAGF,KAAK,CAAC,CAAD,CAAlB;;AACA,cAAIN,QAAQ,CAACE,iBAAT,CAA2BO,IAA3B,CAAgCxB,WAAW,CAACtQ,IAA5C,CAAJ,EAAuD;AACrDsQ,uBAAW,CAACtQ,IAAZ,GAAmB6H,UAAU,CAAC+J,KAAX,CAAiBP,QAAQ,CAACE,iBAA1B,EAA6C,CAA7C,CAAnB;AACAM,sBAAU,GAAGhK,UAAU,CAACkK,MAAX,CAAkBzB,WAAW,CAACtQ,IAAZ,CAAiBW,MAAnC,EAA2CkH,UAAU,CAAClH,MAAtD,CAAb;AACD;AACF;;AACD,YAAIkR,UAAJ,EAAgB;AACd,cAAIlJ,KAAK,GAAG0I,QAAQ,CAACN,QAAT,CAAkBiB,IAAlB,CAAuBH,UAAvB,CAAZ;;AACA,cAAIlJ,KAAJ,EAAW;AACT2H,uBAAW,CAACO,IAAZ,GAAmBgB,UAAU,CAAC7E,OAAX,CAAmBrE,KAAK,CAAC,CAAD,CAAxB,EAA6B,EAA7B,CAAnB;AACA2H,uBAAW,CAACS,QAAZ,GAAuBpI,KAAK,CAAC,CAAD,CAA5B;AACD,WAHD,MAGO;AACL2H,uBAAW,CAACO,IAAZ,GAAmBgB,UAAnB;AACD;AACF;;AACD,eAAOvB,WAAP;AACD;;AACD,eAASG,SAAT,CAAmB5I,UAAnB,EAA+BwI,gBAA/B,EAAiD;AAC/C,YAAI4B,KAAK,GAAG,IAAIC,MAAJ,CAAW,0BAA0B,IAAI7B,gBAA9B,IAAkD,qBAAlD,IAA2E,IAAIA,gBAA/E,IAAmG,MAA9G,CAAZ;AACA,YAAI8B,QAAQ,GAAGtK,UAAU,CAACkD,KAAX,CAAiBkH,KAAjB,CAAf,CAF+C,CAG/C;;AACA,YAAI,CAACE,QAAL,EAAe,OAAO;AACpBxS,cAAI,EAAEsE,GADc;AAEpB0M,wBAAc,EAAE;AAFI,SAAP;AAIf,YAAIhR,IAAI,GAAGwS,QAAQ,CAAC,CAAD,CAAR,GAAcC,QAAQ,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAtB,GAAsC,IAAjD;AACA,YAAIE,OAAO,GAAGF,QAAQ,CAAC,CAAD,CAAR,GAAcC,QAAQ,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAtB,GAAsC,IAApD,CAT+C,CAW/C;;AACA,eAAO;AACLxS,cAAI,EAAE0S,OAAO,KAAK,IAAZ,GAAmB1S,IAAnB,GAA0B0S,OAAO,GAAG,GADrC;AAEL1B,wBAAc,EAAE9I,UAAU,CAACyK,KAAX,CAAiB,CAACH,QAAQ,CAAC,CAAD,CAAR,IAAeA,QAAQ,CAAC,CAAD,CAAxB,EAA6BxR,MAA9C;AAFX,SAAP;AAID;;AACD,eAAS+P,SAAT,CAAmB7I,UAAnB,EAA+BlI,IAA/B,EAAqC;AACnC;AACA,YAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,IAAIE,IAAJ,CAASoE,GAAT,CAAP;AACnB,YAAIkO,QAAQ,GAAGtK,UAAU,CAACkD,KAAX,CAAiByG,SAAjB,CAAf,CAHmC,CAInC;;AACA,YAAI,CAACW,QAAL,EAAe,OAAO,IAAItS,IAAJ,CAASoE,GAAT,CAAP;AACf,YAAIsO,UAAU,GAAG,CAAC,CAACJ,QAAQ,CAAC,CAAD,CAA3B;AACA,YAAIhD,SAAS,GAAGqD,aAAa,CAACL,QAAQ,CAAC,CAAD,CAAT,CAA7B;AACA,YAAItN,KAAK,GAAG2N,aAAa,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAb,GAA6B,CAAzC;AACA,YAAI9P,GAAG,GAAGmQ,aAAa,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAvB;AACA,YAAI9D,IAAI,GAAGmE,aAAa,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAxB;AACA,YAAIM,SAAS,GAAGD,aAAa,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAb,GAA6B,CAA7C;;AACA,YAAII,UAAJ,EAAgB;AACd,cAAI,CAACG,gBAAgB,CAAC/S,IAAD,EAAO0O,IAAP,EAAaoE,SAAb,CAArB,EAA8C;AAC5C,mBAAO,IAAI5S,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,iBAAO0O,gBAAgB,CAAChT,IAAD,EAAO0O,IAAP,EAAaoE,SAAb,CAAvB;AACD,SALD,MAKO;AACL,cAAIzS,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;;AACA,cAAI,CAAC+S,YAAY,CAACjT,IAAD,EAAOkF,KAAP,EAAcxC,GAAd,CAAb,IAAmC,CAACwQ,qBAAqB,CAAClT,IAAD,EAAOwP,SAAP,CAA7D,EAAgF;AAC9E,mBAAO,IAAItP,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACDjE,cAAI,CAAC8S,cAAL,CAAoBnT,IAApB,EAA0BkF,KAA1B,EAAiCrE,IAAI,CAACuS,GAAL,CAAS5D,SAAT,EAAoB9M,GAApB,CAAjC;AACA,iBAAOrC,IAAP;AACD;AACF;;AACD,eAASwS,aAAT,CAAuB7K,KAAvB,EAA8B;AAC5B,eAAOA,KAAK,GAAGyK,QAAQ,CAACzK,KAAD,CAAX,GAAqB,CAAjC;AACD;;AACD,eAASmJ,SAAT,CAAmBe,UAAnB,EAA+B;AAC7B,YAAIM,QAAQ,GAAGN,UAAU,CAAC9G,KAAX,CAAiB0G,SAAjB,CAAf;AACA,YAAI,CAACU,QAAL,EAAe,OAAOlO,GAAP,CAFc,CAEF;;AAE3B,YAAIiE,KAAK,GAAG8K,aAAa,CAACb,QAAQ,CAAC,CAAD,CAAT,CAAzB;AACA,YAAIlI,OAAO,GAAG+I,aAAa,CAACb,QAAQ,CAAC,CAAD,CAAT,CAA3B;AACA,YAAI7H,OAAO,GAAG0I,aAAa,CAACb,QAAQ,CAAC,CAAD,CAAT,CAA3B;;AACA,YAAI,CAACc,YAAY,CAAC/K,KAAD,EAAQ+B,OAAR,EAAiBK,OAAjB,CAAjB,EAA4C;AAC1C,iBAAOrG,GAAP;AACD;;AACD,eAAOiE,KAAK,GAAG,sEAAR,GAA6B+B,OAAO,GAAG,wEAAvC,GAA8DK,OAAO,GAAG,IAA/E;AACD;;AACD,eAAS0I,aAAT,CAAuBrL,KAAvB,EAA8B;AAC5B,eAAOA,KAAK,IAAIuL,UAAU,CAACvL,KAAK,CAACqF,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAD,CAAnB,IAAgD,CAAvD;AACD;;AACD,eAASgE,aAAT,CAAuBmC,cAAvB,EAAuC;AACrC,YAAIA,cAAc,KAAK,GAAvB,EAA4B,OAAO,CAAP;AAC5B,YAAIhB,QAAQ,GAAGgB,cAAc,CAACpI,KAAf,CAAqB2G,aAArB,CAAf;AACA,YAAI,CAACS,QAAL,EAAe,OAAO,CAAP;AACf,YAAI7R,IAAI,GAAG6R,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAAhB,GAAsB,CAAC,CAAvB,GAA2B,CAAtC;AACA,YAAIjK,KAAK,GAAGkK,QAAQ,CAACD,QAAQ,CAAC,CAAD,CAAT,CAApB;AACA,YAAIlI,OAAO,GAAGkI,QAAQ,CAAC,CAAD,CAAR,IAAeC,QAAQ,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAvB,IAAwC,CAAtD;;AACA,YAAI,CAACiB,gBAAgB,CAAClL,KAAD,EAAQ+B,OAAR,CAArB,EAAuC;AACrC,iBAAOhG,GAAP;AACD;;AACD,eAAO3D,IAAI,IAAI4H,KAAK,GAAG,sEAAR,GAA6B+B,OAAO,GAAG,wEAA3C,CAAX;AACD;;AACD,eAAS0I,gBAAT,CAA0BU,WAA1B,EAAuChF,IAAvC,EAA6ChM,GAA7C,EAAkD;AAChD,YAAIrC,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;AACAG,YAAI,CAAC8S,cAAL,CAAoBO,WAApB,EAAiC,CAAjC,EAAoC,CAApC;AACA,YAAIC,kBAAkB,GAAGtT,IAAI,CAACuC,SAAL,MAAoB,CAA7C;AACA,YAAIG,IAAI,GAAG,CAAC2L,IAAI,GAAG,CAAR,IAAa,CAAb,GAAiBhM,GAAjB,GAAuB,CAAvB,GAA2BiR,kBAAtC;AACAtT,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAApC;AACA,eAAO1C,IAAP;AACD,O,CAED;AAEA;;;AACA,UAAIuT,YAAY,GAAG,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,CAAnB;;AACA,eAASC,eAAT,CAAyB7T,IAAzB,EAA+B;AAC7B,eAAOA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAA5D;AACD;;AACD,eAASiT,YAAT,CAAsBjT,IAAtB,EAA4BkF,KAA5B,EAAmC7E,IAAnC,EAAyC;AACvC,eAAO6E,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAAvB,IAA6B7E,IAAI,IAAI,CAArC,IAA0CA,IAAI,KAAKuT,YAAY,CAAC1O,KAAD,CAAZ,KAAwB2O,eAAe,CAAC7T,IAAD,CAAf,GAAwB,EAAxB,GAA6B,EAArD,CAAL,CAArD;AACD;;AACD,eAASkT,qBAAT,CAA+BlT,IAA/B,EAAqCwP,SAArC,EAAgD;AAC9C,eAAOA,SAAS,IAAI,CAAb,IAAkBA,SAAS,KAAKqE,eAAe,CAAC7T,IAAD,CAAf,GAAwB,GAAxB,GAA8B,GAAnC,CAAlC;AACD;;AACD,eAAS+S,gBAAT,CAA0Be,KAA1B,EAAiCpF,IAAjC,EAAuChM,GAAvC,EAA4C;AAC1C,eAAOgM,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,EAArB,IAA2BhM,GAAG,IAAI,CAAlC,IAAuCA,GAAG,IAAI,CAArD;AACD;;AACD,eAAS4Q,YAAT,CAAsB/K,KAAtB,EAA6B+B,OAA7B,EAAsCK,OAAtC,EAA+C;AAC7C,YAAIpC,KAAK,KAAK,EAAd,EAAkB;AAChB,iBAAO+B,OAAO,KAAK,CAAZ,IAAiBK,OAAO,KAAK,CAApC;AACD;;AACD,eAAOA,OAAO,IAAI,CAAX,IAAgBA,OAAO,GAAG,EAA1B,IAAgCL,OAAO,IAAI,CAA3C,IAAgDA,OAAO,GAAG,EAA1D,IAAgE/B,KAAK,IAAI,CAAzE,IAA8EA,KAAK,GAAG,EAA7F;AACD;;AACD,eAASkL,gBAAT,CAA0BM,MAA1B,EAAkCzJ,OAAlC,EAA2C;AACzC,eAAOA,OAAO,IAAI,CAAX,IAAgBA,OAAO,IAAI,EAAlC;;;;;;;;;;;;;;;;;;AClOF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAAS0J,WAAT,CAAqB3T,IAArB,EAA2BqC,GAA3B,EAAgC;AAC7C,mFAAa,CAAb,EAAgB3C,SAAhB;AACA,YAAIkU,KAAK,GAAG,iEAAO5T,IAAP,IAAeqC,GAA3B;AACA,YAAIuR,KAAK,IAAI,CAAb,EAAgBA,KAAK,IAAI,CAAT;AAChB,eAAO,kEAAQ5T,IAAR,EAAc4T,KAAd,CAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AACe;;;AAAA;;;;;;;;;;;;;;;;ACDf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASpO,eAAT,CAAyB/F,SAAzB,EAAoC;AACjD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI8F,YAAY,GAAGvF,IAAI,CAACwF,eAAL,EAAnB;AACA,eAAOD,YAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Be,eAASsO,iBAAT,CAA2BC,QAA3B,EAAqC;AAClD,mFAAa,CAAb,EAAgBpU,SAAhB;AACA,YAAI,kFAAQoU,QAAR,MAAsB,QAA1B,EAAoC,MAAM,IAAI/P,KAAJ,CAAU,4BAAV,CAAN;AACpC,YAAIgQ,eAAe,GAAGD,QAAQ,CAACpJ,KAA/B;AAAA,YACEA,KAAK,GAAGqJ,eAAe,KAAK,KAAK,CAAzB,GAA6B,CAA7B,GAAiCA,eAD3C;AAAA,YAEEC,gBAAgB,GAAGF,QAAQ,CAACrJ,MAF9B;AAAA,YAGEA,MAAM,GAAGuJ,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,CAA9B,GAAkCA,gBAH7C;AAAA,YAIEC,cAAc,GAAGH,QAAQ,CAACtJ,IAJ5B;AAAA,YAKEA,IAAI,GAAGyJ,cAAc,KAAK,KAAK,CAAxB,GAA4B,CAA5B,GAAgCA,cALzC;AAAA,YAMEC,eAAe,GAAGJ,QAAQ,CAAC5L,KAN7B;AAAA,YAOEA,KAAK,GAAGgM,eAAe,KAAK,KAAK,CAAzB,GAA6B,CAA7B,GAAiCA,eAP3C;AAAA,YAQEC,iBAAiB,GAAGL,QAAQ,CAAC7J,OAR/B;AAAA,YASEA,OAAO,GAAGkK,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,CAA/B,GAAmCA,iBAT/C;AAAA,YAUEC,iBAAiB,GAAGN,QAAQ,CAACxJ,OAV/B;AAAA,YAWEA,OAAO,GAAG8J,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,CAA/B,GAAmCA,iBAX/C;AAYA,eAAO,IAAI1P,MAAJ,CAAWgG,KAAX,EAAkB,GAAlB,EAAuBhG,MAAvB,CAA8B+F,MAA9B,EAAsC,GAAtC,EAA2C/F,MAA3C,CAAkD8F,IAAlD,EAAwD,IAAxD,EAA8D9F,MAA9D,CAAqEwD,KAArE,EAA4E,GAA5E,EAAiFxD,MAAjF,CAAwFuF,OAAxF,EAAiG,GAAjG,EAAsGvF,MAAtG,CAA6G4F,OAA7G,EAAsH,GAAtH,CAAP;;;;;;;;;;;;;;;;;;AC3CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS+J,UAAT,CAAoB5U,SAApB,EAA+B6U,YAA/B,EAA6C;AAC1D,mFAAa,CAAb,EAAgB5U,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIwK,OAAO,GAAG,wEAAUqK,YAAV,CAAd;AACAtU,YAAI,CAACqU,UAAL,CAAgBpK,OAAhB;AACA,eAAOjK,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,eAASuU,mBAAT,CAA6BpO,aAA7B,EAA4C;AACzD,mFAAa,CAAb,EAAgBzG,SAAhB;AACA,YAAI2G,QAAQ,GAAGF,aAAa,IAAI,EAAhC;AACA,YAAIG,SAAS,GAAG,iEAAOD,QAAQ,CAACE,KAAhB,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAIC,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd;AACA,YAAIoD,KAAK,GAAG,EAAZ,CANyD,CAQzD;;AACA,YAAI,EAAEL,SAAS,CAAC/C,OAAV,MAAuBmD,OAAzB,CAAJ,EAAuC;AACrC,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIwE,WAAW,GAAGN,SAAlB;AACAM,mBAAW,CAAC7G,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACA6G,mBAAW,CAAC3G,OAAZ,CAAoB,CAApB;;AACA,eAAO2G,WAAW,CAACrD,OAAZ,MAAyBmD,OAAhC,EAAyC;AACvCC,eAAK,CAACG,IAAN,CAAW,iEAAOF,WAAP,CAAX;AACAA,qBAAW,CAAC4N,QAAZ,CAAqB5N,WAAW,CAAC9B,QAAZ,KAAyB,CAA9C;AACD;;AACD,eAAO6B,KAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtCW8N,0BAA0B;AAKrC,4CAAsBC,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJL,eAAAC,GAAA;AACA,eAAAC,aAAA;AAG0B;;AALN;AAAA;AAAA,iBAOrC,+BAAsB;AACpB,mBAAO,KAAKF,IAAL,CACJG,GADI,WACG,KAAKF,GADR,yBAEJG,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAXoC;AAAA;AAAA,iBAarC,yBAAgB;AACd,mBAAO,KAAKJ,IAAL,CAAUG,GAAV,WAAiB,KAAKF,GAAtB,aAAmCG,IAAnC,CAAwC,4DAAK,CAAL,CAAxC,EAAiD,6DAAM,CAAN,CAAjD,CAAP;AACD;AAfoC;AAAA;AAAA,iBAiBrC,+BAAsBC,EAAtB,EAAgC;AAC9B,mBAAO,KAAKL,IAAL,CACNG,GADM,WACC,KAAKF,GADN,gCAC+BI,EAD/B,EAAP;AAED;AApBoC;AAAA;AAAA,iBAsBrC,wBAAe;AACb,mBAAO,KAAKL,IAAL,CAAUG,GAAV,WAAiB,KAAKD,aAAtB,0CAA0EE,IAA1E,CAA+E,4DAAK,CAAL,CAA/E,EAAwF,6DAAM,CAAN,CAAxF,CAAP;AACD;AAxBoC;AAAA;AAAA,iBA0BrC,6BAAoBE,MAApB,EAA2B;AACzB,mBAAO,KAAKN,IAAL,CACJG,GADI,WACG,KAAKF,GADR,yBAEH;AACEK,oBAAM,EAAEA;AADV,aAFG,EAKJF,IALI,CAKC,4DAAK,CAAL,CALD,EAKU,6DAAM,CAAN,CALV,CAAP;AAMD;AAjCoC;AAAA;AAAA,iBAmCrC,kCACEG,UADF,EACoB;AAElB,mBAAO,KAAKP,IAAL,CACJG,GADI,WACG,KAAKF,GADR,sCACuCM,UADvC,GAEJH,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAzCoC;AAAA;AAAA,iBA2CrC,gCAAuB;AACrB,mBAAO,KAAKJ,IAAL,CACJG,GADI,WACG,KAAKF,GADR,0BAEJG,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AA/CoC;;AAAA;AAAA,S;;;;gBAZ9B;;;;AAYIL,gCAA0B,6DAHtC,iEAAW;AACVS,kBAAU,EAAE;AADF,OAAX,CAGsC,E,+EAKT,+D,EALS,GAA1BT,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACbb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASU,WAAT,CAAqBnV,IAArB,EAA2B;AACxC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIgD,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;;;AAmBe,eAASoS,iBAAT,CAA2B3V,SAA3B,EAAsC;AACnD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAI2V,QAAQ,GAAG,6EAAmB5V,SAAnB,CAAf;AACA,YAAI6V,QAAQ,GAAG,6EAAmB,mEAASD,QAAT,EAAmB,EAAnB,CAAnB,CAAf;AACA,YAAI3S,IAAI,GAAG4S,QAAQ,CAACpH,OAAT,KAAqBmH,QAAQ,CAACnH,OAAT,EAAhC,CAJmD,CAKnD;AACA;AACA;;AACA,eAAO1N,IAAI,CAACiD,KAAL,CAAWf,IAAI,GAAGM,oBAAlB,CAAP;;;;;;;;;;;;;;;;;;AChCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASuS,gBAAT,CAA0BtL,OAA1B,EAAmC;AAChD,mFAAa,CAAb,EAAgBvK,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAW0F,OAAO,GAAG,mEAArB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Be,eAASuL,KAAT,CAAexV,IAAf,EAAqByB,IAArB,EAA2B;AACxC,YAAI8E,KAAK,GAAG9E,IAAI,CAAC8E,KAAjB;AAAA,YACEE,GAAG,GAAGhF,IAAI,CAACgF,GADb;AAEA,mFAAa,CAAb,EAAgB/G,SAAhB;AACA,eAAO,8DAAI,CAAC,8DAAI,CAACM,IAAD,EAAOuG,KAAP,CAAJ,CAAD,EAAqBE,GAArB,CAAJ,CAAP;;;;;;;;;;;;;;;;;;ACjCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASgP,WAAT,CAAqBC,KAArB,EAA4B;AACzC,mFAAa,CAAb,EAAgBhW,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAWmR,KAAK,GAAG,8DAAnB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASC,WAAT,CAAqBlW,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBmW,MAAlB,OAA+B,CAAtC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASrS,OAAT,CAAiB9D,SAAjB,EAA4B;AACzC,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAImR,SAAS,GAAG5Q,IAAI,CAACuD,OAAL,EAAhB;AACA,eAAOqN,SAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASiF,YAAT,CAAsBpW,SAAtB,EAAiCqW,cAAjC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpW,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI0P,SAAS,GAAG,wEAAU2G,cAAV,CAAhB;AACA9V,YAAI,CAACwU,QAAL,CAAc,CAAd;AACAxU,YAAI,CAACC,OAAL,CAAakP,SAAb;AACA,eAAOnP,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS+V,OAAT,CAAiBtW,SAAjB,EAA4BuW,SAA5B,EAAuC;AACpD,mFAAa,CAAb,EAAgBtW,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAG,wEAAUqW,SAAV,CAAX,CAHoD,CAKpD;;AACA,YAAI3R,KAAK,CAACrE,IAAI,CAACuD,OAAL,EAAD,CAAT,EAA2B;AACzB,iBAAO,IAAI1D,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACDjE,YAAI,CAACF,WAAL,CAAiBH,IAAjB;AACA,eAAOK,IAAP;;;;;;;;;;;;;;;;;;AC/BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQoD;;;AAC7C,UAAIiW,iBAAiB,GAAG,aAAa,UAAU/O,OAAV,EAAmB;AAC7D,4FAAU+O,iBAAV,EAA6B/O,OAA7B;;AACA,YAAIC,MAAM,GAAG,uFAAa8O,iBAAb,CAAb;;AACA,iBAASA,iBAAT,GAA6B;AAC3B,cAAI7O,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB6O,iBAAtB;;AACA,eAAK,IAAI5O,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa6O,iBAAb,EAAgC,CAAC;AAC/BvO,aAAG,EAAE,OAD0B;AAE/BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkC;AACvC,oBAAQA,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,uEAAqB,+DAAiB+F,oBAAtC,EAA4D7G,UAA5D,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAO,uEAAqB,+DAAiB8G,KAAtC,EAA6C9G,UAA7C,CAAP;;AACF,mBAAK,MAAL;AACE,uBAAO,uEAAqB,+DAAiB+G,oBAAtC,EAA4D/G,UAA5D,CAAP;;AACF,mBAAK,OAAL;AACE,uBAAO,uEAAqB,+DAAiBgH,uBAAtC,EAA+DhH,UAA/D,CAAP;;AACF,mBAAK,KAAL;AACA;AACE,uBAAO,uEAAqB,+DAAiBiH,QAAtC,EAAgDjH,UAAhD,CAAP;AAXJ;AAaD;AAhB8B,SAAD,EAiB7B;AACDH,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmB+O,KAAnB,EAA0BpH,KAA1B,EAAiC;AACtC,gBAAIoH,KAAK,CAAC9G,cAAV,EAA0B;AACxB,qBAAOjI,IAAP;AACD;;AACD,mBAAO,IAAIH,IAAJ,CAASG,IAAI,CAACuD,OAAL,KAAiBoE,KAA1B,CAAP;AACD;AAPA,SAjB6B,CAAhC;AA0BA,eAAOsO,iBAAP;AACD,OAzC2C,CAyC1C,iDAzC0C,CAArC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAIC,kBAAkB,GAAG,aAAa,UAAUhP,OAAV,EAAmB;AAC9D,4FAAUgP,kBAAV,EAA8BhP,OAA9B;;AACA,YAAIC,MAAM,GAAG,uFAAa+O,kBAAb,CAAb;;AACA,iBAASA,kBAAT,GAA8B;AAC5B,cAAI9O,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB8O,kBAAtB;;AACA,eAAK,IAAI7O,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa8O,kBAAb,EAAiC,CAAC;AAChCxO,aAAG,EAAE,OAD2B;AAEhCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkC;AACvC,gBAAIA,KAAK,KAAK,GAAd,EAAmB;AACjB,qBAAO,qEAAmB,CAAnB,EAAsBd,UAAtB,CAAP;AACD;;AACD,mBAAO,qEAAmBc,KAAK,CAAChI,MAAzB,EAAiCkH,UAAjC,CAAP;AACD;AAP+B,SAAD,EAQ9B;AACDH,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAAC8S,cAAL,CAAoBnL,KAApB,EAA2B,CAA3B,EAA8B,CAA9B;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SAR8B,CAAjC;AAgBA,eAAOkW,kBAAP;AACD,OA/B4C,CA+B3C,iDA/B2C,CAAtC;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,eAASC,oBAAT,CAA8B9P,QAA9B,EAAwC7E,OAAxC,EAAiD;AAC9D,YAAI4E,aAAJ;;AACA,mFAAa,CAAb,EAAgB1G,SAAhB;AACA,YAAI4G,SAAS,GAAG,wEAAc,iEAAOD,QAAQ,CAACE,KAAhB,CAAd,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAI2P,SAAS,GAAG9P,SAAS,CAAC/C,OAAV,EAAhB;AACA,YAAImD,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd;;AACA,YAAI6S,SAAS,IAAI1P,OAAjB,EAA0B;AACxB,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIuE,KAAK,GAAG,EAAZ;AACA,YAAIC,WAAW,GAAGN,SAAlB;AACA,YAAIO,IAAI,GAAGzC,MAAM,CAAC,CAACgC,aAAa,GAAG5E,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACqF,IAA3E,MAAqF,IAArF,IAA6FT,aAAa,KAAK,KAAK,CAApH,GAAwHA,aAAxH,GAAwI,CAAzI,CAAjB;AACA,YAAIS,IAAI,GAAG,CAAP,IAAYxC,KAAK,CAACwC,IAAD,CAArB,EAA6B,MAAM,IAAIzE,UAAJ,CAAe,4DAAf,CAAN;;AAC7B,eAAOwE,WAAW,CAACrD,OAAZ,MAAyBmD,OAAhC,EAAyC;AACvCC,eAAK,CAACG,IAAN,CAAW,iEAAOF,WAAP,CAAX;AACAA,qBAAW,GAAG,qEAAWA,WAAX,EAAwBC,IAAxB,CAAd;AACD;;AACD,eAAOF,KAAP;;;;;;;;;;;;;;;;;;ACpDF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAOoD;;;AAC7C,UAAI0P,eAAe,GAAG,aAAa,UAAUnP,OAAV,EAAmB;AAC3D,4FAAUmP,eAAV,EAA2BnP,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAakP,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAIjP,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBiP,eAAtB;;AACA,eAAK,IAAIhP,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAaiP,eAAb,EAA8B,CAAC;AAC7B3O,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACA,mBAAK,IAAL;AACA,mBAAK,KAAL;AACE,uBAAOoC,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,aAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,KAGDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,QADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CAHN;;AAOF,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,QAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,CAAP;;AAIF,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,MAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,KAGDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,aADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CAHC,IAMDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,QADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CANN;AAlBJ;AA6BD;AAhC4B,SAAD,EAiC3B;AACD9O,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACqL,WAAL,CAAiB,uEAAqB1D,KAArB,CAAjB,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD;AACA,mBAAO3H,IAAP;AACD;AALA,SAjC2B,CAA9B;AAwCA,eAAOqW,eAAP;AACD,OAvDyC,CAuDxC,iDAvDwC,CAAnC;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASI,aAAT,CAAuBhX,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI2R,MAAM,GAAGlW,IAAI,CAAC+D,KAAL,CAAW5E,IAAI,GAAG,EAAlB,IAAwB,EAArC;AACAK,YAAI,CAACF,WAAL,CAAiB4W,MAAjB,EAAyB,CAAzB,EAA4B,CAA5B;AACA1W,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEe,eAAS2W,UAAT,CAAoB3W,IAApB,EAA0B4W,cAA1B,EAA0CC,aAA1C,EAAyD;AACtE,YAAIC,cAAJ;;AACA,mFAAa,CAAb,EAAgBpX,SAAhB;AACA,YAAIqX,aAAJ;;AACA,YAAIC,eAAe,CAACJ,cAAD,CAAnB,EAAqC;AACnCG,uBAAa,GAAGH,cAAhB;AACD,SAFD,MAEO;AACLC,uBAAa,GAAGD,cAAhB;AACD;;AACD,eAAO,IAAIK,IAAI,CAACC,cAAT,CAAwB,CAACJ,cAAc,GAAGD,aAAlB,MAAqC,IAArC,IAA6CC,cAAc,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,cAAc,CAAC3U,MAAzH,EAAiI4U,aAAjI,EAAgJlH,MAAhJ,CAAuJ7P,IAAvJ,CAAP;AACD;;AACD,eAASgX,eAAT,CAAyBG,IAAzB,EAA+B;AAC7B,eAAOA,IAAI,KAAKC,SAAT,IAAsB,EAAE,YAAYD,IAAd,CAA7B;;;;;;;;;;;;;;;;;;ACnFF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASE,cAAT,CAAwB5X,SAAxB,EAAmC6X,gBAAnC,EAAqD;AAClE,mFAAa,CAAb,EAAgB5X,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4T,WAAW,GAAG,wEAAUiE,gBAAV,CAAlB;AACA,YAAI5U,IAAI,GAAG,mFAAyB1C,IAAzB,EAA+B,6EAAmBA,IAAnB,CAA/B,CAAX;AACA,YAAIJ,eAAe,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAtB;AACAD,uBAAe,CAACE,WAAhB,CAA4BuT,WAA5B,EAAyC,CAAzC,EAA4C,CAA5C;AACAzT,uBAAe,CAACG,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACAC,YAAI,GAAG,6EAAmBJ,eAAnB,CAAP;AACAI,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAA9B;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;ACpCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASuX,eAAT,CAAyB7M,KAAzB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBhL,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAWmG,KAAK,GAAG,kEAAnB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS8M,UAAT,CAAoBxX,IAApB,EAA0B;AACvC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASyX,qBAAT,CAA+BxN,OAA/B,EAAwC;AACrD,mFAAa,CAAb,EAAgBvK,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAW0F,OAAO,GAAG,wEAArB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCe,eAASyN,WAAT,CAAqBjY,SAArB,EAAgC+B,OAAhC,EAAyC;AACtD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBgW,qBAAxB,EAA+C9V,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI9C,cAAc,GAAG,wFAArB;AACA,YAAI2V,qBAAqB,GAAG,wEAAU,CAACnW,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACgW,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC8V,qBAAjc,MAA4d,IAA5d,IAAoejW,KAAK,KAAK,KAAK,CAAnf,GAAufA,KAAvf,GAA+fM,cAAc,CAAC2V,qBAAvhB,MAAkjB,IAAljB,IAA0jBlW,KAAK,KAAK,KAAK,CAAzkB,GAA6kBA,KAA7kB,GAAqlB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAA90B,MAAy2B,IAAz2B,IAAi3BnW,IAAI,KAAK,KAAK,CAA/3B,GAAm4BA,IAAn4B,GAA04B,CAAp5B,CAA5B,CANsD,CAQtD;;AACA,YAAI,EAAEmW,qBAAqB,IAAI,CAAzB,IAA8BA,qBAAqB,IAAI,CAAzD,CAAJ,EAAiE;AAC/D,gBAAM,IAAIxV,UAAJ,CAAe,2DAAf,CAAN;AACD;;AACD,YAAIyV,mBAAmB,GAAG,IAAIhY,IAAJ,CAAS,CAAT,CAA1B;AACAgY,2BAAmB,CAAC/X,WAApB,CAAgCH,IAAI,GAAG,CAAvC,EAA0C,CAA1C,EAA6CiY,qBAA7C;AACAC,2BAAmB,CAAC9X,QAApB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC;AACA,YAAI+X,eAAe,GAAG,sEAAYD,mBAAZ,EAAiCrW,OAAjC,CAAtB;AACA,YAAIuW,mBAAmB,GAAG,IAAIlY,IAAJ,CAAS,CAAT,CAA1B;AACAkY,2BAAmB,CAACjY,WAApB,CAAgCH,IAAhC,EAAsC,CAAtC,EAAyCiY,qBAAzC;AACAG,2BAAmB,CAAChY,QAApB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC;AACA,YAAIiY,eAAe,GAAG,sEAAYD,mBAAZ,EAAiCvW,OAAjC,CAAtB;;AACA,YAAIxB,IAAI,CAACuD,OAAL,MAAkBuU,eAAe,CAACvU,OAAhB,EAAtB,EAAiD;AAC/C,iBAAO5D,IAAI,GAAG,CAAd;AACD,SAFD,MAEO,IAAIK,IAAI,CAACuD,OAAL,MAAkByU,eAAe,CAACzU,OAAhB,EAAtB,EAAiD;AACtD,iBAAO5D,IAAP;AACD,SAFM,MAEA;AACL,iBAAOA,IAAI,GAAG,CAAd;AACD;;;;;;;;;;;;;;;;;;ACtEH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAIsY,2BAA2B,GAAG,aAAa,UAAU/Q,OAAV,EAAmB;AACvE,4FAAU+Q,2BAAV,EAAuC/Q,OAAvC;;AACA,YAAIC,MAAM,GAAG,uFAAa8Q,2BAAb,CAAb;;AACA,iBAASA,2BAAT,GAAuC;AACrC,cAAI7Q,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB6Q,2BAAtB;;AACA,eAAK,IAAI5Q,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,GAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa6Q,2BAAb,EAA0C,CAAC;AACzCvQ,aAAG,EAAE,OADoC;AAEzCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2B;AAChC,mBAAO,uEAAqBA,UAArB,CAAP;AACD;AAJwC,SAAD,EAKvC;AACDH,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAaC,KAAb,EAAoBC,MAApB,EAA4BL,KAA5B,EAAmC;AACxC,mBAAO,CAAC,IAAI9H,IAAJ,CAAS8H,KAAT,CAAD,EAAkB;AACvBM,4BAAc,EAAE;AADO,aAAlB,CAAP;AAGD;AANA,SALuC,CAA1C;AAaA,eAAOgQ,2BAAP;AACD,OA5BqD,CA4BpD,iDA5BoD,CAA/C;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCe,eAASC,GAAT,CAAalY,IAAb,EAAmB8T,QAAnB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBpU,SAAhB;AACA,YAAI,CAACoU,QAAD,IAAa,kFAAQA,QAAR,MAAsB,QAAvC,EAAiD,OAAO,IAAIjU,IAAJ,CAASoE,GAAT,CAAP;AACjD,YAAIyG,KAAK,GAAGoJ,QAAQ,CAACpJ,KAAT,GAAiB,wEAAUoJ,QAAQ,CAACpJ,KAAnB,CAAjB,GAA6C,CAAzD;AACA,YAAID,MAAM,GAAGqJ,QAAQ,CAACrJ,MAAT,GAAkB,wEAAUqJ,QAAQ,CAACrJ,MAAnB,CAAlB,GAA+C,CAA5D;AACA,YAAIiL,KAAK,GAAG5B,QAAQ,CAAC4B,KAAT,GAAiB,wEAAU5B,QAAQ,CAAC4B,KAAnB,CAAjB,GAA6C,CAAzD;AACA,YAAIlL,IAAI,GAAGsJ,QAAQ,CAACtJ,IAAT,GAAgB,wEAAUsJ,QAAQ,CAACtJ,IAAnB,CAAhB,GAA2C,CAAtD;AACA,YAAItC,KAAK,GAAG4L,QAAQ,CAAC5L,KAAT,GAAiB,wEAAU4L,QAAQ,CAAC5L,KAAnB,CAAjB,GAA6C,CAAzD;AACA,YAAI+B,OAAO,GAAG6J,QAAQ,CAAC7J,OAAT,GAAmB,wEAAU6J,QAAQ,CAAC7J,OAAnB,CAAnB,GAAiD,CAA/D;AACA,YAAIK,OAAO,GAAGwJ,QAAQ,CAACxJ,OAAT,GAAmB,wEAAUwJ,QAAQ,CAACxJ,OAAnB,CAAnB,GAAiD,CAA/D,CAT0C,CAW1C;;AACA,YAAI6N,iBAAiB,GAAG,oEAAUnY,IAAV,EAAgByK,MAAM,GAAGC,KAAK,GAAG,EAAjC,CAAxB,CAZ0C,CAc1C;;AACA,YAAI0N,eAAe,GAAG,kEAAQD,iBAAR,EAA2B3N,IAAI,GAAGkL,KAAK,GAAG,CAA1C,CAAtB,CAf0C,CAiB1C;;AACA,YAAI2C,YAAY,GAAGpO,OAAO,GAAG/B,KAAK,GAAG,EAArC;AACA,YAAIoQ,YAAY,GAAGhO,OAAO,GAAG+N,YAAY,GAAG,EAA5C;AACA,YAAIE,OAAO,GAAGD,YAAY,GAAG,IAA7B;AACA,YAAIE,SAAS,GAAG,IAAI3Y,IAAJ,CAASuY,eAAe,CAAC7U,OAAhB,KAA4BgV,OAArC,CAAhB;AACA,eAAOC,SAAP;;;;;;;;;;;;;;;;;;AClEF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFe,eAASC,mBAAT,CAA6BhZ,SAA7B,EAAwC+B,OAAxC,EAAiD;AAC9D,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,eAAO,yEAAgBD,SAAhB,EAA2BI,IAAI,CAACmH,GAAL,EAA3B,EAAuCxF,OAAvC,CAAP;;;;;;;;;;;;;;;;;;AC1FF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASkX,eAAT,CAAyBjZ,SAAzB,EAAoCqD,WAApC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIkZ,gBAAgB,GAAG,oEAAU3Y,IAAV,CAAvB;AACA,YAAI+C,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,YAAIuB,KAAK,CAACtB,MAAD,CAAT,EAAmB,OAAO,IAAIlD,IAAJ,CAASoE,GAAT,CAAP;AACnB,YAAIiE,KAAK,GAAGlI,IAAI,CAACiF,QAAL,EAAZ;AACA,YAAI3E,IAAI,GAAGyC,MAAM,GAAG,CAAT,GAAa,CAAC,CAAd,GAAkB,CAA7B;AACA,YAAI6V,SAAS,GAAG,wEAAU7V,MAAM,GAAG,CAAnB,CAAhB;AACA/C,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiB0Y,SAAS,GAAG,CAA1C,EAT8D,CAW9D;;AACA,YAAIC,QAAQ,GAAGrY,IAAI,CAACC,GAAL,CAASsC,MAAM,GAAG,CAAlB,CAAf,CAZ8D,CAc9D;;AACA,eAAO8V,QAAQ,GAAG,CAAlB,EAAqB;AACnB7Y,cAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBI,IAA9B;AACA,cAAI,CAAC,oEAAUN,IAAV,CAAL,EAAsB6Y,QAAQ,IAAI,CAAZ;AACvB,SAlB6D,CAoB9D;AACA;AACA;;;AACA,YAAIF,gBAAgB,IAAI,oEAAU3Y,IAAV,CAApB,IAAuC+C,MAAM,KAAK,CAAtD,EAAyD;AACvD;AACA;AACA,cAAI,qEAAW/C,IAAX,CAAJ,EAAsBA,IAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,MAAkBI,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAC,CAAlC,CAAb;AACtB,cAAI,mEAASN,IAAT,CAAJ,EAAoBA,IAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,MAAkBI,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAC,CAAlC,CAAb;AACrB,SA5B6D,CA8B9D;;;AACAN,YAAI,CAACD,QAAL,CAAcmI,KAAd;AACA,eAAOlI,IAAP;;;;;;;;;;;;;;;;;;ACxDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,eAAS8Y,QAAT,CAAkBC,aAAlB,EAAiCC,KAAjC,EAAwC;AAC7C,YAAI,CAACD,aAAL,EAAoB;AAClB,iBAAOA,aAAP;AACD;;AACD,eAAO;AACLpR,eAAK,EAAEqR,KAAK,CAACD,aAAa,CAACpR,KAAf,CADP;AAELsR,cAAI,EAAEF,aAAa,CAACE;AAFf,SAAP;AAID;;AACM,eAASC,mBAAT,CAA6BC,OAA7B,EAAsCtR,UAAtC,EAAkD;AACvD,YAAIuR,WAAW,GAAGvR,UAAU,CAACkD,KAAX,CAAiBoO,OAAjB,CAAlB;;AACA,YAAI,CAACC,WAAL,EAAkB;AAChB,iBAAO,IAAP;AACD;;AACD,eAAO;AACLzR,eAAK,EAAEyK,QAAQ,CAACgH,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CADV;AAELH,cAAI,EAAEpR,UAAU,CAACyK,KAAX,CAAiB8G,WAAW,CAAC,CAAD,CAAX,CAAezY,MAAhC;AAFD,SAAP;AAID;;AACM,eAAS0Y,oBAAT,CAA8BF,OAA9B,EAAuCtR,UAAvC,EAAmD;AACxD,YAAIuR,WAAW,GAAGvR,UAAU,CAACkD,KAAX,CAAiBoO,OAAjB,CAAlB;;AACA,YAAI,CAACC,WAAL,EAAkB;AAChB,iBAAO,IAAP;AACD,SAJuD,CAMxD;;;AACA,YAAIA,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAvB,EAA4B;AAC1B,iBAAO;AACLzR,iBAAK,EAAE,CADF;AAELsR,gBAAI,EAAEpR,UAAU,CAACyK,KAAX,CAAiB,CAAjB;AAFD,WAAP;AAID;;AACD,YAAIhS,IAAI,GAAG8Y,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAnB,GAAyB,CAAzB,GAA6B,CAAC,CAAzC;AACA,YAAIlR,KAAK,GAAGkR,WAAW,CAAC,CAAD,CAAX,GAAiBhH,QAAQ,CAACgH,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAzB,GAAgD,CAA5D;AACA,YAAInP,OAAO,GAAGmP,WAAW,CAAC,CAAD,CAAX,GAAiBhH,QAAQ,CAACgH,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAzB,GAAgD,CAA9D;AACA,YAAI9O,OAAO,GAAG8O,WAAW,CAAC,CAAD,CAAX,GAAiBhH,QAAQ,CAACgH,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAzB,GAAgD,CAA9D;AACA,eAAO;AACLzR,eAAK,EAAErH,IAAI,IAAI4H,KAAK,GAAG,sEAAR,GAA6B+B,OAAO,GAAG,wEAAvC,GAA8DK,OAAO,GAAG,wEAA5E,CADN;AAEL2O,cAAI,EAAEpR,UAAU,CAACyK,KAAX,CAAiB8G,WAAW,CAAC,CAAD,CAAX,CAAezY,MAAhC;AAFD,SAAP;AAID;;AACM,eAAS2Y,oBAAT,CAA8BzR,UAA9B,EAA0C;AAC/C,eAAOqR,mBAAmB,CAAC,8DAAgBK,eAAjB,EAAkC1R,UAAlC,CAA1B;AACD;;AACM,eAAS2R,YAAT,CAAsBC,CAAtB,EAAyB5R,UAAzB,EAAqC;AAC1C,gBAAQ4R,CAAR;AACE,eAAK,CAAL;AACE,mBAAOP,mBAAmB,CAAC,8DAAgBQ,WAAjB,EAA8B7R,UAA9B,CAA1B;;AACF,eAAK,CAAL;AACE,mBAAOqR,mBAAmB,CAAC,8DAAgBS,SAAjB,EAA4B9R,UAA5B,CAA1B;;AACF,eAAK,CAAL;AACE,mBAAOqR,mBAAmB,CAAC,8DAAgBU,WAAjB,EAA8B/R,UAA9B,CAA1B;;AACF,eAAK,CAAL;AACE,mBAAOqR,mBAAmB,CAAC,8DAAgBW,UAAjB,EAA6BhS,UAA7B,CAA1B;;AACF;AACE,mBAAOqR,mBAAmB,CAAC,IAAIhH,MAAJ,CAAW,YAAYuH,CAAZ,GAAgB,GAA3B,CAAD,EAAkC5R,UAAlC,CAA1B;AAVJ;AAYD;;AACM,eAASiS,kBAAT,CAA4BL,CAA5B,EAA+B5R,UAA/B,EAA2C;AAChD,gBAAQ4R,CAAR;AACE,eAAK,CAAL;AACE,mBAAOP,mBAAmB,CAAC,8DAAgBa,iBAAjB,EAAoClS,UAApC,CAA1B;;AACF,eAAK,CAAL;AACE,mBAAOqR,mBAAmB,CAAC,8DAAgBc,eAAjB,EAAkCnS,UAAlC,CAA1B;;AACF,eAAK,CAAL;AACE,mBAAOqR,mBAAmB,CAAC,8DAAgBe,iBAAjB,EAAoCpS,UAApC,CAA1B;;AACF,eAAK,CAAL;AACE,mBAAOqR,mBAAmB,CAAC,8DAAgBgB,gBAAjB,EAAmCrS,UAAnC,CAA1B;;AACF;AACE,mBAAOqR,mBAAmB,CAAC,IAAIhH,MAAJ,CAAW,cAAcuH,CAAd,GAAkB,GAA7B,CAAD,EAAoC5R,UAApC,CAA1B;AAVJ;AAYD;;AACM,eAASsS,oBAAT,CAA8B7D,SAA9B,EAAyC;AAC9C,gBAAQA,SAAR;AACE,eAAK,SAAL;AACE,mBAAO,CAAP;;AACF,eAAK,SAAL;AACE,mBAAO,EAAP;;AACF,eAAK,IAAL;AACA,eAAK,MAAL;AACA,eAAK,WAAL;AACE,mBAAO,EAAP;;AACF,eAAK,IAAL;AACA,eAAK,UAAL;AACA,eAAK,OAAL;AACA;AACE,mBAAO,CAAP;AAbJ;AAeD;;AACM,eAAS8D,qBAAT,CAA+BC,YAA/B,EAA6CC,WAA7C,EAA0D;AAC/D,YAAIC,WAAW,GAAGD,WAAW,GAAG,CAAhC,CAD+D,CAE/D;AACA;AACA;AACA;;AACA,YAAIE,cAAc,GAAGD,WAAW,GAAGD,WAAH,GAAiB,IAAIA,WAArD;AACA,YAAIxN,MAAJ;;AACA,YAAI0N,cAAc,IAAI,EAAtB,EAA0B;AACxB1N,gBAAM,GAAGuN,YAAY,IAAI,GAAzB;AACD,SAFD,MAEO;AACL,cAAII,QAAQ,GAAGD,cAAc,GAAG,EAAhC;AACA,cAAIE,eAAe,GAAGla,IAAI,CAAC+D,KAAL,CAAWkW,QAAQ,GAAG,GAAtB,IAA6B,GAAnD;AACA,cAAIE,iBAAiB,GAAGN,YAAY,IAAII,QAAQ,GAAG,GAAnD;AACA3N,gBAAM,GAAGuN,YAAY,GAAGK,eAAf,IAAkCC,iBAAiB,GAAG,GAAH,GAAS,CAA5D,CAAT;AACD;;AACD,eAAOJ,WAAW,GAAGzN,MAAH,GAAY,IAAIA,MAAlC;AACD;;AACM,eAAS0G,eAAT,CAAyB7T,IAAzB,EAA+B;AACpC,eAAOA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAA5D;;;;;;;;;;;;;;;;;;AC9GF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASib,eAAT,CAAyBnb,SAAzB,EAAoC;AACjD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI2R,MAAM,GAAG,IAAIlW,IAAI,CAAC+D,KAAL,CAAW5E,IAAI,GAAG,EAAlB,IAAwB,EAAzC;AACAK,YAAI,CAACF,WAAL,CAAiB4W,MAAM,GAAG,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACA1W,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS6a,OAAT,CAAiBpb,SAAjB,EAA4BqD,WAA5B,EAAyC;AACtD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIsD,MAAM,GAAG,wEAAUD,WAAV,CAAb;;AACA,YAAIuB,KAAK,CAACtB,MAAD,CAAT,EAAmB;AACjB,iBAAO,IAAIlD,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAI,CAAClB,MAAL,EAAa;AACX;AACA,iBAAO/C,IAAP;AACD;;AACDA,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiB6C,MAA9B;AACA,eAAO/C,IAAP;;;;;;;;;;;;;;;;;;ACjCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASqP,UAAT,CAAoB5P,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,eAAOpF,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAA5D;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBe,eAASmb,iBAAT,GAA6B;AAC1C,eAAO,qEAAO,EAAP,EAAW,wFAAX,CAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASC,mBAAT,CAA6BxV,YAA7B,EAA2C;AACxD,mFAAa,CAAb,EAAgB7F,SAAhB;AACA,YAAIwI,KAAK,GAAG3C,YAAY,GAAG,sEAA3B;AACA,eAAO/E,IAAI,CAAC+D,KAAL,CAAW2D,KAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS8S,UAAT,CAAoBhb,IAApB,EAA0B;AACvC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASib,YAAT,CAAsBxb,SAAtB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACC,OAAL,CAAa,CAAb;AACAD,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCrBF;AAGA;AAGA;AAGA;;;UAyBakb,wBAAwB;AAAA;AAAA,Q;;AAAxBA,8BAAwB,6DApBpC,+DAAS;AACRC,oBAAY,EAAE,CACZ,oJADY,EAEZ,kKAFY,EAGZ,qGAHY,CADN;AAMRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,oEAAcC,OAAd,EAJO,EAKP,mEALO,EAMP,iFANO,CAND;AAcRC,eAAO,EAAE,CACP,oJADO,EAEP,kKAFO,EAGP,qGAHO;AAdD,OAAT,CAoBoC,GAAxBJ,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACtCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAIK,qBAAqB,GAAG,aAAa,UAAUrU,OAAV,EAAmB;AACjE,4FAAUqU,qBAAV,EAAiCrU,OAAjC;;AACA,YAAIC,MAAM,GAAG,uFAAaoU,qBAAb,CAAb;;AACA,iBAASA,qBAAT,GAAiC;AAC/B,cAAInU,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBmU,qBAAtB;;AACA,eAAK,IAAIlU,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAamU,qBAAb,EAAoC,CAAC;AACnC7T,aAAG,EAAE,OAD8B;AAEnCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,gBAAIyQ,aAAa,GAAG,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAChD,qBAAOA,KAAK,GAAG,CAAf;AACD,aAFD;;AAGA,oBAAQgB,KAAR;AACE;AACA,mBAAK,GAAL;AACE,uBAAO,2DAAS,sEAAoB,8DAAgB9D,KAApC,EAA2CgD,UAA3C,CAAT,EAAiE2T,aAAjE,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAO,2DAAS,+DAAa,CAAb,EAAgB3T,UAAhB,CAAT,EAAsC2T,aAAtC,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAO,2DAASzQ,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AAC9CwC,sBAAI,EAAE;AADwC,iBAAhC,CAAT,EAEHmR,aAFG,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAOzQ,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC7B0O,uBAAK,EAAE,aADsB;AAE7BC,yBAAO,EAAE;AAFoB,iBAAxB,KAGDzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC5B0O,uBAAK,EAAE,QADqB;AAE5BC,yBAAO,EAAE;AAFmB,iBAAxB,CAHN;AAOF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC7B0O,uBAAK,EAAE,QADsB;AAE7BC,yBAAO,EAAE;AAFoB,iBAAxB,CAAP;AAIF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC7B0O,uBAAK,EAAE,MADsB;AAE7BC,yBAAO,EAAE;AAFoB,iBAAxB,KAGDzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC5B0O,uBAAK,EAAE,aADqB;AAE5BC,yBAAO,EAAE;AAFmB,iBAAxB,CAHC,IAMDzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC5B0O,uBAAK,EAAE,QADqB;AAE5BC,yBAAO,EAAE;AAFmB,iBAAxB,CANN;AA9BJ;AAyCD;AA/CkC,SAAD,EAgDjC;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAhDiC,EAqDjC;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACsP,WAAL,CAAiB3H,KAAjB,EAAwB,CAAxB;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SArDiC,CAApC;AA6DA,eAAOub,qBAAP;AACD,OA5E+C,CA4E9C,iDA5E8C,CAAzC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASE,cAAT,CAAwBvT,KAAxB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBxI,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAW2D,KAAK,GAAG,iEAAnB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASwT,yBAAT,CAAmCxY,aAAnC,EAAkDC,cAAlD,EAAkE;AAC/E,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,eAAOyG,QAAQ,CAAC7E,WAAT,KAAyB8E,SAAS,CAAC9E,WAAV,EAAhC;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAAS4W,YAAT,CAAsBlc,SAAtB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,uEAAaG,IAAI,CAACmH,GAAL,EAAb,EAAyBvH,SAAzB,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASmc,kBAAT,CAA4B1Y,aAA5B,EAA2CC,cAA3C,EAA2D;AACxE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI7C,IAAI,GAAG,qEAAWsJ,QAAX,EAAqBC,SAArB,CAAX;AACA,YAAIgS,UAAU,GAAGrb,IAAI,CAACC,GAAL,CAAS,qFAA2BmJ,QAA3B,EAAqCC,SAArC,CAAT,CAAjB;AACA,YAAIiD,MAAJ,CANwE,CAQxE;;AACA,YAAI+O,UAAU,GAAG,CAAjB,EAAoB;AAClB/O,gBAAM,GAAG,CAAT;AACD,SAFD,MAEO;AACL,cAAIlD,QAAQ,CAAC9E,QAAT,OAAwB,CAAxB,IAA6B8E,QAAQ,CAAC1J,OAAT,KAAqB,EAAtD,EAA0D;AACxD;AACA;AACA0J,oBAAQ,CAAC3J,OAAT,CAAiB,EAAjB;AACD;;AACD2J,kBAAQ,CAAC4K,QAAT,CAAkB5K,QAAQ,CAAC9E,QAAT,KAAsBxE,IAAI,GAAGub,UAA/C,EANK,CAQL;AACA;;AACA,cAAIC,kBAAkB,GAAG,qEAAWlS,QAAX,EAAqBC,SAArB,MAAoC,CAACvJ,IAA9D,CAVK,CAYL;;AACA,cAAI,2EAAiB,iEAAO4C,aAAP,CAAjB,KAA2C2Y,UAAU,KAAK,CAA1D,IAA+D,qEAAW3Y,aAAX,EAA0B2G,SAA1B,MAAyC,CAA5G,EAA+G;AAC7GiS,8BAAkB,GAAG,KAArB;AACD;;AACDhP,gBAAM,GAAGxM,IAAI,IAAIub,UAAU,GAAGzX,MAAM,CAAC0X,kBAAD,CAAvB,CAAb;AACD,SA5BuE,CA8BxE;;;AACA,eAAOhP,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;;;;;;;;;;;;;;;;;;ACtDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCe,eAASiP,YAAT,CAAsB7Y,aAAtB,EAAqCC,cAArC,EAAqD;AAClE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIsc,qBAAqB,GAAG,wEAAc9Y,aAAd,CAA5B;AACA,YAAI+Y,sBAAsB,GAAG,wEAAc9Y,cAAd,CAA7B;AACA,eAAO6Y,qBAAqB,CAACzY,OAAtB,OAAoC0Y,sBAAsB,CAAC1Y,OAAvB,EAA3C;;;;;;;;;;;;;;;;;;AC3CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAAS2Y,cAAT,CAAwBzc,SAAxB,EAAmC;AAChD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAIoX,yBAAyB,GAAG,IAAItc,IAAJ,CAAS,CAAT,CAAhC;AACAsc,iCAAyB,CAACrc,WAA1B,CAAsCH,IAAI,GAAG,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD;AACAwc,iCAAyB,CAACpc,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;AACA,YAAI+X,eAAe,GAAG,yEAAeqE,yBAAf,CAAtB;AACA,YAAIC,yBAAyB,GAAG,IAAIvc,IAAJ,CAAS,CAAT,CAAhC;AACAuc,iCAAyB,CAACtc,WAA1B,CAAsCH,IAAtC,EAA4C,CAA5C,EAA+C,CAA/C;AACAyc,iCAAyB,CAACrc,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;AACA,YAAIiY,eAAe,GAAG,yEAAeoE,yBAAf,CAAtB;;AACA,YAAIpc,IAAI,CAACuD,OAAL,MAAkBuU,eAAe,CAACvU,OAAhB,EAAtB,EAAiD;AAC/C,iBAAO5D,IAAI,GAAG,CAAd;AACD,SAFD,MAEO,IAAIK,IAAI,CAACuD,OAAL,MAAkByU,eAAe,CAACzU,OAAhB,EAAtB,EAAiD;AACtD,iBAAO5D,IAAP;AACD,SAFM,MAEA;AACL,iBAAOA,IAAI,GAAG,CAAd;AACD;;;;;;;;;;;;;;;;;;ACzCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS0c,iBAAT,CAA2BnZ,aAA3B,EAA0CC,cAA1C,EAA0D;AACvE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI7C,IAAI,GAAG,qEAAWsJ,QAAX,EAAqBC,SAArB,CAAX;AACA,YAAIgS,UAAU,GAAGrb,IAAI,CAACC,GAAL,CAAS,oFAA0BmJ,QAA1B,EAAoCC,SAApC,CAAT,CAAjB,CALuE,CAOvE;AACA;;AACAD,gBAAQ,CAAC9J,WAAT,CAAqB,IAArB;AACA+J,iBAAS,CAAC/J,WAAV,CAAsB,IAAtB,EAVuE,CAYvE;AACA;;AACA,YAAIwc,iBAAiB,GAAG,qEAAW1S,QAAX,EAAqBC,SAArB,MAAoC,CAACvJ,IAA7D;AACA,YAAIwM,MAAM,GAAGxM,IAAI,IAAIub,UAAU,GAAGzX,MAAM,CAACkY,iBAAD,CAAvB,CAAjB,CAfuE,CAgBvE;;AACA,eAAOxP,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;;;;;;;;;;;;;;;;;;ACvCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACe,eAASyP,2BAAT,CAAqCC,CAArC,EAAwCC,MAAxC,EAAgD;AAC7D,YAAI,CAACD,CAAL,EAAQ;AACR,YAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,qEAAiBA,CAAjB,EAAoBC,MAApB,CAAP;AAC3B,YAAIhD,CAAC,GAAGvY,MAAM,CAACC,SAAP,CAAiBT,QAAjB,CAA0BW,IAA1B,CAA+Bmb,CAA/B,EAAkClK,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AACA,YAAImH,CAAC,KAAK,QAAN,IAAkB+C,CAAC,CAACE,WAAxB,EAAqCjD,CAAC,GAAG+C,CAAC,CAACE,WAAF,CAAcC,IAAlB;AACrC,YAAIlD,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOlS,KAAK,CAACqV,IAAN,CAAWJ,CAAX,CAAP;AAChC,YAAI/C,CAAC,KAAK,WAAN,IAAqB,2CAA2C3H,IAA3C,CAAgD2H,CAAhD,CAAzB,EAA6E,OAAO,qEAAiB+C,CAAjB,EAAoBC,MAApB,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCG/E;AAIA;;;UASaI,oCAAoC;AAgC/C,sDACUC,gBADV,EAEUC,IAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAAF,gBAAA,GAAAA,gBAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAhCW,eAAAC,UAAA,GAAa,IAAb;AACC,eAAAC,WAAA,GAAc,MAAd;AAEJ,eAAAC,MAAA,GAA4B,IAAI,0DAAJ,EAA5B;AAWlB,eAAAC,eAAA,GAAkB,KAAlB;AACA,eAAAC,eAAA,GAAkB,KAAlB;AAEA,eAAAC,kBAAA,GAAqB,KAArB;AACA,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,eAAA,GAAkB,KAAlB;AAEA,eAAAC,kBAAA,GAAqB,KAArB;AACA,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,eAAA,GAAkB,KAAlB;AAUI;;AApC2C;AAAA;AAAA,iBAsC/C,oBAAW;AACT,iBAAKC,SAAL;AACA,iBAAKC,kBAAL;AACA,iBAAKC,aAAL,CAAmB,KAAKC,YAAxB,EAAsC,KAAKC,UAA3C;AACD;AA1C8C;AAAA;AAAA,iBA4C/C,uBAAc;AACZ,iBAAKJ,SAAL;AACD;AA9C8C;AAAA;AAAA,iBAgD/C,qBAAY;AAAA;;AACV,iBAAKb,IAAL,CAAUkB,iBAAV,CAA4B,YAAM;AAChC,kBAAI,MAAI,CAACC,kBAAT,EAA6B;AAC3B,sBAAI,CAACA,kBAAL,CAAwBC,OAAxB;AACD;;AAED,kBAAI,MAAI,CAACC,iBAAT,EAA4B;AAC1B,sBAAI,CAACA,iBAAL,CAAuBD,OAAvB;AACD;;AAED,kBAAI,MAAI,CAACE,eAAT,EAA0B;AACxB,sBAAI,CAACA,eAAL,CAAqBF,OAArB;AACD;;AAED,kBAAI,MAAI,CAACG,kBAAT,EAA6B;AAC3B,sBAAI,CAACA,kBAAL,CAAwBH,OAAxB;AACD;;AAED,kBAAI,MAAI,CAACI,iBAAT,EAA4B;AAC1B,sBAAI,CAACA,iBAAL,CAAuBJ,OAAvB;AACD;;AAED,kBAAI,MAAI,CAACK,eAAT,EAA0B;AACxB,sBAAI,CAACA,eAAL,CAAqBL,OAArB;AACD;AACF,aAxBD;AAyBD;AA1E8C;AAAA;AAAA,iBA4E/C,2BAAkB;AAChB,iBAAKM,WAAL,GAAmB,KAAnB;AACA,iBAAKrB,eAAL,GAAuB,KAAvB;AACA,iBAAKC,eAAL,GAAuB,KAAvB;AACA,iBAAKC,kBAAL,GAA0B,KAA1B;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACA,iBAAKC,eAAL,GAAuB,KAAvB;AACA,iBAAKC,kBAAL,GAA0B,KAA1B;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACA,iBAAKC,eAAL,GAAuB,KAAvB;AACD;AAtF8C;AAAA;AAAA,iBAwF/C,uBAAce,UAAd,EAAkCC,QAAlC,EAAoD;AAAA;;AAClD,iBAAKC,eAAL;AAEA,iBAAK9B,gBAAL,CACG+B,QADH,CACYH,UADZ,EACwBC,QADxB,EAEGG,SAFH,CAEa,UAACC,QAAD,EAAmB;AAC5B,oBAAI,CAACC,YAAL,CAAkBD,QAAlB;AACD,aAJH;AAKD;AAhG8C;AAAA;AAAA,iBAkG/C,sBAAaA,QAAb,EAA4B;AAC1B,gBAAIA,QAAQ,CAACE,YAAT,KAA0B,GAA9B,EAAmC;AACjC,mBAAK9B,MAAL,CAAY+B,IAAZ,CAAiBH,QAAQ,CAACjS,MAA1B;;AAEA,kBACEiS,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBC,SAAxB,IACAle,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBC,SAApC,EAA+Cze,MAA/C,GAAwD,CAF1D,EAGE;AACA,qBAAK2e,WAAL,CACE,kBADF,EAEEP,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBC,SAF1B,EAGE,4BAHF;AAKD,eATD,MASO;AACL,qBAAKG,WAAL,CAAiB,kBAAjB;AACD;;AAED,kBACER,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBK,QAAxB,IACAte,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBK,QAApC,EAA8C7e,MAA9C,GAAuD,CAFzD,EAGE;AACA,qBAAK2e,WAAL,CACE,iBADF,EAEEP,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBK,QAF1B,EAGE,2BAHF;AAKD,eATD,MASO;AACL,qBAAKD,WAAL,CAAiB,iBAAjB;AACD;;AAED,kBACER,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBM,MAAxB,IACAve,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBM,MAApC,EAA4C9e,MAA5C,GAAqD,CAFvD,EAGE;AACA,qBAAK2e,WAAL,CACE,eADF,EAEEP,QAAQ,CAACjS,MAAT,CAAgBqS,OAAhB,CAAwBM,MAF1B,EAGE,yBAHF;AAKD,eATD,MASO;AACL,qBAAKF,WAAL,CAAiB,eAAjB;AACD;;AAED,kBACE,CAACR,QAAQ,CAACjS,MAAT,CAAgBqS,OAAjB,IACAje,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgBqS,OAA5B,EAAqCxe,MAArC,IAA+C,CAFjD,EAGE;AACA,qBAAK4e,WAAL,CAAiB,cAAjB;AACD;;AAED,kBACER,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBN,SAAzB,IACAle,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBN,SAArC,EAAgDze,MAAhD,GAAyD,CAF3D,EAGE;AACA,qBAAK2e,WAAL,CACE,mBADF,EAEEP,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBN,SAF3B,EAGE,+BAHF;AAKD,eATD,MASO;AACL,qBAAKG,WAAL,CAAiB,mBAAjB;AACD;;AAED,kBACER,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBF,QAAzB,IACAte,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBF,QAArC,EAA+C7e,MAA/C,GAAwD,CAF1D,EAGE;AACA,qBAAK2e,WAAL,CACE,kBADF,EAEEP,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBF,QAF3B,EAGE,8BAHF;AAKD,eATD,MASO;AACL,qBAAKD,WAAL,CAAiB,kBAAjB;AACD;;AAED,kBACER,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBD,MAAzB,IACAve,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBD,MAArC,EAA6C9e,MAA7C,GAAsD,CAFxD,EAGE;AACA,qBAAK2e,WAAL,CACE,gBADF,EAEEP,QAAQ,CAACjS,MAAT,CAAgB4S,QAAhB,CAAyBD,MAF3B,EAGE,4BAHF;AAKD,eATD,MASO;AACL,qBAAKF,WAAL,CAAiB,gBAAjB;AACD;;AAED,kBACE,CAACR,QAAQ,CAACjS,MAAT,CAAgB4S,QAAjB,IACAxe,MAAM,CAACme,IAAP,CAAYN,QAAQ,CAACjS,MAAT,CAAgB4S,QAA5B,EAAsC/e,MAAtC,IAAgD,CAFlD,EAGE;AACA,qBAAK4e,WAAL,CAAiB,eAAjB;AACD;AACF,aA9FD,MA8FO;AACL,mBAAKA,WAAL,CAAiB,kBAAjB;AACA,mBAAKA,WAAL,CAAiB,iBAAjB;AACA,mBAAKA,WAAL,CAAiB,eAAjB;AACA,mBAAKA,WAAL,CAAiB,cAAjB;AACA,mBAAKA,WAAL,CAAiB,mBAAjB;AACA,mBAAKA,WAAL,CAAiB,kBAAjB;AACA,mBAAKA,WAAL,CAAiB,gBAAjB;AACA,mBAAKA,WAAL,CAAiB,eAAjB;AACD;;AAED,iBAAKd,WAAL,GAAmB,IAAnB;AACD;AA7M8C;AAAA;AAAA,iBA+M/C,qBAAYkB,IAAZ,EAA0B;AACxB,gBAAIA,IAAI,IAAI,cAAZ,EAA4B;AAC1B,mBAAKvC,eAAL,GAAuB,IAAvB;AACD,aAFD,MAEO,IAAIuC,IAAI,IAAI,kBAAZ,EAAgC;AACrC,mBAAKrC,kBAAL,GAA0B,IAA1B;AACD,aAFM,MAEA,IAAIqC,IAAI,IAAI,iBAAZ,EAA+B;AACpC,mBAAKpC,iBAAL,GAAyB,IAAzB;AACD,aAFM,MAEA,IAAIoC,IAAI,IAAI,eAAZ,EAA6B;AAClC,mBAAKpC,iBAAL,GAAyB,IAAzB;AACD,aAFM,MAEA,IAAIoC,IAAI,IAAI,eAAZ,EAA6B;AAClC,mBAAKtC,eAAL,GAAuB,IAAvB;AACD,aAFM,MAEA,IAAIsC,IAAI,IAAI,mBAAZ,EAAiC;AACtC,mBAAKlC,kBAAL,GAA0B,IAA1B;AACD,aAFM,MAEA,IAAIkC,IAAI,IAAI,kBAAZ,EAAgC;AACrC,mBAAKjC,iBAAL,GAAyB,IAAzB;AACD,aAFM,MAEA,IAAIiC,IAAI,IAAI,gBAAZ,EAA8B;AACnC,mBAAKhC,eAAL,GAAuB,IAAvB;AACD;AACF;AAjO8C;AAAA;AAAA,iBAmO/C,qBAAYgC,IAAZ,EAA0BC,IAA1B,EAAqCC,OAArC,EAAsD;AAAA;;AACpD,iBAAK9C,IAAL,CAAUkB,iBAAV,CAA4B,YAAM;AAChC,kBAAI6B,KAAK,GAAG,gEAAeD,OAAf,EAAwB,qEAAxB,CAAZ;;AAEAC,mBAAK,CAACC,WAAN,CAAkBC,UAAlB,CAA6BC,OAA7B,GAAuC,CAAvC;AAEAH,mBAAK,CAACF,IAAN,GAAaA,IAAb;AAEAE,mBAAK,CAACI,WAAN,GAAoB,iEAAgB,EAAhB,CAApB;AAEA,kBAAIC,cAAJ;AACA,kBAAIC,kBAAkB,GAAG,CAACR,IAAI,CAACS,SAAL,GAAiBT,IAAI,CAACU,IAAtB,GAA6B,CAA9B,IAAmC,GAA5D;;AAEA,kBAAIF,kBAAkB,IAAI,EAA1B,EAA8B;AAC5BD,8BAAc,GAAG,GAAjB;AACD,eAFD,MAEO,IAAIC,kBAAkB,GAAG,EAArB,IAA2BA,kBAAkB,GAAG,EAApD,EAAwD;AAC7DD,8BAAc,GAAG,GAAjB;AACD,eAFM,MAEA,IAAIC,kBAAkB,GAAG,EAArB,IAA2BA,kBAAkB,GAAG,EAApD,EAAwD;AAC7DD,8BAAc,GAAG,GAAjB;AACD,eAFM,MAEA,IAAIC,kBAAkB,GAAG,EAArB,IAA2BA,kBAAkB,GAAG,EAApD,EAAwD;AAC7DD,8BAAc,GAAG,GAAjB;AACD,eAFM,MAEA,IAAIC,kBAAkB,GAAG,EAArB,IAA2BA,kBAAkB,GAAG,EAApD,EAAwD;AAC7DD,8BAAc,GAAG,GAAjB;AACD,eAFM,MAEA,IAAIC,kBAAkB,GAAG,EAArB,IAA2BA,kBAAkB,GAAG,EAApD,EAAwD;AAC7DD,8BAAc,GAAG,GAAjB;AACD,eAFM,MAEA,IAAIC,kBAAkB,GAAG,EAArB,IAA2BA,kBAAkB,GAAG,GAApD,EAAyD;AAC9DD,8BAAc,GAAG,CAAjB;AACD;;AAED,kBAAMI,OAAO,GAAGX,IAAI,CAACU,IAAL,GAAYH,cAA5B;AACA,kBAAMK,WAAW,GAAGZ,IAAI,CAACa,OAAzB;AACA,kBAAMC,WAAW,GAAGd,IAAI,CAACU,IAAL,GAAY,IAAhC;AACA,kBAAMK,cAAc,GAAGf,IAAI,CAACU,IAAL,GAAY,IAAnC;AACA,kBAAMM,aAAa,GAAGhB,IAAI,CAACU,IAA3B;AACA,kBAAMO,aAAa,GAAGjB,IAAI,CAACU,IAAL,GAAY,IAAlC;AACA,kBAAMQ,SAAS,GAAGlB,IAAI,CAACmB,IAAvB;AACA,kBAAMC,aAAa,GAAGpB,IAAI,CAACS,SAA3B;AACA,kBAAMY,SAAS,GAAGrB,IAAI,CAACU,IAAvB;AACA,kBAAMY,YAAY,GAAGtB,IAAI,CAACuB,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CAArB;AACA,kBAAIC,OAAJ;;AAEA,kBAAIzB,IAAI,CAACS,SAAL,GAAiBE,OAArB,EAA8B;AAC5Bc,uBAAO,GAAGd,OAAV;AACD,eAFD,MAEO;AACLc,uBAAO,GAAGzB,IAAI,CAACS,SAAf;AACD;;AAED,kBAAIiB,IAAI,GAAGxB,KAAK,CAACyB,KAAN,CAAYza,IAAZ,CAAiB,IAAI,oEAAJ,EAAjB,CAAX;AACAwa,kBAAI,CAACE,GAAL,GAAW,CAAX;AACAF,kBAAI,CAACvO,GAAL,GAAWwN,OAAX;AACAe,kBAAI,CAACG,YAAL,GAAoB,KAApB;AACAH,kBAAI,CAACI,QAAL,CAAcC,MAAd,GAAuB,iEAAgB,EAAhB,CAAvB;AACAL,kBAAI,CAACI,QAAL,CAAcE,MAAd,GAAuB,KAAvB;AACAN,kBAAI,CAACI,QAAL,CAAcG,KAAd,CAAoBC,QAApB,CAA6BC,aAA7B,GAA6C,CAA7C;AACAT,kBAAI,CAACI,QAAL,CAAcG,KAAd,CAAoBC,QAApB,CAA6BnhB,MAA7B,GAAsC,EAAtC;AACA2gB,kBAAI,CAACI,QAAL,CAAcM,IAAd,CAAmBF,QAAnB,CAA4BG,QAA5B,GAAuC,KAAvC;AACAX,kBAAI,CAACI,QAAL,CAAcQ,MAAd,CAAqBJ,QAArB,CAA8BH,MAA9B,GAAuC,EAAvC;AACAL,kBAAI,CAACI,QAAL,CAAcQ,MAAd,CAAqBJ,QAArB,CAA8BK,OAA9B,CAAsCC,GAAtC,CAA0C,MAA1C,EAAkD,UAAAC,IAAI,EAAI;AACxD,uBAAOA,IAAI,GAAG7B,WAAd;AACD,eAFD;AAIA,kBAAI8B,KAAK,GAAGxC,KAAK,CAACyB,KAAN,CAAYza,IAAZ,CAAiB,IAAI,oEAAJ,EAAjB,CAAZ;AACAwb,mBAAK,CAACd,GAAN,GAAY,CAAZ;AACAc,mBAAK,CAACvP,GAAN,GAAYwN,OAAZ;AACA+B,mBAAK,CAACZ,QAAN,CAAexB,WAAf,GAA6B,EAA7B;AACAoC,mBAAK,CAACb,YAAN,GAAqB,IAArB;AACAa,mBAAK,CAACZ,QAAN,CAAeQ,MAAf,CAAsBJ,QAAtB,CAA+BG,QAA/B,GAA0C,IAA1C;AACAK,mBAAK,CAACZ,QAAN,CAAeG,KAAf,CAAqBC,QAArB,CAA8BG,QAA9B,GAAyC,IAAzC;AACAK,mBAAK,CAACZ,QAAN,CAAeM,IAAf,CAAoBF,QAApB,CAA6BG,QAA7B,GAAwC,IAAxC;AAEA,kBAAIM,QAAQ,GAAGD,KAAK,CAACE,UAAN,CAAiBC,MAAjB,EAAf;AACAF,sBAAQ,CAAC5a,KAAT,GAAiB,CAAjB;AACA4a,sBAAQ,CAACG,QAAT,GAAoBhC,WAApB;AACA6B,sBAAQ,CAACI,QAAT,CAAkBC,WAAlB,GAAgC,CAAhC;AACAL,sBAAQ,CAACI,QAAT,CAAkBE,IAAlB,GAAyB,+DAAc,SAAd,CAAzB;AAEA,kBAAIC,WAAW,GAAGR,KAAK,CAACE,UAAN,CAAiBC,MAAjB,EAAlB;AACAK,yBAAW,CAACnb,KAAZ,GAAoB+Y,WAApB;AACAoC,yBAAW,CAACJ,QAAZ,GAAuB/B,cAAvB;AACAmC,yBAAW,CAACH,QAAZ,CAAqBC,WAArB,GAAmC,CAAnC;AACAE,yBAAW,CAACH,QAAZ,CAAqBE,IAArB,GAA4B,+DAAc,SAAd,CAA5B;AAEA,kBAAIE,UAAU,GAAGT,KAAK,CAACE,UAAN,CAAiBC,MAAjB,EAAjB;AACAM,wBAAU,CAACpb,KAAX,GAAmBgZ,cAAnB;AACAoC,wBAAU,CAACL,QAAX,GAAsB9B,aAAtB;AACAmC,wBAAU,CAACJ,QAAX,CAAoBC,WAApB,GAAkC,CAAlC;AACAG,wBAAU,CAACJ,QAAX,CAAoBE,IAApB,GAA2B,+DAAc,SAAd,CAA3B;AAEA,kBAAIG,YAAY,GAAGV,KAAK,CAACE,UAAN,CAAiBC,MAAjB,EAAnB;AACAO,0BAAY,CAACrb,KAAb,GAAqBiZ,aAArB;AACAoC,0BAAY,CAACN,QAAb,GAAwB7B,aAAxB;AACAmC,0BAAY,CAACL,QAAb,CAAsBC,WAAtB,GAAoC,CAApC;AACAI,0BAAY,CAACL,QAAb,CAAsBE,IAAtB,GAA6B,+DAAc,SAAd,CAA7B;AAEA,kBAAII,aAAa,GAAGX,KAAK,CAACE,UAAN,CAAiBC,MAAjB,EAApB;AACAQ,2BAAa,CAACtb,KAAd,GAAsBkZ,aAAtB;AACAoC,2BAAa,CAACP,QAAd,GAAyBnC,OAAzB;AACA0C,2BAAa,CAACN,QAAd,CAAuBC,WAAvB,GAAqC,CAArC;AACAK,2BAAa,CAACN,QAAd,CAAuBE,IAAvB,GAA8B,+DAAc,SAAd,CAA9B;AAEA,kBAAIK,KAAK,GAAGpD,KAAK,CAACqD,cAAN,CAAqBC,WAArB,CAAiC,8DAAjC,CAAZ;AACAF,mBAAK,CAACG,UAAN,GAAmB,KAAnB;AACAH,mBAAK,CAACI,CAAN,GAAU,iEAAgB,EAAhB,CAAV;AACAJ,mBAAK,CAACK,CAAN,GAAU,EAAV;AACAL,mBAAK,CAACM,gBAAN,GAAyB,QAAzB;AACAN,mBAAK,CAACO,cAAN,GAAuB,QAAvB;AACAP,mBAAK,CAACQ,IAAN,mDAAoD5C,SAApD,mDAAoGE,aAApG,SAAoHR,WAApH,iBAAsIS,SAAtI,SAAkJT,WAAlJ,uBAA0KU,YAA1K;AAEA,kBAAIyC,IAAI,GAAG7D,KAAK,CAAC8D,KAAN,CAAY9c,IAAZ,CAAiB,IAAI,oEAAJ,EAAjB,CAAX;AACA6c,kBAAI,CAACrC,IAAL,GAAYgB,KAAZ;AACAqB,kBAAI,CAACzD,WAAL,GAAmB,iEAAgB,EAAhB,CAAnB;AACAyD,kBAAI,CAACE,UAAL,GAAkB,CAAlB;AACAF,kBAAI,CAACG,GAAL,CAAS7B,QAAT,GAAoB,IAApB;AACA0B,kBAAI,CAAChc,KAAL,GAAa0Z,OAAb;;AAEA,kBAAI1B,IAAI,IAAI,kBAAZ,EAAgC;AAC9B,sBAAI,CAACzB,kBAAL,GAA0B4B,KAA1B;AACD,eAFD,MAEO,IAAIH,IAAI,IAAI,iBAAZ,EAA+B;AACpC,sBAAI,CAACvB,iBAAL,GAAyB0B,KAAzB;AACD,eAFM,MAEA,IAAIH,IAAI,IAAI,eAAZ,EAA6B;AAClC,sBAAI,CAACtB,eAAL,GAAuByB,KAAvB;AACD,eAFM,MAEA,IAAIH,IAAI,IAAI,mBAAZ,EAAiC;AACtC,sBAAI,CAACrB,kBAAL,GAA0BwB,KAA1B;AACD,eAFM,MAEA,IAAIH,IAAI,IAAI,kBAAZ,EAAgC;AACrC,sBAAI,CAACpB,iBAAL,GAAyBuB,KAAzB;AACD,eAFM,MAEA,IAAIH,IAAI,IAAI,gBAAZ,EAA8B;AACnC,sBAAI,CAACnB,eAAL,GAAuBsB,KAAvB;AACD;AACF,aA/HD;AAgID;AApW8C;AAAA;AAAA,iBAsW/C,8BAAqB;AACnB,gBAAMiE,QAAQ,GAAG,IAAIlkB,IAAJ,EAAjB;AACA,gBAAMmkB,QAAQ,GAAG,IAAInkB,IAAJ,EAAjB;;AAEA,gBAAIkkB,QAAQ,CAAC7jB,OAAT,OAAuB,EAA3B,EAA+B;AAC7B8jB,sBAAQ,CAAC/jB,OAAT,CAAiB8jB,QAAQ,CAAC7jB,OAAT,KAAqB,EAAtC;AACD,aAFD,MAEO;AACL8jB,sBAAQ,CAAC/jB,OAAT,CAAiB8jB,QAAQ,CAAC7jB,OAAT,KAAqB,EAAtC;AACD;;AAED,iBAAK+jB,SAAL,GAAiB,KAAKjH,WAAL,CAAiBkH,YAAjB,CAA8BH,QAA9B,CAAjB;AACA,iBAAKI,SAAL,GAAiB,KAAKnH,WAAL,CAAiBkH,YAAjB,CAA8BF,QAA9B,CAAjB;AACA,iBAAKI,WAAL,GAAmB,KAAKH,SAAxB;AACD;AAnX8C;AAAA;AAAA,iBAqX/C,kBAASpf,KAAT,EAAwB;AAAA;;AACtB,iBAAK4Z,WAAL,GAAmB,KAAnB;AACA,iBAAK2F,WAAL,GAAmBvf,KAAnB;AAEAwf,sBAAU,CAAC,YAAM;AACf,oBAAI,CAAC5F,WAAL,GAAmB,IAAnB;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AA5X8C;;AAAA;AAAA,S;;;;gBAPxC;;gBAZP;;gBAWO;;;;;;gBASN,mD;AAAK,iBAAC,YAAD;;;gBACL,mD;AAAK,iBAAC,cAAD;;;gBACL,mD;AAAK,iBAAC,YAAD;;;gBACL,mD;AAAK,iBAAC,aAAD;;;gBAEL,oD;AAAM,iBAAC,QAAD;;;AANI5B,0CAAoC,6DALhD,gEAAU;AACTyH,gBAAQ,EAAE,gCADD;AAETxC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAKgD,E,+EAiCnB,sG,EACZ,oD,EACO,qF,EAnCwB,GAApCjF,oCAAoC,CAApC;;;;;;;;;;;;;;;;ACvBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAAS0H,OAAT,CAAiBvkB,IAAjB,EAAuBqC,GAAvB,EAA4B;AACzC,mFAAa,CAAb,EAAgB3C,SAAhB;AACA,YAAIkU,KAAK,GAAGvR,GAAG,GAAG,iEAAOrC,IAAP,CAAlB;AACA,YAAI4T,KAAK,IAAI,CAAb,EAAgBA,KAAK,IAAI,CAAT;AAChB,eAAO,kEAAQ5T,IAAR,EAAc4T,KAAd,CAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS4Q,UAAT,CAAoB/kB,SAApB,EAA+BqD,WAA/B,EAA4C;AACzD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,0EAAgBrD,SAAhB,EAA2BsD,MAAM,GAAG,IAApC,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS0hB,WAAT,CAAqBhlB,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACqU,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AACA,eAAOrU,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS0kB,SAAT,CAAmBjlB,SAAnB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI2R,MAAM,GAAGlW,IAAI,CAAC+D,KAAL,CAAW5E,IAAI,GAAG,EAAlB,IAAwB,EAArC;AACA,eAAO+W,MAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoSe,eAASiO,OAAT,CAAiB9c,UAAjB,EAA6B+c,YAA7B,EAA2CpjB,OAA3C,EAAoD;AACjE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,eAAO,kEAAQ,gEAAMmI,UAAN,EAAkB+c,YAAlB,EAAgC,IAAI/kB,IAAJ,EAAhC,EAA4C2B,OAA5C,CAAR,CAAP;;;;;;;;;;;;;;;;;;ACzSF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAIqjB,aAAa,GAAG;AAClBC,UAAE,EAAE,IADc;AAElBC,UAAE,EAAE,IAFc;AAGlBC,gBAAQ,EAAE,UAHQ;AAIlBC,YAAI,EAAE,MAJY;AAKlBC,eAAO,EAAE,SALS;AAMlBC,iBAAS,EAAE,WANO;AAOlBC,eAAO,EAAE,SAPS;AAQlBC,aAAK,EAAE;AARW,OAApB;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,UAAIC,UAAU,GAAG;AACf;AACAC,SAAC,EAAE,SAASA,CAAT,CAAWvlB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAIC,GAAG,GAAGzlB,IAAI,CAACoP,cAAL,KAAwB,CAAxB,GAA4B,CAA5B,GAAgC,CAA1C;;AACA,kBAAQzG,KAAR;AACE;AACA,iBAAK,GAAL;AACA,iBAAK,IAAL;AACA,iBAAK,KAAL;AACE,qBAAO6c,QAAQ,CAACC,GAAT,CAAaA,GAAb,EAAkB;AACvBlP,qBAAK,EAAE;AADgB,eAAlB,CAAP;AAGF;;AACA,iBAAK,OAAL;AACE,qBAAOiP,QAAQ,CAACC,GAAT,CAAaA,GAAb,EAAkB;AACvBlP,qBAAK,EAAE;AADgB,eAAlB,CAAP;AAGF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOiP,QAAQ,CAACC,GAAT,CAAaA,GAAb,EAAkB;AACvBlP,qBAAK,EAAE;AADgB,eAAlB,CAAP;AAhBJ;AAoBD,SAxBc;AAyBf;AACAgN,SAAC,EAAE,SAASA,CAAT,CAAWvjB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC;AACA,cAAI7c,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAI+c,UAAU,GAAG1lB,IAAI,CAACoP,cAAL,EAAjB,CADkB,CAElB;;AACA,gBAAIzP,IAAI,GAAG+lB,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,IAAIA,UAA7C;AACA,mBAAOF,QAAQ,CAACva,aAAT,CAAuBtL,IAAvB,EAA6B;AAClC0K,kBAAI,EAAE;AAD4B,aAA7B,CAAP;AAGD;;AACD,iBAAO,kEAAgBkZ,CAAhB,CAAkBvjB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SArCc;AAsCf;AACAgd,SAAC,EAAE,SAASA,CAAT,CAAW3lB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkChkB,OAAlC,EAA2C;AAC5C,cAAIokB,cAAc,GAAG,6EAAe5lB,IAAf,EAAqBwB,OAArB,CAArB,CAD4C,CAE5C;;AACA,cAAIqkB,QAAQ,GAAGD,cAAc,GAAG,CAAjB,GAAqBA,cAArB,GAAsC,IAAIA,cAAzD,CAH4C,CAK5C;;AACA,cAAIjd,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAI0R,YAAY,GAAGwL,QAAQ,GAAG,GAA9B;AACA,mBAAO,0EAAgBxL,YAAhB,EAA8B,CAA9B,CAAP;AACD,WAT2C,CAW5C;;;AACA,cAAI1R,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuB4a,QAAvB,EAAiC;AACtCxb,kBAAI,EAAE;AADgC,aAAjC,CAAP;AAGD,WAhB2C,CAkB5C;;;AACA,iBAAO,0EAAgBwb,QAAhB,EAA0Bld,KAAK,CAAChI,MAAhC,CAAP;AACD,SA3Dc;AA4Df;AACAmlB,SAAC,EAAE,SAASA,CAAT,CAAW9lB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,cAAI0K,WAAW,GAAG,gFAAkBrT,IAAlB,CAAlB,CADyB,CAGzB;;AACA,iBAAO,0EAAgBqT,WAAhB,EAA6B1K,KAAK,CAAChI,MAAnC,CAAP;AACD,SAlEc;AAmEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAolB,SAAC,EAAE,SAASA,CAAT,CAAW/lB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,cAAIhJ,IAAI,GAAGK,IAAI,CAACoP,cAAL,EAAX;AACA,iBAAO,0EAAgBzP,IAAhB,EAAsBgJ,KAAK,CAAChI,MAA5B,CAAP;AACD,SA/Ec;AAgFf;AACAqlB,SAAC,EAAE,SAASA,CAAT,CAAWhmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAIS,OAAO,GAAGzlB,IAAI,CAAC8D,IAAL,CAAU,CAACtE,IAAI,CAACiR,WAAL,KAAqB,CAAtB,IAA2B,CAArC,CAAd;;AACA,kBAAQtI,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOoB,MAAM,CAACkc,OAAD,CAAb;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO,0EAAgBA,OAAhB,EAAyB,CAAzB,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAOT,QAAQ,CAACva,aAAT,CAAuBgb,OAAvB,EAAgC;AACrC5b,oBAAI,EAAE;AAD+B,eAAhC,CAAP;AAGF;;AACA,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAACS,OAAT,CAAiBA,OAAjB,EAA0B;AAC/B1P,qBAAK,EAAE,aADwB;AAE/BC,uBAAO,EAAE;AAFsB,eAA1B,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAACS,OAAT,CAAiBA,OAAjB,EAA0B;AAC/B1P,qBAAK,EAAE,QADwB;AAE/BC,uBAAO,EAAE;AAFsB,eAA1B,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAACS,OAAT,CAAiBA,OAAjB,EAA0B;AAC/B1P,qBAAK,EAAE,MADwB;AAE/BC,uBAAO,EAAE;AAFsB,eAA1B,CAAP;AA3BJ;AAgCD,SAnHc;AAoHf;AACA0P,SAAC,EAAE,SAASA,CAAT,CAAWlmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAIS,OAAO,GAAGzlB,IAAI,CAAC8D,IAAL,CAAU,CAACtE,IAAI,CAACiR,WAAL,KAAqB,CAAtB,IAA2B,CAArC,CAAd;;AACA,kBAAQtI,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOoB,MAAM,CAACkc,OAAD,CAAb;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO,0EAAgBA,OAAhB,EAAyB,CAAzB,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAOT,QAAQ,CAACva,aAAT,CAAuBgb,OAAvB,EAAgC;AACrC5b,oBAAI,EAAE;AAD+B,eAAhC,CAAP;AAGF;;AACA,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAACS,OAAT,CAAiBA,OAAjB,EAA0B;AAC/B1P,qBAAK,EAAE,aADwB;AAE/BC,uBAAO,EAAE;AAFsB,eAA1B,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAACS,OAAT,CAAiBA,OAAjB,EAA0B;AAC/B1P,qBAAK,EAAE,QADwB;AAE/BC,uBAAO,EAAE;AAFsB,eAA1B,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAACS,OAAT,CAAiBA,OAAjB,EAA0B;AAC/B1P,qBAAK,EAAE,MADwB;AAE/BC,uBAAO,EAAE;AAFsB,eAA1B,CAAP;AA3BJ;AAgCD,SAvJc;AAwJf;AACA2P,SAAC,EAAE,SAASA,CAAT,CAAWnmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI3gB,KAAK,GAAG7E,IAAI,CAACiR,WAAL,EAAZ;;AACA,kBAAQtI,KAAR;AACE,iBAAK,GAAL;AACA,iBAAK,IAAL;AACE,qBAAO,kEAAgBwd,CAAhB,CAAkBnmB,IAAlB,EAAwB2I,KAAxB,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO6c,QAAQ,CAACva,aAAT,CAAuBpG,KAAK,GAAG,CAA/B,EAAkC;AACvCwF,oBAAI,EAAE;AADiC,eAAlC,CAAP;AAGF;;AACA,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAAC3gB,KAAT,CAAeA,KAAf,EAAsB;AAC3B0R,qBAAK,EAAE,aADoB;AAE3BC,uBAAO,EAAE;AAFkB,eAAtB,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAAC3gB,KAAT,CAAeA,KAAf,EAAsB;AAC3B0R,qBAAK,EAAE,QADoB;AAE3BC,uBAAO,EAAE;AAFkB,eAAtB,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAAC3gB,KAAT,CAAeA,KAAf,EAAsB;AAC3B0R,qBAAK,EAAE,MADoB;AAE3BC,uBAAO,EAAE;AAFkB,eAAtB,CAAP;AAxBJ;AA6BD,SAxLc;AAyLf;AACA4P,SAAC,EAAE,SAASA,CAAT,CAAWpmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI3gB,KAAK,GAAG7E,IAAI,CAACiR,WAAL,EAAZ;;AACA,kBAAQtI,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOoB,MAAM,CAAClF,KAAK,GAAG,CAAT,CAAb;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO,0EAAgBA,KAAK,GAAG,CAAxB,EAA2B,CAA3B,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO2gB,QAAQ,CAACva,aAAT,CAAuBpG,KAAK,GAAG,CAA/B,EAAkC;AACvCwF,oBAAI,EAAE;AADiC,eAAlC,CAAP;AAGF;;AACA,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAAC3gB,KAAT,CAAeA,KAAf,EAAsB;AAC3B0R,qBAAK,EAAE,aADoB;AAE3BC,uBAAO,EAAE;AAFkB,eAAtB,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAAC3gB,KAAT,CAAeA,KAAf,EAAsB;AAC3B0R,qBAAK,EAAE,QADoB;AAE3BC,uBAAO,EAAE;AAFkB,eAAtB,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAAC3gB,KAAT,CAAeA,KAAf,EAAsB;AAC3B0R,qBAAK,EAAE,MADoB;AAE3BC,uBAAO,EAAE;AAFkB,eAAtB,CAAP;AA3BJ;AAgCD,SA5Nc;AA6Nf;AACA6P,SAAC,EAAE,SAASA,CAAT,CAAWrmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkChkB,OAAlC,EAA2C;AAC5C,cAAI6M,IAAI,GAAG,yEAAWrO,IAAX,EAAiBwB,OAAjB,CAAX;;AACA,cAAImH,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBoD,IAAvB,EAA6B;AAClChE,kBAAI,EAAE;AAD4B,aAA7B,CAAP;AAGD;;AACD,iBAAO,0EAAgBgE,IAAhB,EAAsB1F,KAAK,CAAChI,MAA5B,CAAP;AACD,SAtOc;AAuOf;AACA2lB,SAAC,EAAE,SAASA,CAAT,CAAWtmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAIe,OAAO,GAAG,4EAAcvmB,IAAd,CAAd;;AACA,cAAI2I,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBsb,OAAvB,EAAgC;AACrClc,kBAAI,EAAE;AAD+B,aAAhC,CAAP;AAGD;;AACD,iBAAO,0EAAgBkc,OAAhB,EAAyB5d,KAAK,CAAChI,MAA/B,CAAP;AACD,SAhPc;AAiPf;AACA6lB,SAAC,EAAE,SAASA,CAAT,CAAWxmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI7c,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBjL,IAAI,CAAC4C,UAAL,EAAvB,EAA0C;AAC/CyH,kBAAI,EAAE;AADyC,aAA1C,CAAP;AAGD;;AACD,iBAAO,kEAAgBmc,CAAhB,CAAkBxmB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SAzPc;AA0Pf;AACA8d,SAAC,EAAE,SAASA,CAAT,CAAWzmB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAIrW,SAAS,GAAG,8EAAgBnP,IAAhB,CAAhB;;AACA,cAAI2I,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBkE,SAAvB,EAAkC;AACvC9E,kBAAI,EAAE;AADiC,aAAlC,CAAP;AAGD;;AACD,iBAAO,0EAAgB8E,SAAhB,EAA2BxG,KAAK,CAAChI,MAAjC,CAAP;AACD,SAnQc;AAoQf;AACA+lB,SAAC,EAAE,SAASA,CAAT,CAAW1mB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI/S,SAAS,GAAGzS,IAAI,CAACuC,SAAL,EAAhB;;AACA,kBAAQoG,KAAR;AACE;AACA,iBAAK,GAAL;AACA,iBAAK,IAAL;AACA,iBAAK,KAAL;AACE,qBAAO6c,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,aADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,QADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,QAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,OADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,MADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAxBJ;AA6BD,SApSc;AAqSf;AACArI,SAAC,EAAE,SAASA,CAAT,CAAWnO,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkChkB,OAAlC,EAA2C;AAC5C,cAAIiR,SAAS,GAAGzS,IAAI,CAACuC,SAAL,EAAhB;AACA,cAAIokB,cAAc,GAAG,CAAClU,SAAS,GAAGjR,OAAO,CAACU,YAApB,GAAmC,CAApC,IAAyC,CAAzC,IAA8C,CAAnE;;AACA,kBAAQyG,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOoB,MAAM,CAAC4c,cAAD,CAAb;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO,0EAAgBA,cAAhB,EAAgC,CAAhC,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAOnB,QAAQ,CAACva,aAAT,CAAuB0b,cAAvB,EAAuC;AAC5Ctc,oBAAI,EAAE;AADsC,eAAvC,CAAP;;AAGF,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,aADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,QADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,QAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,OADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,MADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAhCJ;AAqCD,SA9Uc;AA+Uf;AACAoQ,SAAC,EAAE,SAASA,CAAT,CAAW5mB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkChkB,OAAlC,EAA2C;AAC5C,cAAIiR,SAAS,GAAGzS,IAAI,CAACuC,SAAL,EAAhB;AACA,cAAIokB,cAAc,GAAG,CAAClU,SAAS,GAAGjR,OAAO,CAACU,YAApB,GAAmC,CAApC,IAAyC,CAAzC,IAA8C,CAAnE;;AACA,kBAAQyG,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOoB,MAAM,CAAC4c,cAAD,CAAb;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO,0EAAgBA,cAAhB,EAAgChe,KAAK,CAAChI,MAAtC,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO6kB,QAAQ,CAACva,aAAT,CAAuB0b,cAAvB,EAAuC;AAC5Ctc,oBAAI,EAAE;AADsC,eAAvC,CAAP;;AAGF,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,aADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,QADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,QAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,OADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,MADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAhCJ;AAqCD,SAxXc;AAyXf;AACAqQ,SAAC,EAAE,SAASA,CAAT,CAAW7mB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI/S,SAAS,GAAGzS,IAAI,CAACuC,SAAL,EAAhB;AACA,cAAIukB,YAAY,GAAGrU,SAAS,KAAK,CAAd,GAAkB,CAAlB,GAAsBA,SAAzC;;AACA,kBAAQ9J,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOoB,MAAM,CAAC+c,YAAD,CAAb;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO,0EAAgBA,YAAhB,EAA8Bne,KAAK,CAAChI,MAApC,CAAP;AACF;;AACA,iBAAK,IAAL;AACE,qBAAO6kB,QAAQ,CAACva,aAAT,CAAuB6b,YAAvB,EAAqC;AAC1Czc,oBAAI,EAAE;AADoC,eAArC,CAAP;AAGF;;AACA,iBAAK,KAAL;AACE,qBAAOmb,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,aADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,QADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,QAAL;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,OADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAIF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAACnjB,GAAT,CAAaoQ,SAAb,EAAwB;AAC7B8D,qBAAK,EAAE,MADsB;AAE7BC,uBAAO,EAAE;AAFoB,eAAxB,CAAP;AAjCJ;AAsCD,SAnac;AAoaf;AACAuQ,SAAC,EAAE,SAASA,CAAT,CAAW/mB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAItd,KAAK,GAAGlI,IAAI,CAACoL,WAAL,EAAZ;AACA,cAAI4b,kBAAkB,GAAG9e,KAAK,GAAG,EAAR,IAAc,CAAd,GAAkB,IAAlB,GAAyB,IAAlD;;AACA,kBAAQS,KAAR;AACE,iBAAK,GAAL;AACA,iBAAK,IAAL;AACE,qBAAO6c,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,aADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;;AAIF,iBAAK,KAAL;AACE,qBAAOgP,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,aADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,EAGJyQ,WAHI,EAAP;;AAIF,iBAAK,OAAL;AACE,qBAAOzB,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,QADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;;AAIF,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,MADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;AAnBJ;AAwBD,SAhcc;AAicf;AACA0Q,SAAC,EAAE,SAASA,CAAT,CAAWlnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAItd,KAAK,GAAGlI,IAAI,CAACoL,WAAL,EAAZ;AACA,cAAI4b,kBAAJ;;AACA,cAAI9e,KAAK,KAAK,EAAd,EAAkB;AAChB8e,8BAAkB,GAAGnC,aAAa,CAACI,IAAnC;AACD,WAFD,MAEO,IAAI/c,KAAK,KAAK,CAAd,EAAiB;AACtB8e,8BAAkB,GAAGnC,aAAa,CAACG,QAAnC;AACD,WAFM,MAEA;AACLgC,8BAAkB,GAAG9e,KAAK,GAAG,EAAR,IAAc,CAAd,GAAkB,IAAlB,GAAyB,IAA9C;AACD;;AACD,kBAAQS,KAAR;AACE,iBAAK,GAAL;AACA,iBAAK,IAAL;AACE,qBAAO6c,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,aADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;;AAIF,iBAAK,KAAL;AACE,qBAAOgP,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,aADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,EAGJyQ,WAHI,EAAP;;AAIF,iBAAK,OAAL;AACE,qBAAOzB,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,QADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;;AAIF,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,MADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;AAnBJ;AAwBD,SApec;AAqef;AACA2Q,SAAC,EAAE,SAASA,CAAT,CAAWnnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAItd,KAAK,GAAGlI,IAAI,CAACoL,WAAL,EAAZ;AACA,cAAI4b,kBAAJ;;AACA,cAAI9e,KAAK,IAAI,EAAb,EAAiB;AACf8e,8BAAkB,GAAGnC,aAAa,CAACO,OAAnC;AACD,WAFD,MAEO,IAAIld,KAAK,IAAI,EAAb,EAAiB;AACtB8e,8BAAkB,GAAGnC,aAAa,CAACM,SAAnC;AACD,WAFM,MAEA,IAAIjd,KAAK,IAAI,CAAb,EAAgB;AACrB8e,8BAAkB,GAAGnC,aAAa,CAACK,OAAnC;AACD,WAFM,MAEA;AACL8B,8BAAkB,GAAGnC,aAAa,CAACQ,KAAnC;AACD;;AACD,kBAAQ1c,KAAR;AACE,iBAAK,GAAL;AACA,iBAAK,IAAL;AACA,iBAAK,KAAL;AACE,qBAAO6c,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,aADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;;AAIF,iBAAK,OAAL;AACE,qBAAOgP,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,QADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;;AAIF,iBAAK,MAAL;AACA;AACE,qBAAOgP,QAAQ,CAAClP,SAAT,CAAmB0Q,kBAAnB,EAAuC;AAC5CzQ,qBAAK,EAAE,MADqC;AAE5CC,uBAAO,EAAE;AAFmC,eAAvC,CAAP;AAfJ;AAoBD,SAtgBc;AAugBf;AACA4Q,SAAC,EAAE,SAASA,CAAT,CAAWpnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI7c,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAIT,KAAK,GAAGlI,IAAI,CAACoL,WAAL,KAAqB,EAAjC;AACA,gBAAIlD,KAAK,KAAK,CAAd,EAAiBA,KAAK,GAAG,EAAR;AACjB,mBAAOsd,QAAQ,CAACva,aAAT,CAAuB/C,KAAvB,EAA8B;AACnCmC,kBAAI,EAAE;AAD6B,aAA9B,CAAP;AAGD;;AACD,iBAAO,kEAAgB+c,CAAhB,CAAkBpnB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SAjhBc;AAkhBf;AACA0e,SAAC,EAAE,SAASA,CAAT,CAAWrnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI7c,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBjL,IAAI,CAACoL,WAAL,EAAvB,EAA2C;AAChDf,kBAAI,EAAE;AAD0C,aAA3C,CAAP;AAGD;;AACD,iBAAO,kEAAgBgd,CAAhB,CAAkBrnB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SA1hBc;AA2hBf;AACA2e,SAAC,EAAE,SAASA,CAAT,CAAWtnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAItd,KAAK,GAAGlI,IAAI,CAACoL,WAAL,KAAqB,EAAjC;;AACA,cAAIzC,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuB/C,KAAvB,EAA8B;AACnCmC,kBAAI,EAAE;AAD6B,aAA9B,CAAP;AAGD;;AACD,iBAAO,0EAAgBnC,KAAhB,EAAuBS,KAAK,CAAChI,MAA7B,CAAP;AACD,SApiBc;AAqiBf;AACA4mB,SAAC,EAAE,SAASA,CAAT,CAAWvnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAItd,KAAK,GAAGlI,IAAI,CAACoL,WAAL,EAAZ;AACA,cAAIlD,KAAK,KAAK,CAAd,EAAiBA,KAAK,GAAG,EAAR;;AACjB,cAAIS,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuB/C,KAAvB,EAA8B;AACnCmC,kBAAI,EAAE;AAD6B,aAA9B,CAAP;AAGD;;AACD,iBAAO,0EAAgBnC,KAAhB,EAAuBS,KAAK,CAAChI,MAA7B,CAAP;AACD,SA/iBc;AAgjBf;AACA6mB,SAAC,EAAE,SAASA,CAAT,CAAWxnB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI7c,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBjL,IAAI,CAACkR,aAAL,EAAvB,EAA6C;AAClD7G,kBAAI,EAAE;AAD4C,aAA7C,CAAP;AAGD;;AACD,iBAAO,kEAAgBmd,CAAhB,CAAkBxnB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SAxjBc;AAyjBf;AACA8e,SAAC,EAAE,SAASA,CAAT,CAAWznB,IAAX,EAAiB2I,KAAjB,EAAwB6c,QAAxB,EAAkC;AACnC,cAAI7c,KAAK,KAAK,IAAd,EAAoB;AAClB,mBAAO6c,QAAQ,CAACva,aAAT,CAAuBjL,IAAI,CAACmR,aAAL,EAAvB,EAA6C;AAClD9G,kBAAI,EAAE;AAD4C,aAA7C,CAAP;AAGD;;AACD,iBAAO,kEAAgBod,CAAhB,CAAkBznB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SAjkBc;AAkkBf;AACA+e,SAAC,EAAE,SAASA,CAAT,CAAW1nB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,iBAAO,kEAAgB+e,CAAhB,CAAkB1nB,IAAlB,EAAwB2I,KAAxB,CAAP;AACD,SArkBc;AAskBf;AACAgf,SAAC,EAAE,SAASA,CAAT,CAAW3nB,IAAX,EAAiB2I,KAAjB,EAAwBif,SAAxB,EAAmCpmB,OAAnC,EAA4C;AAC7C,cAAImD,YAAY,GAAGnD,OAAO,CAACqmB,aAAR,IAAyB7nB,IAA5C;AACA,cAAIkK,cAAc,GAAGvF,YAAY,CAACkB,iBAAb,EAArB;;AACA,cAAIqE,cAAc,KAAK,CAAvB,EAA0B;AACxB,mBAAO,GAAP;AACD;;AACD,kBAAQvB,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOmf,iCAAiC,CAAC5d,cAAD,CAAxC;AAEF;AACA;AACA;;AACA,iBAAK,MAAL;AACA,iBAAK,IAAL;AACE;AACA,qBAAO6d,cAAc,CAAC7d,cAAD,CAArB;AAEF;AACA;AACA;;AACA,iBAAK,OAAL;AACA,iBAAK,KAAL,CAjBF,CAiBc;;AACZ;AACE,qBAAO6d,cAAc,CAAC7d,cAAD,EAAiB,GAAjB,CAArB;AAnBJ;AAqBD,SAlmBc;AAmmBf;AACAoZ,SAAC,EAAE,SAASA,CAAT,CAAWtjB,IAAX,EAAiB2I,KAAjB,EAAwBif,SAAxB,EAAmCpmB,OAAnC,EAA4C;AAC7C,cAAImD,YAAY,GAAGnD,OAAO,CAACqmB,aAAR,IAAyB7nB,IAA5C;AACA,cAAIkK,cAAc,GAAGvF,YAAY,CAACkB,iBAAb,EAArB;;AACA,kBAAQ8C,KAAR;AACE;AACA,iBAAK,GAAL;AACE,qBAAOmf,iCAAiC,CAAC5d,cAAD,CAAxC;AAEF;AACA;AACA;;AACA,iBAAK,MAAL;AACA,iBAAK,IAAL;AACE;AACA,qBAAO6d,cAAc,CAAC7d,cAAD,CAArB;AAEF;AACA;AACA;;AACA,iBAAK,OAAL;AACA,iBAAK,KAAL,CAjBF,CAiBc;;AACZ;AACE,qBAAO6d,cAAc,CAAC7d,cAAD,EAAiB,GAAjB,CAArB;AAnBJ;AAqBD,SA5nBc;AA6nBf;AACA8d,SAAC,EAAE,SAASA,CAAT,CAAWhoB,IAAX,EAAiB2I,KAAjB,EAAwBif,SAAxB,EAAmCpmB,OAAnC,EAA4C;AAC7C,cAAImD,YAAY,GAAGnD,OAAO,CAACqmB,aAAR,IAAyB7nB,IAA5C;AACA,cAAIkK,cAAc,GAAGvF,YAAY,CAACkB,iBAAb,EAArB;;AACA,kBAAQ8C,KAAR;AACE;AACA,iBAAK,GAAL;AACA,iBAAK,IAAL;AACA,iBAAK,KAAL;AACE,qBAAO,QAAQsf,mBAAmB,CAAC/d,cAAD,EAAiB,GAAjB,CAAlC;AACF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAO,QAAQ6d,cAAc,CAAC7d,cAAD,EAAiB,GAAjB,CAA7B;AATJ;AAWD,SA5oBc;AA6oBf;AACAge,SAAC,EAAE,SAASA,CAAT,CAAWloB,IAAX,EAAiB2I,KAAjB,EAAwBif,SAAxB,EAAmCpmB,OAAnC,EAA4C;AAC7C,cAAImD,YAAY,GAAGnD,OAAO,CAACqmB,aAAR,IAAyB7nB,IAA5C;AACA,cAAIkK,cAAc,GAAGvF,YAAY,CAACkB,iBAAb,EAArB;;AACA,kBAAQ8C,KAAR;AACE;AACA,iBAAK,GAAL;AACA,iBAAK,IAAL;AACA,iBAAK,KAAL;AACE,qBAAO,QAAQsf,mBAAmB,CAAC/d,cAAD,EAAiB,GAAjB,CAAlC;AACF;;AACA,iBAAK,MAAL;AACA;AACE,qBAAO,QAAQ6d,cAAc,CAAC7d,cAAD,EAAiB,GAAjB,CAA7B;AATJ;AAWD,SA5pBc;AA6pBf;AACAie,SAAC,EAAE,SAASA,CAAT,CAAWnoB,IAAX,EAAiB2I,KAAjB,EAAwBif,SAAxB,EAAmCpmB,OAAnC,EAA4C;AAC7C,cAAImD,YAAY,GAAGnD,OAAO,CAACqmB,aAAR,IAAyB7nB,IAA5C;AACA,cAAI4Q,SAAS,GAAGpQ,IAAI,CAAC+D,KAAL,CAAWI,YAAY,CAACpB,OAAb,KAAyB,IAApC,CAAhB;AACA,iBAAO,0EAAgBqN,SAAhB,EAA2BjI,KAAK,CAAChI,MAAjC,CAAP;AACD,SAlqBc;AAmqBf;AACAynB,SAAC,EAAE,SAASA,CAAT,CAAWpoB,IAAX,EAAiB2I,KAAjB,EAAwBif,SAAxB,EAAmCpmB,OAAnC,EAA4C;AAC7C,cAAImD,YAAY,GAAGnD,OAAO,CAACqmB,aAAR,IAAyB7nB,IAA5C;AACA,cAAI4Q,SAAS,GAAGjM,YAAY,CAACpB,OAAb,EAAhB;AACA,iBAAO,0EAAgBqN,SAAhB,EAA2BjI,KAAK,CAAChI,MAAjC,CAAP;AACD;AAxqBc,OAAjB;;AA0qBA,eAASsnB,mBAAT,CAA6BtiB,MAA7B,EAAqC0iB,cAArC,EAAqD;AACnD,YAAI/nB,IAAI,GAAGqF,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,GAA9B;AACA,YAAI2iB,SAAS,GAAG9nB,IAAI,CAACC,GAAL,CAASkF,MAAT,CAAhB;AACA,YAAIuC,KAAK,GAAG1H,IAAI,CAAC+D,KAAL,CAAW+jB,SAAS,GAAG,EAAvB,CAAZ;AACA,YAAIre,OAAO,GAAGqe,SAAS,GAAG,EAA1B;;AACA,YAAIre,OAAO,KAAK,CAAhB,EAAmB;AACjB,iBAAO3J,IAAI,GAAGyJ,MAAM,CAAC7B,KAAD,CAApB;AACD;;AACD,YAAIqgB,SAAS,GAAGF,cAAc,IAAI,EAAlC;AACA,eAAO/nB,IAAI,GAAGyJ,MAAM,CAAC7B,KAAD,CAAb,GAAuBqgB,SAAvB,GAAmC,0EAAgBte,OAAhB,EAAyB,CAAzB,CAA1C;AACD;;AACD,eAAS6d,iCAAT,CAA2CniB,MAA3C,EAAmD0iB,cAAnD,EAAmE;AACjE,YAAI1iB,MAAM,GAAG,EAAT,KAAgB,CAApB,EAAuB;AACrB,cAAIrF,IAAI,GAAGqF,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,GAA9B;AACA,iBAAOrF,IAAI,GAAG,0EAAgBE,IAAI,CAACC,GAAL,CAASkF,MAAT,IAAmB,EAAnC,EAAuC,CAAvC,CAAd;AACD;;AACD,eAAOoiB,cAAc,CAACpiB,MAAD,EAAS0iB,cAAT,CAArB;AACD;;AACD,eAASN,cAAT,CAAwBpiB,MAAxB,EAAgC0iB,cAAhC,EAAgD;AAC9C,YAAIE,SAAS,GAAGF,cAAc,IAAI,EAAlC;AACA,YAAI/nB,IAAI,GAAGqF,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,GAA9B;AACA,YAAI2iB,SAAS,GAAG9nB,IAAI,CAACC,GAAL,CAASkF,MAAT,CAAhB;AACA,YAAIuC,KAAK,GAAG,0EAAgB1H,IAAI,CAAC+D,KAAL,CAAW+jB,SAAS,GAAG,EAAvB,CAAhB,EAA4C,CAA5C,CAAZ;AACA,YAAIre,OAAO,GAAG,0EAAgBqe,SAAS,GAAG,EAA5B,EAAgC,CAAhC,CAAd;AACA,eAAOhoB,IAAI,GAAG4H,KAAP,GAAeqgB,SAAf,GAA2Bte,OAAlC;AACD;AACc;;;AAAA,uCAAAqb,UAAA;;;;;;;;;;;;;;;;ACnwBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;AAiBe,eAASkD,gBAAT,CAA0B/oB,SAA1B,EAAqC;AAClD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,eAAO,mEAASO,IAAT,EAAeuD,OAAf,OAA6B,qEAAWvD,IAAX,EAAiBuD,OAAjB,EAApC;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIklB,oBAAoB,GAAG,OAA3B;AAEA;;;;;;;;;;;;;;;;;;;AAkBe,eAASC,QAAT,CAAkBjpB,SAAlB,EAA6BqD,WAA7B,EAA0C;AACvD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,0EAAgBrD,SAAhB,EAA2BsD,MAAM,GAAG0lB,oBAApC,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAIE,kBAAkB,GAAG,aAAa,UAAUzhB,OAAV,EAAmB;AAC9D,4FAAUyhB,kBAAV,EAA8BzhB,OAA9B;;AACA,YAAIC,MAAM,GAAG,uFAAawhB,kBAAb,CAAb;;AACA,iBAASA,kBAAT,GAA8B;AAC5B,cAAIvhB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBuhB,kBAAtB;;AACA,eAAK,IAAIthB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAauhB,kBAAb,EAAiC,CAAC;AAChCjhB,aAAG,EAAE,OAD2B;AAEhCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACA,mBAAK,IAAL;AACA,mBAAK,KAAL;AACE,uBAAOoC,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,aAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,KAGDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,QADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CAHN;;AAOF,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,QAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,CAAP;;AAIF,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,MAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,KAGDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,aADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CAHC,IAMDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,QADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CANN;AAlBJ;AA6BD;AAhC+B,SAAD,EAiC9B;AACD9O,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACqL,WAAL,CAAiB,uEAAqB1D,KAArB,CAAjB,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD;AACA,mBAAO3H,IAAP;AACD;AALA,SAjC8B,CAAjC;AAwCA,eAAO2oB,kBAAP;AACD,OAvD4C,CAuD3C,iDAvD2C,CAAtC;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;AAiBe,eAASC,YAAT,CAAsBnpB,SAAtB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIiD,IAAI,GAAG,mFAAyB1C,IAAzB,EAA+B,sEAAYA,IAAZ,CAA/B,CAAX;AACA,YAAImP,SAAS,GAAGzM,IAAI,GAAG,CAAvB;AACA,eAAOyM,SAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,UAAI0Z,UAAU,GAAG,aAAa,UAAU3hB,OAAV,EAAmB;AACtD,4FAAU2hB,UAAV,EAAsB3hB,OAAtB;;AACA,YAAIC,MAAM,GAAG,uFAAa0hB,UAAb,CAAb;;AACA,iBAASA,UAAT,GAAsB;AACpB,cAAIzhB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsByhB,UAAtB;;AACA,eAAK,IAAIxhB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAayhB,UAAb,EAAyB,CAAC;AACxBnhB,aAAG,EAAE,OADmB;AAExBC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,gBAAIyQ,aAAa,GAAG,SAASA,aAAT,CAAuB7b,IAAvB,EAA6B;AAC/C,qBAAO;AACLA,oBAAI,EAAEA,IADD;AAELmpB,8BAAc,EAAEngB,KAAK,KAAK;AAFrB,eAAP;AAID,aALD;;AAMA,oBAAQA,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,2DAAS,+DAAa,CAAb,EAAgBd,UAAhB,CAAT,EAAsC2T,aAAtC,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAO,2DAASzQ,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AAC9CwC,sBAAI,EAAE;AADwC,iBAAhC,CAAT,EAEHmR,aAFG,CAAP;;AAGF;AACE,uBAAO,2DAAS,+DAAa7S,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAT,EAAiD2T,aAAjD,CAAP;AARJ;AAUD;AAnBuB,SAAD,EAoBtB;AACD9T,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,CAACmhB,cAAN,IAAwBnhB,KAAK,CAAChI,IAAN,GAAa,CAA5C;AACD;AAJA,SApBsB,EAyBtB;AACD+H,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmB+O,KAAnB,EAA0BpH,KAA1B,EAAiC;AACtC,gBAAI2S,WAAW,GAAGta,IAAI,CAACoP,cAAL,EAAlB;;AACA,gBAAIzH,KAAK,CAACmhB,cAAV,EAA0B;AACxB,kBAAIC,sBAAsB,GAAG,wEAAsBphB,KAAK,CAAChI,IAA5B,EAAkC2a,WAAlC,CAA7B;AACAta,kBAAI,CAAC8S,cAAL,CAAoBiW,sBAApB,EAA4C,CAA5C,EAA+C,CAA/C;AACA/oB,kBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,qBAAOrL,IAAP;AACD;;AACD,gBAAIL,IAAI,GAAG,EAAE,SAASoP,KAAX,KAAqBA,KAAK,CAAC0W,GAAN,KAAc,CAAnC,GAAuC9d,KAAK,CAAChI,IAA7C,GAAoD,IAAIgI,KAAK,CAAChI,IAAzE;AACAK,gBAAI,CAAC8S,cAAL,CAAoBnT,IAApB,EAA0B,CAA1B,EAA6B,CAA7B;AACAK,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AAdA,SAzBsB,CAAzB;AAyCA,eAAO6oB,UAAP;AACD,OAxDoC,CAwDnC,iDAxDmC,CAA9B;;;;;;;;;;;;;;;;;AChBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASG,OAAT,CAAiBvpB,SAAjB,EAA4BwpB,kBAA5B,EAAgD;AAC7D,mFAAa,CAAb,EAAgBvpB,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIypB,aAAa,GAAG,iEAAOD,kBAAP,CAApB;AACA,eAAOjpB,IAAI,CAACuD,OAAL,KAAiB2lB,aAAa,CAAC3lB,OAAd,EAAxB;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBe,eAAS4lB,iBAAT,CAA2B1pB,SAA3B,EAAsC;AACnD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAI4G,SAAS,GAAG,sEAAY7G,SAAZ,CAAhB;AACA,YAAI+G,OAAO,GAAG,oEAAU/G,SAAV,CAAd;AACA,eAAO,gFAAsB;AAC3B8G,eAAK,EAAED,SADoB;AAE3BG,aAAG,EAAED;AAFsB,SAAtB,CAAP;;;;;;;;;;;;;;;;;;AChCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAIxD,oBAAoB,GAAG,SAA3B;;AACe,eAASomB,UAAT,CAAoB3pB,SAApB,EAA+B+B,OAA/B,EAAwC;AACrD,+EAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIiD,IAAI,GAAG,yEAAe1C,IAAf,EAAqBwB,OAArB,EAA8B+B,OAA9B,KAA0C,6EAAmBvD,IAAnB,EAAyBwB,OAAzB,EAAkC+B,OAAlC,EAArD,CAHqD,CAKrD;AACA;AACA;;AACA,eAAO/C,IAAI,CAACiD,KAAL,CAAWf,IAAI,GAAGM,oBAAlB,IAA0C,CAAjD;;;;;;;;;;;;;;;;;;ACbF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAIiG,cAAc,GAAG,IAArB;AACA,UAAIogB,0BAA0B,GAAG,IAAjC;AACA,UAAIngB,gBAAgB,GAAG,KAAvB;AACA,UAAIogB,qBAAqB,GAAG,KAA5B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFe,eAAS/f,cAAT,CAAwB9J,SAAxB,EAAmC4J,aAAnC,EAAkD7H,OAAlD,EAA2D;AACxE,YAAIC,IAAJ,EAAUI,eAAV;;AACA,mFAAa,CAAb,EAAgBnC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIE,MAAM,GAAG,CAACV,IAAI,GAAG,CAACI,eAAe,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAA7E,MAAyF,IAAzF,IAAiGN,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJI,cAAc,CAACE,MAAvK,MAAmL,IAAnL,IAA2LV,IAAI,KAAK,KAAK,CAAzM,GAA6MA,IAA7M,GAAoN,mEAAjO;;AACA,YAAI,CAACU,MAAM,CAACoH,cAAZ,EAA4B;AAC1B,gBAAM,IAAInH,UAAJ,CAAe,6CAAf,CAAN;AACD;;AACD,YAAIoH,UAAU,GAAG,qEAAW/J,SAAX,EAAsB4J,aAAtB,CAAjB;;AACA,YAAIhF,KAAK,CAACmF,UAAD,CAAT,EAAuB;AACrB,gBAAM,IAAIpH,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAIqH,eAAe,GAAG,qEAAO,0EAAYjI,OAAZ,CAAP,EAA6B;AACjDkI,mBAAS,EAAEC,OAAO,CAACnI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACkI,SAA3D,CAD+B;AAEjDF,oBAAU,EAAEA;AAFqC,SAA7B,CAAtB;AAIA,YAAII,QAAJ;AACA,YAAIC,SAAJ;;AACA,YAAIL,UAAU,GAAG,CAAjB,EAAoB;AAClBI,kBAAQ,GAAG,iEAAOP,aAAP,CAAX;AACAQ,mBAAS,GAAG,iEAAOpK,SAAP,CAAZ;AACD,SAHD,MAGO;AACLmK,kBAAQ,GAAG,iEAAOnK,SAAP,CAAX;AACAoK,mBAAS,GAAG,iEAAOR,aAAP,CAAZ;AACD;;AACD,YAAIiB,OAAO,GAAG,8EAAoBT,SAApB,EAA+BD,QAA/B,CAAd;AACA,YAAI2f,eAAe,GAAG,CAAC,8FAAgC1f,SAAhC,IAA6C,8FAAgCD,QAAhC,CAA9C,IAA2F,IAAjH;AACA,YAAIK,OAAO,GAAGzJ,IAAI,CAACiD,KAAL,CAAW,CAAC6G,OAAO,GAAGif,eAAX,IAA8B,EAAzC,CAAd;AACA,YAAI9e,MAAJ,CA5BwE,CA8BxE;;AACA,YAAIR,OAAO,GAAG,CAAd,EAAiB;AACf,cAAIzI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACgoB,cAAtD,EAAsE;AACpE,gBAAIlf,OAAO,GAAG,CAAd,EAAiB;AACf,qBAAOnI,MAAM,CAACoH,cAAP,CAAsB,kBAAtB,EAA0C,CAA1C,EAA6CE,eAA7C,CAAP;AACD,aAFD,MAEO,IAAIa,OAAO,GAAG,EAAd,EAAkB;AACvB,qBAAOnI,MAAM,CAACoH,cAAP,CAAsB,kBAAtB,EAA0C,EAA1C,EAA8CE,eAA9C,CAAP;AACD,aAFM,MAEA,IAAIa,OAAO,GAAG,EAAd,EAAkB;AACvB,qBAAOnI,MAAM,CAACoH,cAAP,CAAsB,kBAAtB,EAA0C,EAA1C,EAA8CE,eAA9C,CAAP;AACD,aAFM,MAEA,IAAIa,OAAO,GAAG,EAAd,EAAkB;AACvB,qBAAOnI,MAAM,CAACoH,cAAP,CAAsB,aAAtB,EAAqC,CAArC,EAAwCE,eAAxC,CAAP;AACD,aAFM,MAEA,IAAIa,OAAO,GAAG,EAAd,EAAkB;AACvB,qBAAOnI,MAAM,CAACoH,cAAP,CAAsB,kBAAtB,EAA0C,CAA1C,EAA6CE,eAA7C,CAAP;AACD,aAFM,MAEA;AACL,qBAAOtH,MAAM,CAACoH,cAAP,CAAsB,UAAtB,EAAkC,CAAlC,EAAqCE,eAArC,CAAP;AACD;AACF,WAdD,MAcO;AACL,gBAAIQ,OAAO,KAAK,CAAhB,EAAmB;AACjB,qBAAO9H,MAAM,CAACoH,cAAP,CAAsB,kBAAtB,EAA0C,CAA1C,EAA6CE,eAA7C,CAAP;AACD,aAFD,MAEO;AACL,qBAAOtH,MAAM,CAACoH,cAAP,CAAsB,UAAtB,EAAkCU,OAAlC,EAA2CR,eAA3C,CAAP;AACD;AACF,WArBc,CAuBf;;AACD,SAxBD,MAwBO,IAAIQ,OAAO,GAAG,EAAd,EAAkB;AACvB,iBAAO9H,MAAM,CAACoH,cAAP,CAAsB,UAAtB,EAAkCU,OAAlC,EAA2CR,eAA3C,CAAP,CADuB,CAGvB;AACD,SAJM,MAIA,IAAIQ,OAAO,GAAG,EAAd,EAAkB;AACvB,iBAAO9H,MAAM,CAACoH,cAAP,CAAsB,aAAtB,EAAqC,CAArC,EAAwCE,eAAxC,CAAP,CADuB,CAGvB;AACD,SAJM,MAIA,IAAIQ,OAAO,GAAGhB,cAAd,EAA8B;AACnC,cAAIf,KAAK,GAAG1H,IAAI,CAACiD,KAAL,CAAWwG,OAAO,GAAG,EAArB,CAAZ;AACA,iBAAO9H,MAAM,CAACoH,cAAP,CAAsB,aAAtB,EAAqCrB,KAArC,EAA4CuB,eAA5C,CAAP,CAFmC,CAInC;AACD,SALM,MAKA,IAAIQ,OAAO,GAAGof,0BAAd,EAA0C;AAC/C,iBAAOlnB,MAAM,CAACoH,cAAP,CAAsB,OAAtB,EAA+B,CAA/B,EAAkCE,eAAlC,CAAP,CAD+C,CAG/C;AACD,SAJM,MAIA,IAAIQ,OAAO,GAAGf,gBAAd,EAAgC;AACrC,cAAIsB,IAAI,GAAGhK,IAAI,CAACiD,KAAL,CAAWwG,OAAO,GAAGhB,cAArB,CAAX;AACA,iBAAO9G,MAAM,CAACoH,cAAP,CAAsB,OAAtB,EAA+BiB,IAA/B,EAAqCf,eAArC,CAAP,CAFqC,CAIrC;AACD,SALM,MAKA,IAAIQ,OAAO,GAAGqf,qBAAd,EAAqC;AAC1C7e,gBAAM,GAAGjK,IAAI,CAACiD,KAAL,CAAWwG,OAAO,GAAGf,gBAArB,CAAT;AACA,iBAAO/G,MAAM,CAACoH,cAAP,CAAsB,cAAtB,EAAsCkB,MAAtC,EAA8ChB,eAA9C,CAAP;AACD;;AACDgB,cAAM,GAAG,6EAAmBZ,SAAnB,EAA8BD,QAA9B,CAAT,CAjFwE,CAmFxE;;AACA,YAAIa,MAAM,GAAG,EAAb,EAAiB;AACf,cAAIgf,YAAY,GAAGjpB,IAAI,CAACiD,KAAL,CAAWwG,OAAO,GAAGf,gBAArB,CAAnB;AACA,iBAAO/G,MAAM,CAACoH,cAAP,CAAsB,SAAtB,EAAiCkgB,YAAjC,EAA+ChgB,eAA/C,CAAP,CAFe,CAIf;AACD,SALD,MAKO;AACL,cAAIigB,sBAAsB,GAAGjf,MAAM,GAAG,EAAtC;AACA,cAAIC,KAAK,GAAGlK,IAAI,CAAC+D,KAAL,CAAWkG,MAAM,GAAG,EAApB,CAAZ,CAFK,CAIL;;AACA,cAAIif,sBAAsB,GAAG,CAA7B,EAAgC;AAC9B,mBAAOvnB,MAAM,CAACoH,cAAP,CAAsB,aAAtB,EAAqCmB,KAArC,EAA4CjB,eAA5C,CAAP,CAD8B,CAG9B;AACD,WAJD,MAIO,IAAIigB,sBAAsB,GAAG,CAA7B,EAAgC;AACrC,mBAAOvnB,MAAM,CAACoH,cAAP,CAAsB,YAAtB,EAAoCmB,KAApC,EAA2CjB,eAA3C,CAAP,CADqC,CAGrC;AACD,WAJM,MAIA;AACL,mBAAOtH,MAAM,CAACoH,cAAP,CAAsB,cAAtB,EAAsCmB,KAAK,GAAG,CAA9C,EAAiDjB,eAAjD,CAAP;AACD;AACF;;;;;;;;;;;;;;;;;;ACzMH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASkgB,gBAAT,CAA0BlqB,SAA1B,EAAqC;AAClD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAImqB,YAAY,GAAG5pB,IAAI,CAAC8E,QAAL,EAAnB;AACA,YAAID,KAAK,GAAG+kB,YAAY,GAAGA,YAAY,GAAG,CAA9B,GAAkC,CAA9C;AACA5pB,YAAI,CAACwU,QAAL,CAAc3P,KAAd,EAAqB,CAArB;AACA7E,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4Be,eAAS6pB,SAAT,CAAmB3mB,aAAnB,EAAkCC,cAAlC,EAAkD;AAC/D,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIoqB,kBAAkB,GAAG,qEAAW5mB,aAAX,CAAzB;AACA,YAAI6mB,mBAAmB,GAAG,qEAAW5mB,cAAX,CAA1B;AACA,eAAO2mB,kBAAkB,CAACvmB,OAAnB,OAAiCwmB,mBAAmB,CAACxmB,OAApB,EAAxC;;;;;;;;;;;;;;;;;;AClCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASymB,eAAT,CAAyBvqB,SAAzB,EAAoCqD,WAApC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,yEAAerD,SAAf,EAA0B,yEAAeA,SAAf,IAA4BsD,MAAtD,CAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASknB,qBAAT,CAA+B1kB,YAA/B,EAA6C;AAC1D,mFAAa,CAAb,EAAgB7F,SAAhB;AACA,YAAIuK,OAAO,GAAG1E,YAAY,GAAG,wEAA7B;AACA,eAAO/E,IAAI,CAAC+D,KAAL,CAAW0F,OAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS2L,MAAT,CAAgBnW,SAAhB,EAA2B;AACxC,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAAC4V,MAAL,EAAV;AACA,eAAOvT,GAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS6nB,SAAT,CAAmBzqB,SAAnB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA/E,YAAI,CAACF,WAAL,CAAiBH,IAAI,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACAK,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASmqB,UAAT,CAAoB1qB,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBmW,MAAlB,OAA+B,CAAtC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASwU,UAAT,CAAoB3qB,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBmW,MAAlB,OAA+B,CAAtC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Ee,eAASyU,yBAAT,CAAmC5qB,SAAnC,EAA8C+B,OAA9C,EAAuD;AACpE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,eAAO,+EAAqBD,SAArB,EAAgCI,IAAI,CAACmH,GAAL,EAAhC,EAA4CxF,OAA5C,CAAP;;;;;;;;;;;;;;;;;;AC9EF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAAS8oB,MAAT,CAAgB7qB,SAAhB,EAA2B;AACxC,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkB8D,OAAlB,KAA8B1D,IAAI,CAACmH,GAAL,EAArC;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIhE,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASunB,4BAAT,CAAsCrnB,aAAtC,EAAqDC,cAArD,EAAqE;AAClF,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAI8qB,kBAAkB,GAAG,yEAAetnB,aAAf,CAAzB;AACA,YAAIunB,mBAAmB,GAAG,yEAAetnB,cAAf,CAA1B;AACA,YAAIG,aAAa,GAAGknB,kBAAkB,CAACjnB,OAAnB,KAA+B,8FAAgCinB,kBAAhC,CAAnD;AACA,YAAIhnB,cAAc,GAAGinB,mBAAmB,CAAClnB,OAApB,KAAgC,8FAAgCknB,mBAAhC,CAArD,CALkF,CAOlF;AACA;AACA;;AACA,eAAOjqB,IAAI,CAACiD,KAAL,CAAW,CAACH,aAAa,GAAGE,cAAjB,IAAmCR,oBAA9C,CAAP;;;;;;;;;;;;;;;;;;ACtCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAAS0nB,WAAT,CAAqBlgB,IAArB,EAA2B;AACxC,mFAAa,CAAb,EAAgB9K,SAAhB;AACA,YAAIgW,KAAK,GAAGlL,IAAI,GAAG,8DAAnB;AACA,eAAOhK,IAAI,CAAC+D,KAAL,CAAWmR,KAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAIiV,mBAAmB,GAAG,QAA1B;;AACe,eAASC,eAAT,CAAyBnrB,SAAzB,EAAoC;AACjD,+EAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAImR,SAAS,GAAG5Q,IAAI,CAACuD,OAAL,EAAhB;AACAvD,YAAI,CAACsP,WAAL,CAAiB,CAAjB,EAAoB,CAApB;AACAtP,YAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,YAAIwf,oBAAoB,GAAG7qB,IAAI,CAACuD,OAAL,EAA3B;AACA,YAAIsY,UAAU,GAAGjL,SAAS,GAAGia,oBAA7B;AACA,eAAOrqB,IAAI,CAAC+D,KAAL,CAAWsX,UAAU,GAAG8O,mBAAxB,IAA+C,CAAtD;;;;;;;;;;;;;;;;;;ACXF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASG,WAAT,CAAqBrrB,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAAC+I,UAAL,CAAgB,EAAhB,EAAoB,GAApB;AACA,eAAO/I,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4Be,eAAS+qB,qBAAT,CAA+BtrB,SAA/B,EAA0C+B,OAA1C,EAAmD;AAChE,YAAIwpB,kBAAJ;;AACA,YAAItrB,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIK,SAAJ,CAAc,qDAAd,CAAN;AACD;;AACD,YAAIiqB,SAAS,GAAG,wEAAU,CAACD,kBAAkB,GAAGxpB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACypB,SAAhF,MAA+F,IAA/F,IAAuGD,kBAAkB,KAAK,KAAK,CAAnI,GAAuIA,kBAAvI,GAA4J,CAAtK,CAAhB;;AACA,YAAIC,SAAS,GAAG,CAAZ,IAAiBA,SAAS,GAAG,EAAjC,EAAqC;AACnC,gBAAM,IAAI7oB,UAAJ,CAAe,8CAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI6K,OAAO,GAAGtK,IAAI,CAACqF,UAAL,EAAd,CAVgE,CAU/B;;AACjC,YAAI4E,OAAO,GAAGjK,IAAI,CAACmF,UAAL,KAAoBmF,OAAO,GAAG,EAA5C;AACA,YAAIR,cAAc,GAAG,wFAAkBtI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAA5E,CAArB;AACA,YAAIS,cAAc,GAAGT,cAAc,CAACG,OAAO,GAAGghB,SAAX,CAAd,GAAsCA,SAA3D;AACA,YAAIC,gBAAgB,GAAGjhB,OAAO,GAAGghB,SAAjC;AACA,YAAIE,YAAY,GAAG3qB,IAAI,CAACiD,KAAL,CAAWynB,gBAAgB,GAAGD,SAA9B,IAA2CA,SAA9D;AACA,eAAO,IAAIprB,IAAJ,CAASG,IAAI,CAAC+E,WAAL,EAAT,EAA6B/E,IAAI,CAAC8E,QAAL,EAA7B,EAA8C9E,IAAI,CAACE,OAAL,EAA9C,EAA8DF,IAAI,CAACiF,QAAL,EAA9D,EAA+EsF,cAAc,GAAG4gB,YAAhG,CAAP;;;;;;;;;;;;;;;;;;AC/CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIniB,sBAAsB,GAAG,KAA7B;AAEA;;;;;;;;;;;;;;;;;;;AAkBe,eAASoiB,UAAT,CAAoB3rB,SAApB,EAA+BqD,WAA/B,EAA4C;AACzD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,0EAAgBrD,SAAhB,EAA2BsD,MAAM,GAAGiG,sBAApC,CAAP;;;;;;;;;;;;;;;;;;AC1BF;;AAAA,UAAIqiB,iBAAiB,GAAG,SAASA,iBAAT,CAA2BlS,OAA3B,EAAoCmS,UAApC,EAAgD;AACtE,gBAAQnS,OAAR;AACE,eAAK,GAAL;AACE,mBAAOmS,UAAU,CAACtrB,IAAX,CAAgB;AACrBuW,mBAAK,EAAE;AADc,aAAhB,CAAP;;AAGF,eAAK,IAAL;AACE,mBAAO+U,UAAU,CAACtrB,IAAX,CAAgB;AACrBuW,mBAAK,EAAE;AADc,aAAhB,CAAP;;AAGF,eAAK,KAAL;AACE,mBAAO+U,UAAU,CAACtrB,IAAX,CAAgB;AACrBuW,mBAAK,EAAE;AADc,aAAhB,CAAP;;AAGF,eAAK,MAAL;AACA;AACE,mBAAO+U,UAAU,CAACtrB,IAAX,CAAgB;AACrBuW,mBAAK,EAAE;AADc,aAAhB,CAAP;AAfJ;AAmBD,OApBD;;AAqBA,UAAIgV,iBAAiB,GAAG,SAASA,iBAAT,CAA2BpS,OAA3B,EAAoCmS,UAApC,EAAgD;AACtE,gBAAQnS,OAAR;AACE,eAAK,GAAL;AACE,mBAAOmS,UAAU,CAACza,IAAX,CAAgB;AACrB0F,mBAAK,EAAE;AADc,aAAhB,CAAP;;AAGF,eAAK,IAAL;AACE,mBAAO+U,UAAU,CAACza,IAAX,CAAgB;AACrB0F,mBAAK,EAAE;AADc,aAAhB,CAAP;;AAGF,eAAK,KAAL;AACE,mBAAO+U,UAAU,CAACza,IAAX,CAAgB;AACrB0F,mBAAK,EAAE;AADc,aAAhB,CAAP;;AAGF,eAAK,MAAL;AACA;AACE,mBAAO+U,UAAU,CAACza,IAAX,CAAgB;AACrB0F,mBAAK,EAAE;AADc,aAAhB,CAAP;AAfJ;AAmBD,OApBD;;AAqBA,UAAIiV,qBAAqB,GAAG,SAASA,qBAAT,CAA+BrS,OAA/B,EAAwCmS,UAAxC,EAAoD;AAC9E,YAAIlS,WAAW,GAAGD,OAAO,CAACpO,KAAR,CAAc,WAAd,KAA8B,EAAhD;AACA,YAAI0gB,WAAW,GAAGrS,WAAW,CAAC,CAAD,CAA7B;AACA,YAAIsS,WAAW,GAAGtS,WAAW,CAAC,CAAD,CAA7B;;AACA,YAAI,CAACsS,WAAL,EAAkB;AAChB,iBAAOL,iBAAiB,CAAClS,OAAD,EAAUmS,UAAV,CAAxB;AACD;;AACD,YAAIK,cAAJ;;AACA,gBAAQF,WAAR;AACE,eAAK,GAAL;AACEE,0BAAc,GAAGL,UAAU,CAACM,QAAX,CAAoB;AACnCrV,mBAAK,EAAE;AAD4B,aAApB,CAAjB;AAGA;;AACF,eAAK,IAAL;AACEoV,0BAAc,GAAGL,UAAU,CAACM,QAAX,CAAoB;AACnCrV,mBAAK,EAAE;AAD4B,aAApB,CAAjB;AAGA;;AACF,eAAK,KAAL;AACEoV,0BAAc,GAAGL,UAAU,CAACM,QAAX,CAAoB;AACnCrV,mBAAK,EAAE;AAD4B,aAApB,CAAjB;AAGA;;AACF,eAAK,MAAL;AACA;AACEoV,0BAAc,GAAGL,UAAU,CAACM,QAAX,CAAoB;AACnCrV,mBAAK,EAAE;AAD4B,aAApB,CAAjB;AAGA;AArBJ;;AAuBA,eAAOoV,cAAc,CAAC3e,OAAf,CAAuB,UAAvB,EAAmCqe,iBAAiB,CAACI,WAAD,EAAcH,UAAd,CAApD,EAA+Ete,OAA/E,CAAuF,UAAvF,EAAmGue,iBAAiB,CAACG,WAAD,EAAcJ,UAAd,CAApH,CAAP;AACD,OAhCD;;AAiCA,UAAIO,cAAc,GAAG;AACnBC,SAAC,EAAEP,iBADgB;AAEnBQ,SAAC,EAAEP;AAFgB,OAArB;AAIe;;AAAA,uCAAAK,cAAA;;;;;;;;;;;;;;;;AC/Ef;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCe,eAASzJ,GAAT,CAAa3iB,SAAb,EAAwBqU,QAAxB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBpU,SAAhB;AACA,YAAI,CAACoU,QAAD,IAAa,kFAAQA,QAAR,MAAsB,QAAvC,EAAiD,OAAO,IAAIjU,IAAJ,CAASoE,GAAT,CAAP;AACjD,YAAIyG,KAAK,GAAGoJ,QAAQ,CAACpJ,KAAT,GAAiB,wEAAUoJ,QAAQ,CAACpJ,KAAnB,CAAjB,GAA6C,CAAzD;AACA,YAAID,MAAM,GAAGqJ,QAAQ,CAACrJ,MAAT,GAAkB,wEAAUqJ,QAAQ,CAACrJ,MAAnB,CAAlB,GAA+C,CAA5D;AACA,YAAIiL,KAAK,GAAG5B,QAAQ,CAAC4B,KAAT,GAAiB,wEAAU5B,QAAQ,CAAC4B,KAAnB,CAAjB,GAA6C,CAAzD;AACA,YAAIlL,IAAI,GAAGsJ,QAAQ,CAACtJ,IAAT,GAAgB,wEAAUsJ,QAAQ,CAACtJ,IAAnB,CAAhB,GAA2C,CAAtD;AACA,YAAItC,KAAK,GAAG4L,QAAQ,CAAC5L,KAAT,GAAiB,wEAAU4L,QAAQ,CAAC5L,KAAnB,CAAjB,GAA6C,CAAzD;AACA,YAAI+B,OAAO,GAAG6J,QAAQ,CAAC7J,OAAT,GAAmB,wEAAU6J,QAAQ,CAAC7J,OAAnB,CAAnB,GAAiD,CAA/D;AACA,YAAIK,OAAO,GAAGwJ,QAAQ,CAACxJ,OAAT,GAAmB,wEAAUwJ,QAAQ,CAACxJ,OAAnB,CAAnB,GAAiD,CAA/D,CAT+C,CAW/C;;AACA,YAAItK,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIusB,cAAc,GAAGvhB,MAAM,IAAIC,KAAV,GAAkB,oEAAU1K,IAAV,EAAgByK,MAAM,GAAGC,KAAK,GAAG,EAAjC,CAAlB,GAAyD1K,IAA9E,CAb+C,CAe/C;;AACA,YAAIisB,YAAY,GAAGzhB,IAAI,IAAIkL,KAAR,GAAgB,kEAAQsW,cAAR,EAAwBxhB,IAAI,GAAGkL,KAAK,GAAG,CAAvC,CAAhB,GAA4DsW,cAA/E,CAhB+C,CAkB/C;;AACA,YAAIE,YAAY,GAAGjiB,OAAO,GAAG/B,KAAK,GAAG,EAArC;AACA,YAAIikB,YAAY,GAAG7hB,OAAO,GAAG4hB,YAAY,GAAG,EAA5C;AACA,YAAIE,OAAO,GAAGD,YAAY,GAAG,IAA7B;AACA,YAAI3T,SAAS,GAAG,IAAI3Y,IAAJ,CAASosB,YAAY,CAAC1oB,OAAb,KAAyB6oB,OAAlC,CAAhB;AACA,eAAO5T,SAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC7DF;;;UAUa6T,mDAAmD;AAkB9D,qEACUC,QADV,EAEUC,gBAFV,EAGUC,iBAHV,EAIUC,WAJV,EAKUC,cALV,EAKwC;AAAA;;AAJ9B,eAAAJ,QAAA,GAAAA,QAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AArBQ,eAAAC,OAAA,GAAe,EAAf;AAIlB,eAAAC,SAAA,GAA+B,IAAI,0DAAJ,EAA/B;AAEA,eAAAC,gBAAA,GAAmB,IAAnB;AAMA,eAAAC,kBAAA,GAA4B,EAA5B;AAWE,eAAKJ,cAAL,CAAoBK,UAApB;AACD;;AA1B6D;AAAA;AAAA,iBA4B9D,oBAAW;AACT,iBAAKC,gBAAL;AACA,iBAAKC,aAAL;AACD;AA/B6D;AAAA;AAAA,iBAiC9D,qBAAS;AACP,gBAAI,KAAKN,OAAL,CAAaO,WAAb,KAA6B,IAA7B,IAAqC,KAAKP,OAAL,CAAaQ,MAAb,KAAwB,IAAjE,EAAuE;AACrE,qBAAO,IAAP;AACD,aAFD,MAEO,IACL,KAAKR,OAAL,CAAahO,QAAb,KAA0B,IAA1B,IACA,KAAKgO,OAAL,CAAaO,WAAb,KAA6B,KAD7B,IAEA,KAAKP,OAAL,CAAaQ,MAAb,KAAwB,KAHnB,EAIL;AACA,qBAAO,KAAP;AACD;AACF;AA3C6D;AAAA;AAAA,iBA6C9D,4BAAgB;AACd,mBAAO,KAAKC,SAAL,KACH,KAAKC,wBAAL,EADG,GAEH,KAAKC,oBAAL,EAFJ;AAGD;AAjD6D;AAAA;AAAA,iBAmD9D,oCAAwB;AAAA;;AACtB,iBAAKC,yBAAL,GACGzY,IADH,CAEI,gEAAS,YAAM;AACb,oBAAI,CAAC+X,gBAAL,GAAwB,KAAxB;;AAEA,kBAAI,MAAI,CAACW,OAAL,KAAiB,IAArB,EAA2B;AACzB,sBAAI,CAACZ,SAAL,CAAe1N,IAAf,CAAoB;AAClBnB,8BAAY,EAAE,CADI;AAElB;AACA0P,8BAAY,EAAE,sBAHI;AAIlBC,gCAAc,EAAE;AAJE,iBAApB;AAMD;AACF,aAXD,CAFJ,EAeG5O,SAfH,CAea;AACT6O,kBAAI,EAAE,cAAC5O,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,MAAgC,GAApC,EAAyC;AACvC,wBAAI,CAACkO,aAAL;;AACA,wBAAI,CAACW,WAAL,GAAmB7O,QAAQ,CAAC,CAAD,CAAR,CAAY,QAAZ,CAAnB,CAFuC,CAIvC;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;;AACA,sBAAI,MAAI,CAAC6O,WAAL,CAAiBjtB,MAAjB,GAA0B,CAA1B,IAA+B,MAAI,CAAC6sB,OAAL,KAAiB,IAApD,EAA0D,CACtD;AACA;AACA;AACA;AACH;AACF,iBArBD,MAqBO;AACL,wBAAI,CAACK,2BAAL;AACD;;AAED,oBAAI9O,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,MAAgC,GAApC,EAAyC;AACvC,wBAAI,CAAC+O,UAAL,GAAkB/O,QAAQ,CAAC,CAAD,CAAR,CAAY,QAAZ,CAAlB;AACA,wBAAI,CAAC+N,kBAAL,GAA0B,MAAI,CAACgB,UAA/B;;AACA,sBAAI,MAAI,CAACN,OAAL,KAAiB,IAArB,EAA2B;AACzB,0BAAI,CAACV,kBAAL,CAAwBiB,OAAxB,CAAgC;AAC9BhZ,wBAAE,EAAE,CAD0B;AAE9BiZ,0BAAI,EAAE;AAFwB,qBAAhC;AAID;AACF,iBATD,MASO;AACL,wBAAI,CAACH,2BAAL;AACD;AACF,eAvCQ;AAwCTI,mBAAK,EAAE,eAACA,MAAD,EAAgB;AACrB,sBAAI,CAACJ,2BAAL;AACD;AA1CQ,aAfb;AA2DD;AA/G6D;AAAA;AAAA,iBAiH9D,qCAAyB;AACvB,gBAAMD,WAAW,GAAG,KAAKrB,gBAAL,CAAsB2B,cAAtB,EAApB;AACA,gBAAMJ,UAAU,GAAG,KAAKtB,iBAAL,CAAuB2B,aAAvB,EAAnB;AAEA,mBAAO,sDAAS,CAACP,WAAD,EAAcE,UAAd,CAAT,EAAoChZ,IAApC,CAAyC,4DAAK,CAAL,CAAzC,CAAP;AACD;AAtH6D;AAAA;AAAA,iBAwH9D,gCAAoB;AAAA;;AAClB,iBAAK0X,iBAAL,CACGc,oBADH,GAEGxY,IAFH,CAGI,gEAAS,YAAM;AACb,oBAAI,CAAC+X,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOG/N,SAPH,CAQI,UAACC,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAAC,cAAD,CAAR,KAA6B,GAAjC,EAAsC;AACpC,sBAAI,CAACkO,aAAL;;AACA,sBAAI,CAACH,kBAAL,GAA0B/N,QAAQ,CAAC,QAAD,CAAlC;AACD,eAHD,MAGO;AACL,sBAAI,CAAC8O,2BAAL;AACD;AACF,aAfL,EAgBI,UAACI,KAAD,EAAgB;AACd,oBAAI,CAACJ,2BAAL;AACD,aAlBL;AAsBD;AA/I6D;AAAA;AAAA,iBAiJ9D,+BAAmB;AACjB,iBAAKnB,cAAL,CAAoBuB,KAApB;AACA,iBAAK3B,QAAL,CAAc8B,IAAd;AACD;AApJ6D;AAAA;AAAA,iBAuJ9D,uCAA2B;AACzB,iBAAK1B,cAAL,CAAoBuB,KAApB;AACA,iBAAK3B,QAAL,CAAc8B,IAAd;AACD;AA1J6D;AAAA;AAAA,iBA4J9D,yBAAa;AACX,iBAAKC,IAAL,GAAY,KAAK5B,WAAL,CAAiB6B,KAAjB,CAAuB;AACjCvQ,0BAAY,EAAE,CAAC,IAAD,EAAO,0DAAWwQ,QAAlB,CADmB;AAEjCvQ,wBAAU,EAAE,CAAC,IAAD,EAAO,0DAAWuQ,QAAlB,CAFqB;AAGjCd,0BAAY,EAAE,CAAC,IAAD,CAHmB;AAIjCC,4BAAc,EAAE,CAAC,IAAD;AAJiB,aAAvB,CAAZ;;AAOA,gBAAI,KAAKN,SAAL,EAAJ,EAAsB;AACpB,mBAAKiB,IAAL,CAAUxZ,GAAV,CAAc,cAAd,EAA8B2Z,QAA9B,CAAuC,CAAvC;AACA,mBAAKH,IAAL,CAAUxZ,GAAV,CAAc,YAAd,EAA4B2Z,QAA5B,CAAqC,CAArC;AACD,aAHD,MAGO;AACL,mBAAKH,IAAL,CAAUI,QAAV,CAAmB,cAAnB,EAAmCC,eAAnC;AACD;AACF;AA1K6D;AAAA;AAAA,iBA4K9D,mBAAO;AACN;AACC,gBAAI,KAAKL,IAAL,CAAUM,KAAd,EAAqB;AACnB,kBAAI,KAAKvB,SAAL,EAAJ,EAAsB;AACpB,oBAAI,KAAKiB,IAAL,CAAU1mB,KAAV,CAAgB,cAAhB,MAAoC,CAAxC,EAA2C;AACzC,uBAAK0mB,IAAL,CAAUxZ,GAAV,CAAc,gBAAd,EAAgC2Z,QAAhC,CAAyC,sBAAzC;AACD,iBAFD,MAEO;AACL,uBAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK+G,WAAL,CAAiBjtB,MAArC,EAA6CkmB,CAAC,EAA9C,EAAkD;AAChD,wBAAI,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,cAAhB,MAAoC,KAAKimB,WAAL,CAAiB/G,CAAjB,EAAoB,IAApB,CAAxC,EAAmE;AACjE,2BAAKwH,IAAL,CACGxZ,GADH,CACO,gBADP,EAEG2Z,QAFH,CAEY,KAAKZ,WAAL,CAAiB/G,CAAjB,EAAoB,MAApB,CAFZ;AAGD;AACF;AACF;;AAED,oBAAI,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,YAAhB,MAAkC,CAAtC,EAAyC;AACvC,uBAAK0mB,IAAL,CAAUxZ,GAAV,CAAc,cAAd,EAA8B2Z,QAA9B,CAAuC,sBAAvC;AACD,iBAFD,MAEO;AACL,uBAAK,IAAI3H,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKiH,UAAL,CAAgBntB,MAApC,EAA4CkmB,EAAC,EAA7C,EAAiD;AAC/C,wBAAI,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,YAAhB,MAAkC,KAAKmmB,UAAL,CAAgBjH,EAAhB,EAAmB,IAAnB,CAAtC,EAAgE;AAC9D,2BAAKwH,IAAL,CACGxZ,GADH,CACO,cADP,EAEG2Z,QAFH,CAEY,KAAKV,UAAL,CAAgBjH,EAAhB,EAAmB,MAAnB,CAFZ;AAGD;AACF;AACF;AACF,eAxBD,MAwBO;AACL,qBAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKiG,kBAAL,CAAwBnsB,MAA5C,EAAoDkmB,GAAC,EAArD,EAAyD;AACvD,sBACE,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,YAAhB,MAAkC,KAAKmlB,kBAAL,CAAwBjG,GAAxB,EAA2B,IAA3B,CADpC,EAEE;AACA,yBAAKwH,IAAL,CACGxZ,GADH,CACO,cADP,EAEG2Z,QAFH,CAEY,KAAK1B,kBAAL,CAAwBjG,GAAxB,EAA2B,cAA3B,CAFZ;AAGA,yBAAKwH,IAAL,CACGxZ,GADH,CACO,cADP,EAEG2Z,QAFH,CAEY,KAAK1B,kBAAL,CAAwBjG,GAAxB,EAA2B,MAA3B,CAFZ;AAGD;AACF;AACF;;AACD,mBAAK+F,SAAL,CAAe1N,IAAf,CAAoB,KAAKmP,IAAL,CAAU1mB,KAA9B;AACD;AACF;AAvN6D;AAAA;AAAA,iBAyN9D,4BAAmB+W,UAAnB,EAAoC;AAAA;;AAClC;AACA;AACA;AACE,iBAAK8N,iBAAL,CAAuBoC,qBAAvB,CAA6ClQ,UAA7C,EAAyDI,SAAzD,CACE,UAACC,QAAD,EAAmB;AACjB;AACA,kBAAIA,QAAQ,CAAC,SAAD,CAAR,KAAwB,IAA5B,EAAkC;AAChC;AACA,sBAAI,CAAC+N,kBAAL,GAA0B/N,QAAQ,CAAC,MAAD,CAAlC;AAED,eAJD,MAIO;AACL,sBAAI,CAAC8O,2BAAL;AACD;AACF,aAVH,EAJgC,CAgBlC;AACA;AACA;AAEA;;AACA,iBAAKQ,IAAL,CAAUxZ,GAAV,CAAc,YAAd,EAA4B2Z,QAA5B,CAAqC,CAArC;AACD;AA/O6D;AAAA;AAAA,iBAiP9D,0BAAiBzQ,YAAjB,EAAoC;AAClC,iBAAKsQ,IAAL,CAAUI,QAAV,CAAmB,YAAnB,EAAiCD,QAAjC,CAA0C,IAA1C;;AAEA,gBAAIzQ,YAAY,IAAI,CAApB,EAAuB;AACrB,mBAAK+O,kBAAL,GAA0B,CACxB;AACE/X,kBAAE,EAAE,CADN;AAEEiZ,oBAAI,EAAE,sBAFR;AAGEjQ,4BAAY,EAAE;AAHhB,eADwB,CAA1B;AAOA,mBAAKsQ,IAAL,CAAUI,QAAV,CAAmB,YAAnB,EAAiCD,QAAjC,CAA0CzQ,YAA1C;AACA,mBAAK8Q,OAAL;AACD,aAVD,MAUO;AACL,mBAAK/B,kBAAL,GAA0B,KAAKgB,UAAL,CAAgBgB,MAAhB,CACxB,UAAAnnB,KAAK;AAAA,uBAAIA,KAAK,CAACoW,YAAN,IAAsBA,YAA1B;AAAA,eADmB,CAA1B;;AAIA,kBAAI,KAAK+O,kBAAL,CAAwBnsB,MAAxB,GAAiC,CAAjC,IAAsC,KAAK6sB,OAAL,KAAiB,IAA3D,EAAiE;AAC/D,qBAAKV,kBAAL,CAAwBiB,OAAxB,CAAgC;AAC9BhZ,oBAAE,EAAE,CAD0B;AAE9BiZ,sBAAI,EAAE;AAFwB,iBAAhC;AAID;AACF;AACF;AA1Q6D;;AAAA;AAAA,S;;;;gBAhBvD;;gBAQA;;gBACA;;gBARW;;gBAMX;;;;;;gBAWN,mD;AAAK,iBAAC,SAAD;;;gBACL,mD;AAAK,iBAAC,SAAD;;;gBAEL,oD;AAAM,iBAAC,WAAD;;;AALI3B,yDAAmD,6DAL/D,gEAAU;AACT/H,gBAAQ,EAAE,gDADD;AAETxC,gBAAQ,EAAR,6FAFS;;AAAA,OAAV,CAK+D,E,+EAmB1C,wD,EACQ,mE,EACC,wF,EACN,0D,EACG,2F,EAvBoC,GAAnDuK,mDAAmD,CAAnD;;;;;;;;;;;;;;;;ACjBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGe,eAAS0C,kBAAT,CAA4B/uB,IAA5B,EAAkCgvB,QAAlC,EAA4CxtB,OAA5C,EAAqD;AAClE,oFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIiI,KAAK,GAAG,CAAZ;AACA,YAAI0C,IAAJ;AACA,YAAIT,QAAQ,GAAG,iEAAO5J,IAAP,CAAf;AACA,YAAI6J,SAAS,GAAG,iEAAOmlB,QAAP,CAAhB;;AACA,YAAI,EAAExtB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC6I,IAApD,CAAJ,EAA+D;AAC7D;AACA,cAAI4kB,aAAa,GAAG,8EAAoBrlB,QAApB,EAA8BC,SAA9B,CAApB,CAF6D,CAEC;;AAE9D,cAAIrJ,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,mEAA9B,EAA+C;AAC7CtnB,iBAAK,GAAG,8EAAoBiC,QAApB,EAA8BC,SAA9B,CAAR;AACAQ,gBAAI,GAAG,QAAP;AACD,WAHD,MAGO,IAAI7J,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,iEAA9B,EAA6C;AAClDtnB,iBAAK,GAAG,8EAAoBiC,QAApB,EAA8BC,SAA9B,CAAR;AACAQ,gBAAI,GAAG,QAAP;AACD,WAHM,MAGA,IAAI7J,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,gEAA1B,IAA0CzuB,IAAI,CAACC,GAAL,CAAS,mFAAyBmJ,QAAzB,EAAmCC,SAAnC,CAAT,IAA0D,CAAxG,EAA2G;AAChHlC,iBAAK,GAAG,4EAAkBiC,QAAlB,EAA4BC,SAA5B,CAAR;AACAQ,gBAAI,GAAG,MAAP;AACD,WAHM,MAGA,IAAI7J,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,iEAA1B,KAA4CtnB,KAAK,GAAG,mFAAyBiC,QAAzB,EAAmCC,SAAnC,CAApD,KAAsGrJ,IAAI,CAACC,GAAL,CAASkH,KAAT,IAAkB,CAA5H,EAA+H;AACpI0C,gBAAI,GAAG,KAAP;AACD,WAFM,MAEA,IAAI7J,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,kEAA9B,EAA8C;AACnDtnB,iBAAK,GAAG,oFAA0BiC,QAA1B,EAAoCC,SAApC,CAAR;AACAQ,gBAAI,GAAG,MAAP;AACD,WAHM,MAGA,IAAI7J,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,oEAA9B,EAAgD;AACrDtnB,iBAAK,GAAG,qFAA2BiC,QAA3B,EAAqCC,SAArC,CAAR;AACAQ,gBAAI,GAAG,OAAP;AACD,WAHM,MAGA,IAAI7J,IAAI,CAACC,GAAL,CAASwuB,aAAT,IAA0B,iEAA9B,EAA6C;AAClD,gBAAI,uFAA6BrlB,QAA7B,EAAuCC,SAAvC,IAAoD,CAAxD,EAA2D;AACzD;AACAlC,mBAAK,GAAG,uFAA6BiC,QAA7B,EAAuCC,SAAvC,CAAR;AACAQ,kBAAI,GAAG,SAAP;AACD,aAJD,MAIO;AACL1C,mBAAK,GAAG,oFAA0BiC,QAA1B,EAAoCC,SAApC,CAAR;AACAQ,kBAAI,GAAG,MAAP;AACD;AACF,WATM,MASA;AACL1C,iBAAK,GAAG,oFAA0BiC,QAA1B,EAAoCC,SAApC,CAAR;AACAQ,gBAAI,GAAG,MAAP;AACD;AACF,SAlCD,MAkCO;AACL;AACAA,cAAI,GAAG7I,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC6I,IAAjE;;AACA,cAAIA,IAAI,KAAK,QAAb,EAAuB;AACrB1C,iBAAK,GAAG,8EAAoBiC,QAApB,EAA8BC,SAA9B,CAAR;AACD,WAFD,MAEO,IAAIQ,IAAI,KAAK,QAAb,EAAuB;AAC5B1C,iBAAK,GAAG,8EAAoBiC,QAApB,EAA8BC,SAA9B,CAAR;AACD,WAFM,MAEA,IAAIQ,IAAI,KAAK,MAAb,EAAqB;AAC1B1C,iBAAK,GAAG,4EAAkBiC,QAAlB,EAA4BC,SAA5B,CAAR;AACD,WAFM,MAEA,IAAIQ,IAAI,KAAK,KAAb,EAAoB;AACzB1C,iBAAK,GAAG,mFAAyBiC,QAAzB,EAAmCC,SAAnC,CAAR;AACD,WAFM,MAEA,IAAIQ,IAAI,KAAK,MAAb,EAAqB;AAC1B1C,iBAAK,GAAG,oFAA0BiC,QAA1B,EAAoCC,SAApC,CAAR;AACD,WAFM,MAEA,IAAIQ,IAAI,KAAK,OAAb,EAAsB;AAC3B1C,iBAAK,GAAG,qFAA2BiC,QAA3B,EAAqCC,SAArC,CAAR;AACD,WAFM,MAEA,IAAIQ,IAAI,KAAK,SAAb,EAAwB;AAC7B1C,iBAAK,GAAG,uFAA6BiC,QAA7B,EAAuCC,SAAvC,CAAR;AACD,WAFM,MAEA,IAAIQ,IAAI,KAAK,MAAb,EAAqB;AAC1B1C,iBAAK,GAAG,oFAA0BiC,QAA1B,EAAoCC,SAApC,CAAR;AACD;AACF;;AACD,YAAIqlB,GAAG,GAAG,IAAIjY,IAAI,CAACkY,kBAAT,CAA4B3tB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAAtF,EAA8F;AACtGitB,uBAAa,EAAE5tB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC4tB,aAD6B;AAEtGC,iBAAO,EAAE,CAAC7tB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC6tB,OAA3D,KAAuE,MAFsB;AAGtGC,eAAK,EAAE9tB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC8tB;AAHqC,SAA9F,CAAV;AAKA,eAAOJ,GAAG,CAACrf,MAAJ,CAAWlI,KAAX,EAAkB0C,IAAlB,CAAP;;;;;;;;;;;;;;;;;;AClLF;AAAA;;;AAAA;AAAA;AAAA;;AACA,UAAIklB,SAAS,GAAG;AACdC,cAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADM;AAEdC,mBAAW,EAAE,CAAC,IAAD,EAAO,IAAP,CAFC;AAGdC,YAAI,EAAE,CAAC,eAAD,EAAkB,aAAlB;AAHQ,OAAhB;AAKA,UAAIC,aAAa,GAAG;AAClBH,cAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADU;AAElBC,mBAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAFK;AAGlBC,YAAI,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,aAA/B,EAA8C,aAA9C;AAHY,OAApB,C,CAMA;AACA;AACA;AACA;;AACA,UAAIE,WAAW,GAAG;AAChBJ,cAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CADQ;AAEhBC,mBAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAFG;AAGhBC,YAAI,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G;AAHU,OAAlB;AAKA,UAAIG,SAAS,GAAG;AACdL,cAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CADM;AAEd,iBAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAFO;AAGdC,mBAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAHC;AAIdC,YAAI,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE;AAJQ,OAAhB;AAMA,UAAII,eAAe,GAAG;AACpBN,cAAM,EAAE;AACN1K,YAAE,EAAE,GADE;AAENC,YAAE,EAAE,GAFE;AAGNC,kBAAQ,EAAE,IAHJ;AAINC,cAAI,EAAE,GAJA;AAKNC,iBAAO,EAAE,SALH;AAMNC,mBAAS,EAAE,WANL;AAONC,iBAAO,EAAE,SAPH;AAQNC,eAAK,EAAE;AARD,SADY;AAWpBoK,mBAAW,EAAE;AACX3K,YAAE,EAAE,IADO;AAEXC,YAAE,EAAE,IAFO;AAGXC,kBAAQ,EAAE,UAHC;AAIXC,cAAI,EAAE,MAJK;AAKXC,iBAAO,EAAE,SALE;AAMXC,mBAAS,EAAE,WANA;AAOXC,iBAAO,EAAE,SAPE;AAQXC,eAAK,EAAE;AARI,SAXO;AAqBpBqK,YAAI,EAAE;AACJ5K,YAAE,EAAE,MADA;AAEJC,YAAE,EAAE,MAFA;AAGJC,kBAAQ,EAAE,UAHN;AAIJC,cAAI,EAAE,MAJF;AAKJC,iBAAO,EAAE,SALL;AAMJC,mBAAS,EAAE,WANP;AAOJC,iBAAO,EAAE,SAPL;AAQJC,eAAK,EAAE;AARH;AArBc,OAAtB;AAgCA,UAAI0K,yBAAyB,GAAG;AAC9BP,cAAM,EAAE;AACN1K,YAAE,EAAE,GADE;AAENC,YAAE,EAAE,GAFE;AAGNC,kBAAQ,EAAE,IAHJ;AAINC,cAAI,EAAE,GAJA;AAKNC,iBAAO,EAAE,gBALH;AAMNC,mBAAS,EAAE,kBANL;AAONC,iBAAO,EAAE,gBAPH;AAQNC,eAAK,EAAE;AARD,SADsB;AAW9BoK,mBAAW,EAAE;AACX3K,YAAE,EAAE,IADO;AAEXC,YAAE,EAAE,IAFO;AAGXC,kBAAQ,EAAE,UAHC;AAIXC,cAAI,EAAE,MAJK;AAKXC,iBAAO,EAAE,gBALE;AAMXC,mBAAS,EAAE,kBANA;AAOXC,iBAAO,EAAE,gBAPE;AAQXC,eAAK,EAAE;AARI,SAXiB;AAqB9BqK,YAAI,EAAE;AACJ5K,YAAE,EAAE,MADA;AAEJC,YAAE,EAAE,MAFA;AAGJC,kBAAQ,EAAE,UAHN;AAIJC,cAAI,EAAE,MAJF;AAKJC,iBAAO,EAAE,gBALL;AAMJC,mBAAS,EAAE,kBANP;AAOJC,iBAAO,EAAE,gBAPL;AAQJC,eAAK,EAAE;AARH;AArBwB,OAAhC;;AAgCA,UAAIpa,aAAa,GAAG,SAASA,aAAT,CAAuB9G,WAAvB,EAAoC0E,QAApC,EAA8C;AAChE,YAAIzI,MAAM,GAAGgE,MAAM,CAACD,WAAD,CAAnB,CADgE,CAGhE;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAI6rB,MAAM,GAAG5vB,MAAM,GAAG,GAAtB;;AACA,YAAI4vB,MAAM,GAAG,EAAT,IAAeA,MAAM,GAAG,EAA5B,EAAgC;AAC9B,kBAAQA,MAAM,GAAG,EAAjB;AACE,iBAAK,CAAL;AACE,qBAAO5vB,MAAM,GAAG,IAAhB;;AACF,iBAAK,CAAL;AACE,qBAAOA,MAAM,GAAG,IAAhB;;AACF,iBAAK,CAAL;AACE,qBAAOA,MAAM,GAAG,IAAhB;AANJ;AAQD;;AACD,eAAOA,MAAM,GAAG,IAAhB;AACD,OAtBD;;AAuBA,UAAIolB,QAAQ,GAAG;AACbva,qBAAa,EAAEA,aADF;AAEbwa,WAAG,EAAE,8EAAgB;AACnBwK,gBAAM,EAAEV,SADW;AAEnBW,sBAAY,EAAE;AAFK,SAAhB,CAFQ;AAMbjK,eAAO,EAAE,8EAAgB;AACvBgK,gBAAM,EAAEN,aADe;AAEvBO,sBAAY,EAAE,MAFS;AAGvBC,0BAAgB,EAAE,SAASA,gBAAT,CAA0BlK,OAA1B,EAAmC;AACnD,mBAAOA,OAAO,GAAG,CAAjB;AACD;AALsB,SAAhB,CANI;AAabphB,aAAK,EAAE,8EAAgB;AACrBorB,gBAAM,EAAEL,WADa;AAErBM,sBAAY,EAAE;AAFO,SAAhB,CAbM;AAiBb7tB,WAAG,EAAE,8EAAgB;AACnB4tB,gBAAM,EAAEJ,SADW;AAEnBK,sBAAY,EAAE;AAFK,SAAhB,CAjBQ;AAqBb5Z,iBAAS,EAAE,8EAAgB;AACzB2Z,gBAAM,EAAEH,eADiB;AAEzBI,sBAAY,EAAE,MAFW;AAGzBE,0BAAgB,EAAEL,yBAHO;AAIzBM,gCAAsB,EAAE;AAJC,SAAhB;AArBE,OAAf;AA4Be;;AAAA,uCAAA7K,QAAA;;;;;;;;;;;;;;;;AC9If;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAWe,eAAS8K,+BAAT,CAAyCtwB,IAAzC,EAA+C;AAC5D,YAAIuwB,OAAO,GAAG,IAAI1wB,IAAJ,CAASA,IAAI,CAAC2wB,GAAL,CAASxwB,IAAI,CAAC+E,WAAL,EAAT,EAA6B/E,IAAI,CAAC8E,QAAL,EAA7B,EAA8C9E,IAAI,CAACE,OAAL,EAA9C,EAA8DF,IAAI,CAACiF,QAAL,EAA9D,EAA+EjF,IAAI,CAACmF,UAAL,EAA/E,EAAkGnF,IAAI,CAACqF,UAAL,EAAlG,EAAqHrF,IAAI,CAACwF,eAAL,EAArH,CAAT,CAAd;AACA+qB,eAAO,CAACzd,cAAR,CAAuB9S,IAAI,CAAC+E,WAAL,EAAvB;AACA,eAAO/E,IAAI,CAACuD,OAAL,KAAiBgtB,OAAO,CAAChtB,OAAR,EAAxB;;;;;;;;;;;;;;;;;;ACdF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCe,eAASktB,UAAT,CAAoBvtB,aAApB,EAAmCC,cAAnC,EAAmD3B,OAAnD,EAA4D;AACzE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIgxB,mBAAmB,GAAG,sEAAYxtB,aAAZ,EAA2B1B,OAA3B,CAA1B;AACA,YAAImvB,oBAAoB,GAAG,sEAAYxtB,cAAZ,EAA4B3B,OAA5B,CAA3B;AACA,eAAOkvB,mBAAmB,CAACntB,OAApB,OAAkCotB,oBAAoB,CAACptB,OAArB,EAAzC;;;;;;;;;;;;;;;;;;ACzCF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASqtB,sBAAT,CAAgCC,IAAhC,EAAsC;AACnD,YAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnB,gBAAM,IAAIC,cAAJ,CAAmB,2DAAnB,CAAN;AACD;;AACD,eAAOD,IAAP;;;;;;;;;;;;;;;;;;ACJF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASE,kBAAT,CAA4B1qB,QAA5B,EAAsC;AACnD,mFAAa,CAAb,EAAgB3G,SAAhB;AACA,YAAI6G,KAAK,GAAG,iEAAOF,QAAQ,CAACE,KAAhB,CAAZ;AACA,YAAIE,GAAG,GAAG,iEAAOJ,QAAQ,CAACI,GAAhB,CAAV;AACA,YAAIpC,KAAK,CAACkC,KAAK,CAAChD,OAAN,EAAD,CAAT,EAA4B,MAAM,IAAInB,UAAJ,CAAe,uBAAf,CAAN;AAC5B,YAAIiC,KAAK,CAACoC,GAAG,CAAClD,OAAJ,EAAD,CAAT,EAA0B,MAAM,IAAInB,UAAJ,CAAe,qBAAf,CAAN;AAC1B,YAAI0R,QAAQ,GAAG,EAAf;AACAA,gBAAQ,CAACpJ,KAAT,GAAiBlK,IAAI,CAACC,GAAL,CAAS,4EAAkBgG,GAAlB,EAAuBF,KAAvB,CAAT,CAAjB;AACA,YAAIjG,IAAI,GAAG,qEAAWmG,GAAX,EAAgBF,KAAhB,CAAX;AACA,YAAIyqB,eAAe,GAAG,8DAAIzqB,KAAJ,EAAW;AAC/BmE,eAAK,EAAEpK,IAAI,GAAGwT,QAAQ,CAACpJ;AADQ,SAAX,CAAtB;AAGAoJ,gBAAQ,CAACrJ,MAAT,GAAkBjK,IAAI,CAACC,GAAL,CAAS,6EAAmBgG,GAAnB,EAAwBuqB,eAAxB,CAAT,CAAlB;AACA,YAAIC,aAAa,GAAG,8DAAID,eAAJ,EAAqB;AACvCvmB,gBAAM,EAAEnK,IAAI,GAAGwT,QAAQ,CAACrJ;AADe,SAArB,CAApB;AAGAqJ,gBAAQ,CAACtJ,IAAT,GAAgBhK,IAAI,CAACC,GAAL,CAAS,2EAAiBgG,GAAjB,EAAsBwqB,aAAtB,CAAT,CAAhB;AACA,YAAIC,cAAc,GAAG,8DAAID,aAAJ,EAAmB;AACtCzmB,cAAI,EAAElK,IAAI,GAAGwT,QAAQ,CAACtJ;AADgB,SAAnB,CAArB;AAGAsJ,gBAAQ,CAAC5L,KAAT,GAAiB1H,IAAI,CAACC,GAAL,CAAS,4EAAkBgG,GAAlB,EAAuByqB,cAAvB,CAAT,CAAjB;AACA,YAAIC,gBAAgB,GAAG,8DAAID,cAAJ,EAAoB;AACzChpB,eAAK,EAAE5H,IAAI,GAAGwT,QAAQ,CAAC5L;AADkB,SAApB,CAAvB;AAGA4L,gBAAQ,CAAC7J,OAAT,GAAmBzJ,IAAI,CAACC,GAAL,CAAS,8EAAoBgG,GAApB,EAAyB0qB,gBAAzB,CAAT,CAAnB;AACA,YAAIC,gBAAgB,GAAG,8DAAID,gBAAJ,EAAsB;AAC3ClnB,iBAAO,EAAE3J,IAAI,GAAGwT,QAAQ,CAAC7J;AADkB,SAAtB,CAAvB;AAGA6J,gBAAQ,CAACxJ,OAAT,GAAmB9J,IAAI,CAACC,GAAL,CAAS,8EAAoBgG,GAApB,EAAyB2qB,gBAAzB,CAAT,CAAnB;AACA,eAAOtd,QAAP;;;;;;;;;;;;;;;;;;AC9DF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCe,eAASud,UAAT,CAAoBnuB,aAApB,EAAmCC,cAAnC,EAAmD;AAChE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAIT,IAAI,GAAGkH,QAAQ,CAACrG,OAAT,KAAqBsG,SAAS,CAACtG,OAAV,EAAhC;;AACA,YAAIb,IAAI,GAAG,CAAX,EAAc;AACZ,iBAAO,CAAC,CAAR;AACD,SAFD,MAEO,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,iBAAO,CAAP,CADmB,CAEnB;AACD,SAHM,MAGA;AACL,iBAAOA,IAAP;AACD;;;;;;;;;;;;;;;;;;AC9CH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACe,eAAS4uB,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AACtD,YAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAC3D,gBAAM,IAAIxwB,SAAJ,CAAc,oDAAd,CAAN;AACD;;AACDuwB,gBAAQ,CAACpwB,SAAT,GAAqBD,MAAM,CAACuhB,MAAP,CAAc+O,UAAU,IAAIA,UAAU,CAACrwB,SAAvC,EAAkD;AACrEub,qBAAW,EAAE;AACX/U,iBAAK,EAAE4pB,QADI;AAEXE,oBAAQ,EAAE,IAFC;AAGXC,wBAAY,EAAE;AAHH;AADwD,SAAlD,CAArB;AAOAxwB,cAAM,CAACywB,cAAP,CAAsBJ,QAAtB,EAAgC,WAAhC,EAA6C;AAC3CE,kBAAQ,EAAE;AADiC,SAA7C;AAGA,YAAID,UAAJ,EAAgB,mEAAeD,QAAf,EAAyBC,UAAzB;;;;;;;;;;;;;;;;;;ACflB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAII,uBAAuB,GAAG,aAAa,UAAU1qB,OAAV,EAAmB;AACnE,4FAAU0qB,uBAAV,EAAmC1qB,OAAnC;;AACA,YAAIC,MAAM,GAAG,uFAAayqB,uBAAb,CAAb;;AACA,iBAASA,uBAAT,GAAmC;AACjC,cAAIxqB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBwqB,uBAAtB;;AACA,eAAK,IAAIvqB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAawqB,uBAAb,EAAsC,CAAC;AACrClqB,aAAG,EAAE,OADgC;AAErCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACE;AACA,uBAAO,+DAAaA,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAOU,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC/B0O,uBAAK,EAAE,aADwB;AAE/BC,yBAAO,EAAE;AAFsB,iBAA1B,KAGDzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC9B0O,uBAAK,EAAE,QADuB;AAE9BC,yBAAO,EAAE;AAFqB,iBAA1B,CAHN;AAOF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC/B0O,uBAAK,EAAE,QADwB;AAE/BC,yBAAO,EAAE;AAFsB,iBAA1B,CAAP;AAIF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC/B0O,uBAAK,EAAE,MADwB;AAE/BC,yBAAO,EAAE;AAFsB,iBAA1B,KAGDzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC9B0O,uBAAK,EAAE,aADuB;AAE9BC,yBAAO,EAAE;AAFqB,iBAA1B,CAHC,IAMDzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC9B0O,uBAAK,EAAE,QADuB;AAE9BC,yBAAO,EAAE;AAFqB,iBAA1B,CANN;AA7BJ;AAwCD;AA3CoC,SAAD,EA4CnC;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACD;AAJA,SA5CmC,EAiDnC;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACsP,WAAL,CAAiB,CAAC3H,KAAK,GAAG,CAAT,IAAc,CAA/B,EAAkC,CAAlC;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SAjDmC,CAAtC;AAyDA,eAAO4xB,uBAAP;AACD,OAxEiD,CAwEhD,iDAxEgD,CAA3C;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASC,qBAAT,CAA+BvnB,OAA/B,EAAwC;AACrD,mFAAa,CAAb,EAAgB5K,SAAhB;AACA,eAAO4K,OAAO,GAAG,wEAAjB;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAASwnB,SAAT,CAAmBryB,SAAnB,EAA8B+B,OAA9B,EAAuC;AACpD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIC,YAAY,GAAG,wEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB,CAJoD,CAMpD;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAAC4V,MAAL,EAAV;AACA,YAAIlT,IAAI,GAAG,CAACL,GAAG,GAAGH,YAAN,GAAqB,CAAC,CAAtB,GAA0B,CAA3B,IAAgC,CAAhC,IAAqCG,GAAG,GAAGH,YAA3C,CAAX;AACAlC,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAA9B;AACA1C,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC9CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGe,eAAS+xB,YAAT,CAAsBC,OAAtB,EAA+B;AAC5C,YAAIC,yBAAyB,GAAG,8EAAhC;AACA,eAAO,SAASC,oBAAT,GAAgC;AACrC,cAAIC,KAAK,GAAG,mEAAeH,OAAf,CAAZ;AAAA,cACEllB,MADF;;AAEA,cAAImlB,yBAAJ,EAA+B;AAC7B,gBAAIG,SAAS,GAAG,mEAAe,IAAf,EAAqB1V,WAArC;AACA5P,kBAAM,GAAGgB,OAAO,CAACC,SAAR,CAAkBokB,KAAlB,EAAyBzyB,SAAzB,EAAoC0yB,SAApC,CAAT;AACD,WAHD,MAGO;AACLtlB,kBAAM,GAAGqlB,KAAK,CAAC1qB,KAAN,CAAY,IAAZ,EAAkB/H,SAAlB,CAAT;AACD;;AACD,iBAAO,8EAA0B,IAA1B,EAAgCoN,MAAhC,CAAP;AACD,SAVD;;;;;;;;;;;;;;;;;;ACLF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAaqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIulB,sBAAsB,GAAG,uDAA7B,C,CAEA;AACA;;AACA,UAAIC,0BAA0B,GAAG,mCAAjC;AACA,UAAIC,mBAAmB,GAAG,cAA1B;AACA,UAAIC,iBAAiB,GAAG,KAAxB;AACA,UAAIC,mBAAmB,GAAG,IAA1B;AACA,UAAIC,6BAA6B,GAAG,UAApC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6Se,eAAS9qB,KAAT,CAAe+qB,eAAf,EAAgCC,iBAAhC,EAAmDC,kBAAnD,EAAuErxB,OAAvE,EAAgF;AAC7F,YAAIC,IAAJ,EAAUI,eAAV,EAA2BH,KAA3B,EAAkCC,KAAlC,EAAyCmxB,KAAzC,EAAgDnb,qBAAhD,EAAuEob,gBAAvE,EAAyFC,qBAAzF,EAAgHjxB,qBAAhH,EAAuIC,sBAAvI,EAA+JixB,KAA/J,EAAsKC,KAAtK,EAA6KC,KAA7K,EAAoLvxB,qBAApL,EAA2MwxB,gBAA3M,EAA6NC,qBAA7N,EAAoPC,sBAApP,EAA4QC,sBAA5Q;;AACA,oFAAa,CAAb,EAAgB7zB,SAAhB;AACA,YAAImI,UAAU,GAAGkC,MAAM,CAAC4oB,eAAD,CAAvB;AACA,YAAI/N,YAAY,GAAG7a,MAAM,CAAC6oB,iBAAD,CAAzB;AACA,YAAI3wB,cAAc,GAAG,yFAArB;AACA,YAAIE,MAAM,GAAG,CAACV,IAAI,GAAG,CAACI,eAAe,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAA7E,MAAyF,IAAzF,IAAiGN,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJI,cAAc,CAACE,MAAvK,MAAmL,IAAnL,IAA2LV,IAAI,KAAK,KAAK,CAAzM,GAA6MA,IAA7M,GAAoN,mEAAjO;;AACA,YAAI,CAACU,MAAM,CAAC4I,KAAZ,EAAmB;AACjB,gBAAM,IAAI3I,UAAJ,CAAe,oCAAf,CAAN;AACD;;AACD,YAAIwV,qBAAqB,GAAG,wEAAU,CAAClW,KAAK,GAAG,CAACC,KAAK,GAAG,CAACmxB,KAAK,GAAG,CAACnb,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACuxB,gBAAgB,GAAGvxB,OAAO,CAACW,MAA5B,MAAwC,IAAxC,IAAgD4wB,gBAAgB,KAAK,KAAK,CAA1E,GAA8E,KAAK,CAAnF,GAAuF,CAACC,qBAAqB,GAAGD,gBAAgB,CAACvxB,OAA1C,MAAuD,IAAvD,IAA+DwxB,qBAAqB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,qBAAqB,CAACpb,qBAApc,MAA+d,IAA/d,IAAuekb,KAAK,KAAK,KAAK,CAAtf,GAA0fA,KAA1f,GAAkgB7wB,cAAc,CAAC2V,qBAA1hB,MAAqjB,IAArjB,IAA6jBjW,KAAK,KAAK,KAAK,CAA5kB,GAAglBA,KAAhlB,GAAwlB,CAACI,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAAl1B,MAA62B,IAA72B,IAAq3BlW,KAAK,KAAK,KAAK,CAAp4B,GAAw4BA,KAAx4B,GAAg5B,CAA15B,CAA5B,CAV6F,CAY7F;;AACA,YAAI,EAAEkW,qBAAqB,IAAI,CAAzB,IAA8BA,qBAAqB,IAAI,CAAzD,CAAJ,EAAiE;AAC/D,gBAAM,IAAIxV,UAAJ,CAAe,2DAAf,CAAN;AACD;;AACD,YAAIF,YAAY,GAAG,wEAAU,CAAC+wB,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACvxB,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAAC4xB,gBAAgB,GAAG5xB,OAAO,CAACW,MAA5B,MAAwC,IAAxC,IAAgDixB,gBAAgB,KAAK,KAAK,CAA1E,GAA8E,KAAK,CAAnF,GAAuF,CAACC,qBAAqB,GAAGD,gBAAgB,CAAC5xB,OAA1C,MAAuD,IAAvD,IAA+D6xB,qBAAqB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,qBAAqB,CAACnxB,YAA3b,MAA6c,IAA7c,IAAqdixB,KAAK,KAAK,KAAK,CAApe,GAAweA,KAAxe,GAAgflxB,cAAc,CAACC,YAAxgB,MAA0hB,IAA1hB,IAAkiBgxB,KAAK,KAAK,KAAK,CAAjjB,GAAqjBA,KAArjB,GAA6jB,CAACI,sBAAsB,GAAGrxB,cAAc,CAACE,MAAzC,MAAqD,IAArD,IAA6DmxB,sBAAsB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0G,CAACC,sBAAsB,GAAGD,sBAAsB,CAAC9xB,OAAjD,MAA8D,IAA9D,IAAsE+xB,sBAAsB,KAAK,KAAK,CAAtG,GAA0G,KAAK,CAA/G,GAAmHA,sBAAsB,CAACrxB,YAA1zB,MAA40B,IAA50B,IAAo1B+wB,KAAK,KAAK,KAAK,CAAn2B,GAAu2BA,KAAv2B,GAA+2B,CAAz3B,CAAnB,CAhB6F,CAkB7F;;AACA,YAAI,EAAE/wB,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIwiB,YAAY,KAAK,EAArB,EAAyB;AACvB,cAAI/c,UAAU,KAAK,EAAnB,EAAuB;AACrB,mBAAO,iEAAOgrB,kBAAP,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAIhzB,IAAJ,CAASoE,GAAT,CAAP;AACD;AACF;;AACD,YAAIuvB,YAAY,GAAG;AACjB5b,+BAAqB,EAAEA,qBADN;AAEjB1V,sBAAY,EAAEA,YAFG;AAGjBC,gBAAM,EAAEA;AAHS,SAAnB,CA7B6F,CAmC7F;;AACA,YAAIsxB,OAAO,GAAG,CAAC,IAAI,0EAAJ,EAAD,CAAd;AACA,YAAIC,MAAM,GAAG9O,YAAY,CAAC7Z,KAAb,CAAmBunB,0BAAnB,EAA+CqB,GAA/C,CAAmD,UAAUC,SAAV,EAAqB;AACnF,cAAIC,cAAc,GAAGD,SAAS,CAAC,CAAD,CAA9B;;AACA,cAAIC,cAAc,IAAI,2EAAtB,EAAsC;AACpC,gBAAIC,aAAa,GAAG,4EAAeD,cAAf,CAApB;AACA,mBAAOC,aAAa,CAACF,SAAD,EAAYzxB,MAAM,CAACmpB,UAAnB,CAApB;AACD;;AACD,iBAAOsI,SAAP;AACD,SAPY,EAOVG,IAPU,CAOL,EAPK,EAODhpB,KAPC,CAOKsnB,sBAPL,CAAb;AAQA,YAAI2B,UAAU,GAAG,EAAjB;;AACA,YAAIC,SAAS,GAAG,qGAA2BP,MAA3B,CAAhB;AAAA,YACEQ,KADF;;AAEA,YAAI;AACF,cAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,gBAAIxrB,KAAK,GAAGurB,KAAK,CAACvsB,KAAlB;;AACA,gBAAI,EAAEnG,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC4yB,2BAApD,KAAoF,+FAAyBzrB,KAAzB,CAAxF,EAAyH;AACvH,wGAAoBA,KAApB,EAA2Bic,YAA3B,EAAyC+N,eAAzC;AACD;;AACD,gBAAI,EAAEnxB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC6yB,4BAApD,KAAqF,gGAA0B1rB,KAA1B,CAAzF,EAA2H;AACzH,wGAAoBA,KAApB,EAA2Bic,YAA3B,EAAyC+N,eAAzC;AACD;;AACD,gBAAIkB,cAAc,GAAGlrB,KAAK,CAAC,CAAD,CAA1B;AACA,gBAAI2rB,MAAM,GAAG,+DAAQT,cAAR,CAAb;;AACA,gBAAIS,MAAJ,EAAY;AACV,kBAAIC,kBAAkB,GAAGD,MAAM,CAACC,kBAAhC;;AACA,kBAAIhtB,KAAK,CAACitB,OAAN,CAAcD,kBAAd,CAAJ,EAAuC;AACrC,oBAAIE,iBAAiB,GAAGT,UAAU,CAACU,IAAX,CAAgB,UAAUC,SAAV,EAAqB;AAC3D,yBAAOJ,kBAAkB,CAACK,QAAnB,CAA4BD,SAAS,CAAChsB,KAAtC,KAAgDgsB,SAAS,CAAChsB,KAAV,KAAoBkrB,cAA3E;AACD,iBAFuB,CAAxB;;AAGA,oBAAIY,iBAAJ,EAAuB;AACrB,wBAAM,IAAIryB,UAAJ,CAAe,sCAAsCsC,MAAtC,CAA6C+vB,iBAAiB,CAACI,SAA/D,EAA0E,SAA1E,EAAqFnwB,MAArF,CAA4FiE,KAA5F,EAAmG,oBAAnG,CAAf,CAAN;AACD;AACF,eAPD,MAOO,IAAI2rB,MAAM,CAACC,kBAAP,KAA8B,GAA9B,IAAqCP,UAAU,CAACrzB,MAAX,GAAoB,CAA7D,EAAgE;AACrE,sBAAM,IAAIyB,UAAJ,CAAe,sCAAsCsC,MAAtC,CAA6CiE,KAA7C,EAAoD,wCAApD,CAAf,CAAN;AACD;;AACDqrB,wBAAU,CAACltB,IAAX,CAAgB;AACd6B,qBAAK,EAAEkrB,cADO;AAEdgB,yBAAS,EAAElsB;AAFG,eAAhB;AAIA,kBAAImsB,WAAW,GAAGR,MAAM,CAACS,GAAP,CAAWltB,UAAX,EAAuBc,KAAvB,EAA8BxG,MAAM,CAAC4I,KAArC,EAA4CyoB,YAA5C,CAAlB;;AACA,kBAAI,CAACsB,WAAL,EAAkB;AAChB,uBAAO;AACLE,mBAAC,EAAE,IAAIn1B,IAAJ,CAASoE,GAAT;AADE,iBAAP;AAGD;;AACDwvB,qBAAO,CAAC3sB,IAAR,CAAaguB,WAAW,CAACG,MAAzB;AACAptB,wBAAU,GAAGitB,WAAW,CAAC7b,IAAzB;AACD,aAxBD,MAwBO;AACL,kBAAI4a,cAAc,CAAC9oB,KAAf,CAAqB2nB,6BAArB,CAAJ,EAAyD;AACvD,sBAAM,IAAItwB,UAAJ,CAAe,mEAAmEyxB,cAAnE,GAAoF,GAAnG,CAAN;AACD,eAHI,CAKL;;;AACA,kBAAIlrB,KAAK,KAAK,IAAd,EAAoB;AAClBA,qBAAK,GAAG,GAAR;AACD,eAFD,MAEO,IAAIkrB,cAAc,KAAK,GAAvB,EAA4B;AACjClrB,qBAAK,GAAGusB,kBAAkB,CAACvsB,KAAD,CAA1B;AACD,eAVI,CAYL;;;AACA,kBAAId,UAAU,CAAC6H,OAAX,CAAmB/G,KAAnB,MAA8B,CAAlC,EAAqC;AACnCd,0BAAU,GAAGA,UAAU,CAACyK,KAAX,CAAiB3J,KAAK,CAAChI,MAAvB,CAAb;AACD,eAFD,MAEO;AACL,uBAAO;AACLq0B,mBAAC,EAAE,IAAIn1B,IAAJ,CAASoE,GAAT;AADE,iBAAP;AAGD;AACF;AACF,WAvDD;;AAwDA,eAAKgwB,SAAS,CAACxM,CAAV,EAAL,EAAoB,CAAC,CAACyM,KAAK,GAAGD,SAAS,CAACxa,CAAV,EAAT,EAAwB0b,IAA7C,GAAoD;AAClD,gBAAIC,IAAI,GAAGjB,KAAK,EAAhB;;AACA,gBAAI,kFAAQiB,IAAR,MAAkB,QAAtB,EAAgC,OAAOA,IAAI,CAACJ,CAAZ;AACjC,WA5DC,CA8DF;;AACD,SA/DD,CA+DE,OAAOK,GAAP,EAAY;AACZpB,mBAAS,CAAC9lB,CAAV,CAAYknB,GAAZ;AACD,SAjED,SAiEU;AACRpB,mBAAS,CAACqB,CAAV;AACD;;AACD,YAAIztB,UAAU,CAAClH,MAAX,GAAoB,CAApB,IAAyB8xB,mBAAmB,CAAC3gB,IAApB,CAAyBjK,UAAzB,CAA7B,EAAmE;AACjE,iBAAO,IAAIhI,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAIsxB,qBAAqB,GAAG9B,OAAO,CAACE,GAAR,CAAY,UAAUsB,MAAV,EAAkB;AACxD,iBAAOA,MAAM,CAACO,QAAd;AACD,SAF2B,EAEzBC,IAFyB,CAEpB,UAAU1O,CAAV,EAAaG,CAAb,EAAgB;AACtB,iBAAOA,CAAC,GAAGH,CAAX;AACD,SAJ2B,EAIzB+H,MAJyB,CAIlB,UAAU0G,QAAV,EAAoBE,KAApB,EAA2B/jB,KAA3B,EAAkC;AAC1C,iBAAOA,KAAK,CAACjC,OAAN,CAAc8lB,QAAd,MAA4BE,KAAnC;AACD,SAN2B,EAMzB/B,GANyB,CAMrB,UAAU6B,QAAV,EAAoB;AACzB,iBAAO/B,OAAO,CAAC3E,MAAR,CAAe,UAAUmG,MAAV,EAAkB;AACtC,mBAAOA,MAAM,CAACO,QAAP,KAAoBA,QAA3B;AACD,WAFM,EAEJC,IAFI,CAEC,UAAU1O,CAAV,EAAaG,CAAb,EAAgB;AACtB,mBAAOA,CAAC,CAACyO,WAAF,GAAgB5O,CAAC,CAAC4O,WAAzB;AACD,WAJM,CAAP;AAKD,SAZ2B,EAYzBhC,GAZyB,CAYrB,UAAUiC,WAAV,EAAuB;AAC5B,iBAAOA,WAAW,CAAC,CAAD,CAAlB;AACD,SAd2B,CAA5B;AAeA,YAAI51B,IAAI,GAAG,iEAAO6yB,kBAAP,CAAX;;AACA,YAAIxuB,KAAK,CAACrE,IAAI,CAACuD,OAAL,EAAD,CAAT,EAA2B;AACzB,iBAAO,IAAI1D,IAAJ,CAASoE,GAAT,CAAP;AACD,SAzI4F,CA2I7F;;;AACA,YAAIssB,OAAO,GAAG,0EAAgBvwB,IAAhB,EAAsB,8FAAgCA,IAAhC,CAAtB,CAAd;AACA,YAAI+O,KAAK,GAAG,EAAZ;;AACA,YAAI8mB,UAAU,GAAG,qGAA2BN,qBAA3B,CAAjB;AAAA,YACEO,MADF;;AAEA,YAAI;AACF,eAAKD,UAAU,CAACpO,CAAX,EAAL,EAAqB,CAAC,CAACqO,MAAM,GAAGD,UAAU,CAACpc,CAAX,EAAV,EAA0B0b,IAAhD,GAAuD;AACrD,gBAAIF,MAAM,GAAGa,MAAM,CAACnuB,KAApB;;AACA,gBAAI,CAACstB,MAAM,CAAC/pB,QAAP,CAAgBqlB,OAAhB,EAAyBiD,YAAzB,CAAL,EAA6C;AAC3C,qBAAO,IAAI3zB,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,gBAAI6I,MAAM,GAAGmoB,MAAM,CAACntB,GAAP,CAAWyoB,OAAX,EAAoBxhB,KAApB,EAA2BykB,YAA3B,CAAb,CALqD,CAMrD;;AACA,gBAAIjsB,KAAK,CAACitB,OAAN,CAAc1nB,MAAd,CAAJ,EAA2B;AACzByjB,qBAAO,GAAGzjB,MAAM,CAAC,CAAD,CAAhB;AACA,mFAAOiC,KAAP,EAAcjC,MAAM,CAAC,CAAD,CAApB,EAFyB,CAGzB;AACD,aAJD,MAIO;AACLyjB,qBAAO,GAAGzjB,MAAV;AACD;AACF;AACF,SAhBD,CAgBE,OAAOuoB,GAAP,EAAY;AACZQ,oBAAU,CAAC1nB,CAAX,CAAaknB,GAAb;AACD,SAlBD,SAkBU;AACRQ,oBAAU,CAACP,CAAX;AACD;;AACD,eAAO/E,OAAP;AACD;;AACD,eAAS2E,kBAAT,CAA4BplB,KAA5B,EAAmC;AACjC,eAAOA,KAAK,CAAC/E,KAAN,CAAYwnB,mBAAZ,EAAiC,CAAjC,EAAoCvlB,OAApC,CAA4CwlB,iBAA5C,EAA+D,GAA/D,CAAP;;;;;;;;;;;;;;;;;;ACvfF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASuD,UAAT,CAAoBt2B,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAIg2B,aAAa,GAAG,aAAa,UAAU9uB,OAAV,EAAmB;AACzD,4FAAU8uB,aAAV,EAAyB9uB,OAAzB;;AACA,YAAIC,MAAM,GAAG,uFAAa6uB,aAAb,CAAb;;AACA,iBAASA,aAAT,GAAyB;AACvB,cAAI5uB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB4uB,aAAtB;;AACA,eAAK,IAAI3uB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa4uB,aAAb,EAA4B,CAAC;AAC3BtuB,aAAG,EAAE,OADsB;AAE3BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACE;AACA,uBAAO,+DAAaA,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAOU,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC/B0O,uBAAK,EAAE,aADwB;AAE/BC,yBAAO,EAAE;AAFsB,iBAA1B,KAGDzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC9B0O,uBAAK,EAAE,QADuB;AAE9BC,yBAAO,EAAE;AAFqB,iBAA1B,CAHN;AAOF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC/B0O,uBAAK,EAAE,QADwB;AAE/BC,yBAAO,EAAE;AAFsB,iBAA1B,CAAP;AAIF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC/B0O,uBAAK,EAAE,MADwB;AAE/BC,yBAAO,EAAE;AAFsB,iBAA1B,KAGDzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC9B0O,uBAAK,EAAE,aADuB;AAE9BC,yBAAO,EAAE;AAFqB,iBAA1B,CAHC,IAMDzL,KAAK,CAACkb,OAAN,CAAcpe,UAAd,EAA0B;AAC9B0O,uBAAK,EAAE,QADuB;AAE9BC,yBAAO,EAAE;AAFqB,iBAA1B,CANN;AA7BJ;AAwCD;AA3C0B,SAAD,EA4CzB;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACD;AAJA,SA5CyB,EAiDzB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACsP,WAAL,CAAiB,CAAC3H,KAAK,GAAG,CAAT,IAAc,CAA/B,EAAkC,CAAlC;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SAjDyB,CAA5B;AAyDA,eAAOg2B,aAAP;AACD,OAxEuC,CAwEtC,iDAxEsC,CAAjC;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAO0D;;;AACnD,UAAIC,SAAS,GAAG,aAAa,UAAU/uB,OAAV,EAAmB;AACrD,4FAAU+uB,SAAV,EAAqB/uB,OAArB;;AACA,YAAIC,MAAM,GAAG,uFAAa8uB,SAAb,CAAb;;AACA,iBAASA,SAAT,GAAqB;AACnB,cAAI7uB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB6uB,SAAtB;;AACA,eAAK,IAAI5uB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa6uB,SAAb,EAAwB,CAAC;AACvBvuB,aAAG,EAAE,OADkB;AAEvBC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACA,mBAAK,KAAL;AACE,uBAAOoC,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,aADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,IAMDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANN;AAUF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,QADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,CAAP;AAIF;;AACA,mBAAK,QAAL;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,OADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHN;AAOF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,MADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,aADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,IAMDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANC,IASDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CATN;AAjCJ;AA+CD;AAlDsB,SAAD,EAmDrB;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACD;AAJA,SAnDqB,EAwDrB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkCnG,OAAlC,EAA2C;AAChDxB,gBAAI,GAAG,wEAAUA,IAAV,EAAgB2H,KAAhB,EAAuBnG,OAAvB,CAAP;AACAxB,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SAxDqB,CAAxB;AAgEA,eAAOi2B,SAAP;AACD,OA/EmC,CA+ElC,iDA/EkC,CAA7B;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAASC,YAAT,CAAsBz2B,SAAtB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,uEAAaG,IAAI,CAACmH,GAAL,EAAb,EAAyBvH,SAAzB,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQ0E;;;AACnE,UAAI02B,iBAAiB,GAAG,aAAa,UAAUjvB,OAAV,EAAmB;AAC7D,4FAAUivB,iBAAV,EAA6BjvB,OAA7B;;AACA,YAAIC,MAAM,GAAG,uFAAagvB,iBAAb,CAAb;;AACA,iBAASA,iBAAT,GAA6B;AAC3B,cAAI/uB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB+uB,iBAAtB;;AACA,eAAK,IAAI9uB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa+uB,iBAAb,EAAgC,CAAC;AAC/BzuB,aAAG,EAAE,OAD0B;AAE/BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkC;AACvC,gBAAIA,KAAK,KAAK,GAAd,EAAmB;AACjB,qBAAO,qEAAmB,CAAnB,EAAsBd,UAAtB,CAAP;AACD;;AACD,mBAAO,qEAAmBc,KAAK,CAAChI,MAAzB,EAAiCkH,UAAjC,CAAP;AACD;AAP8B,SAAD,EAQ7B;AACDH,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAaC,KAAb,EAAoBC,MAApB,EAA4BL,KAA5B,EAAmC;AACxC,gBAAIyuB,eAAe,GAAG,IAAIv2B,IAAJ,CAAS,CAAT,CAAtB;AACAu2B,2BAAe,CAACtjB,cAAhB,CAA+BnL,KAA/B,EAAsC,CAAtC,EAAyC,CAAzC;AACAyuB,2BAAe,CAAC/qB,WAAhB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC;AACA,mBAAO,gFAAkB+qB,eAAlB,CAAP;AACD;AAPA,SAR6B,CAAhC;AAiBA,eAAOD,iBAAP;AACD,OAhC2C,CAgC1C,iDAhC0C,CAArC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASE,UAAT,CAAoB52B,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,qEAAWD,SAAX,EAAsBI,IAAI,CAACmH,GAAL,EAAtB,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASsvB,SAAT,CAAmB72B,SAAnB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAAC4V,MAAL,EAAV;;AACA,YAAIvT,GAAG,KAAK,CAAZ,EAAe;AACbA,aAAG,GAAG,CAAN;AACD;;AACD,eAAOA,GAAP;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAE0D;AAC1D;AACA;AACA;;;AACA,eAASk0B,eAAT,CAAyB3sB,QAAzB,EAAmCC,SAAnC,EAA8C;AAC5C,YAAInH,IAAI,GAAGkH,QAAQ,CAAC7E,WAAT,KAAyB8E,SAAS,CAAC9E,WAAV,EAAzB,IAAoD6E,QAAQ,CAAC9E,QAAT,KAAsB+E,SAAS,CAAC/E,QAAV,EAA1E,IAAkG8E,QAAQ,CAAC1J,OAAT,KAAqB2J,SAAS,CAAC3J,OAAV,EAAvH,IAA8I0J,QAAQ,CAAC3E,QAAT,KAAsB4E,SAAS,CAAC5E,QAAV,EAApK,IAA4L2E,QAAQ,CAACzE,UAAT,KAAwB0E,SAAS,CAAC1E,UAAV,EAApN,IAA8OyE,QAAQ,CAACvE,UAAT,KAAwBwE,SAAS,CAACxE,UAAV,EAAtQ,IAAgSuE,QAAQ,CAACpE,eAAT,KAA6BqE,SAAS,CAACrE,eAAV,EAAxU;;AACA,YAAI9C,IAAI,GAAG,CAAX,EAAc;AACZ,iBAAO,CAAC,CAAR;AACD,SAFD,MAEO,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,iBAAO,CAAP,CADmB,CAEnB;AACD,SAHM,MAGA;AACL,iBAAOA,IAAP;AACD;AACF;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDe,eAAS8zB,gBAAT,CAA0BtzB,aAA1B,EAAyCC,cAAzC,EAAyD;AACtE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI7C,IAAI,GAAGi2B,eAAe,CAAC3sB,QAAD,EAAWC,SAAX,CAA1B;AACA,YAAIgS,UAAU,GAAGrb,IAAI,CAACC,GAAL,CAAS,mFAAyBmJ,QAAzB,EAAmCC,SAAnC,CAAT,CAAjB;AACAD,gBAAQ,CAAC3J,OAAT,CAAiB2J,QAAQ,CAAC1J,OAAT,KAAqBI,IAAI,GAAGub,UAA7C,EANsE,CAQtE;AACA;;AACA,YAAI4a,gBAAgB,GAAGryB,MAAM,CAACmyB,eAAe,CAAC3sB,QAAD,EAAWC,SAAX,CAAf,KAAyC,CAACvJ,IAA3C,CAA7B;AACA,YAAIwM,MAAM,GAAGxM,IAAI,IAAIub,UAAU,GAAG4a,gBAAjB,CAAjB,CAXsE,CAYtE;;AACA,eAAO3pB,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;;;;;;;;;;;;;;;;;;AChFF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAAS4pB,wBAAT,CAAkC9sB,QAAlC,EAA4CC,SAA5C,EAAuD;AACpE,mFAAa,CAAb,EAAgBnK,SAAhB;AACA,eAAO,iEAAOkK,QAAP,EAAiBrG,OAAjB,KAA6B,iEAAOsG,SAAP,EAAkBtG,OAAlB,EAApC;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASozB,cAAT,CAAwBl3B,SAAxB,EAAmC;AAChD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI6xB,UAAU,GAAG52B,IAAI,CAAC8E,QAAL,EAAjB;AACA,YAAI+xB,cAAc,GAAG,IAAIh3B,IAAJ,CAAS,CAAT,CAArB;AACAg3B,sBAAc,CAAC/2B,WAAf,CAA2BH,IAA3B,EAAiCi3B,UAAU,GAAG,CAA9C,EAAiD,CAAjD;AACAC,sBAAc,CAAC92B,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC;AACA,eAAO82B,cAAc,CAAC32B,OAAf,EAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAI42B,WAAW,GAAG,aAAa,UAAU5vB,OAAV,EAAmB;AACvD,4FAAU4vB,WAAV,EAAuB5vB,OAAvB;;AACA,YAAIC,MAAM,GAAG,uFAAa2vB,WAAb,CAAb;;AACA,iBAASA,WAAT,GAAuB;AACrB,cAAI1vB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB0vB,WAAtB;;AACA,eAAK,IAAIzvB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAArE;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa0vB,WAAb,EAA0B,CAAC;AACzBpvB,aAAG,EAAE,OADoB;AAEzBC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,gBAAIyQ,aAAa,GAAG,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAChD,qBAAOA,KAAK,GAAG,CAAf;AACD,aAFD;;AAGA,oBAAQgB,KAAR;AACE;AACA,mBAAK,GAAL;AACE,uBAAO,2DAAS,sEAAoB,8DAAgB9D,KAApC,EAA2CgD,UAA3C,CAAT,EAAiE2T,aAAjE,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAO,2DAAS,+DAAa,CAAb,EAAgB3T,UAAhB,CAAT,EAAsC2T,aAAtC,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAO,2DAASzQ,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AAC9CwC,sBAAI,EAAE;AADwC,iBAAhC,CAAT,EAEHmR,aAFG,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAOzQ,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC7B0O,uBAAK,EAAE,aADsB;AAE7BC,yBAAO,EAAE;AAFoB,iBAAxB,KAGDzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC5B0O,uBAAK,EAAE,QADqB;AAE5BC,yBAAO,EAAE;AAFmB,iBAAxB,CAHN;AAOF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC7B0O,uBAAK,EAAE,QADsB;AAE7BC,yBAAO,EAAE;AAFoB,iBAAxB,CAAP;AAIF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC7B0O,uBAAK,EAAE,MADsB;AAE7BC,yBAAO,EAAE;AAFoB,iBAAxB,KAGDzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC5B0O,uBAAK,EAAE,aADqB;AAE5BC,yBAAO,EAAE;AAFmB,iBAAxB,CAHC,IAMDzL,KAAK,CAAClG,KAAN,CAAYgD,UAAZ,EAAwB;AAC5B0O,uBAAK,EAAE,QADqB;AAE5BC,yBAAO,EAAE;AAFmB,iBAAxB,CANN;AA9BJ;AAyCD;AA/CwB,SAAD,EAgDvB;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAhDuB,EAqDvB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACsP,WAAL,CAAiB3H,KAAjB,EAAwB,CAAxB;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SArDuB,CAA1B;AA6DA,eAAO82B,WAAP;AACD,OA5EqC,CA4EpC,iDA5EoC,CAA/B;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCe,eAASC,SAAT,CAAmBpzB,QAAnB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBjE,SAAhB;;AACA,YAAI,OAAOiE,QAAP,KAAoB,QAAxB,EAAkC;AAChC,cAAIqzB,KAAK,GAAGrzB,QAAQ,CAACoH,KAAT,CAAe,+FAAf,CAAZ;;AACA,cAAIisB,KAAJ,EAAW;AACT;AACA,mBAAO,IAAIn3B,IAAJ,CAASA,IAAI,CAAC2wB,GAAL,CAAS,CAACwG,KAAK,CAAC,CAAD,CAAf,EAAoB,CAACA,KAAK,CAAC,CAAD,CAAN,GAAY,CAAhC,EAAmC,CAACA,KAAK,CAAC,CAAD,CAAzC,EAA8C,CAACA,KAAK,CAAC,CAAD,CAAN,GAAY,CAAC,CAACA,KAAK,CAAC,CAAD,CAAN,IAAa,CAAd,KAAoBA,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,GAAkB,CAAC,CAAnB,GAAuB,CAA3C,CAA1D,EAAyG,CAACA,KAAK,CAAC,CAAD,CAAN,GAAY,CAAC,CAACA,KAAK,CAAC,EAAD,CAAN,IAAc,CAAf,KAAqBA,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,GAAkB,CAAC,CAAnB,GAAuB,CAA5C,CAArH,EAAqK,CAACA,KAAK,CAAC,CAAD,CAA3K,EAAgL,CAAC,CAAC,CAACA,KAAK,CAAC,CAAD,CAAL,IAAY,GAAb,IAAoB,IAArB,EAA2BpD,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,CAAjL,CAAT,CAAP;AACD;;AACD,iBAAO,IAAI/zB,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,eAAO,iEAAON,QAAP,CAAP;;;;;;;;;;;;;;;;;;AC9CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASszB,WAAT,CAAqBx3B,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACk3B,eAAL,CAAqB,GAArB;AACA,eAAOl3B,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASm3B,cAAT,CAAwBn3B,IAAxB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASo3B,SAAT,CAAmB33B,SAAnB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBmW,MAAlB,OAA+B,CAAtC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASyhB,UAAT,CAAoB53B,SAApB,EAA+B63B,YAA/B,EAA6C;AAC1D,mFAAa,CAAb,EAAgB53B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI8mB,OAAO,GAAG,wEAAU+Q,YAAV,CAAd;AACA,YAAI50B,IAAI,GAAG,qEAAW1C,IAAX,IAAmBumB,OAA9B;AACAvmB,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAAI,GAAG,CAArC;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCe,eAAS0I,cAAT,CAAwBjJ,SAAxB,EAAmC4J,aAAnC,EAAkD7H,OAAlD,EAA2D;AACxE,YAAIC,IAAJ,EAAUI,eAAV,EAA2BH,KAA3B,EAAkCC,KAAlC,EAAyCmxB,KAAzC,EAAgDlxB,qBAAhD,EAAuEmxB,gBAAvE,EAAyFC,qBAAzF,EAAgHjxB,qBAAhH,EAAuIC,sBAAvI;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIuvB,QAAQ,GAAG,iEAAO3lB,aAAP,CAAf;AACA,YAAIpH,cAAc,GAAG,wFAArB;AACA,YAAIE,MAAM,GAAG,CAACV,IAAI,GAAG,CAACI,eAAe,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAA7E,MAAyF,IAAzF,IAAiGN,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJI,cAAc,CAACE,MAAvK,MAAmL,IAAnL,IAA2LV,IAAI,KAAK,KAAK,CAAzM,GAA6MA,IAA7M,GAAoN,mEAAjO;AACA,YAAIS,YAAY,GAAG,wEAAU,CAACR,KAAK,GAAG,CAACC,KAAK,GAAG,CAACmxB,KAAK,GAAG,CAAClxB,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACuxB,gBAAgB,GAAGvxB,OAAO,CAACW,MAA5B,MAAwC,IAAxC,IAAgD4wB,gBAAgB,KAAK,KAAK,CAA1E,GAA8E,KAAK,CAAnF,GAAuF,CAACC,qBAAqB,GAAGD,gBAAgB,CAACvxB,OAA1C,MAAuD,IAAvD,IAA+DwxB,qBAAqB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,qBAAqB,CAAC9wB,YAA3b,MAA6c,IAA7c,IAAqd4wB,KAAK,KAAK,KAAK,CAApe,GAAweA,KAAxe,GAAgf7wB,cAAc,CAACC,YAAxgB,MAA0hB,IAA1hB,IAAkiBP,KAAK,KAAK,KAAK,CAAjjB,GAAqjBA,KAArjB,GAA6jB,CAACI,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAvzB,MAAy0B,IAAz0B,IAAi1BR,KAAK,KAAK,KAAK,CAAh2B,GAAo2BA,KAAp2B,GAA42B,CAAt3B,CAAnB;;AACA,YAAI,CAACS,MAAM,CAACqjB,QAAZ,EAAsB;AACpB,gBAAM,IAAIpjB,UAAJ,CAAe,uCAAf,CAAN;AACD;;AACD,YAAI,CAACD,MAAM,CAACmpB,UAAZ,EAAwB;AACtB,gBAAM,IAAIlpB,UAAJ,CAAe,yCAAf,CAAN;AACD;;AACD,YAAI,CAACD,MAAM,CAACuG,cAAZ,EAA4B;AAC1B,gBAAM,IAAItG,UAAJ,CAAe,6CAAf,CAAN;AACD;;AACD,YAAIM,IAAI,GAAG,mFAAyB1C,IAAzB,EAA+BgvB,QAA/B,CAAX;;AACA,YAAI3qB,KAAK,CAAC3B,IAAD,CAAT,EAAiB;AACf,gBAAM,IAAIN,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAIuG,KAAJ;;AACA,YAAIjG,IAAI,GAAG,CAAC,CAAZ,EAAe;AACbiG,eAAK,GAAG,OAAR;AACD,SAFD,MAEO,IAAIjG,IAAI,GAAG,CAAC,CAAZ,EAAe;AACpBiG,eAAK,GAAG,UAAR;AACD,SAFM,MAEA,IAAIjG,IAAI,GAAG,CAAX,EAAc;AACnBiG,eAAK,GAAG,WAAR;AACD,SAFM,MAEA,IAAIjG,IAAI,GAAG,CAAX,EAAc;AACnBiG,eAAK,GAAG,OAAR;AACD,SAFM,MAEA,IAAIjG,IAAI,GAAG,CAAX,EAAc;AACnBiG,eAAK,GAAG,UAAR;AACD,SAFM,MAEA,IAAIjG,IAAI,GAAG,CAAX,EAAc;AACnBiG,eAAK,GAAG,UAAR;AACD,SAFM,MAEA;AACLA,eAAK,GAAG,OAAR;AACD;;AACD,YAAI4nB,OAAO,GAAG,0EAAgBvwB,IAAhB,EAAsB,8FAAgCA,IAAhC,CAAtB,CAAd;AACA,YAAIu3B,WAAW,GAAG,0EAAgBvI,QAAhB,EAA0B,8FAAgCA,QAAhC,CAA1B,CAAlB;AACA,YAAIwI,SAAS,GAAGr1B,MAAM,CAACuG,cAAP,CAAsBC,KAAtB,EAA6B4nB,OAA7B,EAAsCgH,WAAtC,EAAmD;AACjEp1B,gBAAM,EAAEA,MADyD;AAEjED,sBAAY,EAAEA;AAFmD,SAAnD,CAAhB;AAIA,eAAO,iEAAOlC,IAAP,EAAaw3B,SAAb,EAAwB;AAC7Br1B,gBAAM,EAAEA,MADqB;AAE7BD,sBAAY,EAAEA;AAFe,SAAxB,CAAP;;;;;;;;;;;;;;;;;;ACxFF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQ0D;;;AACnD,UAAIu1B,wBAAwB,GAAG,aAAa,UAAUvwB,OAAV,EAAmB;AACpE,4FAAUuwB,wBAAV,EAAoCvwB,OAApC;;AACA,YAAIC,MAAM,GAAG,uFAAaswB,wBAAb,CAAb;;AACA,iBAASA,wBAAT,GAAoC;AAClC,cAAIrwB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBqwB,wBAAtB;;AACA,eAAK,IAAIpwB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAaqwB,wBAAb,EAAuC,CAAC;AACtC/vB,aAAG,EAAE,OADiC;AAEtCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyCvJ,OAAzC,EAAkD;AACvD,gBAAIga,aAAa,GAAG,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAChD,kBAAI+vB,aAAa,GAAGl3B,IAAI,CAAC+D,KAAL,CAAW,CAACoD,KAAK,GAAG,CAAT,IAAc,CAAzB,IAA8B,CAAlD;AACA,qBAAO,CAACA,KAAK,GAAGnG,OAAO,CAACU,YAAhB,GAA+B,CAAhC,IAAqC,CAArC,GAAyCw1B,aAAhD;AACD,aAHD;;AAIA,oBAAQ/uB,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACE;AACA,uBAAO,2DAAS,+DAAaA,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAT,EAAiD2T,aAAjD,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAO,2DAASzQ,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AAC9CwC,sBAAI,EAAE;AADwC,iBAAhC,CAAT,EAEHmR,aAFG,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAOzQ,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,aADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,IAMDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANN;AAUF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,QADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,CAAP;AAIF;;AACA,mBAAK,QAAL;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,OADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHN;AAOF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,MADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,aADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,IAMDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANC,IASDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CATN;AAzCJ;AAuDD;AA9DqC,SAAD,EA+DpC;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACD;AAJA,SA/DoC,EAoEpC;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkCnG,OAAlC,EAA2C;AAChDxB,gBAAI,GAAG,wEAAUA,IAAV,EAAgB2H,KAAhB,EAAuBnG,OAAvB,CAAP;AACAxB,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SApEoC,CAAvC;AA4EA,eAAOy3B,wBAAP;AACD,OA3FkD,CA2FjD,iDA3FiD,CAA5C;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASE,WAAT,CAAqBl4B,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI2R,MAAM,GAAG,IAAIlW,IAAI,CAAC+D,KAAL,CAAW5E,IAAI,GAAG,EAAlB,IAAwB,EAAzC;AACAK,YAAI,CAACF,WAAL,CAAiB4W,MAAjB,EAAyB,EAAzB,EAA6B,EAA7B;AACA1W,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAAS43B,cAAT,CAAwB3tB,OAAxB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBvK,SAAhB;AACA,YAAIwI,KAAK,GAAG+B,OAAO,GAAG,iEAAtB;AACA,eAAOzJ,IAAI,CAAC+D,KAAL,CAAW2D,KAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGe,eAAS2vB,qBAAT,CAA+Bp4B,SAA/B,EAA0C;AACvD,+EAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIC,IAAI,GAAG,4EAAkBF,SAAlB,CAAX;AACA,YAAIG,eAAe,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAtB;AACAD,uBAAe,CAACkT,cAAhB,CAA+BnT,IAA/B,EAAqC,CAArC,EAAwC,CAAxC;AACAC,uBAAe,CAACyL,WAAhB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC;AACA,YAAIrL,IAAI,GAAG,4EAAkBJ,eAAlB,CAAX;AACA,eAAOI,IAAP;;;;;;;;;;;;;;;;;;ACVF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCe,eAAS83B,aAAT,CAAuBr4B,SAAvB,EAAkC+B,OAAlC,EAA2C;AACxD,YAAIu2B,eAAJ,EAAqBC,qBAArB;;AACA,YAAIt4B,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIK,SAAJ,CAAc,iCAAiC0D,MAAjC,CAAwChF,SAAS,CAACiB,MAAlD,EAA0D,UAA1D,CAAd,CAAN;AACD;;AACD,YAAIgE,YAAY,GAAG,iEAAOlF,SAAP,CAAnB;;AACA,YAAI,CAAC,kEAAQkF,YAAR,CAAL,EAA4B;AAC1B,gBAAM,IAAIvC,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAIyN,MAAM,GAAG9F,MAAM,CAAC,CAACguB,eAAe,GAAGv2B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACqO,MAA7E,MAAyF,IAAzF,IAAiGkoB,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJ,UAAjJ,CAAnB;AACA,YAAIE,cAAc,GAAGluB,MAAM,CAAC,CAACiuB,qBAAqB,GAAGx2B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACy2B,cAAnF,MAAuG,IAAvG,IAA+GD,qBAAqB,KAAK,KAAK,CAA9I,GAAkJA,qBAAlJ,GAA0K,UAA3K,CAA3B;;AACA,YAAInoB,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,OAAxC,EAAiD;AAC/C,gBAAM,IAAIzN,UAAJ,CAAe,sCAAf,CAAN;AACD;;AACD,YAAI61B,cAAc,KAAK,MAAnB,IAA6BA,cAAc,KAAK,MAAhD,IAA0DA,cAAc,KAAK,UAAjF,EAA6F;AAC3F,gBAAM,IAAI71B,UAAJ,CAAe,sDAAf,CAAN;AACD;;AACD,YAAI0K,MAAM,GAAG,EAAb;AACA,YAAIorB,aAAa,GAAGroB,MAAM,KAAK,UAAX,GAAwB,GAAxB,GAA8B,EAAlD;AACA,YAAIsoB,aAAa,GAAGtoB,MAAM,KAAK,UAAX,GAAwB,GAAxB,GAA8B,EAAlD,CAnBwD,CAqBxD;;AACA,YAAIooB,cAAc,KAAK,MAAvB,EAA+B;AAC7B,cAAI51B,GAAG,GAAG,8EAAgBsC,YAAY,CAACzE,OAAb,EAAhB,EAAwC,CAAxC,CAAV;AACA,cAAI2E,KAAK,GAAG,8EAAgBF,YAAY,CAACG,QAAb,KAA0B,CAA1C,EAA6C,CAA7C,CAAZ;AACA,cAAInF,IAAI,GAAG,8EAAgBgF,YAAY,CAACI,WAAb,EAAhB,EAA4C,CAA5C,CAAX,CAH6B,CAK7B;;AACA+H,gBAAM,GAAG,GAAGpI,MAAH,CAAU/E,IAAV,EAAgB+E,MAAhB,CAAuBwzB,aAAvB,EAAsCxzB,MAAtC,CAA6CG,KAA7C,EAAoDH,MAApD,CAA2DwzB,aAA3D,EAA0ExzB,MAA1E,CAAiFrC,GAAjF,CAAT;AACD,SA7BuD,CA+BxD;;;AACA,YAAI41B,cAAc,KAAK,MAAvB,EAA+B;AAC7B,cAAIjzB,IAAI,GAAG,8EAAgBL,YAAY,CAACM,QAAb,EAAhB,EAAyC,CAAzC,CAAX;AACA,cAAIC,MAAM,GAAG,8EAAgBP,YAAY,CAACQ,UAAb,EAAhB,EAA2C,CAA3C,CAAb;AACA,cAAIC,MAAM,GAAG,8EAAgBT,YAAY,CAACU,UAAb,EAAhB,EAA2C,CAA3C,CAAb,CAH6B,CAK7B;;AACA,cAAI+yB,SAAS,GAAGtrB,MAAM,KAAK,EAAX,GAAgB,EAAhB,GAAqB,GAArC,CAN6B,CAQ7B;;AACAA,gBAAM,GAAG,GAAGpI,MAAH,CAAUoI,MAAV,EAAkBpI,MAAlB,CAAyB0zB,SAAzB,EAAoC1zB,MAApC,CAA2CM,IAA3C,EAAiDN,MAAjD,CAAwDyzB,aAAxD,EAAuEzzB,MAAvE,CAA8EQ,MAA9E,EAAsFR,MAAtF,CAA6FyzB,aAA7F,EAA4GzzB,MAA5G,CAAmHU,MAAnH,CAAT;AACD;;AACD,eAAO0H,MAAP;;;;;;;;;;;;;;;;;;ACpFF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;AAiBe,eAASurB,YAAT,CAAsBC,aAAtB,EAAqC;AAClD,mFAAa,CAAb,EAAgB54B,SAAhB;AACA,YAAI64B,QAAQ,GAAG,wEAAUD,aAAV,CAAf;AACA,eAAO,iEAAOC,QAAQ,GAAG,IAAlB,CAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASrB,eAAT,CAAyBz3B,SAAzB,EAAoC+4B,iBAApC,EAAuD;AACpE,mFAAa,CAAb,EAAgB94B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI8F,YAAY,GAAG,wEAAUizB,iBAAV,CAAnB;AACAx4B,YAAI,CAACk3B,eAAL,CAAqB3xB,YAArB;AACA,eAAOvF,IAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrBWy4B,WAAW;;;;AACtB,eAAAhuB,MAAA,GAAwB,CACtB,OADsB,EAEtB,SAFsB,EAGtB,OAHsB,EAItB,OAJsB,EAKtB,MALsB,EAMtB,OANsB,EAOtB,OAPsB,EAQtB,QARsB,EAStB,YATsB,EAUtB,SAVsB,EAWtB,WAXsB,EAYtB,WAZsB,CAAxB;AAeA,eAAAiL,KAAA,GAAuB,CACrB,SADqB,EAErB,OAFqB,EAGrB,QAHqB,EAIrB,WAJqB,EAKrB,QALqB,EAMrB,SANqB,EAOrB,QAPqB,CAAvB;AAsMD;;AAtNuB;AAAA;AAAA,iBA0BtB,iBAAQgjB,KAAR,EAAqBC,KAArB,EAAgC;AAC9B,mBACED,KAAK,CAAC3zB,WAAN,OAAwB4zB,KAAK,CAAC5zB,WAAN,EAAxB,IACA2zB,KAAK,CAAC5zB,QAAN,OAAqB6zB,KAAK,CAAC7zB,QAAN,EADrB,IAEA4zB,KAAK,CAACx4B,OAAN,OAAoBy4B,KAAK,CAACz4B,OAAN,EAHtB;AAKD;AAhCqB;AAAA;AAAA,iBAkCtB,uBAAcF,IAAd,EAAwB;AACtB,gBAAMiF,QAAQ,GAAGjF,IAAI,CAACiF,QAAL,EAAjB;AACA,gBAAME,UAAU,GAAGnF,IAAI,CAACmF,UAAL,EAAnB;AACA,gBAAI+C,KAAJ,EAAgB+B,OAAhB;;AAEA,gBAAIhF,QAAQ,GAAG,EAAf,EAAmB;AACjBiD,mBAAK,cAAOjD,QAAP,CAAL;AACD,aAFD,MAEO;AACLiD,mBAAK,GAAGjD,QAAR;AACD;;AAED,gBAAIE,UAAU,GAAG,EAAjB,EAAqB;AACnB8E,qBAAO,cAAO9E,UAAP,CAAP;AACD,aAFD,MAEO;AACL8E,qBAAO,GAAG9E,UAAV;AACD;;AAED,6BAAU+C,KAAV,cAAmB+B,OAAnB;AACD;AApDqB;AAAA;AAAA,iBAsDtB,qBAAYyuB,KAAZ,EAAyBC,KAAzB,EAA+D;AAAA,gBAAxBC,QAAwB,uEAAJ,IAAI;AAC7D,gBAAMv2B,GAAG,GAAGq2B,KAAK,CAACx4B,OAAN,EAAZ;AACA,gBAAM24B,OAAO,GAAGH,KAAK,CAAC9iB,MAAN,EAAhB;AACA,gBAAM/Q,KAAK,GAAG6zB,KAAK,CAAC5zB,QAAN,EAAd;AACA,gBAAMnF,IAAI,GAAG+4B,KAAK,CAAC3zB,WAAN,EAAb;AACA,gBAAMC,IAAI,GAAG,KAAK8zB,aAAL,CAAmBJ,KAAnB,CAAb;;AAEA,gBAAIE,QAAJ,EAAc;AACZ,kBAAID,KAAJ,EAAW;AACT,oBAAMI,KAAK,GAAG,KAAKD,aAAL,CAAmBH,KAAnB,CAAd;AAEA,iCAAU,KAAKjjB,KAAL,CAAWmjB,OAAX,CAAV,eAAkCx2B,GAAlC,iBAA4C,KAAKoI,MAAL,CAAY5F,KAAZ,CAA5C,kBAAsElF,IAAtE,qBAAqFqF,IAArF,oBAAmG+zB,KAAnG;AACD;;AAED,+BAAU,KAAKrjB,KAAL,CAAWmjB,OAAX,CAAV,eAAkCx2B,GAAlC,iBAA4C,KAAKoI,MAAL,CAAY5F,KAAZ,CAA5C,kBAAsElF,IAAtE,oBAAoFqF,IAApF;AACD,aARD,MAQO;AACL,+BAAU,KAAK0Q,KAAL,CAAWmjB,OAAX,CAAV,eAAkCx2B,GAAlC,iBAA4C,KAAKoI,MAAL,CAAY5F,KAAZ,CAA5C,kBAAsElF,IAAtE;AACD;AACF;AAxEqB;AAAA;AAAA,iBA0EtB,sBAAaK,IAAb,EAAuB;AACrB,mBAAO,KAAKyK,MAAL,CAAYzK,IAAI,CAAC8E,QAAL,EAAZ,CAAP;AACD;AA5EqB;AAAA;AAAA,iBA8EtB,2BAAe;AACb,gBAAI9E,IAAI,GAAG,IAAIH,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASG,IAAI,CAAC+E,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAP;AACD;AAjFqB;AAAA;AAAA,iBAmFtB,0BAAc;AACZ,gBAAI/E,IAAI,GAAG,IAAIH,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASG,IAAI,CAAC+E,WAAL,EAAT,EAA6B,EAA7B,EAAiC,EAAjC,CAAP;AACD;AAtFqB;AAAA;AAAA,iBAwFtB,4BAAgB;AACd,gBAAI/E,IAAI,GAAG,IAAIH,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASG,IAAI,CAAC+E,WAAL,EAAT,EAA6B/E,IAAI,CAAC8E,QAAL,EAA7B,EAA8C,CAA9C,CAAP;AACD;AA3FqB;AAAA;AAAA,iBA6FtB,2BAAe;AACb,gBAAI9E,IAAI,GAAG,IAAIH,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASG,IAAI,CAAC+E,WAAL,EAAT,EAA6B/E,IAAI,CAAC8E,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAP;AACD;AAhGqB;AAAA;AAAA,iBAkGtB,oBAAQ;AACN,gBAAI9E,IAAI,GAAG,IAAIH,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAASG,IAAI,CAAC+E,WAAL,EAAT,EAA6B/E,IAAI,CAAC8E,QAAL,EAA7B,EAA8C9E,IAAI,CAACE,OAAL,EAA9C,CAAP;AACD;AArGqB;AAAA;AAAA,iBAuGtB,yBAAgBF,IAAhB,EAA0B;AACxB,gBAAMujB,CAAC,GAAGvjB,IAAI,CAAC+E,WAAL,EAAV;AACA,gBAAIyiB,CAAC,GAAQxnB,IAAI,CAAC8E,QAAL,KAAkB,CAA/B;AACA,gBAAI0hB,CAAC,GAAQxmB,IAAI,CAACE,OAAL,EAAb;AACA,gBAAIknB,CAAC,GAAQpnB,IAAI,CAACiF,QAAL,EAAb;AACA,gBAAI4hB,CAAC,GAAQ7mB,IAAI,CAACmF,UAAL,EAAb;AAEA,gBAAIqiB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIhB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIY,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIP,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUtD,CAAV,cAAeiE,CAAf,cAAoBhB,CAApB,cAAyBY,CAAzB,cAA8BP,CAA9B;AACD;AApHqB;AAAA;AAAA,iBAsHtB,gCAAuB7mB,IAAvB,EAAiC;AAC/B,gBAAIujB,CAAC,GAAGvjB,IAAI,CAAC+E,WAAL,GAAmBrE,QAAnB,EAAR;AACA,gBAAI8mB,CAAC,GAAG,CAACxnB,IAAI,CAAC8E,QAAL,KAAkB,CAAnB,EAAsBpE,QAAtB,GAAiCs4B,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAR;AACA,gBAAIxS,CAAC,GAAGxmB,IAAI,CAACE,OAAL,GAAeQ,QAAf,GAA0Bs4B,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAR;AACA,gBAAI5R,CAAC,GAAGpnB,IAAI,CAACiF,QAAL,GAAgBvE,QAAhB,GAA2Bs4B,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAR;AACA,gBAAInS,CAAC,GAAG7mB,IAAI,CAACmF,UAAL,GAAkBzE,QAAlB,GAA6Bs4B,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AACA,gBAAIvR,CAAC,GAAGznB,IAAI,CAACqF,UAAL,GAAkB3E,QAAlB,GAA6Bs4B,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AAEA,6BAAUxS,CAAV,cAAegB,CAAf,cAAoBjE,CAApB,cAAyB6D,CAAzB,cAA8BP,CAA9B,cAAmCY,CAAnC;AACD;AA/HqB;AAAA;AAAA,iBAiItB,0BAAiB5W,IAAjB,EAA6B;AAC3B,gBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,kBAAIooB,SAAS,GAAGpoB,IAAI,CAACe,KAAL,CAAW,GAAX,CAAhB;AAEA,+BAAUqnB,SAAS,CAAC,CAAD,CAAnB,cAA0BA,SAAS,CAAC,CAAD,CAAnC;AACD;;AAED,mBAAOpoB,IAAP;AACD;AAzIqB;AAAA;AAAA,iBA2ItB,0BAAiB7Q,IAAjB,EAA2B;AACzB,gBAAIwmB,CAAC,GAAQxmB,IAAI,CAACE,OAAL,EAAb;AACA,gBAAIsnB,CAAC,GAAQxnB,IAAI,CAAC8E,QAAL,KAAkB,CAA/B;AACA,gBAAIye,CAAC,GAAQvjB,IAAI,CAAC+E,WAAL,EAAb;AAEA,gBAAIyhB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIgB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUhB,CAAV,cAAegB,CAAf,cAAoBjE,CAApB;AACD;AApJqB;AAAA;AAAA,iBAsJtB,6BAAoB2V,UAApB,EAAqCC,QAArC,EAAqD;AACnD,gBAAIn5B,IAAJ;;AAEA,gBAAIk5B,UAAU,CAACxpB,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAA/B,EAAkC;AAChC,kBAAM0pB,eAAe,GAAGF,UAAU,CAACtnB,KAAX,CAAiB,GAAjB,CAAxB;AACA,kBAAMynB,SAAS,GAAGD,eAAe,CAAC,CAAD,CAAf,CAAmBxnB,KAAnB,CAAyB,GAAzB,CAAlB;AACA,kBAAMqnB,SAAS,GAAGG,eAAe,CAAC,CAAD,CAAf,CAAmBxnB,KAAnB,CAAyB,GAAzB,CAAlB;;AAEA,kBAAIunB,QAAQ,IAAI,OAAhB,EAAyB;AACvBn5B,oBAAI,GAAG,IAAIH,IAAJ,CACLw5B,SAAS,CAAC,CAAD,CADJ,EAELjnB,QAAQ,CAACinB,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAatnB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILknB,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD,eATD,MASO,IAAIE,QAAQ,IAAI,KAAhB,EAAuB;AAC5Bn5B,oBAAI,GAAG,IAAIH,IAAJ,CACLw5B,SAAS,CAAC,CAAD,CADJ,EAELjnB,QAAQ,CAACinB,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAatnB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILknB,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD;AACF,aAxBD,MAwBO;AACL,kBAAMI,UAAS,GAAGH,UAAU,CAACtnB,KAAX,CAAiB,GAAjB,CAAlB;;AAEA,kBAAIunB,QAAQ,IAAI,OAAhB,EAAyB;AACvBn5B,oBAAI,GAAG,IAAIH,IAAJ,CACLw5B,UAAS,CAAC,CAAD,CADJ,EAELjnB,QAAQ,CAACinB,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAatnB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD,eAND,MAMO,IAAIonB,QAAQ,IAAI,KAAhB,EAAuB;AAC5Bn5B,oBAAI,GAAG,IAAIH,IAAJ,CACLw5B,UAAS,CAAC,CAAD,CADJ,EAELjnB,QAAQ,CAACinB,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAatnB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD;AACF;;AAED,mBAAO/R,IAAP;AACD;AApMqB;AAAA;AAAA,iBAsMtB,2BAAkBk5B,UAAlB,EAAmCC,QAAnC,EAAmD;AACjD,gBAAME,SAAS,GAAGH,UAAU,CAACtnB,KAAX,CAAiB,GAAjB,CAAlB;AACA,gBAAI5R,IAAJ;;AAEA,gBAAIm5B,QAAQ,IAAI,OAAhB,EAAyB;AACvBn5B,kBAAI,aAAMq5B,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD,aAFD,MAEO,IAAIF,QAAQ,IAAI,KAAhB,EAAuB;AAC5Bn5B,kBAAI,aAAMq5B,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD;;AAED,mBAAOr5B,IAAP;AACD;AAjNqB;AAAA;AAAA,iBAmNtB,uBAAcA,IAAd,EAA0BwK,IAA1B,EAAsC;AACpC,mBAAO,IAAI3K,IAAJ,CAASG,IAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBsK,IAA9B,CAAT,CAAP;AACD;AArNqB;;AAAA;AAAA,S;;AAAXiuB,iBAAW,6DAHvB,iEAAW;AACVvjB,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAXujB,WAAW,CAAX;;;;;;;;;;;;;;;;ACLba,OAAO,GAAG;AACnB/T,SAAC,EAAE,IAAI,uDAAJ,EADgB;AAEnBhC,SAAC,EAAE,IAAI,yDAAJ,EAFgB;AAGnBoC,SAAC,EAAE,IAAI,2EAAJ,EAHgB;AAInBG,SAAC,EAAE,IAAI,uEAAJ,EAJgB;AAKnBC,SAAC,EAAE,IAAI,yEAAJ,EALgB;AAMnBC,SAAC,EAAE,IAAI,+DAAJ,EANgB;AAOnBE,SAAC,EAAE,IAAI,mFAAJ,EAPgB;AAQnBC,SAAC,EAAE,IAAI,2DAAJ,EARgB;AASnBC,SAAC,EAAE,IAAI,+EAAJ,EATgB;AAUnBC,SAAC,EAAE,IAAI,mEAAJ,EAVgB;AAWnBC,SAAC,EAAE,IAAI,gEAAJ,EAXgB;AAYnBE,SAAC,EAAE,IAAI,0DAAJ,EAZgB;AAanBC,SAAC,EAAE,IAAI,oEAAJ,EAbgB;AAcnBC,SAAC,EAAE,IAAI,wDAAJ,EAdgB;AAenBvY,SAAC,EAAE,IAAI,kEAAJ,EAfgB;AAgBnByY,SAAC,EAAE,IAAI,sFAAJ,EAhBgB;AAiBnBC,SAAC,EAAE,IAAI,8DAAJ,EAjBgB;AAkBnBE,SAAC,EAAE,IAAI,0DAAJ,EAlBgB;AAmBnBG,SAAC,EAAE,IAAI,0EAAJ,EAnBgB;AAoBnBC,SAAC,EAAE,IAAI,oEAAJ,EApBgB;AAqBnBC,SAAC,EAAE,IAAI,oEAAJ,EArBgB;AAsBnBC,SAAC,EAAE,IAAI,oEAAJ,EAtBgB;AAuBnBC,SAAC,EAAE,IAAI,oEAAJ,EAvBgB;AAwBnBC,SAAC,EAAE,IAAI,oEAAJ,EAxBgB;AAyBnBC,SAAC,EAAE,IAAI,8DAAJ,EAzBgB;AA0BnBC,SAAC,EAAE,IAAI,8DAAJ,EA1BgB;AA2BnBC,SAAC,EAAE,IAAI,kFAAJ,EA3BgB;AA4BnBC,SAAC,EAAE,IAAI,kFAAJ,EA5BgB;AA6BnBrE,SAAC,EAAE,IAAI,wEAAJ,EA7BgB;AA8BnB6E,SAAC,EAAE,IAAI,kFAAJ,EA9BgB;AA+BnBC,SAAC,EAAE,IAAI,4FAAJ;AA/BgB,OAAd;;;;;;;;;;;;;;;;AC1EP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAK0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIiK,sBAAsB,GAAG,gCAA7B;AACA,UAAIE,mBAAmB,GAAG,cAA1B;AACA,UAAIC,iBAAiB,GAAG,KAAxB;AACA,UAAIE,6BAA6B,GAAG,UAApC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDe,eAAS6G,WAAT,CAAqB95B,SAArB,EAAgC+3B,SAAhC,EAA2C;AACxD,mFAAa,CAAb,EAAgB93B,SAAhB;AACA,YAAIiF,YAAY,GAAG,iEAAOlF,SAAP,CAAnB;;AACA,YAAI,CAAC,kEAAQkF,YAAR,CAAL,EAA4B;AAC1B,gBAAM,IAAIvC,UAAJ,CAAe,oBAAf,CAAN;AACD,SALuD,CAOxD;AACA;AACA;;;AACA,YAAI8H,cAAc,GAAG,8FAAgCvF,YAAhC,CAArB;AACA,YAAI4rB,OAAO,GAAG,0EAAgB5rB,YAAhB,EAA8BuF,cAA9B,CAAd;AACA,YAAIwpB,MAAM,GAAG8D,SAAS,CAACzsB,KAAV,CAAgBsnB,sBAAhB,CAAb,CAZwD,CAcxD;;AACA,YAAI,CAACqB,MAAL,EAAa,OAAO,EAAP;AACb,YAAI5mB,MAAM,GAAG4mB,MAAM,CAACC,GAAP,CAAW,UAAUC,SAAV,EAAqB;AAC3C;AACA,cAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtB,mBAAO,GAAP;AACD;;AACD,cAAIC,cAAc,GAAGD,SAAS,CAAC,CAAD,CAA9B;;AACA,cAAIC,cAAc,KAAK,GAAvB,EAA4B;AAC1B,mBAAOqB,kBAAkB,CAACtB,SAAD,CAAzB;AACD;;AACD,cAAI4F,SAAS,GAAG,6EAAW3F,cAAX,CAAhB;;AACA,cAAI2F,SAAJ,EAAe;AACb,mBAAOA,SAAS,CAACjJ,OAAD,EAAUqD,SAAV,CAAhB;AACD;;AACD,cAAIC,cAAc,CAAC9oB,KAAf,CAAqB2nB,6BAArB,CAAJ,EAAyD;AACvD,kBAAM,IAAItwB,UAAJ,CAAe,mEAAmEyxB,cAAnE,GAAoF,GAAnG,CAAN;AACD;;AACD,iBAAOD,SAAP;AACD,SAjBY,EAiBVG,IAjBU,CAiBL,EAjBK,CAAb;AAkBA,eAAOjnB,MAAP;AACD;;AACD,eAASooB,kBAAT,CAA4BplB,KAA5B,EAAmC;AACjC,YAAI2pB,OAAO,GAAG3pB,KAAK,CAAC/E,KAAN,CAAYwnB,mBAAZ,CAAd;;AACA,YAAI,CAACkH,OAAL,EAAc;AACZ,iBAAO3pB,KAAP;AACD;;AACD,eAAO2pB,OAAO,CAAC,CAAD,CAAP,CAAWzsB,OAAX,CAAmBwlB,iBAAnB,EAAsC,GAAtC,CAAP;;;;;;;;;;;;;;;;;;ACpHF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASkH,UAAT,CAAoBj6B,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIwmB,OAAO,GAAGzlB,IAAI,CAAC+D,KAAL,CAAWvE,IAAI,CAAC8E,QAAL,KAAkB,CAA7B,IAAkC,CAAhD;AACA,eAAOmhB,OAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eChBF;;;UAaa0T,uDAAuD;AAwBlE,yEAEUrN,QAFV,EAGUC,gBAHV,EAIUC,iBAJV,EAKUC,WALV,EAMUC,cANV,EAOUkN,WAPV,EAQUC,WARV,EAQiD;AAAA;;AANvC,eAAAvN,QAAA,GAAAA,QAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAkN,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AA9BQ,eAAAlN,OAAA,GAAe,EAAf;AAGlB,eAAAC,SAAA,GAA+B,IAAI,0DAAJ,EAA/B;AAEA,eAAAC,gBAAA,GAAmB,IAAnB;AAKA;;AACA,eAAAC,kBAAA,GAA4B,EAA5B;AACA,eAAAgN,aAAA,GAAgB,EAAhB;AAsJA,eAAAC,YAAA,GAAe,CACb;AAAEhlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WADa,EAEb;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WAFa,EAGb;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WAHa,EAIb;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WAJa,EAKb;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WALa,EAMb;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WANa,CAAf;AASA,eAAAC,aAAA,GAAgB,CACd;AAAEllB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WADc,EAEd;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WAFc,EAGd;AAAEjlB,cAAE,EAAE,CAAN;AAASilB,kBAAM,EAAE;AAAjB,WAHc,CAAhB;AA1IE,eAAKtN,cAAL,CAAoBK,UAApB;AACD;;AApCiE;AAAA;AAAA,iBAsClE,oBAAW;AACT,iBAAKC,gBAAL;AACA,iBAAKqB,IAAL,GAAY,KAAK5B,WAAL,CAAiB6B,KAAjB,CAAuB;AACjC4L,yBAAW,EAAE,EADoB;AAEjCC,yBAAW,EAAE,EAFoB;AAGjCC,uBAAS,EAAE,EAHsB;AAIjCC,uBAAS,EAAE;AAJsB,aAAvB,CAAZ;AAMA,iBAAKpN,aAAL;AACD;AA/CiE;AAAA;AAAA,iBAkDlE,yBAAa;AACX,iBAAKoB,IAAL,GAAY,KAAK5B,WAAL,CAAiB6B,KAAjB,CAAuB;AACjC4L,yBAAW,EAAE,CAAC,IAAD,EAAO,0DAAW3L,QAAlB,CADoB;AAEjC4L,yBAAW,EAAE,CAAC,IAAD,EAAO,0DAAW5L,QAAlB,CAFoB;AAGjC6L,uBAAS,EAAE,CAAC,IAAD,CAHsB;AAIjCC,uBAAS,EAAE,CAAC,IAAD;AAJsB,aAAvB,CAAZ;AAMD;AAzDiE;AAAA;AAAA,iBA4DlE,2BAAkB;AAChB,gBAAMC,UAAU,GAAG,KAAKjM,IAAL,CAAUxZ,GAAV,CAAc,aAAd,EAA6BlN,KAAhD;AACA,gBAAMqW,UAAU,GAAG,KAAKqQ,IAAL,CAAUxZ,GAAV,CAAc,aAAd,EAA6BlN,KAAhD;AACA,gBAAM4yB,cAAc,GAAG,KAAKlM,IAAL,CAAUxZ,GAAV,CAAc,WAAd,EAA2BlN,KAAlD;AACA,gBAAM6yB,QAAQ,GAAG,KAAKnM,IAAL,CAAUxZ,GAAV,CAAc,WAAd,EAA2BlN,KAA5C;AACA,gBAAMqN,MAAM,GAAG;AACbslB,wBAAU,EAAEA,UADC;AAEbtc,wBAAU,EAAEA,UAFC;AAGbuc,4BAAc,EAAEA,cAHH;AAIbC,sBAAQ,EAAEA;AAJG,aAAf;AAMA,iBAAKX,WAAL,CAAiBY,YAAjB,CAA8BzlB,MAA9B;AACA,gBAAM0lB,oBAAoB,GAAG1c,UAA7B;AACA,iBAAK6b,WAAL,CAAiBc,cAAjB,GAAkCD,oBAAlC;AACD;AA1EiE;AAAA;AAAA,iBAoFlE,qBAAS;AACP,gBAAI,KAAK/N,OAAL,CAAaO,WAAb,KAA6B,IAA7B,IAAqC,KAAKP,OAAL,CAAaQ,MAAb,KAAwB,IAAjE,EAAuE;AACrE,qBAAO,IAAP;AACD,aAFD,MAEO,IACL,KAAKR,OAAL,CAAahO,QAAb,KAA0B,IAA1B,IACA,KAAKgO,OAAL,CAAaO,WAAb,KAA6B,KAD7B,IAEA,KAAKP,OAAL,CAAaQ,MAAb,KAAwB,KAHnB,EAIL;AACA,qBAAO,KAAP;AACD;AACF;AA9FiE;AAAA;AAAA,iBAgGlE,4BAAgB;AACd,iBAAKE,wBAAL;AACD;AAlGiE;AAAA;AAAA,iBAqGlE,oCAAwB;AAAA;;AACtB,iBAAKE,yBAAL,GACGzY,IADH,CAEI,gEAAS,YAAM;AACb,qBAAI,CAAC+X,gBAAL,GAAwB,KAAxB;;AAEA,kBAAI,OAAI,CAACW,OAAL,KAAiB,IAArB,EAA2B;AACzB,uBAAI,CAACZ,SAAL,CAAe1N,IAAf,CAAoB;AAClBnB,8BAAY,EAAE,CADI;AAElBC,4BAAU,EAAE,CAFM;AAGlByP,8BAAY,EAAE,qBAHI;AAIlBC,gCAAc,EAAE;AAJE,iBAApB;AAMD;AACF,aAXD,CAFJ,EAeG5O,SAfH,CAea;AACT6O,kBAAI,EAAE,cAAC5O,QAAD,EAAmB;AACvB,oBAAIA,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,MAAgC,GAApC,EAAyC;AACvC,yBAAI,CAACkO,aAAL;;AACA,yBAAI,CAACW,WAAL,GAAmB7O,QAAQ,CAAC,CAAD,CAAR,CAAY,QAAZ,CAAnB;;AAEA,sBAAM6b,iBAAiB,GAAG,OAAI,CAAChN,WAAL,CAAiB8G,IAAjB,CAAsB,UAAAmG,IAAI;AAAA,2BAAIA,IAAI,CAAC7M,IAAL,KAAc,IAAd,IAAsB6M,IAAI,CAAC7M,IAAL,KAAc,EAAxC;AAAA,mBAA1B,CAA1B;;AAEA,sBAAI4M,iBAAJ,EAAuB;AACrB;;AAED,mBAHD,MAGO;AACL;;AAED;;AAED,sBAAI,OAAI,CAAChN,WAAL,CAAiBjtB,MAAjB,GAA0B,CAA1B,IAA+B,OAAI,CAAC6sB,OAAL,KAAiB,IAApD,EAA0D;AACxD,2BAAI,CAACI,WAAL,CAAiBG,OAAjB,CAAyB;AACvBhZ,wBAAE,EAAE,CADmB;AAEvBiZ,0BAAI,EAAE;AAFiB,qBAAzB;AAID;AACF,iBApBD,MAoBO;AACL,yBAAI,CAACH,2BAAL;AACD;;AAED,oBAAI9O,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,MAAgC,GAApC,EAAyC;AACvC,yBAAI,CAAC+O,UAAL,GAAkB/O,QAAQ,CAAC,CAAD,CAAR,CAAY,QAAZ,CAAlB;AACA,yBAAI,CAAC+N,kBAAL,GAA0B,OAAI,CAACgB,UAA/B;AACA;;AACA,yBAAI,CAAChB,kBAAL,CAAwBiB,OAAxB,CAAgC;AAC9BhZ,sBAAE,EAAE,CAD0B;AAE9BiZ,wBAAI,EAAE;AAFwB,mBAAhC;AAIA;;AACD,iBATD,MASO;AACL,yBAAI,CAACH,2BAAL;AACD;AACF,eAtCQ;AAuCTI,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACrB,uBAAI,CAACJ,2BAAL;AACD;AAzCQ,aAfb;AA0DD;AAhKiE;AAAA;AAAA,iBAqLlE,qCAAyB;AACvB,gBAAMD,WAAW,GAAG,KAAKrB,gBAAL,CAAsB2B,cAAtB,EAApB;AACA,gBAAMJ,UAAU,GAAG,KAAKtB,iBAAL,CAAuB2B,aAAvB,EAAnB;AAEA,mBAAO,sDAAS,CAACP,WAAD,EAAcE,UAAd,CAAT,EAAoChZ,IAApC,CAAyC,4DAAK,CAAL,CAAzC,CAAP;AACD;AA1LiE;AAAA;AAAA,iBA8LlE,gCAAoB;AAAA;;AAClB,iBAAK0X,iBAAL,CACGc,oBADH,GAEGxY,IAFH,CAGI,gEAAS,YAAM;AACb,qBAAI,CAAC+X,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOG/N,SAPH,CAQI,UAACC,QAAD,EAAmB;AACjB,kBAAIA,QAAQ,CAAC,cAAD,CAAR,KAA6B,GAAjC,EAAsC;AACpC,uBAAI,CAACkO,aAAL;;AACA,uBAAI,CAACH,kBAAL,GAA0B/N,QAAQ,CAAC,QAAD,CAAlC;AACD,eAHD,MAGO;AACL,uBAAI,CAAC8O,2BAAL;AACD;AACF,aAfL,EAgBI,UAACI,KAAD,EAAgB;AACd,qBAAI,CAACJ,2BAAL;AACD,aAlBL;AAoBD;AAnNiE;AAAA;AAAA,iBAqNlE,uCAA2B;AACzB,iBAAKnB,cAAL,CAAoBuB,KAApB;AACA,iBAAK3B,QAAL,CAAc8B,IAAd;AACD;AAED;;;;;;;;;;;;;;;AA1NkE;AAAA;AAAA,iBA0OlE,mBAAO;AACL,gBAAI,KAAKC,IAAL,CAAUM,KAAd,EAAqB;AACnB,kBAAI,KAAKvB,SAAL,EAAJ,EAAsB;AACpB,oBAAI,KAAKiB,IAAL,CAAU1mB,KAAV,CAAgB,cAAhB,MAAoC,CAAxC,EAA2C;AACzC,uBAAK0mB,IAAL,CAAUxZ,GAAV,CAAc,gBAAd,EAAgC2Z,QAAhC,CAAyC,sBAAzC;AACD,iBAFD,MAEO;AACL,uBAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK+G,WAAL,CAAiBjtB,MAArC,EAA6CkmB,CAAC,EAA9C,EAAkD;AAChD,wBAAI,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,cAAhB,MAAoC,KAAKimB,WAAL,CAAiB/G,CAAjB,EAAoB,IAApB,CAAxC,EAAmE;AACjE,2BAAKwH,IAAL,CACGxZ,GADH,CACO,gBADP,EAEG2Z,QAFH,CAEY,KAAKZ,WAAL,CAAiB/G,CAAjB,EAAoB,MAApB,CAFZ;AAGD;AACF;AACF;;AAED,oBAAI,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,YAAhB,MAAkC,CAAtC,EAAyC;AACvC,uBAAK0mB,IAAL,CAAUxZ,GAAV,CAAc,cAAd,EAA8B2Z,QAA9B,CAAuC,qBAAvC;AACD,iBAFD,MAEO;AACL,uBAAK,IAAI3H,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKiH,UAAL,CAAgBntB,MAApC,EAA4CkmB,GAAC,EAA7C,EAAiD;AAC/C,wBAAI,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,YAAhB,MAAkC,KAAKmmB,UAAL,CAAgBjH,GAAhB,EAAmB,IAAnB,CAAtC,EAAgE;AAC9D,2BAAKwH,IAAL,CACGxZ,GADH,CACO,cADP,EAEG2Z,QAFH,CAEY,KAAKV,UAAL,CAAgBjH,GAAhB,EAAmB,MAAnB,CAFZ;AAGD;AACF;AACF;AACF,eAxBD,MAwBO;AACL,qBAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKiG,kBAAL,CAAwBnsB,MAA5C,EAAoDkmB,GAAC,EAArD,EAAyD;AACvD,sBACE,KAAKwH,IAAL,CAAU1mB,KAAV,CAAgB,YAAhB,MAAkC,KAAKmlB,kBAAL,CAAwBjG,GAAxB,EAA2B,IAA3B,CADpC,EAEE;AACA,yBAAKwH,IAAL,CACGxZ,GADH,CACO,cADP,EAEG2Z,QAFH,CAEY,KAAK1B,kBAAL,CAAwBjG,GAAxB,EAA2B,cAA3B,CAFZ;AAGA,yBAAKwH,IAAL,CACGxZ,GADH,CACO,cADP,EAEG2Z,QAFH,CAEY,KAAK1B,kBAAL,CAAwBjG,GAAxB,EAA2B,MAA3B,CAFZ;AAGD;AACF;AACF;;AACD,mBAAK+F,SAAL,CAAe1N,IAAf,CAAoB,KAAKmP,IAAL,CAAU1mB,KAA9B;AACD;AACF;AAED;;;;;AAtRkE;AAAA;AAAA,iBA2RlE,0BAAiBoW,YAAjB,EAAoC;AAClC,iBAAKsQ,IAAL,CAAUI,QAAV,CAAmB,YAAnB,EAAiCD,QAAjC,CAA0C,IAA1C;;AAEA,gBAAIzQ,YAAY,IAAI,CAApB,EAAuB;AACrB,mBAAK+O,kBAAL,GAA0B,CACxB;AACE/X,kBAAE,EAAE,CADN;AAEEiZ,oBAAI,EAAE,qBAFR;AAGEjQ,4BAAY,EAAE;AAHhB,eADwB,CAA1B;AAOA,mBAAKsQ,IAAL,CAAUI,QAAV,CAAmB,YAAnB,EAAiCD,QAAjC,CAA0CzQ,YAA1C;AACA,mBAAK8Q,OAAL;AACD,aAVD,MAUO;AACL,mBAAK/B,kBAAL,GAA0B,KAAKgB,UAAL,CAAgBgB,MAAhB,CACxB,UAAAnnB,KAAK;AAAA,uBAAIA,KAAK,CAACoW,YAAN,IAAsBA,YAA1B;AAAA,eADmB,CAA1B;;AAIA,kBAAI,KAAK+O,kBAAL,CAAwBnsB,MAAxB,GAAiC,CAAjC,IAAsC,KAAK6sB,OAAL,KAAiB,IAA3D,EAAiE;AAC/D,qBAAKV,kBAAL,CAAwBiB,OAAxB,CAAgC;AAC9BhZ,oBAAE,EAAE,CAD0B;AAE9BiZ,sBAAI,EAAE;AAFwB,iBAAhC;AAID;AACF;AACF;AApTiE;;AAAA;AAAA,S;;;;gBAnB3D;;gBAQA;;gBACA;;gBARW;;gBAMX;;gBAGA;;gBACA;;;;;;gBAUN,mD;AAAK,iBAAC,SAAD;;;gBACL,mD;AAAK,iBAAC,SAAD;;;gBACL,oD;AAAM,iBAAC,WAAD;;;AAJI2L,6DAAuD,6DALnE,gEAAU;AACTrV,gBAAQ,EAAE,qDADD;AAETxC,gBAAQ,EAAR,kGAFS;;AAAA,OAAV,CAKmE,E,+EA0B9C,wD,EACQ,mE,EACC,wF,EACN,0D,EACG,2F,EACH,wE,EACA,qF,EAhC2C,GAAvD6X,uDAAuD,CAAvD;;;;;;;;;;;;;;;;ACpBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+Be,eAASmB,OAAT,CAAiBr7B,SAAjB,EAA4B;AACzC,mFAAa,CAAb,EAAgBC,SAAhB;;AACA,YAAI,CAAC,iEAAOD,SAAP,CAAD,IAAsB,OAAOA,SAAP,KAAqB,QAA/C,EAAyD;AACvD,iBAAO,KAAP;AACD;;AACD,YAAIO,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,eAAO,CAAC4E,KAAK,CAACD,MAAM,CAACpE,IAAD,CAAP,CAAb;;;;;;;;;;;;;;;;;;ACxCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS+6B,UAAT,CAAoBt7B,SAApB,EAA+BqD,WAA/B,EAA4C;AACzD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,qEAAWrD,SAAX,EAAsB,CAACsD,MAAvB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKe,eAASi4B,cAAT,CAAwBv7B,SAAxB,EAAmC+B,OAAnC,EAA4C;AACzD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBgW,qBAAxB,EAA+C9V,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,+EAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAACoP,cAAL,EAAX;AACA,YAAInN,cAAc,GAAG,oFAArB;AACA,YAAI2V,qBAAqB,GAAG,oEAAU,CAACnW,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACgW,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC8V,qBAAjc,MAA4d,IAA5d,IAAoejW,KAAK,KAAK,KAAK,CAAnf,GAAufA,KAAvf,GAA+fM,cAAc,CAAC2V,qBAAvhB,MAAkjB,IAAljB,IAA0jBlW,KAAK,KAAK,KAAK,CAAzkB,GAA6kBA,KAA7kB,GAAqlB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAA90B,MAAy2B,IAAz2B,IAAi3BnW,IAAI,KAAK,KAAK,CAA/3B,GAAm4BA,IAAn4B,GAA04B,CAAp5B,CAA5B,CANyD,CAQzD;;AACA,YAAI,EAAEmW,qBAAqB,IAAI,CAAzB,IAA8BA,qBAAqB,IAAI,CAAzD,CAAJ,EAAiE;AAC/D,gBAAM,IAAIxV,UAAJ,CAAe,2DAAf,CAAN;AACD;;AACD,YAAIyV,mBAAmB,GAAG,IAAIhY,IAAJ,CAAS,CAAT,CAA1B;AACAgY,2BAAmB,CAAC/E,cAApB,CAAmCnT,IAAI,GAAG,CAA1C,EAA6C,CAA7C,EAAgDiY,qBAAhD;AACAC,2BAAmB,CAACxM,WAApB,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACA,YAAIyM,eAAe,GAAG,yEAAeD,mBAAf,EAAoCrW,OAApC,CAAtB;AACA,YAAIuW,mBAAmB,GAAG,IAAIlY,IAAJ,CAAS,CAAT,CAA1B;AACAkY,2BAAmB,CAACjF,cAApB,CAAmCnT,IAAnC,EAAyC,CAAzC,EAA4CiY,qBAA5C;AACAG,2BAAmB,CAAC1M,WAApB,CAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;AACA,YAAI2M,eAAe,GAAG,yEAAeD,mBAAf,EAAoCvW,OAApC,CAAtB;;AACA,YAAIxB,IAAI,CAACuD,OAAL,MAAkBuU,eAAe,CAACvU,OAAhB,EAAtB,EAAiD;AAC/C,iBAAO5D,IAAI,GAAG,CAAd;AACD,SAFD,MAEO,IAAIK,IAAI,CAACuD,OAAL,MAAkByU,eAAe,CAACzU,OAAhB,EAAtB,EAAiD;AACtD,iBAAO5D,IAAP;AACD,SAFM,MAEA;AACL,iBAAOA,IAAI,GAAG,CAAd;AACD;;;;;;;;;;;;;;;;;;AC/BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAUA;;;AACO,UAAIs7B,mBAAmB,GAAG,aAAa,UAAU/zB,OAAV,EAAmB;AAC/D,4FAAU+zB,mBAAV,EAA+B/zB,OAA/B;;AACA,YAAIC,MAAM,GAAG,uFAAa8zB,mBAAb,CAAb;;AACA,iBAASA,mBAAT,GAA+B;AAC7B,cAAI7zB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB6zB,mBAAtB;;AACA,eAAK,IAAI5zB,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa6zB,mBAAb,EAAkC,CAAC;AACjCvzB,aAAG,EAAE,OAD4B;AAEjCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,gBAAIyQ,aAAa,GAAG,SAASA,aAAT,CAAuB7b,IAAvB,EAA6B;AAC/C,qBAAO;AACLA,oBAAI,EAAEA,IADD;AAELmpB,8BAAc,EAAEngB,KAAK,KAAK;AAFrB,eAAP;AAID,aALD;;AAMA,oBAAQA,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,2DAAS,+DAAa,CAAb,EAAgBd,UAAhB,CAAT,EAAsC2T,aAAtC,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAO,2DAASzQ,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AAC9CwC,sBAAI,EAAE;AADwC,iBAAhC,CAAT,EAEHmR,aAFG,CAAP;;AAGF;AACE,uBAAO,2DAAS,+DAAa7S,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAT,EAAiD2T,aAAjD,CAAP;AARJ;AAUD;AAnBgC,SAAD,EAoB/B;AACD9T,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,CAACmhB,cAAN,IAAwBnhB,KAAK,CAAChI,IAAN,GAAa,CAA5C;AACD;AAJA,SApB+B,EAyB/B;AACD+H,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmB+O,KAAnB,EAA0BpH,KAA1B,EAAiCnG,OAAjC,EAA0C;AAC/C,gBAAI8Y,WAAW,GAAG,6EAAeta,IAAf,EAAqBwB,OAArB,CAAlB;;AACA,gBAAImG,KAAK,CAACmhB,cAAV,EAA0B;AACxB,kBAAIC,sBAAsB,GAAG,wEAAsBphB,KAAK,CAAChI,IAA5B,EAAkC2a,WAAlC,CAA7B;AACAta,kBAAI,CAAC8S,cAAL,CAAoBiW,sBAApB,EAA4C,CAA5C,EAA+CvnB,OAAO,CAACoW,qBAAvD;AACA5X,kBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,qBAAO,6EAAerL,IAAf,EAAqBwB,OAArB,CAAP;AACD;;AACD,gBAAI7B,IAAI,GAAG,EAAE,SAASoP,KAAX,KAAqBA,KAAK,CAAC0W,GAAN,KAAc,CAAnC,GAAuC9d,KAAK,CAAChI,IAA7C,GAAoD,IAAIgI,KAAK,CAAChI,IAAzE;AACAK,gBAAI,CAAC8S,cAAL,CAAoBnT,IAApB,EAA0B,CAA1B,EAA6B6B,OAAO,CAACoW,qBAArC;AACA5X,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAO,6EAAerL,IAAf,EAAqBwB,OAArB,CAAP;AACD;AAdA,SAzB+B,CAAlC;AAyCA,eAAOy5B,mBAAP;AACD,OAxD6C,CAwD5C,iDAxD4C,CAAvC;;;;;;;;;;;;;;;;;ACXP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASC,aAAT,CAAuBh4B,aAAvB,EAAsCC,cAAtC,EAAsD;AACnE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIy7B,sBAAsB,GAAG,yEAAej4B,aAAf,CAA7B;AACA,YAAIk4B,uBAAuB,GAAG,yEAAej4B,cAAf,CAA9B;AACA,eAAOg4B,sBAAsB,CAAC53B,OAAvB,OAAqC63B,uBAAuB,CAAC73B,OAAxB,EAA5C;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDe,eAAS83B,iBAAT,CAA2BC,UAA3B,EAAuC;AACpD,mFAAa,CAAb,EAAgB57B,SAAhB;AACA,YAAIoN,MAAM,GAAG,EAAb;AACA,YAAI7K,cAAc,GAAG,wFAArB;;AACA,aAAK,IAAIhB,QAAT,IAAqBgB,cAArB,EAAqC;AACnC,cAAIf,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCY,cAArC,EAAqDhB,QAArD,CAAJ,EAAoE;AAClE;AACA6L,kBAAM,CAAC7L,QAAD,CAAN,GAAmBgB,cAAc,CAAChB,QAAD,CAAjC;AACD;AACF;;AACD,aAAK,IAAIs6B,SAAT,IAAsBD,UAAtB,EAAkC;AAChC,cAAIp6B,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCi6B,UAArC,EAAiDC,SAAjD,CAAJ,EAAiE;AAC/D,gBAAID,UAAU,CAACC,SAAD,CAAV,KAA0BnkB,SAA9B,EAAyC;AACvC,qBAAOtK,MAAM,CAACyuB,SAAD,CAAb;AACD,aAFD,MAEO;AACL;AACAzuB,oBAAM,CAACyuB,SAAD,CAAN,GAAoBD,UAAU,CAACC,SAAD,CAA9B;AACD;AACF;AACF;;AACD,+FAA0BzuB,MAA1B;;;;;;;;;;;;;;;;;;ACvEF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAAS0uB,YAAT,CAAsB/7B,SAAtB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,oEAAUD,SAAV,EAAqB;AAC1ByC,sBAAY,EAAE;AADY,SAArB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASu5B,OAAT,CAAiBh8B,SAAjB,EAA4B;AACzC,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,oEAAUD,SAAV,EAAqBI,IAAI,CAACmH,GAAL,EAArB,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAAS+L,GAAT,CAAa2oB,eAAb,EAA8B;AAC3C,mFAAa,CAAb,EAAgBh8B,SAAhB;AACA,YAAIi8B,UAAJ,CAF2C,CAG3C;;AACA,YAAID,eAAe,IAAI,OAAOA,eAAe,CAACE,OAAvB,KAAmC,UAA1D,EAAsE;AACpED,oBAAU,GAAGD,eAAb,CADoE,CAGpE;AACD,SAJD,MAIO,IAAI,kFAAQA,eAAR,MAA6B,QAA7B,IAAyCA,eAAe,KAAK,IAAjE,EAAuE;AAC5EC,oBAAU,GAAGp0B,KAAK,CAACpG,SAAN,CAAgBmR,KAAhB,CAAsBjR,IAAtB,CAA2Bq6B,eAA3B,CAAb;AACD,SAFM,MAEA;AACL;AACA,iBAAO,IAAI77B,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAI6I,MAAJ;AACA6uB,kBAAU,CAACC,OAAX,CAAmB,UAAUn8B,SAAV,EAAqB;AACtC,cAAImH,WAAW,GAAG,iEAAOnH,SAAP,CAAlB;;AACA,cAAIqN,MAAM,KAAKsK,SAAX,IAAwBtK,MAAM,GAAGlG,WAAjC,IAAgDvC,KAAK,CAACD,MAAM,CAACwC,WAAD,CAAP,CAAzD,EAAgF;AAC9EkG,kBAAM,GAAGlG,WAAT;AACD;AACF,SALD;AAMA,eAAOkG,MAAM,IAAI,IAAIjN,IAAJ,CAASoE,GAAT,CAAjB;;;;;;;;;;;;;;;;;;AC9CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS/D,OAAT,CAAiBT,SAAjB,EAA4B;AACzC,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIo8B,UAAU,GAAG77B,IAAI,CAACE,OAAL,EAAjB;AACA,eAAO27B,UAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASC,iBAAT,CAA2B54B,aAA3B,EAA0CC,cAA1C,EAA0D;AACvE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIq8B,mBAAmB,GAAG,6EAAmB74B,aAAnB,CAA1B;AACA,YAAI84B,oBAAoB,GAAG,6EAAmB74B,cAAnB,CAA3B;AACA,eAAO44B,mBAAmB,CAACx4B,OAApB,OAAkCy4B,oBAAoB,CAACz4B,OAArB,EAAzC;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAAS04B,OAAT,CAAiBC,GAAjB,EAAsB;AACnC;;AAEA,eAAOD,OAAO,GAAG,cAAc,OAAOE,MAArB,IAA+B,YAAY,OAAOA,MAAM,CAACC,QAAzD,GAAoE,UAAUF,GAAV,EAAe;AAClG,iBAAO,OAAOA,GAAd;AACD,SAFgB,GAEb,UAAUA,GAAV,EAAe;AACjB,iBAAOA,GAAG,IAAI,cAAc,OAAOC,MAA5B,IAAsCD,GAAG,CAACxf,WAAJ,KAAoByf,MAA1D,IAAoED,GAAG,KAAKC,MAAM,CAACh7B,SAAnF,GAA+F,QAA/F,GAA0G,OAAO+6B,GAAxH;AACD,SAJM,EAIJD,OAAO,CAACC,GAAD,CAJV;;;;;;;;;;;;;;;;;;ACHF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,eAASG,kBAAT,CAA4Bl2B,aAA5B,EAA2C3E,OAA3C,EAAoD;AACjE,YAAI4E,aAAJ;;AACA,mFAAa,CAAb,EAAgB1G,SAAhB;AACA,YAAI2G,QAAQ,GAAGF,aAAa,IAAI,EAAhC;AACA,YAAIG,SAAS,GAAG,iEAAOD,QAAQ,CAACE,KAAhB,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAI2P,SAAS,GAAG9P,SAAS,CAAC/C,OAAV,EAAhB;AACA,YAAImD,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd,CAPiE,CASjE;;AACA,YAAI,EAAE6S,SAAS,IAAI1P,OAAf,CAAJ,EAA6B;AAC3B,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIuE,KAAK,GAAG,EAAZ;AACA,YAAIC,WAAW,GAAGN,SAAlB;AACAM,mBAAW,CAACyN,UAAZ,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,YAAIxN,IAAI,GAAGzC,MAAM,CAAC,CAACgC,aAAa,GAAG5E,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACqF,IAA3E,MAAqF,IAArF,IAA6FT,aAAa,KAAK,KAAK,CAApH,GAAwHA,aAAxH,GAAwI,CAAzI,CAAjB;AACA,YAAIS,IAAI,GAAG,CAAP,IAAYxC,KAAK,CAACwC,IAAD,CAArB,EAA6B,MAAM,IAAIzE,UAAJ,CAAe,gDAAf,CAAN;;AAC7B,eAAOwE,WAAW,CAACrD,OAAZ,MAAyBmD,OAAhC,EAAyC;AACvCC,eAAK,CAACG,IAAN,CAAW,iEAAOF,WAAP,CAAX;AACAA,qBAAW,GAAG,mEAASA,WAAT,EAAsBC,IAAtB,CAAd;AACD;;AACD,eAAOF,KAAP;;;;;;;;;;;;;;;;;;ACvDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS21B,WAAT,CAAqB78B,SAArB,EAAgCqD,WAAhC,EAA6C;AAC1D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,sEAAYrD,SAAZ,EAAuB,CAACsD,MAAxB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAIw5B,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,SAAzD,CAApB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8De,eAASC,cAAT,CAAwB1oB,QAAxB,EAAkCtS,OAAlC,EAA2C;AACxD,YAAIC,IAAJ,EAAUI,eAAV,EAA2Bk2B,eAA3B,EAA4C0E,aAA5C,EAA2DC,kBAA3D;;AACA,YAAIh9B,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIK,SAAJ,CAAc,iCAAiC0D,MAAjC,CAAwChF,SAAS,CAACiB,MAAlD,EAA0D,UAA1D,CAAd,CAAN;AACD;;AACD,YAAIsB,cAAc,GAAG,wFAArB;AACA,YAAIE,MAAM,GAAG,CAACV,IAAI,GAAG,CAACI,eAAe,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAA7E,MAAyF,IAAzF,IAAiGN,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJI,cAAc,CAACE,MAAvK,MAAmL,IAAnL,IAA2LV,IAAI,KAAK,KAAK,CAAzM,GAA6MA,IAA7M,GAAoN,mEAAjO;AACA,YAAIoO,MAAM,GAAG,CAACkoB,eAAe,GAAGv2B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACqO,MAA7E,MAAyF,IAAzF,IAAiGkoB,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJwE,aAA7J;AACA,YAAII,IAAI,GAAG,CAACF,aAAa,GAAGj7B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACm7B,IAA3E,MAAqF,IAArF,IAA6FF,aAAa,KAAK,KAAK,CAApH,GAAwHA,aAAxH,GAAwI,KAAnJ;AACA,YAAIlU,SAAS,GAAG,CAACmU,kBAAkB,GAAGl7B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAAC+mB,SAAhF,MAA+F,IAA/F,IAAuGmU,kBAAkB,KAAK,KAAK,CAAnI,GAAuIA,kBAAvI,GAA4J,GAA5K;;AACA,YAAI,CAACv6B,MAAM,CAACoH,cAAZ,EAA4B;AAC1B,iBAAO,EAAP;AACD;;AACD,YAAIuD,MAAM,GAAG+C,MAAM,CAAC+sB,MAAP,CAAc,UAAUC,GAAV,EAAexyB,IAAf,EAAqB;AAC9C,cAAI1B,KAAK,GAAG,IAAIjE,MAAJ,CAAW2F,IAAI,CAAC2C,OAAL,CAAa,MAAb,EAAqB,UAAUwa,CAAV,EAAa;AACvD,mBAAOA,CAAC,CAACsV,WAAF,EAAP;AACD,WAFsB,CAAX,CAAZ;AAGA,cAAIn1B,KAAK,GAAGmM,QAAQ,CAACzJ,IAAD,CAApB;;AACA,cAAI,OAAO1C,KAAP,KAAiB,QAAjB,KAA8Bg1B,IAAI,IAAI7oB,QAAQ,CAACzJ,IAAD,CAA9C,CAAJ,EAA2D;AACzD,mBAAOwyB,GAAG,CAACn4B,MAAJ,CAAWvC,MAAM,CAACoH,cAAP,CAAsBZ,KAAtB,EAA6BhB,KAA7B,CAAX,CAAP;AACD;;AACD,iBAAOk1B,GAAP;AACD,SATY,EASV,EATU,EASN9I,IATM,CASDxL,SATC,CAAb;AAUA,eAAOzb,MAAP;;;;;;;;;;;;;;;;;;ACzFF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAASiwB,UAAT,CAAoBt9B,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,qEAAWG,IAAI,CAACmH,GAAL,EAAX,EAAuBvH,SAAvB,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASu9B,QAAT,CAAkBv9B,SAAlB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBmW,MAAlB,OAA+B,CAAtC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASqnB,eAAT,CAAyBx9B,SAAzB,EAAoCqD,WAApC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,0EAAgBrD,SAAhB,EAA2B,CAACsD,MAA5B,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASm6B,aAAT,CAAuBz9B,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,wEAAcD,SAAd,EAAyBI,IAAI,CAACmH,GAAL,EAAzB,CAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAIm2B,aAAa,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAApB;AACA,UAAIC,uBAAuB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAA9B,C,CAEA;;AACO,UAAIC,UAAU,GAAG,aAAa,UAAUn2B,OAAV,EAAmB;AACtD,4FAAUm2B,UAAV,EAAsBn2B,OAAtB;;AACA,YAAIC,MAAM,GAAG,uFAAak2B,UAAb,CAAb;;AACA,iBAASA,UAAT,GAAsB;AACpB,cAAIj2B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBi2B,UAAtB;;AACA,eAAK,IAAIh2B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,aAA/C,EAA8D,CAA9D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAai2B,UAAb,EAAyB,CAAC;AACxB31B,aAAG,EAAE,OADmB;AAExBC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgB3I,IAApC,EAA0C6H,UAA1C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAbuB,SAAD,EActB;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBlL,IAAlB,EAAwB2H,KAAxB,EAA+B;AACpC,gBAAIhI,IAAI,GAAGK,IAAI,CAACoP,cAAL,EAAX;AACA,gBAAIC,UAAU,GAAG,kEAAgB1P,IAAhB,CAAjB;AACA,gBAAIkF,KAAK,GAAG7E,IAAI,CAACiR,WAAL,EAAZ;;AACA,gBAAI5B,UAAJ,EAAgB;AACd,qBAAO1H,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAIy1B,uBAAuB,CAACv4B,KAAD,CAArD;AACD,aAFD,MAEO;AACL,qBAAO8C,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAIw1B,aAAa,CAACt4B,KAAD,CAA3C;AACD;AACF;AAXA,SAdsB,EA0BtB;AACD6C,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAAC2C,UAAL,CAAgBgF,KAAhB;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SA1BsB,CAAzB;AAkCA,eAAOq9B,UAAP;AACD,OAlDoC,CAkDnC,iDAlDmC,CAA9B;;;;;;;;;;;;;;;;;ACbP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASC,WAAT,CAAqBp6B,aAArB,EAAoCC,cAApC,EAAoD;AACjE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,eAAOyG,QAAQ,CAAC7E,WAAT,OAA2B8E,SAAS,CAAC9E,WAAV,EAA3B,IAAsD6E,QAAQ,CAAC9E,QAAT,OAAwB+E,SAAS,CAAC/E,QAAV,EAArF;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASy4B,aAAT,CAAuB99B,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACk3B,eAAL,CAAqB,CAArB;AACA,eAAOl3B,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASw9B,QAAT,CAAkB/9B,SAAlB,EAA6BqD,WAA7B,EAA0C;AACvD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,mEAASrD,SAAT,EAAoB,CAACsD,MAArB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAI06B,yBAAyB,GAAG,uBAAhC;AACA,UAAIC,yBAAyB,GAAG,MAAhC;AACA,UAAIC,gBAAgB,GAAG;AACrBnO,cAAM,EAAE,SADa;AAErBC,mBAAW,EAAE,4DAFQ;AAGrBC,YAAI,EAAE;AAHe,OAAvB;AAKA,UAAIkO,gBAAgB,GAAG;AACrBC,WAAG,EAAE,CAAC,KAAD,EAAQ,SAAR;AADgB,OAAvB;AAGA,UAAIC,oBAAoB,GAAG;AACzBtO,cAAM,EAAE,UADiB;AAEzBC,mBAAW,EAAE,WAFY;AAGzBC,YAAI,EAAE;AAHmB,OAA3B;AAKA,UAAIqO,oBAAoB,GAAG;AACzBF,WAAG,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AADoB,OAA3B;AAGA,UAAIG,kBAAkB,GAAG;AACvBxO,cAAM,EAAE,cADe;AAEvBC,mBAAW,EAAE,qDAFU;AAGvBC,YAAI,EAAE;AAHiB,OAAzB;AAKA,UAAIuO,kBAAkB,GAAG;AACvBzO,cAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CADe;AAEvBqO,WAAG,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,MAAzB,EAAiC,OAAjC,EAA0C,OAA1C,EAAmD,OAAnD,EAA4D,MAA5D,EAAoE,KAApE,EAA2E,KAA3E,EAAkF,KAAlF,EAAyF,KAAzF;AAFkB,OAAzB;AAIA,UAAIK,gBAAgB,GAAG;AACrB1O,cAAM,EAAE,WADa;AAErB,iBAAO,0BAFc;AAGrBC,mBAAW,EAAE,iCAHQ;AAIrBC,YAAI,EAAE;AAJe,OAAvB;AAMA,UAAIyO,gBAAgB,GAAG;AACrB3O,cAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADa;AAErBqO,WAAG,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,MAA9C;AAFgB,OAAvB;AAIA,UAAIO,sBAAsB,GAAG;AAC3B5O,cAAM,EAAE,4DADmB;AAE3BqO,WAAG,EAAE;AAFsB,OAA7B;AAIA,UAAIQ,sBAAsB,GAAG;AAC3BR,WAAG,EAAE;AACH/Y,YAAE,EAAE,KADD;AAEHC,YAAE,EAAE,KAFD;AAGHC,kBAAQ,EAAE,MAHP;AAIHC,cAAI,EAAE,MAJH;AAKHC,iBAAO,EAAE,UALN;AAMHC,mBAAS,EAAE,YANR;AAOHC,iBAAO,EAAE,UAPN;AAQHC,eAAK,EAAE;AARJ;AADsB,OAA7B;AAYA,UAAIta,KAAK,GAAG;AACVE,qBAAa,EAAE,kFAAoB;AACjCqzB,sBAAY,EAAEb,yBADmB;AAEjCc,sBAAY,EAAEb,yBAFmB;AAGjCliB,uBAAa,EAAE,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAC3C,mBAAOyK,QAAQ,CAACzK,KAAD,EAAQ,EAAR,CAAf;AACD;AALgC,SAApB,CADL;AAQV8d,WAAG,EAAE,2EAAa;AAChB+Y,uBAAa,EAAEb,gBADC;AAEhBc,2BAAiB,EAAE,MAFH;AAGhBC,uBAAa,EAAEd,gBAHC;AAIhBe,2BAAiB,EAAE;AAJH,SAAb,CARK;AAcV1Y,eAAO,EAAE,2EAAa;AACpBuY,uBAAa,EAAEV,oBADK;AAEpBW,2BAAiB,EAAE,MAFC;AAGpBC,uBAAa,EAAEX,oBAHK;AAIpBY,2BAAiB,EAAE,KAJC;AAKpBnjB,uBAAa,EAAE,SAASA,aAAT,CAAuBka,KAAvB,EAA8B;AAC3C,mBAAOA,KAAK,GAAG,CAAf;AACD;AAPmB,SAAb,CAdC;AAuBV7wB,aAAK,EAAE,2EAAa;AAClB25B,uBAAa,EAAER,kBADG;AAElBS,2BAAiB,EAAE,MAFD;AAGlBC,uBAAa,EAAET,kBAHG;AAIlBU,2BAAiB,EAAE;AAJD,SAAb,CAvBG;AA6BVt8B,WAAG,EAAE,2EAAa;AAChBm8B,uBAAa,EAAEN,gBADC;AAEhBO,2BAAiB,EAAE,MAFH;AAGhBC,uBAAa,EAAEP,gBAHC;AAIhBQ,2BAAiB,EAAE;AAJH,SAAb,CA7BK;AAmCVroB,iBAAS,EAAE,2EAAa;AACtBkoB,uBAAa,EAAEJ,sBADO;AAEtBK,2BAAiB,EAAE,KAFG;AAGtBC,uBAAa,EAAEL,sBAHO;AAItBM,2BAAiB,EAAE;AAJG,SAAb;AAnCD,OAAZ;AA0Ce;;AAAA,uCAAA5zB,KAAA;;;;;;;;;;;;;;;;ACjGf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQgE;;;AACzD,UAAI6zB,YAAY,GAAG,aAAa,UAAU13B,OAAV,EAAmB;AACxD,4FAAU03B,YAAV,EAAwB13B,OAAxB;;AACA,YAAIC,MAAM,GAAG,uFAAay3B,YAAb,CAAb;;AACA,iBAASA,YAAT,GAAwB;AACtB,cAAIx3B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBw3B,YAAtB;;AACA,eAAK,IAAIv3B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAaw3B,YAAb,EAA2B,CAAC;AAC1Bl3B,aAAG,EAAE,OADqB;AAE1BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,gBAAIyQ,aAAa,GAAG,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAChD,kBAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,uBAAO,CAAP;AACD;;AACD,qBAAOA,KAAP;AACD,aALD;;AAMA,oBAAQgB,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACE;AACA,uBAAO,+DAAaA,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAO,2DAASU,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AACpC0O,uBAAK,EAAE,aAD6B;AAEpCC,yBAAO,EAAE;AAF2B,iBAAtB,KAGVzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHU,IAMVzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANC,EASHgF,aATG,CAAP;AAUF;;AACA,mBAAK,OAAL;AACE,uBAAO,2DAASzQ,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AACpC0O,uBAAK,EAAE,QAD6B;AAEpCC,yBAAO,EAAE;AAF2B,iBAAtB,CAAT,EAGHgF,aAHG,CAAP;AAIF;;AACA,mBAAK,QAAL;AACE,uBAAO,2DAASzQ,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AACpC0O,uBAAK,EAAE,OAD6B;AAEpCC,yBAAO,EAAE;AAF2B,iBAAtB,KAGVzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,EAMHgF,aANG,CAAP;AAOF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAO,2DAASzQ,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AACpC0O,uBAAK,EAAE,MAD6B;AAEpCC,yBAAO,EAAE;AAF2B,iBAAtB,KAGVzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,aADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHU,IAMVzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANU,IASVzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CATC,EAYHgF,aAZG,CAAP;AAzCJ;AAuDD;AAhEyB,SAAD,EAiExB;AACD9T,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACD;AAJA,SAjEwB,EAsExB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,GAAG,2EAAaA,IAAb,EAAmB2H,KAAnB,CAAP;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SAtEwB,CAA3B;AA8EA,eAAO4+B,YAAP;AACD,OA7FsC,CA6FrC,iDA7FqC,CAAhC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS7+B,QAAT,CAAkBN,SAAlB,EAA6Bo/B,UAA7B,EAAyC;AACtD,mFAAa,CAAb,EAAgBn/B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIyI,KAAK,GAAG,wEAAU22B,UAAV,CAAZ;AACA7+B,YAAI,CAACD,QAAL,CAAcmI,KAAd;AACA,eAAOlI,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCe,eAAS8+B,OAAT,CAAiBr/B,SAAjB,EAA4Bs/B,SAA5B,EAAuCv9B,OAAvC,EAAgD;AAC7D,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4O,IAAI,GAAG,wEAAU0wB,SAAV,CAAX;AACA,YAAIr8B,IAAI,GAAG,kEAAQ1C,IAAR,EAAcwB,OAAd,IAAyB6M,IAApC;AACArO,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAAI,GAAG,CAArC;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;AClDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASg/B,OAAT,CAAiBv/B,SAAjB,EAA4BqD,WAA5B,EAAyC;AACtD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,kEAAQrD,SAAR,EAAmB,CAACsD,MAApB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASk8B,eAAT,CAAyB1wB,QAAzB,EAAmC;AAChD,mFAAa,CAAb,EAAgB7O,SAAhB;AACA,YAAIgL,KAAK,GAAG6D,QAAQ,GAAG,kEAAvB;AACA,eAAO/N,IAAI,CAAC+D,KAAL,CAAWmG,KAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAIw0B,eAAe,GAAG,aAAa,UAAUh4B,OAAV,EAAmB;AAC3D,4FAAUg4B,eAAV,EAA2Bh4B,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAa+3B,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAI93B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB83B,eAAtB;;AACA,eAAK,IAAI73B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa83B,eAAb,EAA8B,CAAC;AAC7Bx3B,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgBw2B,OAApC,EAA6Ct3B,UAA7C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAb4B,SAAD,EAc3B;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAd2B,EAmB3B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC,gBAAIwD,IAAI,GAAGnL,IAAI,CAACoL,WAAL,MAAsB,EAAjC;;AACA,gBAAID,IAAI,IAAIxD,KAAK,GAAG,EAApB,EAAwB;AACtB3H,kBAAI,CAACqL,WAAL,CAAiB1D,KAAK,GAAG,EAAzB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC;AACD,aAFD,MAEO;AACL3H,kBAAI,CAACqL,WAAL,CAAiB1D,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACD;;AACD,mBAAO3H,IAAP;AACD;AAVA,SAnB2B,CAA9B;AA+BA,eAAOk/B,eAAP;AACD,OA9CyC,CA8CxC,iDA9CwC,CAAnC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;AAYA,UAAI5Z,UAAU,GAAG;AACf;AACA/B,SAAC,EAAE,SAASA,CAAT,CAAWvjB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAI+c,UAAU,GAAG1lB,IAAI,CAACoP,cAAL,EAAjB,CAVyB,CAWzB;;AACA,cAAIzP,IAAI,GAAG+lB,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,IAAIA,UAA7C;AACA,iBAAO,0EAAgB/c,KAAK,KAAK,IAAV,GAAiBhJ,IAAI,GAAG,GAAxB,GAA8BA,IAA9C,EAAoDgJ,KAAK,CAAChI,MAA1D,CAAP;AACD,SAhBc;AAiBf;AACAwlB,SAAC,EAAE,SAASA,CAAT,CAAWnmB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,cAAI9D,KAAK,GAAG7E,IAAI,CAACiR,WAAL,EAAZ;AACA,iBAAOtI,KAAK,KAAK,GAAV,GAAgBoB,MAAM,CAAClF,KAAK,GAAG,CAAT,CAAtB,GAAoC,0EAAgBA,KAAK,GAAG,CAAxB,EAA2B,CAA3B,CAA3C;AACD,SArBc;AAsBf;AACA2hB,SAAC,EAAE,SAASA,CAAT,CAAWxmB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,iBAAO,0EAAgB3I,IAAI,CAAC4C,UAAL,EAAhB,EAAmC+F,KAAK,CAAChI,MAAzC,CAAP;AACD,SAzBc;AA0Bf;AACAomB,SAAC,EAAE,SAASA,CAAT,CAAW/mB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,cAAIqe,kBAAkB,GAAGhnB,IAAI,CAACoL,WAAL,KAAqB,EAArB,IAA2B,CAA3B,GAA+B,IAA/B,GAAsC,IAA/D;;AACA,kBAAQzC,KAAR;AACE,iBAAK,GAAL;AACA,iBAAK,IAAL;AACE,qBAAOqe,kBAAkB,CAAC8V,WAAnB,EAAP;;AACF,iBAAK,KAAL;AACE,qBAAO9V,kBAAP;;AACF,iBAAK,OAAL;AACE,qBAAOA,kBAAkB,CAAC,CAAD,CAAzB;;AACF,iBAAK,MAAL;AACA;AACE,qBAAOA,kBAAkB,KAAK,IAAvB,GAA8B,MAA9B,GAAuC,MAA9C;AAVJ;AAYD,SAzCc;AA0Cf;AACAI,SAAC,EAAE,SAASA,CAAT,CAAWpnB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,iBAAO,0EAAgB3I,IAAI,CAACoL,WAAL,KAAqB,EAArB,IAA2B,EAA3C,EAA+CzC,KAAK,CAAChI,MAArD,CAAP;AACD,SA7Cc;AA8Cf;AACA0mB,SAAC,EAAE,SAASA,CAAT,CAAWrnB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,iBAAO,0EAAgB3I,IAAI,CAACoL,WAAL,EAAhB,EAAoCzC,KAAK,CAAChI,MAA1C,CAAP;AACD,SAjDc;AAkDf;AACA6mB,SAAC,EAAE,SAASA,CAAT,CAAWxnB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,iBAAO,0EAAgB3I,IAAI,CAACkR,aAAL,EAAhB,EAAsCvI,KAAK,CAAChI,MAA5C,CAAP;AACD,SArDc;AAsDf;AACA8mB,SAAC,EAAE,SAASA,CAAT,CAAWznB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,iBAAO,0EAAgB3I,IAAI,CAACmR,aAAL,EAAhB,EAAsCxI,KAAK,CAAChI,MAA5C,CAAP;AACD,SAzDc;AA0Df;AACA+mB,SAAC,EAAE,SAASA,CAAT,CAAW1nB,IAAX,EAAiB2I,KAAjB,EAAwB;AACzB,cAAIy2B,cAAc,GAAGz2B,KAAK,CAAChI,MAA3B;AACA,cAAI4E,YAAY,GAAGvF,IAAI,CAACoR,kBAAL,EAAnB;AACA,cAAI3L,iBAAiB,GAAGjF,IAAI,CAAC+D,KAAL,CAAWgB,YAAY,GAAG/E,IAAI,CAACkF,GAAL,CAAS,EAAT,EAAa05B,cAAc,GAAG,CAA9B,CAA1B,CAAxB;AACA,iBAAO,0EAAgB35B,iBAAhB,EAAmCkD,KAAK,CAAChI,MAAzC,CAAP;AACD;AAhEc,OAAjB;AAkEe;;AAAA,uCAAA2kB,UAAA;;;;;;;;;;;;;;;;AC/Ef;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAmBe,eAAS+Z,gBAAT,GAA4B;AACzC,YAAIr4B,GAAG,GAAG,IAAInH,IAAJ,EAAV;AACA,YAAIF,IAAI,GAAGqH,GAAG,CAACjC,WAAJ,EAAX;AACA,YAAIF,KAAK,GAAGmC,GAAG,CAAClC,QAAJ,EAAZ;AACA,YAAIzC,GAAG,GAAG2E,GAAG,CAAC9G,OAAJ,EAAV;AACA,YAAIF,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;AACAG,YAAI,CAACF,WAAL,CAAiBH,IAAjB,EAAuBkF,KAAvB,EAA8BxC,GAAG,GAAG,CAApC;AACArC,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAmBe,eAASs/B,aAAT,GAAyB;AACtC,YAAIt4B,GAAG,GAAG,IAAInH,IAAJ,EAAV;AACA,YAAIF,IAAI,GAAGqH,GAAG,CAACjC,WAAJ,EAAX;AACA,YAAIF,KAAK,GAAGmC,GAAG,CAAClC,QAAJ,EAAZ;AACA,YAAIzC,GAAG,GAAG2E,GAAG,CAAC9G,OAAJ,EAAV;AACA,YAAIF,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;AACAG,YAAI,CAACF,WAAL,CAAiBH,IAAjB,EAAuBkF,KAAvB,EAA8BxC,GAAG,GAAG,CAApC;AACArC,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCe,eAASu/B,gBAAT,CAA0B9/B,SAA1B,EAAqC4G,QAArC,EAA+C;AAC5D,mFAAa,CAAb,EAAgB3G,SAAhB;AACA,YAAImR,IAAI,GAAG,iEAAOpR,SAAP,EAAkB8D,OAAlB,EAAX;AACA,YAAI6S,SAAS,GAAG,iEAAO/P,QAAQ,CAACE,KAAhB,EAAuBhD,OAAvB,EAAhB;AACA,YAAImD,OAAO,GAAG,iEAAOL,QAAQ,CAACI,GAAhB,EAAqBlD,OAArB,EAAd,CAJ4D,CAM5D;;AACA,YAAI,EAAE6S,SAAS,IAAI1P,OAAf,CAAJ,EAA6B;AAC3B,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,eAAOyO,IAAI,IAAIuF,SAAR,IAAqBvF,IAAI,IAAInK,OAApC;;;;;;;;;;;;;;;;;;ACnDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAAS84B,qBAAT,CAA+Bn5B,QAA/B,EAAyC;AACtD,mFAAa,CAAb,EAAgB3G,SAAhB;AACA,YAAI+/B,YAAY,GAAG,4EAAkBp5B,QAAlB,CAAnB;AACA,YAAIq5B,QAAQ,GAAG,EAAf;AACA,YAAIhK,KAAK,GAAG,CAAZ;;AACA,eAAOA,KAAK,GAAG+J,YAAY,CAAC9+B,MAA5B,EAAoC;AAClC,cAAIX,IAAI,GAAGy/B,YAAY,CAAC/J,KAAK,EAAN,CAAvB;;AACA,cAAI,oEAAU11B,IAAV,CAAJ,EAAqB;AACnB0/B,oBAAQ,CAAC54B,IAAT,CAAc9G,IAAd;AACA,gBAAI,mEAASA,IAAT,CAAJ,EAAoB01B,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACrB;AACF;;AACD,eAAOgK,QAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UClCWC,oBAAoB;AAG/B,sCAAsBjrB,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAE0B;;AAHZ;AAAA;AAAA,iBAK/B,sBAAa;AACX,mBAAO,KAAKD,IAAL,CAAUG,GAAV,WAAiB,KAAKF,GAAtB,eAAqCG,IAArC,CAA0C,4DAAK,CAAL,CAA1C,EAAmD,6DAAM,CAAN,CAAnD,CAAP;AACD;AAP8B;AAAA;AAAA,iBAS/B,yBAAgBE,MAAhB,EAA6B;AAC3BnR,mBAAO,CAAC+7B,GAAR,CAAY,MAAZ;AACA,mBAAO,KAAKlrB,IAAL,CAAUG,GAAV,WAAiB,KAAKF,GAAtB,qBAA2C;AAAEK,oBAAM,EAANA;AAAF,aAA3C,EAAuDF,IAAvD,CACL,4DAAK,CAAL,CADK,EAEL,6DAAM,CAAN,CAFK,CAAP;AAID;AAf8B;AAAA;AAAA,iBAiB/B,sBAAaE,MAAb,EAA0B;AAExB,mBAAO,KAAKN,IAAL,CAAUmrB,IAAV,WAAkB,KAAKlrB,GAAvB,8BAAqDK,MAArD,EAA6DF,IAA7D,CACL,4DAAK,CAAL,CADK,CAAP;AAGD;AACD;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApC+B;AAAA;AAAA,iBA4E/B,2BAAkBC,EAAlB,EAA2B;AACzB,mBAAO,KAAKL,IAAL,qBACM,KAAKC,GADX,kCACsCI,EADtC,GAEJD,IAFI,CAEC,4DAAK,CAAL,CAFD,EAEU,6DAAM,CAAN,CAFV,CAAP;AAGD;AAhF8B;;AAAA;AAAA,S;;;;gBARxB;;;;AAQI6qB,0BAAoB,6DAHhC,iEAAW;AACVzqB,kBAAU,EAAE;AADF,OAAX,CAGgC,E,+EAGH,+D,EAHG,GAApByqB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASG,iBAAT,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AAClD,YAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGD,GAAG,CAACp/B,MAA7B,EAAqCq/B,GAAG,GAAGD,GAAG,CAACp/B,MAAV;;AACrC,aAAK,IAAIkmB,CAAC,GAAG,CAAR,EAAWoZ,IAAI,GAAG,IAAI14B,KAAJ,CAAUy4B,GAAV,CAAvB,EAAuCnZ,CAAC,GAAGmZ,GAA3C,EAAgDnZ,CAAC,EAAjD,EAAqDoZ,IAAI,CAACpZ,CAAD,CAAJ,GAAUkZ,GAAG,CAAClZ,CAAD,CAAb;;AACrD,eAAOoZ,IAAP;;;;;;;;;;;;;;;;;;ACHF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASC,UAAT,CAAoBzgC,SAApB,EAA+BqD,WAA/B,EAA4C;AACzD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,qEAAWrD,SAAX,EAAsB,CAACsD,MAAvB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASo9B,oBAAT,CAA8Bv2B,QAA9B,EAAwCC,SAAxC,EAAmDrI,OAAnD,EAA4D;AACzE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIgD,IAAI,GAAG,6EAAmBkH,QAAnB,EAA6BC,SAA7B,IAA0C,CAArD;AACA,eAAO,wFAAkBrI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAA5E,EAA4FpH,IAA5F,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDe,eAAS09B,wBAAT,CAAkCl9B,aAAlC,EAAiDC,cAAjD,EAAiE;AAC9E,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI,CAAC,kEAAQyG,QAAR,CAAD,IAAsB,CAAC,kEAAQC,SAAR,CAA3B,EAA+C,OAAO5F,GAAP;AAC/C,YAAIo8B,kBAAkB,GAAG,mFAAyBz2B,QAAzB,EAAmCC,SAAnC,CAAzB;AACA,YAAIvJ,IAAI,GAAG+/B,kBAAkB,GAAG,CAArB,GAAyB,CAAC,CAA1B,GAA8B,CAAzC;AACA,YAAI3qB,KAAK,GAAG,wEAAU2qB,kBAAkB,GAAG,CAA/B,CAAZ;AACA,YAAIvzB,MAAM,GAAG4I,KAAK,GAAG,CAArB;AACA7L,iBAAS,GAAG,kEAAQA,SAAR,EAAmB6L,KAAK,GAAG,CAA3B,CAAZ,CAT8E,CAW9E;;AACA,eAAO,CAAC,oEAAU9L,QAAV,EAAoBC,SAApB,CAAR,EAAwC;AACtC;AACAiD,gBAAM,IAAI,oEAAUjD,SAAV,IAAuB,CAAvB,GAA2BvJ,IAArC;AACAuJ,mBAAS,GAAG,kEAAQA,SAAR,EAAmBvJ,IAAnB,CAAZ;AACD;;AACD,eAAOwM,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;;;;;;;;;;;;;;;;;;AC1EF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASwzB,UAAT,CAAoBtgC,IAApB,EAA0B;AACvC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASqF,UAAT,CAAoB5F,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI6K,OAAO,GAAGtK,IAAI,CAACqF,UAAL,EAAd;AACA,eAAOiF,OAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAASi2B,WAAT,CAAqB9gC,SAArB,EAAgC+B,OAAhC,EAAyC;AACtD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIC,YAAY,GAAG,wEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB,CAJsD,CAMtD;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAAC4V,MAAL,EAAV;AACA,YAAIlT,IAAI,GAAG,CAACL,GAAG,GAAGH,YAAN,GAAqB,CAArB,GAAyB,CAA1B,IAA+BG,GAA/B,GAAqCH,YAAhD;AACAlC,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAA9B;AACA1C,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC9CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CACA;AACA;;;AACA,UAAIwgC,UAAU,GAAG,QAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6Be,eAASj7B,YAAT,CAAsB9D,IAAtB,EAA4B;AACzC,YAAIiJ,KAAK,GAAGjJ,IAAI,CAACiJ,KAAjB;AAAA,YACED,MAAM,GAAGhJ,IAAI,CAACgJ,MADhB;AAAA,YAEEiL,KAAK,GAAGjU,IAAI,CAACiU,KAFf;AAAA,YAGElL,IAAI,GAAG/I,IAAI,CAAC+I,IAHd;AAAA,YAIEtC,KAAK,GAAGzG,IAAI,CAACyG,KAJf;AAAA,YAKE+B,OAAO,GAAGxI,IAAI,CAACwI,OALjB;AAAA,YAMEK,OAAO,GAAG7I,IAAI,CAAC6I,OANjB;AAOA,mFAAa,CAAb,EAAgB5K,SAAhB;AACA,YAAI+gC,SAAS,GAAG,CAAhB;AACA,YAAI/1B,KAAJ,EAAW+1B,SAAS,IAAI/1B,KAAK,GAAG81B,UAArB;AACX,YAAI/1B,MAAJ,EAAYg2B,SAAS,IAAIh2B,MAAM,IAAI+1B,UAAU,GAAG,EAAjB,CAAnB;AACZ,YAAI9qB,KAAJ,EAAW+qB,SAAS,IAAI/qB,KAAK,GAAG,CAArB;AACX,YAAIlL,IAAJ,EAAUi2B,SAAS,IAAIj2B,IAAb;AACV,YAAIk2B,YAAY,GAAGD,SAAS,GAAG,EAAZ,GAAiB,EAAjB,GAAsB,EAAzC;AACA,YAAIv4B,KAAJ,EAAWw4B,YAAY,IAAIx4B,KAAK,GAAG,EAAR,GAAa,EAA7B;AACX,YAAI+B,OAAJ,EAAay2B,YAAY,IAAIz2B,OAAO,GAAG,EAA1B;AACb,YAAIK,OAAJ,EAAao2B,YAAY,IAAIp2B,OAAhB;AACb,eAAO9J,IAAI,CAACiD,KAAL,CAAWi9B,YAAY,GAAG,IAA1B,CAAP;;;;;;;;;;;;;;;;;;ACpmBe,eAASC,cAAT,GAA0B;AACvC,YAAI35B,GAAG,GAAG,IAAInH,IAAJ,EAAV;AACA,YAAIF,IAAI,GAAGqH,GAAG,CAACjC,WAAJ,EAAX;AACA,YAAIF,KAAK,GAAGmC,GAAG,CAAClC,QAAJ,EAAZ;AACA,YAAIzC,GAAG,GAAG2E,GAAG,CAAC9G,OAAJ,EAAV;AACA,YAAIF,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;AACAG,YAAI,CAACF,WAAL,CAAiBH,IAAjB,EAAuBkF,KAAvB,EAA8BxC,GAAG,GAAG,CAApC;AACArC,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS4gC,gBAAT,CAA0B5gC,IAA1B,EAAgC;AAC7C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAAS6gC,gBAAT,CAA0BphC,SAA1B,EAAqC;AAClD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIC,IAAI,GAAG,yEAAeF,SAAf,CAAX;AACA,YAAI0c,yBAAyB,GAAG,IAAItc,IAAJ,CAAS,CAAT,CAAhC;AACAsc,iCAAyB,CAACrc,WAA1B,CAAsCH,IAAI,GAAG,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD;AACAwc,iCAAyB,CAACpc,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;AACA,YAAIC,IAAI,GAAG,yEAAemc,yBAAf,CAAX;AACAnc,YAAI,CAACk3B,eAAL,CAAqBl3B,IAAI,CAACwF,eAAL,KAAyB,CAA9C;AACA,eAAOxF,IAAP;;;;;;;;;;;;;;;;;;AChCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIwK,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAX;AACA,UAAIC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAb;AAEA;;;;;;;;;;;;;;;;;;;;AAmBe,eAASq2B,aAAT,CAAuBrhC,SAAvB,EAAkC;AAC/C,YAAIC,SAAS,CAACiB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIK,SAAJ,CAAc,kCAAkC0D,MAAlC,CAAyChF,SAAS,CAACiB,MAAnD,EAA2D,UAA3D,CAAd,CAAN;AACD;;AACD,YAAIgE,YAAY,GAAG,iEAAOlF,SAAP,CAAnB;;AACA,YAAI,CAAC,kEAAQkF,YAAR,CAAL,EAA4B;AAC1B,gBAAM,IAAIvC,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAI2+B,OAAO,GAAGv2B,IAAI,CAAC7F,YAAY,CAACpC,SAAb,EAAD,CAAlB;AACA,YAAIs5B,UAAU,GAAG,8EAAgBl3B,YAAY,CAAC/B,UAAb,EAAhB,EAA2C,CAA3C,CAAjB;AACA,YAAIo+B,SAAS,GAAGv2B,MAAM,CAAC9F,YAAY,CAACsM,WAAb,EAAD,CAAtB;AACA,YAAItR,IAAI,GAAGgF,YAAY,CAACyK,cAAb,EAAX;AACA,YAAIpK,IAAI,GAAG,8EAAgBL,YAAY,CAACyG,WAAb,EAAhB,EAA4C,CAA5C,CAAX;AACA,YAAIlG,MAAM,GAAG,8EAAgBP,YAAY,CAACuM,aAAb,EAAhB,EAA8C,CAA9C,CAAb;AACA,YAAI9L,MAAM,GAAG,8EAAgBT,YAAY,CAACwM,aAAb,EAAhB,EAA8C,CAA9C,CAAb,CAd+C,CAgB/C;;AACA,eAAO,GAAGzM,MAAH,CAAUq8B,OAAV,EAAmB,IAAnB,EAAyBr8B,MAAzB,CAAgCm3B,UAAhC,EAA4C,GAA5C,EAAiDn3B,MAAjD,CAAwDs8B,SAAxD,EAAmE,GAAnE,EAAwEt8B,MAAxE,CAA+E/E,IAA/E,EAAqF,GAArF,EAA0F+E,MAA1F,CAAiGM,IAAjG,EAAuG,GAAvG,EAA4GN,MAA5G,CAAmHQ,MAAnH,EAA2H,GAA3H,EAAgIR,MAAhI,CAAuIU,MAAvI,EAA+I,MAA/I,CAAP;;;;;;;;;;;;;;;;;;AC1CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAI67B,sBAAsB,GAAG,aAAa,UAAU/5B,OAAV,EAAmB;AAClE,4FAAU+5B,sBAAV,EAAkC/5B,OAAlC;;AACA,YAAIC,MAAM,GAAG,uFAAa85B,sBAAb,CAAb;;AACA,iBAASA,sBAAT,GAAkC;AAChC,cAAI75B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB65B,sBAAtB;;AACA,eAAK,IAAI55B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa65B,sBAAb,EAAqC,CAAC;AACpCv5B,aAAG,EAAE,OAD+B;AAEpCC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkC;AACvC,gBAAI6S,aAAa,GAAG,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAChD,qBAAOnH,IAAI,CAAC+D,KAAL,CAAWoD,KAAK,GAAGnH,IAAI,CAACkF,GAAL,CAAS,EAAT,EAAa,CAACiD,KAAK,CAAChI,MAAP,GAAgB,CAA7B,CAAnB,CAAP;AACD,aAFD;;AAGA,mBAAO,2DAAS,+DAAagI,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAT,EAAiD2T,aAAjD,CAAP;AACD;AAPmC,SAAD,EAQlC;AACD9T,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACkhC,kBAAL,CAAwBv5B,KAAxB;AACA,mBAAO3H,IAAP;AACD;AALA,SARkC,CAArC;AAeA,eAAOihC,sBAAP;AACD,OA9BgD,CA8B/C,iDA9B+C,CAA1C;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASE,cAAT,CAAwBnhC,IAAxB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCe,eAASohC,SAAT,CAAmBphC,IAAnB,EAAyBwB,OAAzB,EAAkC;AAC/C,YAAIu2B,eAAJ,EAAqBC,qBAArB;;AACA,mFAAa,CAAb,EAAgBt4B,SAAhB;AACA,YAAIiF,YAAY,GAAG,iEAAO3E,IAAP,CAAnB;;AACA,YAAIqE,KAAK,CAACM,YAAY,CAACpB,OAAb,EAAD,CAAT,EAAmC;AACjC,gBAAM,IAAInB,UAAJ,CAAe,oBAAf,CAAN;AACD;;AACD,YAAIyN,MAAM,GAAG9F,MAAM,CAAC,CAACguB,eAAe,GAAGv2B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACqO,MAA7E,MAAyF,IAAzF,IAAiGkoB,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJ,UAAjJ,CAAnB;AACA,YAAIE,cAAc,GAAGluB,MAAM,CAAC,CAACiuB,qBAAqB,GAAGx2B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACy2B,cAAnF,MAAuG,IAAvG,IAA+GD,qBAAqB,KAAK,KAAK,CAA9I,GAAkJA,qBAAlJ,GAA0K,UAA3K,CAA3B;;AACA,YAAInoB,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,OAAxC,EAAiD;AAC/C,gBAAM,IAAIzN,UAAJ,CAAe,sCAAf,CAAN;AACD;;AACD,YAAI61B,cAAc,KAAK,MAAnB,IAA6BA,cAAc,KAAK,MAAhD,IAA0DA,cAAc,KAAK,UAAjF,EAA6F;AAC3F,gBAAM,IAAI71B,UAAJ,CAAe,sDAAf,CAAN;AACD;;AACD,YAAI0K,MAAM,GAAG,EAAb;AACA,YAAIlH,QAAQ,GAAG,EAAf;AACA,YAAIsyB,aAAa,GAAGroB,MAAM,KAAK,UAAX,GAAwB,GAAxB,GAA8B,EAAlD;AACA,YAAIsoB,aAAa,GAAGtoB,MAAM,KAAK,UAAX,GAAwB,GAAxB,GAA8B,EAAlD,CAlB+C,CAoB/C;;AACA,YAAIooB,cAAc,KAAK,MAAvB,EAA+B;AAC7B,cAAI51B,GAAG,GAAG,8EAAgBsC,YAAY,CAACzE,OAAb,EAAhB,EAAwC,CAAxC,CAAV;AACA,cAAI2E,KAAK,GAAG,8EAAgBF,YAAY,CAACG,QAAb,KAA0B,CAA1C,EAA6C,CAA7C,CAAZ;AACA,cAAInF,IAAI,GAAG,8EAAgBgF,YAAY,CAACI,WAAb,EAAhB,EAA4C,CAA5C,CAAX,CAH6B,CAK7B;;AACA+H,gBAAM,GAAG,GAAGpI,MAAH,CAAU/E,IAAV,EAAgB+E,MAAhB,CAAuBwzB,aAAvB,EAAsCxzB,MAAtC,CAA6CG,KAA7C,EAAoDH,MAApD,CAA2DwzB,aAA3D,EAA0ExzB,MAA1E,CAAiFrC,GAAjF,CAAT;AACD,SA5B8C,CA8B/C;;;AACA,YAAI41B,cAAc,KAAK,MAAvB,EAA+B;AAC7B;AACA,cAAItyB,MAAM,GAAGhB,YAAY,CAACkB,iBAAb,EAAb;;AACA,cAAIF,MAAM,KAAK,CAAf,EAAkB;AAChB,gBAAIG,cAAc,GAAGtF,IAAI,CAACC,GAAL,CAASkF,MAAT,CAArB;AACA,gBAAII,UAAU,GAAG,8EAAgBvF,IAAI,CAAC+D,KAAL,CAAWuB,cAAc,GAAG,EAA5B,CAAhB,EAAiD,CAAjD,CAAjB;AACA,gBAAIE,YAAY,GAAG,8EAAgBF,cAAc,GAAG,EAAjC,EAAqC,CAArC,CAAnB,CAHgB,CAIhB;;AACA,gBAAIxF,IAAI,GAAGqF,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,GAA9B;AACAC,oBAAQ,GAAG,GAAGlB,MAAH,CAAUpE,IAAV,EAAgBoE,MAAhB,CAAuBqB,UAAvB,EAAmC,GAAnC,EAAwCrB,MAAxC,CAA+CsB,YAA/C,CAAX;AACD,WAPD,MAOO;AACLJ,oBAAQ,GAAG,GAAX;AACD;;AACD,cAAIZ,IAAI,GAAG,8EAAgBL,YAAY,CAACM,QAAb,EAAhB,EAAyC,CAAzC,CAAX;AACA,cAAIC,MAAM,GAAG,8EAAgBP,YAAY,CAACQ,UAAb,EAAhB,EAA2C,CAA3C,CAAb;AACA,cAAIC,MAAM,GAAG,8EAAgBT,YAAY,CAACU,UAAb,EAAhB,EAA2C,CAA3C,CAAb,CAf6B,CAiB7B;;AACA,cAAI+yB,SAAS,GAAGtrB,MAAM,KAAK,EAAX,GAAgB,EAAhB,GAAqB,GAArC,CAlB6B,CAoB7B;;AACA,cAAI+D,IAAI,GAAG,CAAC7L,IAAD,EAAOE,MAAP,EAAeE,MAAf,EAAuB2uB,IAAvB,CAA4BoE,aAA5B,CAAX,CArB6B,CAuB7B;;AACArrB,gBAAM,GAAG,GAAGpI,MAAH,CAAUoI,MAAV,EAAkBpI,MAAlB,CAAyB0zB,SAAzB,EAAoC1zB,MAApC,CAA2CmM,IAA3C,EAAiDnM,MAAjD,CAAwDkB,QAAxD,CAAT;AACD;;AACD,eAAOkH,MAAP;;;;;;;;;;;;;;;;;;AClGF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAShI,QAAT,CAAkBrF,SAAlB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIoF,KAAK,GAAG7E,IAAI,CAAC8E,QAAL,EAAZ;AACA,eAAOD,KAAP;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAU0E;;;AACnE,UAAIw8B,aAAa,GAAG,aAAa,UAAUn6B,OAAV,EAAmB;AACzD,4FAAUm6B,aAAV,EAAyBn6B,OAAzB;;AACA,YAAIC,MAAM,GAAG,uFAAak6B,aAAb,CAAb;;AACA,iBAASA,aAAT,GAAyB;AACvB,cAAIj6B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBi6B,aAAtB;;AACA,eAAK,IAAIh6B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAai6B,aAAb,EAA4B,CAAC;AAC3B35B,aAAG,EAAE,OADsB;AAE3BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgB0F,IAApC,EAA0CxG,UAA1C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAb0B,SAAD,EAczB;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAdyB,EAmBzB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC,mBAAO,iFAAkB,4EAAc3H,IAAd,EAAoB2H,KAApB,CAAlB,CAAP;AACD;AAJA,SAnByB,CAA5B;AAyBA,eAAO05B,aAAP;AACD,OAxCuC,CAwCtC,iDAxCsC,CAAjC;;;;;;;;;;;;;;;;;ACXP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Be,eAASC,qBAAT,CAA+Bn7B,aAA/B,EAA8C;AAC3D,mFAAa,CAAb,EAAgBzG,SAAhB;AACA,YAAI2G,QAAQ,GAAGF,aAAa,IAAI,EAAhC;AACA,YAAIG,SAAS,GAAG,iEAAOD,QAAQ,CAACE,KAAhB,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAIC,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd,CAL2D,CAO3D;;AACA,YAAI,EAAE+C,SAAS,CAAC/C,OAAV,MAAuBmD,OAAzB,CAAJ,EAAuC;AACrC,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIm/B,gBAAgB,GAAG,yEAAej7B,SAAf,CAAvB;AACA,YAAIk7B,cAAc,GAAG,yEAAeh7B,OAAf,CAArB;AACAE,eAAO,GAAG86B,cAAc,CAACj+B,OAAf,EAAV;AACA,YAAIgL,QAAQ,GAAG,EAAf;AACA,YAAIkzB,cAAc,GAAGF,gBAArB;;AACA,eAAOE,cAAc,CAACl+B,OAAf,MAA4BmD,OAAnC,EAA4C;AAC1C6H,kBAAQ,CAACzH,IAAT,CAAc,iEAAO26B,cAAP,CAAd;AACAA,wBAAc,GAAG,sEAAYA,cAAZ,EAA4B,CAA5B,CAAjB;AACD;;AACD,eAAOlzB,QAAP;;;;;;;;;;;;;;;;;;AClDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASmzB,OAAT,CAAiBjiC,SAAjB,EAA4B;AACzC,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBsF,WAAlB,EAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS48B,SAAT,CAAmBliC,SAAnB,EAA8BqD,WAA9B,EAA2C;AACxD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIsD,MAAM,GAAG,wEAAUD,WAAV,CAAb;;AACA,YAAIuB,KAAK,CAACtB,MAAD,CAAT,EAAmB;AACjB,iBAAO,IAAIlD,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAI,CAAClB,MAAL,EAAa;AACX;AACA,iBAAO/C,IAAP;AACD;;AACD,YAAI67B,UAAU,GAAG77B,IAAI,CAACE,OAAL,EAAjB,CAXwD,CAaxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAI0hC,iBAAiB,GAAG,IAAI/hC,IAAJ,CAASG,IAAI,CAACuD,OAAL,EAAT,CAAxB;AACAq+B,yBAAiB,CAACptB,QAAlB,CAA2BxU,IAAI,CAAC8E,QAAL,KAAkB/B,MAAlB,GAA2B,CAAtD,EAAyD,CAAzD;AACA,YAAI8+B,WAAW,GAAGD,iBAAiB,CAAC1hC,OAAlB,EAAlB;;AACA,YAAI27B,UAAU,IAAIgG,WAAlB,EAA+B;AAC7B;AACA;AACA,iBAAOD,iBAAP;AACD,SAJD,MAIO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA5hC,cAAI,CAACF,WAAL,CAAiB8hC,iBAAiB,CAAC78B,WAAlB,EAAjB,EAAkD68B,iBAAiB,CAAC98B,QAAlB,EAAlD,EAAgF+2B,UAAhF;AACA,iBAAO77B,IAAP;AACD;;;;;;;;;;;;;;;;;;AC3DH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS8hC,aAAT,CAAuBp3B,KAAvB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBhL,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAWmG,KAAK,GAAG,gEAAnB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAASq3B,kBAAT,CAA4B57B,aAA5B,EAA2C;AACxD,mFAAa,CAAb,EAAgBzG,SAAhB;AACA,YAAI2G,QAAQ,GAAGF,aAAa,IAAI,EAAhC;AACA,YAAIG,SAAS,GAAG,iEAAOD,QAAQ,CAACE,KAAhB,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAIC,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd,CALwD,CAOxD;;AACA,YAAI,EAAE+C,SAAS,CAAC/C,OAAV,MAAuBmD,OAAzB,CAAJ,EAAuC;AACrC,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAIuE,KAAK,GAAG,EAAZ;AACA,YAAIC,WAAW,GAAGN,SAAlB;AACAM,mBAAW,CAAC7G,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACA6G,mBAAW,CAAC4N,QAAZ,CAAqB,CAArB,EAAwB,CAAxB;;AACA,eAAO5N,WAAW,CAACrD,OAAZ,MAAyBmD,OAAhC,EAAyC;AACvCC,eAAK,CAACG,IAAN,CAAW,iEAAOF,WAAP,CAAX;AACAA,qBAAW,CAAC9G,WAAZ,CAAwB8G,WAAW,CAAC7B,WAAZ,KAA4B,CAApD;AACD;;AACD,eAAO4B,KAAP;;;;;;;;;;;;;;;;;;AChDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASq7B,eAAT,CAAyBhiC,IAAzB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASiiC,QAAT,CAAkBxiC,SAAlB,EAA6BwpB,kBAA7B,EAAiD;AAC9D,mFAAa,CAAb,EAAgBvpB,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIypB,aAAa,GAAG,iEAAOD,kBAAP,CAApB;AACA,eAAOjpB,IAAI,CAACuD,OAAL,KAAiB2lB,aAAa,CAAC3lB,OAAd,EAAxB;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAQ0D;;;AACnD,UAAI2+B,cAAc,GAAG,aAAa,UAAUh7B,OAAV,EAAmB;AAC1D,4FAAUg7B,cAAV,EAA0Bh7B,OAA1B;;AACA,YAAIC,MAAM,GAAG,uFAAa+6B,cAAb,CAAb;;AACA,iBAASA,cAAT,GAA0B;AACxB,cAAI96B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB86B,cAAtB;;AACA,eAAK,IAAI76B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa86B,cAAb,EAA6B,CAAC;AAC5Bx6B,aAAG,EAAE,OADuB;AAE5BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyCvJ,OAAzC,EAAkD;AACvD,gBAAIga,aAAa,GAAG,SAASA,aAAT,CAAuB7T,KAAvB,EAA8B;AAChD,kBAAI+vB,aAAa,GAAGl3B,IAAI,CAAC+D,KAAL,CAAW,CAACoD,KAAK,GAAG,CAAT,IAAc,CAAzB,IAA8B,CAAlD;AACA,qBAAO,CAACA,KAAK,GAAGnG,OAAO,CAACU,YAAhB,GAA+B,CAAhC,IAAqC,CAArC,GAAyCw1B,aAAhD;AACD,aAHD;;AAIA,oBAAQ/uB,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACE;AACA,uBAAO,2DAAS,+DAAaA,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAT,EAAiD2T,aAAjD,CAAP;AACF;;AACA,mBAAK,IAAL;AACE,uBAAO,2DAASzQ,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AAC9CwC,sBAAI,EAAE;AADwC,iBAAhC,CAAT,EAEHmR,aAFG,CAAP;AAGF;;AACA,mBAAK,KAAL;AACE,uBAAOzQ,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,aADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,IAMDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANN;AAUF;;AACA,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,QADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,CAAP;AAIF;;AACA,mBAAK,QAAL;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,OADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHN;AAOF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE,MADoB;AAE3BC,yBAAO,EAAE;AAFkB,iBAAtB,KAGDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,aADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CAHC,IAMDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,OADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CANC,IASDzL,KAAK,CAAC1I,GAAN,CAAUwF,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE,QADmB;AAE1BC,yBAAO,EAAE;AAFiB,iBAAtB,CATN;AAzCJ;AAuDD;AA9D2B,SAAD,EA+D1B;AACD9O,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACD;AAJA,SA/D0B,EAoE1B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkCnG,OAAlC,EAA2C;AAChDxB,gBAAI,GAAG,wEAAUA,IAAV,EAAgB2H,KAAhB,EAAuBnG,OAAvB,CAAP;AACAxB,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AANA,SApE0B,CAA7B;AA4EA,eAAOkiC,cAAP;AACD,OA3FwC,CA2FvC,iDA3FuC,CAAlC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAIC,eAAe,GAAG,aAAa,UAAUj7B,OAAV,EAAmB;AAC3D,4FAAUi7B,eAAV,EAA2Bj7B,OAA3B;;AACA,YAAIC,MAAM,GAAG,uFAAag7B,eAAb,CAAb;;AACA,iBAASA,eAAT,GAA2B;AACzB,cAAI/6B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB+6B,eAAtB;;AACA,eAAK,IAAI96B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa+6B,eAAb,EAA8B,CAAC;AAC7Bz6B,aAAG,EAAE,OADwB;AAE7BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgBy5B,OAApC,EAA6Cv6B,UAA7C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAb4B,SAAD,EAc3B;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAd2B,EAmB3B;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC,gBAAIO,KAAK,GAAGP,KAAK,IAAI,EAAT,GAAcA,KAAK,GAAG,EAAtB,GAA2BA,KAAvC;AACA3H,gBAAI,CAACqL,WAAL,CAAiBnD,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACA,mBAAOlI,IAAP;AACD;AANA,SAnB2B,CAA9B;AA2BA,eAAOmiC,eAAP;AACD,OA1CyC,CA0CxC,iDA1CwC,CAAnC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAIn/B,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCe,eAASq/B,OAAT,CAAiB5iC,SAAjB,EAA4B+B,OAA5B,EAAqC;AAClD,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIiD,IAAI,GAAG,sEAAY1C,IAAZ,EAAkBwB,OAAlB,EAA2B+B,OAA3B,KAAuC,0EAAgBvD,IAAhB,EAAsBwB,OAAtB,EAA+B+B,OAA/B,EAAlD,CAHkD,CAKlD;AACA;AACA;;AACA,eAAO/C,IAAI,CAACiD,KAAL,CAAWf,IAAI,GAAGM,oBAAlB,IAA0C,CAAjD;;;;;;;;;;;;;;;;;;ACrDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAASwe,GAAT,CAAaka,eAAb,EAA8B;AAC3C,mFAAa,CAAb,EAAgBh8B,SAAhB;AACA,YAAIi8B,UAAJ,CAF2C,CAG3C;;AACA,YAAID,eAAe,IAAI,OAAOA,eAAe,CAACE,OAAvB,KAAmC,UAA1D,EAAsE;AACpED,oBAAU,GAAGD,eAAb,CADoE,CAEpE;AACD,SAHD,MAGO,IAAI,kFAAQA,eAAR,MAA6B,QAA7B,IAAyCA,eAAe,KAAK,IAAjE,EAAuE;AAC5EC,oBAAU,GAAGp0B,KAAK,CAACpG,SAAN,CAAgBmR,KAAhB,CAAsBjR,IAAtB,CAA2Bq6B,eAA3B,CAAb;AACD,SAFM,MAEA;AACL;AACA,iBAAO,IAAI77B,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAI6I,MAAJ;AACA6uB,kBAAU,CAACC,OAAX,CAAmB,UAAUn8B,SAAV,EAAqB;AACtC,cAAImH,WAAW,GAAG,iEAAOnH,SAAP,CAAlB;;AACA,cAAIqN,MAAM,KAAKsK,SAAX,IAAwBtK,MAAM,GAAGlG,WAAjC,IAAgDvC,KAAK,CAACuC,WAAW,CAAC1G,OAAZ,EAAD,CAAzD,EAAkF;AAChF4M,kBAAM,GAAGlG,WAAT;AACD;AACF,SALD;AAMA,eAAOkG,MAAM,IAAI,IAAIjN,IAAJ,CAASoE,GAAT,CAAjB;;;;;;;;;;;;;;;;;;AC7CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACe,eAASq+B,WAAT,CAAqBvhC,MAArB,EAA6B;AAC1C,eAAO,iEAAO,EAAP,EAAWA,MAAX,CAAP;;;;;;;;;;;;;;;;;;ACFF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASwhC,YAAT,CAAsBviC,IAAtB,EAA4B;AACzC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOO,UAAIwiC,SAAS,GAAG,aAAa,UAAUt7B,OAAV,EAAmB;AACrD,4FAAUs7B,SAAV,EAAqBt7B,OAArB;;AACA,YAAIC,MAAM,GAAG,uFAAaq7B,SAAb,CAAb;;AACA,iBAASA,SAAT,GAAqB;AACnB,cAAIp7B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBo7B,SAAtB;;AACA,eAAK,IAAIn7B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,GAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAao7B,SAAb,EAAwB,CAAC;AACvB96B,aAAG,EAAE,OADkB;AAEvBC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE;AACA,mBAAK,GAAL;AACA,mBAAK,IAAL;AACA,mBAAK,KAAL;AACE,uBAAOoC,KAAK,CAAC0a,GAAN,CAAU5d,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE;AADoB,iBAAtB,KAEDxL,KAAK,CAAC0a,GAAN,CAAU5d,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE;AADmB,iBAAtB,CAFN;AAKF;;AACA,mBAAK,OAAL;AACE,uBAAOxL,KAAK,CAAC0a,GAAN,CAAU5d,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE;AADoB,iBAAtB,CAAP;AAGF;;AACA,mBAAK,MAAL;AACA;AACE,uBAAOxL,KAAK,CAAC0a,GAAN,CAAU5d,UAAV,EAAsB;AAC3B0O,uBAAK,EAAE;AADoB,iBAAtB,KAEDxL,KAAK,CAAC0a,GAAN,CAAU5d,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE;AADmB,iBAAtB,CAFC,IAIDxL,KAAK,CAAC0a,GAAN,CAAU5d,UAAV,EAAsB;AAC1B0O,uBAAK,EAAE;AADmB,iBAAtB,CAJN;AAlBJ;AA0BD;AA7BsB,SAAD,EA8BrB;AACD7O,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmB+O,KAAnB,EAA0BpH,KAA1B,EAAiC;AACtCoH,iBAAK,CAAC0W,GAAN,GAAY9d,KAAZ;AACA3H,gBAAI,CAAC8S,cAAL,CAAoBnL,KAApB,EAA2B,CAA3B,EAA8B,CAA9B;AACA3H,gBAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,mBAAOrL,IAAP;AACD;AAPA,SA9BqB,CAAxB;AAuCA,eAAOwiC,SAAP;AACD,OAtDmC,CAsDlC,iDAtDkC,CAA7B;;;;;;;;;;;;;;;;;ACPP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCe,eAASC,WAAT,CAAqBv/B,aAArB,EAAoCC,cAApC,EAAoD;AACjE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAIT,IAAI,GAAGkH,QAAQ,CAACrG,OAAT,KAAqBsG,SAAS,CAACtG,OAAV,EAAhC;;AACA,YAAIb,IAAI,GAAG,CAAX,EAAc;AACZ,iBAAO,CAAC,CAAR;AACD,SAFD,MAEO,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,iBAAO,CAAP,CADmB,CAEnB;AACD,SAHM,MAGA;AACL,iBAAOA,IAAP;AACD;;;;;;;;;;;;;;;;;;AC9CH;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASggC,eAAT,CAAyBlmB,CAAzB,EAA4B;AACzCkmB,uBAAe,GAAGxhC,MAAM,CAACyhC,cAAP,GAAwBzhC,MAAM,CAAC0hC,cAAP,CAAsBC,IAAtB,EAAxB,GAAuD,SAASH,eAAT,CAAyBlmB,CAAzB,EAA4B;AACnG,iBAAOA,CAAC,CAACsmB,SAAF,IAAe5hC,MAAM,CAAC0hC,cAAP,CAAsBpmB,CAAtB,CAAtB;AACD,SAFD;AAGA,eAAOkmB,eAAe,CAAClmB,CAAD,CAAtB;;;;;;;;;;;;;;;;;;ACJF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASumB,eAAT,CAAyBtjC,SAAzB,EAAoCqD,WAApC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,0EAAgBrD,SAAhB,EAA2B,CAACsD,MAA5B,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASigC,gBAAT,CAA0BvjC,SAA1B,EAAqC;AAClD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,wEAAcD,SAAd,EAAyB;AAC9ByC,sBAAY,EAAE;AADgB,SAAzB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAAS+gC,aAAT,CAAuBxjC,SAAvB,EAAkC+B,OAAlC,EAA2C;AACxD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIC,YAAY,GAAG,wEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB,CAJwD,CAMxD;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,sCAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAAC4V,MAAL,EAAV;AACA,YAAIlT,IAAI,GAAG,CAACL,GAAG,GAAGH,YAAN,GAAqB,CAAC,CAAtB,GAA0B,CAA3B,IAAgC,CAAhC,IAAqCG,GAAG,GAAGH,YAA3C,CAAX;AACAlC,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACAC,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAA9B;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;AC9CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASkjC,SAAT,CAAmBzjC,SAAnB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAAC4V,MAAL,EAAV;AACA,eAAOvT,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAA5B;;;;;;;;;;;;;;;;;;ACvBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCe,eAASyF,GAAT,CAAarI,SAAb,EAAwBwwB,MAAxB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBvwB,SAAhB;;AACA,YAAI,kFAAQuwB,MAAR,MAAoB,QAApB,IAAgCA,MAAM,KAAK,IAA/C,EAAqD;AACnD,gBAAM,IAAI7tB,UAAJ,CAAe,oCAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX,CAL6C,CAO7C;;AACA,YAAI4E,KAAK,CAACrE,IAAI,CAACuD,OAAL,EAAD,CAAT,EAA2B;AACzB,iBAAO,IAAI1D,IAAJ,CAASoE,GAAT,CAAP;AACD;;AACD,YAAIgsB,MAAM,CAACtwB,IAAP,IAAe,IAAnB,EAAyB;AACvBK,cAAI,CAACF,WAAL,CAAiBmwB,MAAM,CAACtwB,IAAxB;AACD;;AACD,YAAIswB,MAAM,CAACprB,KAAP,IAAgB,IAApB,EAA0B;AACxB7E,cAAI,GAAG,mEAASA,IAAT,EAAeiwB,MAAM,CAACprB,KAAtB,CAAP;AACD;;AACD,YAAIorB,MAAM,CAACjwB,IAAP,IAAe,IAAnB,EAAyB;AACvBA,cAAI,CAACC,OAAL,CAAa,wEAAUgwB,MAAM,CAACjwB,IAAjB,CAAb;AACD;;AACD,YAAIiwB,MAAM,CAAC/nB,KAAP,IAAgB,IAApB,EAA0B;AACxBlI,cAAI,CAACD,QAAL,CAAc,wEAAUkwB,MAAM,CAAC/nB,KAAjB,CAAd;AACD;;AACD,YAAI+nB,MAAM,CAAChmB,OAAP,IAAkB,IAAtB,EAA4B;AAC1BjK,cAAI,CAACqU,UAAL,CAAgB,wEAAU4b,MAAM,CAAChmB,OAAjB,CAAhB;AACD;;AACD,YAAIgmB,MAAM,CAAC3lB,OAAP,IAAkB,IAAtB,EAA4B;AAC1BtK,cAAI,CAAC+I,UAAL,CAAgB,wEAAUknB,MAAM,CAAC3lB,OAAjB,CAAhB;AACD;;AACD,YAAI2lB,MAAM,CAAC1qB,YAAP,IAAuB,IAA3B,EAAiC;AAC/BvF,cAAI,CAACk3B,eAAL,CAAqB,wEAAUjH,MAAM,CAAC1qB,YAAjB,CAArB;AACD;;AACD,eAAOvF,IAAP;;;;;;;;;;;;;;;;;;AC3EF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAI2qB,mBAAmB,GAAG,QAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,eAASwY,wBAAT,CAAkCjgC,aAAlC,EAAiDC,cAAjD,EAAiE;AAC9E,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAI0jC,cAAc,GAAG,qEAAWlgC,aAAX,CAArB;AACA,YAAImgC,eAAe,GAAG,qEAAWlgC,cAAX,CAAtB;AACA,YAAIG,aAAa,GAAG8/B,cAAc,CAAC7/B,OAAf,KAA2B,8FAAgC6/B,cAAhC,CAA/C;AACA,YAAI5/B,cAAc,GAAG6/B,eAAe,CAAC9/B,OAAhB,KAA4B,8FAAgC8/B,eAAhC,CAAjD,CAL8E,CAO9E;AACA;AACA;;AACA,eAAO7iC,IAAI,CAACiD,KAAL,CAAW,CAACH,aAAa,GAAGE,cAAjB,IAAmCmnB,mBAA9C,CAAP;;;;;;;;;;;;;;;;;;AC7CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGe,eAAS2Y,iBAAT,CAA2B7jC,SAA3B,EAAsC;AACnD,+EAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAACoP,cAAL,EAAX;AACA,YAAI+M,yBAAyB,GAAG,IAAItc,IAAJ,CAAS,CAAT,CAAhC;AACAsc,iCAAyB,CAACrJ,cAA1B,CAAyCnT,IAAI,GAAG,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD;AACAwc,iCAAyB,CAAC9Q,WAA1B,CAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C;AACA,YAAIyM,eAAe,GAAG,4EAAkBqE,yBAAlB,CAAtB;AACA,YAAIC,yBAAyB,GAAG,IAAIvc,IAAJ,CAAS,CAAT,CAAhC;AACAuc,iCAAyB,CAACtJ,cAA1B,CAAyCnT,IAAzC,EAA+C,CAA/C,EAAkD,CAAlD;AACAyc,iCAAyB,CAAC/Q,WAA1B,CAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C;AACA,YAAI2M,eAAe,GAAG,4EAAkBoE,yBAAlB,CAAtB;;AACA,YAAIpc,IAAI,CAACuD,OAAL,MAAkBuU,eAAe,CAACvU,OAAhB,EAAtB,EAAiD;AAC/C,iBAAO5D,IAAI,GAAG,CAAd;AACD,SAFD,MAEO,IAAIK,IAAI,CAACuD,OAAL,MAAkByU,eAAe,CAACzU,OAAhB,EAAtB,EAAiD;AACtD,iBAAO5D,IAAP;AACD,SAFM,MAEA;AACL,iBAAOA,IAAI,GAAG,CAAd;AACD;;;;;;;;;;;;;;;;;;ACrBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS4jC,YAAT,CAAsBvjC,IAAtB,EAA4B;AACzC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASwjC,QAAT,CAAkB/jC,SAAlB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBmW,MAAlB,OAA+B,CAAtC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS6tB,gBAAT,CAA0BzjC,IAA1B,EAAgC;AAC7C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAI0jC,YAAY,GAAG,aAAa,UAAUx8B,OAAV,EAAmB;AACxD,4FAAUw8B,YAAV,EAAwBx8B,OAAxB;;AACA,YAAIC,MAAM,GAAG,uFAAau8B,YAAb,CAAb;;AACA,iBAASA,YAAT,GAAwB;AACtB,cAAIt8B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBs8B,YAAtB;;AACA,eAAK,IAAIr8B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAas8B,YAAb,EAA2B,CAAC;AAC1Bh8B,aAAG,EAAE,OADqB;AAE1BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgBvD,MAApC,EAA4CyC,UAA5C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAbyB,SAAD,EAcxB;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAdwB,EAmBxB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAAC2jC,aAAL,CAAmBh8B,KAAnB,EAA0B,CAA1B;AACA,mBAAO3H,IAAP;AACD;AALA,SAnBwB,CAA3B;AA0BA,eAAO0jC,YAAP;AACD,OAzCsC,CAyCrC,iDAzCqC,CAAhC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASE,SAAT,CAAmBnkC,SAAnB,EAA8B8B,QAA9B,EAAwC;AACrD,mFAAa,CAAb,EAAgB7B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAG,wEAAUd,QAAV,CAAV;AACA,YAAIe,UAAU,GAAG,oEAAUtC,IAAV,CAAjB;AACA,YAAI0C,IAAI,GAAGL,GAAG,GAAGC,UAAjB;AACA,eAAO,kEAAQtC,IAAR,EAAc0C,IAAd,CAAP;;;;;;;;;;;;;;;;;;AC/BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASmhC,cAAT,CAAwB37B,KAAxB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBxI,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAW2D,KAAK,GAAG,iEAAnB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAI47B,YAAY,GAAG,aAAa,UAAU58B,OAAV,EAAmB;AACxD,4FAAU48B,YAAV,EAAwB58B,OAAxB;;AACA,YAAIC,MAAM,GAAG,uFAAa28B,YAAb,CAAb;;AACA,iBAASA,YAAT,GAAwB;AACtB,cAAI18B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB08B,YAAtB;;AACA,eAAK,IAAIz8B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa08B,YAAb,EAA2B,CAAC;AAC1Bp8B,aAAG,EAAE,OADqB;AAE1BC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACE,uBAAO,sEAAoB,8DAAgBzD,MAApC,EAA4C2C,UAA5C,CAAP;;AACF,mBAAK,IAAL;AACE,uBAAOkD,KAAK,CAACE,aAAN,CAAoBpD,UAApB,EAAgC;AACrCwC,sBAAI,EAAE;AAD+B,iBAAhC,CAAP;;AAGF;AACE,uBAAO,+DAAa1B,KAAK,CAAChI,MAAnB,EAA2BkH,UAA3B,CAAP;AARJ;AAUD;AAbyB,SAAD,EAcxB;AACDH,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBnD,KAAlB,EAAyBJ,KAAzB,EAAgC;AACrC,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACD;AAJA,SAdwB,EAmBxB;AACDD,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAAC+jC,aAAL,CAAmBp8B,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,mBAAO3H,IAAP;AACD;AALA,SAnBwB,CAA3B;AA0BA,eAAO8jC,YAAP;AACD,OAzCsC,CAyCrC,iDAzCqC,CAAhC;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;AASA,UAAI3hC,MAAM,GAAG;AACX6hC,YAAI,EAAE,OADK;AAEXz6B,sBAAc,EAAE,oEAFL;AAGX+hB,kBAAU,EAAE,gEAHD;AAIX5iB,sBAAc,EAAE,oEAJL;AAKX8c,gBAAQ,EAAE,8DALC;AAMXza,aAAK,EAAE,2DANI;AAOXvJ,eAAO,EAAE;AACPU,sBAAY,EAAE;AAAE;AADT;AAEP0V,+BAAqB,EAAE;AAFhB;AAPE,OAAb;AAYe;;AAAA,uCAAAzV,MAAA;;;;;;;;;;;;;;;;AC1Bf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAmBe,eAAS8hC,eAAT,GAA2B;AACxC,YAAIj9B,GAAG,GAAG,IAAInH,IAAJ,EAAV;AACA,YAAIF,IAAI,GAAGqH,GAAG,CAACjC,WAAJ,EAAX;AACA,YAAIF,KAAK,GAAGmC,GAAG,CAAClC,QAAJ,EAAZ;AACA,YAAIzC,GAAG,GAAG2E,GAAG,CAAC9G,OAAJ,EAAV;AACA,YAAIF,IAAI,GAAG,IAAIH,IAAJ,CAAS,CAAT,CAAX;AACAG,YAAI,CAACF,WAAL,CAAiBH,IAAjB,EAAuBkF,KAAvB,EAA8BxC,GAAG,GAAG,CAApC;AACArC,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+Be,eAASkkC,mBAAT,CAA6Bt6B,QAA7B,EAAuCC,SAAvC,EAAkDrI,OAAlD,EAA2D;AACxE,mFAAa,CAAb,EAAgB9B,SAAhB;;AACA,YAAIgD,IAAI,GAAG,mFAAyBkH,QAAzB,EAAmCC,SAAnC,IAAgD,wEAA3D;;AACA,eAAO,wFAAkBrI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAA5E,EAA4FpH,IAA5F,CAAP;;;;;;;;;;;;;;;;;;ACtCF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASyhC,YAAT,CAAsB5V,QAAtB,EAAgCjnB,IAAhC,EAAsC;AACnD,YAAIA,IAAI,CAAC3G,MAAL,GAAc4tB,QAAlB,EAA4B;AAC1B,gBAAM,IAAIvtB,SAAJ,CAAcutB,QAAQ,GAAG,WAAX,IAA0BA,QAAQ,GAAG,CAAX,GAAe,GAAf,GAAqB,EAA/C,IAAqD,sBAArD,GAA8EjnB,IAAI,CAAC3G,MAAnF,GAA4F,UAA1G,CAAN;AACD;;;;;;;;;;;;;;;;;;ACHH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASyjC,UAAT,CAAoB3kC,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIoF,KAAK,GAAG7E,IAAI,CAAC8E,QAAL,EAAZ;AACA9E,YAAI,CAACF,WAAL,CAAiBE,IAAI,CAAC+E,WAAL,EAAjB,EAAqCF,KAAK,GAAG,CAA7C,EAAgD,CAAhD;AACA7E,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASqkC,UAAT,CAAoB5kC,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,oEAAUD,SAAV,EAAqB,kEAAQI,IAAI,CAACmH,GAAL,EAAR,EAAoB,CAApB,CAArB,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASs9B,UAAT,CAAoBphC,aAApB,EAAmCC,cAAnC,EAAmD;AAChE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,eAAOyG,QAAQ,CAAC7E,WAAT,OAA2B8E,SAAS,CAAC9E,WAAV,EAAlC;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS8xB,cAAT,CAAwBp3B,SAAxB,EAAmC;AAChD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIoF,KAAK,GAAG7E,IAAI,CAAC8E,QAAL,EAAZ;AACA9E,YAAI,CAACF,WAAL,CAAiBE,IAAI,CAAC+E,WAAL,EAAjB,EAAqCF,KAAK,GAAG,CAA7C,EAAgD,CAAhD;AACA7E,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;AAiBe,eAASukC,aAAT,CAAuB9kC,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;;AACA,YAAIsK,MAAM,CAAC,IAAIlK,IAAJ,CAASG,IAAT,CAAD,CAAN,KAA2B,cAA/B,EAA+C;AAC7C,iBAAOiE,GAAP;AACD;;AACD,eAAO,qEAAWjE,IAAX,IAAmB,GAAnB,GAAyB,GAAhC;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASwkC,cAAT,CAAwBxkC,IAAxB,EAA8BwB,OAA9B,EAAuC;AACpD,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIC,YAAY,GAAG,wEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIqiC,iBAAiB,GAAG,kEAAQzkC,IAAR,CAAxB;AACA,YAAIqE,KAAK,CAACogC,iBAAD,CAAT,EAA8B,OAAOxgC,GAAP;AAC9B,YAAIygC,YAAY,GAAG,iEAAO,uEAAa1kC,IAAb,CAAP,CAAnB;AACA,YAAI2kC,kBAAkB,GAAGziC,YAAY,GAAGwiC,YAAxC;AACA,YAAIC,kBAAkB,IAAI,CAA1B,EAA6BA,kBAAkB,IAAI,CAAtB;AAC7B,YAAIC,2BAA2B,GAAGH,iBAAiB,GAAGE,kBAAtD;AACA,eAAOnkC,IAAI,CAAC8D,IAAL,CAAUsgC,2BAA2B,GAAG,CAAxC,IAA6C,CAApD;;;;;;;;;;;;;;;;;;ACzCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCe,eAASC,kBAAT,CAA4B1+B,aAA5B,EAA2C3E,OAA3C,EAAoD;AACjE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAI2G,QAAQ,GAAGF,aAAa,IAAI,EAAhC;AACA,YAAIG,SAAS,GAAG,iEAAOD,QAAQ,CAACE,KAAhB,CAAhB;AACA,YAAIC,OAAO,GAAG,iEAAOH,QAAQ,CAACI,GAAhB,CAAd;AACA,YAAIC,OAAO,GAAGF,OAAO,CAACjD,OAAR,EAAd,CALiE,CAOjE;;AACA,YAAI,EAAE+C,SAAS,CAAC/C,OAAV,MAAuBmD,OAAzB,CAAJ,EAAuC;AACrC,gBAAM,IAAItE,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAI0iC,aAAa,GAAG,sEAAYx+B,SAAZ,EAAuB9E,OAAvB,CAApB;AACA,YAAIujC,WAAW,GAAG,sEAAYv+B,OAAZ,EAAqBhF,OAArB,CAAlB,CAZiE,CAcjE;;AACAsjC,qBAAa,CAAC/kC,QAAd,CAAuB,EAAvB;AACAglC,mBAAW,CAAChlC,QAAZ,CAAqB,EAArB;AACA2G,eAAO,GAAGq+B,WAAW,CAACxhC,OAAZ,EAAV;AACA,YAAImS,KAAK,GAAG,EAAZ;AACA,YAAIsvB,WAAW,GAAGF,aAAlB;;AACA,eAAOE,WAAW,CAACzhC,OAAZ,MAAyBmD,OAAhC,EAAyC;AACvCs+B,qBAAW,CAACjlC,QAAZ,CAAqB,CAArB;AACA2V,eAAK,CAAC5O,IAAN,CAAW,iEAAOk+B,WAAP,CAAX;AACAA,qBAAW,GAAG,mEAASA,WAAT,EAAsB,CAAtB,CAAd;AACAA,qBAAW,CAACjlC,QAAZ,CAAqB,EAArB;AACD;;AACD,eAAO2V,KAAP;;;;;;;;;;;;;;;;;;ACjEF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAASuvB,MAAT,CAAgBxlC,SAAhB,EAA2B8B,QAA3B,EAAqCC,OAArC,EAA8C;AAC3D,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,qBAAxB,EAA+CC,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAIC,YAAY,GAAG,wEAAU,CAACT,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACI,YAAxb,MAA0c,IAA1c,IAAkdP,KAAK,KAAK,KAAK,CAAje,GAAqeA,KAAre,GAA6eM,cAAc,CAACC,YAArgB,MAAuhB,IAAvhB,IAA+hBR,KAAK,KAAK,KAAK,CAA9iB,GAAkjBA,KAAljB,GAA0jB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAACE,YAAnzB,MAAq0B,IAAr0B,IAA60BT,IAAI,KAAK,KAAK,CAA31B,GAA+1BA,IAA/1B,GAAs2B,CAAh3B,CAAnB,CAJ2D,CAM3D;;AACA,YAAI,EAAES,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAIpC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAG,wEAAUd,QAAV,CAAV;AACA,YAAIe,UAAU,GAAGtC,IAAI,CAAC4V,MAAL,EAAjB;AACA,YAAIpT,SAAS,GAAGH,GAAG,GAAG,CAAtB;AACA,YAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AACA,YAAIoR,KAAK,GAAG,IAAI1R,YAAhB;AACA,YAAIQ,IAAI,GAAGL,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAjB,GAAqBA,GAAG,GAAG,CAACC,UAAU,GAAGsR,KAAd,IAAuB,CAAlD,GAAsD,CAACnR,QAAQ,GAAGmR,KAAZ,IAAqB,CAArB,GAAyB,CAACtR,UAAU,GAAGsR,KAAd,IAAuB,CAAjH;AACA,eAAO,kEAAQ5T,IAAR,EAAc0C,IAAd,CAAP;;;;;;;;;;;;;;;;;;ACjDF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASwiC,eAAT,CAAyB59B,IAAzB,EAA+B;AAC5C,eAAO,UAAU69B,UAAV,EAAsB3jC,OAAtB,EAA+B;AACpC,cAAIgV,OAAO,GAAGhV,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACgV,OAAlD,GAA4DzM,MAAM,CAACvI,OAAO,CAACgV,OAAT,CAAlE,GAAsF,YAApG;AACA,cAAI4uB,WAAJ;;AACA,cAAI5uB,OAAO,KAAK,YAAZ,IAA4BlP,IAAI,CAAC8oB,gBAArC,EAAuD;AACrD,gBAAIF,YAAY,GAAG5oB,IAAI,CAAC+oB,sBAAL,IAA+B/oB,IAAI,CAAC4oB,YAAvD;AACA,gBAAI3Z,KAAK,GAAG/U,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC+U,KAAlD,GAA0DxM,MAAM,CAACvI,OAAO,CAAC+U,KAAT,CAAhE,GAAkF2Z,YAA9F;AACAkV,uBAAW,GAAG99B,IAAI,CAAC8oB,gBAAL,CAAsB7Z,KAAtB,KAAgCjP,IAAI,CAAC8oB,gBAAL,CAAsBF,YAAtB,CAA9C;AACD,WAJD,MAIO;AACL,gBAAImV,aAAa,GAAG/9B,IAAI,CAAC4oB,YAAzB;;AACA,gBAAIoV,MAAM,GAAG9jC,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC+U,KAAlD,GAA0DxM,MAAM,CAACvI,OAAO,CAAC+U,KAAT,CAAhE,GAAkFjP,IAAI,CAAC4oB,YAApG;;AACAkV,uBAAW,GAAG99B,IAAI,CAAC2oB,MAAL,CAAYqV,MAAZ,KAAuBh+B,IAAI,CAAC2oB,MAAL,CAAYoV,aAAZ,CAArC;AACD;;AACD,cAAI3P,KAAK,GAAGpuB,IAAI,CAAC6oB,gBAAL,GAAwB7oB,IAAI,CAAC6oB,gBAAL,CAAsBgV,UAAtB,CAAxB,GAA4DA,UAAxE,CAZoC,CAapC;;AACA,iBAAOC,WAAW,CAAC1P,KAAD,CAAlB;AACD,SAfD;;;;;;;;;;;;;;;;;;ACDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS6P,cAAT,CAAwBvlC,IAAxB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,sEAAYM,IAAZ,EAAkB,CAAlB,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAIgD,oBAAoB,GAAG,SAA3B;;AACe,eAASwiC,aAAT,CAAuB/lC,SAAvB,EAAkC;AAC/C,+EAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIiD,IAAI,GAAG,4EAAkB1C,IAAlB,EAAwBuD,OAAxB,KAAoC,gFAAsBvD,IAAtB,EAA4BuD,OAA5B,EAA/C,CAH+C,CAK/C;AACA;AACA;;AACA,eAAO/C,IAAI,CAACiD,KAAL,CAAWf,IAAI,GAAGM,oBAAlB,IAA0C,CAAjD;;;;;;;;;;;;;;;;;;ACbF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;AAmBe,eAASyiC,UAAT,GAAsB;AACnC,eAAO,mEAAS5lC,IAAI,CAACmH,GAAL,EAAT,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,UAAI0+B,MAAM,GAAG,aAAa,YAAY;AAC3C,iBAASA,MAAT,GAAkB;AAChB,oGAAgB,IAAhB,EAAsBA,MAAtB;AACA,oGAAgB,IAAhB,EAAsB,oBAAtB,EAA4C,KAAK,CAAjD;AACA,oGAAgB,IAAhB,EAAsB,UAAtB,EAAkC,KAAK,CAAvC;AACA,oGAAgB,IAAhB,EAAsB,aAAtB,EAAqC,KAAK,CAA1C;AACD;;AACD,+FAAaA,MAAb,EAAqB,CAAC;AACpBh+B,aAAG,EAAE,KADe;AAEpBC,eAAK,EAAE,SAASotB,GAAT,CAAaltB,UAAb,EAAyBc,KAAzB,EAAgCoC,KAAhC,EAAuCvJ,OAAvC,EAAgD;AACrD,gBAAIsL,MAAM,GAAG,KAAKlF,KAAL,CAAWC,UAAX,EAAuBc,KAAvB,EAA8BoC,KAA9B,EAAqCvJ,OAArC,CAAb;;AACA,gBAAI,CAACsL,MAAL,EAAa;AACX,qBAAO,IAAP;AACD;;AACD,mBAAO;AACLmoB,oBAAM,EAAE,IAAI,sDAAJ,CAAgBnoB,MAAM,CAACnF,KAAvB,EAA8B,KAAKuD,QAAnC,EAA6C,KAAKpD,GAAlD,EAAuD,KAAK0tB,QAA5D,EAAsE,KAAKG,WAA3E,CADH;AAEL1c,kBAAI,EAAEnM,MAAM,CAACmM;AAFR,aAAP;AAID;AAXmB,SAAD,EAYlB;AACDvR,aAAG,EAAE,UADJ;AAEDC,eAAK,EAAE,SAASuD,QAAT,CAAkBy6B,QAAlB,EAA4BC,MAA5B,EAAoC/8B,QAApC,EAA8C;AACnD,mBAAO,IAAP;AACD;AAJA,SAZkB,CAArB;AAkBA,eAAO68B,MAAP;AACD,OA1BgC,EAA1B;;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEe,eAASG,0BAAT,CAAoChV,IAApC,EAA0CxvB,IAA1C,EAAgD;AAC7D,YAAIA,IAAI,KAAK,2DAAQA,IAAR,MAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AACtE,iBAAOA,IAAP;AACD,SAFD,MAEO,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAC1B,gBAAM,IAAIL,SAAJ,CAAc,0DAAd,CAAN;AACD;;AACD,eAAO,0EAAsB6vB,IAAtB,CAAP;;;;;;;;;;;;;;;;;;ACRF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASiV,iBAAT,CAA2Bl8B,QAA3B,EAAqCC,SAArC,EAAgDrI,OAAhD,EAAyD;AACtE,mFAAa,CAAb,EAAgB9B,SAAhB;;AACA,YAAIgD,IAAI,GAAG,mFAAyBkH,QAAzB,EAAmCC,SAAnC,IAAgD,sEAA3D;;AACA,eAAO,wFAAkBrI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAA5E,EAA4FpH,IAA5F,CAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASqjC,aAAT,CAAuB/lC,IAAvB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,kEAAQM,IAAR,EAAc,CAAd,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAIgmC,UAAU,GAAG,aAAa,UAAU9+B,OAAV,EAAmB;AACtD,4FAAU8+B,UAAV,EAAsB9+B,OAAtB;;AACA,YAAIC,MAAM,GAAG,uFAAa6+B,UAAb,CAAb;;AACA,iBAASA,UAAT,GAAsB;AACpB,cAAI5+B,KAAJ;;AACA,oGAAgB,IAAhB,EAAsB4+B,UAAtB;;AACA,eAAK,IAAI3+B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDJ,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAYoG,KAAZ,CAAkBN,MAAlB,EAA0B,CAAC,IAAD,EAAOzC,MAAP,CAAc4C,IAAd,CAA1B,CAAR;AACA,oGAAgB,iGAAuBF,KAAvB,CAAhB,EAA+C,UAA/C,EAA2D,EAA3D;AACA,oGAAgB,iGAAuBA,KAAvB,CAAhB,EAA+C,oBAA/C,EAAqE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAArE;AACA,iBAAOA,KAAP;AACD;;AACD,+FAAa4+B,UAAb,EAAyB,CAAC;AACxBt+B,aAAG,EAAE,OADmB;AAExBC,eAAK,EAAE,SAASC,KAAT,CAAeC,UAAf,EAA2Bc,KAA3B,EAAkCoC,KAAlC,EAAyC;AAC9C,oBAAQpC,KAAR;AACE,mBAAK,GAAL;AACA,mBAAK,IAAL;AACA,mBAAK,KAAL;AACE,uBAAOoC,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,aAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,KAGDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,QADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CAHN;;AAOF,mBAAK,OAAL;AACE,uBAAOzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,QAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,CAAP;;AAIF,mBAAK,MAAL;AACA;AACE,uBAAOzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AACjC0O,uBAAK,EAAE,MAD0B;AAEjCC,yBAAO,EAAE;AAFwB,iBAA5B,KAGDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,aADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CAHC,IAMDzL,KAAK,CAACuL,SAAN,CAAgBzO,UAAhB,EAA4B;AAChC0O,uBAAK,EAAE,QADyB;AAEhCC,yBAAO,EAAE;AAFuB,iBAA5B,CANN;AAlBJ;AA6BD;AAhCuB,SAAD,EAiCtB;AACD9O,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmBgI,MAAnB,EAA2BL,KAA3B,EAAkC;AACvC3H,gBAAI,CAACqL,WAAL,CAAiB,uEAAqB1D,KAArB,CAAjB,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD;AACA,mBAAO3H,IAAP;AACD;AALA,SAjCsB,CAAzB;AAwCA,eAAOgmC,UAAP;AACD,OAvDoC,CAuDnC,iDAvDmC,CAA9B;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASxxB,QAAT,CAAkB/U,SAAlB,EAA6BwmC,UAA7B,EAAyC;AACtD,mFAAa,CAAb,EAAgBvmC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIoF,KAAK,GAAG,wEAAUohC,UAAV,CAAZ;AACA,YAAItmC,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA,YAAI1C,GAAG,GAAGrC,IAAI,CAACE,OAAL,EAAV;AACA,YAAIgmC,oBAAoB,GAAG,IAAIrmC,IAAJ,CAAS,CAAT,CAA3B;AACAqmC,4BAAoB,CAACpmC,WAArB,CAAiCH,IAAjC,EAAuCkF,KAAvC,EAA8C,EAA9C;AACAqhC,4BAAoB,CAACnmC,QAArB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC;AACA,YAAI8hC,WAAW,GAAG,yEAAeqE,oBAAf,CAAlB,CATsD,CAUtD;AACA;;AACAlmC,YAAI,CAACwU,QAAL,CAAc3P,KAAd,EAAqBrE,IAAI,CAACghB,GAAL,CAASnf,GAAT,EAAcw/B,WAAd,CAArB;AACA,eAAO7hC,IAAP;;;;;;;;;;;;;;;;;;ACnCF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEe,eAASmmC,cAAT,CAAwBC,GAAxB,EAA6B;AAC1C,YAAI1+B,GAAG,GAAG,gEAAY0+B,GAAZ,EAAiB,QAAjB,CAAV;AACA,eAAO,2DAAQ1+B,GAAR,MAAiB,QAAjB,GAA4BA,GAA5B,GAAkCqC,MAAM,CAACrC,GAAD,CAA/C;;;;;;;;;;;;;;;;;;ACJF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKe,eAAS2+B,kBAAT,CAA4B5mC,SAA5B,EAAuC+B,OAAvC,EAAgD;AAC7D,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBgW,qBAAxB,EAA+C9V,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,+EAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,oFAArB;AACA,YAAI2V,qBAAqB,GAAG,oEAAU,CAACnW,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACgW,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC8V,qBAAjc,MAA4d,IAA5d,IAAoejW,KAAK,KAAK,KAAK,CAAnf,GAAufA,KAAvf,GAA+fM,cAAc,CAAC2V,qBAAvhB,MAAkjB,IAAljB,IAA0jBlW,KAAK,KAAK,KAAK,CAAzkB,GAA6kBA,KAA7kB,GAAqlB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAA90B,MAAy2B,IAAz2B,IAAi3BnW,IAAI,KAAK,KAAK,CAA/3B,GAAm4BA,IAAn4B,GAA04B,CAAp5B,CAA5B;AACA,YAAI9B,IAAI,GAAG,yEAAeF,SAAf,EAA0B+B,OAA1B,CAAX;AACA,YAAI8kC,SAAS,GAAG,IAAIzmC,IAAJ,CAAS,CAAT,CAAhB;AACAymC,iBAAS,CAACxzB,cAAV,CAAyBnT,IAAzB,EAA+B,CAA/B,EAAkCiY,qBAAlC;AACA0uB,iBAAS,CAACj7B,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACA,YAAIrL,IAAI,GAAG,yEAAesmC,SAAf,EAA0B9kC,OAA1B,CAAX;AACA,eAAOxB,IAAP;;;;;;;;;;;;;;;;;;ACfF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAIumC,sBAAsB,GAAG,EAA7B;;AACO,UAAIC,MAAM,GAAG,aAAa,YAAY;AAC3C,iBAASA,MAAT,GAAkB;AAChB,oGAAgB,IAAhB,EAAsBA,MAAtB;AACA,oGAAgB,IAAhB,EAAsB,UAAtB,EAAkC,KAAK,CAAvC;AACA,oGAAgB,IAAhB,EAAsB,aAAtB,EAAqC,CAArC;AACD;;AACD,+FAAaA,MAAb,EAAqB,CAAC;AACpB9+B,aAAG,EAAE,UADe;AAEpBC,eAAK,EAAE,SAASuD,QAAT,CAAkBy6B,QAAlB,EAA4B98B,QAA5B,EAAsC;AAC3C,mBAAO,IAAP;AACD;AAJmB,SAAD,CAArB;AAMA,eAAO29B,MAAP;AACD,OAbgC,EAA1B;;AAcA,UAAIC,WAAW,GAAG,aAAa,UAAUC,OAAV,EAAmB;AACvD,4FAAUD,WAAV,EAAuBC,OAAvB;;AACA,YAAIv/B,MAAM,GAAG,uFAAas/B,WAAb,CAAb;;AACA,iBAASA,WAAT,CAAqB9+B,KAArB,EAA4Bg/B,aAA5B,EAA2CnY,QAA3C,EAAqDgH,QAArD,EAA+DG,WAA/D,EAA4E;AAC1E,cAAIvuB,KAAJ;;AACA,oGAAgB,IAAhB,EAAsBq/B,WAAtB;AACAr/B,eAAK,GAAGD,MAAM,CAAC9F,IAAP,CAAY,IAAZ,CAAR;AACA+F,eAAK,CAACO,KAAN,GAAcA,KAAd;AACAP,eAAK,CAACu/B,aAAN,GAAsBA,aAAtB;AACAv/B,eAAK,CAAConB,QAAN,GAAiBA,QAAjB;AACApnB,eAAK,CAACouB,QAAN,GAAiBA,QAAjB;;AACA,cAAIG,WAAJ,EAAiB;AACfvuB,iBAAK,CAACuuB,WAAN,GAAoBA,WAApB;AACD;;AACD,iBAAOvuB,KAAP;AACD;;AACD,+FAAaq/B,WAAb,EAA0B,CAAC;AACzB/+B,aAAG,EAAE,UADoB;AAEzBC,eAAK,EAAE,SAASuD,QAAT,CAAkBqlB,OAAlB,EAA2B/uB,OAA3B,EAAoC;AACzC,mBAAO,KAAKmlC,aAAL,CAAmBpW,OAAnB,EAA4B,KAAK5oB,KAAjC,EAAwCnG,OAAxC,CAAP;AACD;AAJwB,SAAD,EAKvB;AACDkG,aAAG,EAAE,KADJ;AAEDC,eAAK,EAAE,SAASG,GAAT,CAAayoB,OAAb,EAAsBxhB,KAAtB,EAA6BvN,OAA7B,EAAsC;AAC3C,mBAAO,KAAKgtB,QAAL,CAAc+B,OAAd,EAAuBxhB,KAAvB,EAA8B,KAAKpH,KAAnC,EAA0CnG,OAA1C,CAAP;AACD;AAJA,SALuB,CAA1B;AAWA,eAAOilC,WAAP;AACD,OA5BqC,CA4BpCD,MA5BoC,CAA/B;;AA6BA,UAAII,0BAA0B,GAAG,aAAa,UAAUC,QAAV,EAAoB;AACvE,4FAAUD,0BAAV,EAAsCC,QAAtC;;AACA,YAAIC,OAAO,GAAG,uFAAaF,0BAAb,CAAd;;AACA,iBAASA,0BAAT,GAAsC;AACpC,cAAIG,MAAJ;;AACA,oGAAgB,IAAhB,EAAsBH,0BAAtB;;AACA,eAAK,IAAIv/B,IAAI,GAAG3H,SAAS,CAACiB,MAArB,EAA6B2G,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,gBAAI,CAACE,IAAD,CAAJ,GAAa9H,SAAS,CAAC8H,IAAD,CAAtB;AACD;;AACDu/B,gBAAM,GAAGD,OAAO,CAACzlC,IAAR,CAAaoG,KAAb,CAAmBq/B,OAAnB,EAA4B,CAAC,IAAD,EAAOpiC,MAAP,CAAc4C,IAAd,CAA5B,CAAT;AACA,oGAAgB,iGAAuBy/B,MAAvB,CAAhB,EAAgD,UAAhD,EAA4DR,sBAA5D;AACA,oGAAgB,iGAAuBQ,MAAvB,CAAhB,EAAgD,aAAhD,EAA+D,CAAC,CAAhE;AACA,iBAAOA,MAAP;AACD;;AACD,+FAAaH,0BAAb,EAAyC,CAAC;AACxCl/B,aAAG,EAAE,KADmC;AAExCC,eAAK,EAAE,SAASG,GAAT,CAAa9H,IAAb,EAAmB+O,KAAnB,EAA0B;AAC/B,gBAAIA,KAAK,CAAC9G,cAAV,EAA0B;AACxB,qBAAOjI,IAAP;AACD;;AACD,gBAAIgnC,aAAa,GAAG,IAAInnC,IAAJ,CAAS,CAAT,CAApB;AACAmnC,yBAAa,CAAClnC,WAAd,CAA0BE,IAAI,CAACoP,cAAL,EAA1B,EAAiDpP,IAAI,CAACiR,WAAL,EAAjD,EAAqEjR,IAAI,CAAC4C,UAAL,EAArE;AACAokC,yBAAa,CAACjnC,QAAd,CAAuBC,IAAI,CAACoL,WAAL,EAAvB,EAA2CpL,IAAI,CAACkR,aAAL,EAA3C,EAAiElR,IAAI,CAACmR,aAAL,EAAjE,EAAuFnR,IAAI,CAACoR,kBAAL,EAAvF;AACA,mBAAO41B,aAAP;AACD;AAVuC,SAAD,CAAzC;AAYA,eAAOJ,0BAAP;AACD,OA3BoD,CA2BnDJ,MA3BmD,CAA9C;;;;;;;;;;;;;;;;;AClDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAASS,SAAT,CAAmBhe,kBAAnB,EAAuCyS,eAAvC,EAAwD;AACrE,mFAAa,CAAb,EAAgBh8B,SAAhB;AACA,YAAIwpB,aAAa,GAAG,iEAAOD,kBAAP,CAApB;AACA,YAAI5kB,KAAK,CAACD,MAAM,CAAC8kB,aAAD,CAAP,CAAT,EAAkC,OAAO,IAAIrpB,IAAJ,CAASoE,GAAT,CAAP;AAClC,YAAIijC,aAAa,GAAGhe,aAAa,CAAC3lB,OAAd,EAApB;AACA,YAAIo4B,UAAJ,CALqE,CAMrE;;AACA,YAAID,eAAe,IAAI,IAAvB,EAA6B;AAC3BC,oBAAU,GAAG,EAAb,CAD2B,CAG3B;AACD,SAJD,MAIO,IAAI,OAAOD,eAAe,CAACE,OAAvB,KAAmC,UAAvC,EAAmD;AACxDD,oBAAU,GAAGD,eAAb,CADwD,CAGxD;AACD,SAJM,MAIA;AACLC,oBAAU,GAAGp0B,KAAK,CAACpG,SAAN,CAAgBmR,KAAhB,CAAsBjR,IAAtB,CAA2Bq6B,eAA3B,CAAb;AACD;;AACD,YAAI5uB,MAAJ;AACA,YAAIq6B,WAAJ;AACAxL,kBAAU,CAACC,OAAX,CAAmB,UAAUn8B,SAAV,EAAqB;AACtC,cAAImH,WAAW,GAAG,iEAAOnH,SAAP,CAAlB;;AACA,cAAI4E,KAAK,CAACD,MAAM,CAACwC,WAAD,CAAP,CAAT,EAAgC;AAC9BkG,kBAAM,GAAG,IAAIjN,IAAJ,CAASoE,GAAT,CAAT;AACAkjC,uBAAW,GAAGljC,GAAd;AACA;AACD;;AACD,cAAImjC,QAAQ,GAAG5mC,IAAI,CAACC,GAAL,CAASymC,aAAa,GAAGtgC,WAAW,CAACrD,OAAZ,EAAzB,CAAf;;AACA,cAAIuJ,MAAM,IAAI,IAAV,IAAkBs6B,QAAQ,GAAGhjC,MAAM,CAAC+iC,WAAD,CAAvC,EAAsD;AACpDr6B,kBAAM,GAAGlG,WAAT;AACAugC,uBAAW,GAAGC,QAAd;AACD;AACF,SAZD;AAaA,eAAOt6B,MAAP;;;;;;;;;;;;;;;;;;ACzDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASu6B,WAAT,CAAqB5nC,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAW,kEAAQ9E,SAAR,IAAqB,IAAhC,CAAP;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCe,eAAS6nC,MAAT,CAAgB3/B,KAAhB,EAAuB;AACpC,mFAAa,CAAb,EAAgBjI,SAAhB;AACA,eAAOiI,KAAK,YAAY9H,IAAjB,IAAyB,kFAAQ8H,KAAR,MAAmB,QAAnB,IAA+BzG,MAAM,CAACC,SAAP,CAAiBT,QAAjB,CAA0BW,IAA1B,CAA+BsG,KAA/B,MAA0C,eAAzG;;;;;;;;;;;;;;;;;;ACpCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCe,eAAS4/B,WAAT,CAAqB9nC,SAArB,EAAgC+nC,aAAhC,EAA+ChmC,OAA/C,EAAwD;AACrE,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBgW,qBAAxB,EAA+C9V,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAI2V,qBAAqB,GAAG,wEAAU,CAACnW,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACgW,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC8V,qBAAjc,MAA4d,IAA5d,IAAoejW,KAAK,KAAK,KAAK,CAAnf,GAAufA,KAAvf,GAA+fM,cAAc,CAAC2V,qBAAvhB,MAAkjB,IAAljB,IAA0jBlW,KAAK,KAAK,KAAK,CAAzkB,GAA6kBA,KAA7kB,GAAqlB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAA90B,MAAy2B,IAAz2B,IAAi3BnW,IAAI,KAAK,KAAK,CAA/3B,GAAm4BA,IAAn4B,GAA04B,CAAp5B,CAA5B;AACA,YAAIzB,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIomB,QAAQ,GAAG,wEAAU2hB,aAAV,CAAf;AACA,YAAI9kC,IAAI,GAAG,mFAAyB1C,IAAzB,EAA+B,0EAAgBA,IAAhB,EAAsBwB,OAAtB,CAA/B,CAAX;AACA,YAAI8kC,SAAS,GAAG,IAAIzmC,IAAJ,CAAS,CAAT,CAAhB;AACAymC,iBAAS,CAACxmC,WAAV,CAAsB+lB,QAAtB,EAAgC,CAAhC,EAAmCjO,qBAAnC;AACA0uB,iBAAS,CAACvmC,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACAC,YAAI,GAAG,0EAAgBsmC,SAAhB,EAA2B9kC,OAA3B,CAAP;AACAxB,YAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAiBwC,IAA9B;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;AC5DF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AAoBe,eAASynC,eAAT,CAAyBhoC,SAAzB,EAAoCqD,WAApC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,0EAAgBrD,SAAhB,EAA2B,CAACsD,MAA5B,CAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIe,eAAS2kC,aAAT,CAAuBjoC,SAAvB,EAAkC63B,YAAlC,EAAgD;AAC7D,+EAAa,CAAb,EAAgB53B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI8mB,OAAO,GAAG,oEAAU+Q,YAAV,CAAd;AACA,YAAI50B,IAAI,GAAG,wEAAc1C,IAAd,IAAsBumB,OAAjC;AACAvmB,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAAI,GAAG,CAA3C;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;ACVF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS2nC,SAAT,CAAmBloC,SAAnB,EAA8BqD,WAA9B,EAA2C;AACxD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,oEAAUrD,SAAV,EAAqB,CAACsD,MAAtB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS6kC,QAAT,CAAkBnoC,SAAlB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS6nC,UAAT,CAAoBpoC,SAApB,EAA+BqoC,YAA/B,EAA6C;AAC1D,mFAAa,CAAb,EAAgBpoC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIwmB,OAAO,GAAG,wEAAU6hB,YAAV,CAAd;AACA,YAAIC,UAAU,GAAGvnC,IAAI,CAAC+D,KAAL,CAAWvE,IAAI,CAAC8E,QAAL,KAAkB,CAA7B,IAAkC,CAAnD;AACA,YAAIpC,IAAI,GAAGujB,OAAO,GAAG8hB,UAArB;AACA,eAAO,mEAAS/nC,IAAT,EAAeA,IAAI,CAAC8E,QAAL,KAAkBpC,IAAI,GAAG,CAAxC,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASslC,eAAT,CAAyBvoC,SAAzB,EAAoCqD,WAApC,EAAiD;AAC9D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIkR,SAAS,GAAG,iEAAOnR,SAAP,EAAkB8D,OAAlB,EAAhB;AACA,YAAIR,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,IAAIjD,IAAJ,CAAS+Q,SAAS,GAAG7N,MAArB,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASklC,0BAAT,CAAoC/kC,aAApC,EAAmDC,cAAnD,EAAmE;AAChF,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI6M,QAAQ,GAAGpG,QAAQ,CAAC7E,WAAT,KAAyB8E,SAAS,CAAC9E,WAAV,EAAxC;AACA,YAAImjC,SAAS,GAAGt+B,QAAQ,CAAC9E,QAAT,KAAsB+E,SAAS,CAAC/E,QAAV,EAAtC;AACA,eAAOkL,QAAQ,GAAG,EAAX,GAAgBk4B,SAAvB;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,eAASC,eAAT,CAAyBnoC,IAAzB,EAA+BwB,OAA/B,EAAwC;AACrD,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,eAAO,oFAA0B,yEAAeM,IAAf,CAA1B,EAAgD,uEAAaA,IAAb,CAAhD,EAAoEwB,OAApE,IAA+E,CAAtF;;;;;;;;;;;;;;;;;;ACjCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBe,eAAS4mC,mBAAT,CAA6Bx+B,QAA7B,EAAuCC,SAAvC,EAAkDrI,OAAlD,EAA2D;AACxE,mFAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIgD,IAAI,GAAG,mFAAyBkH,QAAzB,EAAmCC,SAAnC,IAAgD,IAA3D;AACA,eAAO,wFAAkBrI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACsI,cAA5E,EAA4FpH,IAA5F,CAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCe,eAAS2lC,eAAT,CAAyB5oC,SAAzB,EAAoC+B,OAApC,EAA6C;AAC1D,YAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBgW,qBAAxB,EAA+C9V,eAA/C,EAAgEC,qBAAhE,EAAuFC,qBAAvF,EAA8GC,sBAA9G;;AACA,mFAAa,CAAb,EAAgBtC,SAAhB;AACA,YAAIuC,cAAc,GAAG,wFAArB;AACA,YAAI2V,qBAAqB,GAAG,wEAAU,CAACnW,IAAI,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACgW,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACK,eAAe,GAAGL,OAAO,CAACW,MAA3B,MAAuC,IAAvC,IAA+CN,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqF,CAACC,qBAAqB,GAAGD,eAAe,CAACL,OAAzC,MAAsD,IAAtD,IAA8DM,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC8V,qBAAjc,MAA4d,IAA5d,IAAoejW,KAAK,KAAK,KAAK,CAAnf,GAAufA,KAAvf,GAA+fM,cAAc,CAAC2V,qBAAvhB,MAAkjB,IAAljB,IAA0jBlW,KAAK,KAAK,KAAK,CAAzkB,GAA6kBA,KAA7kB,GAAqlB,CAACK,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAA90B,MAAy2B,IAAz2B,IAAi3BnW,IAAI,KAAK,KAAK,CAA/3B,GAAm4BA,IAAn4B,GAA04B,CAAp5B,CAA5B;AACA,YAAI9B,IAAI,GAAG,sEAAYF,SAAZ,EAAuB+B,OAAvB,CAAX;AACA,YAAI8kC,SAAS,GAAG,IAAIzmC,IAAJ,CAAS,CAAT,CAAhB;AACAymC,iBAAS,CAACxmC,WAAV,CAAsBH,IAAtB,EAA4B,CAA5B,EAA+BiY,qBAA/B;AACA0uB,iBAAS,CAACvmC,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACA,YAAIC,IAAI,GAAG,sEAAYsmC,SAAZ,EAAuB9kC,OAAvB,CAAX;AACA,eAAOxB,IAAP;;;;;;;;;;;;;;;;;;ACtDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASsoC,YAAT,CAAsB7oC,SAAtB,EAAiC;AAC9C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAImqB,YAAY,GAAG5pB,IAAI,CAAC8E,QAAL,EAAnB;AACA,YAAID,KAAK,GAAG+kB,YAAY,GAAGA,YAAY,GAAG,CAA9B,GAAkC,CAA9C;AACA5pB,YAAI,CAACwU,QAAL,CAAc3P,KAAd,EAAqB,CAArB;AACA7E,YAAI,CAACD,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBe,eAASuoC,aAAT,CAAuBrlC,aAAvB,EAAsCC,cAAtC,EAAsD;AACnE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,eAAO,qEAAWwD,aAAX,EAA0BC,cAA1B,EAA0C;AAC/CjB,sBAAY,EAAE;AADiC,SAA1C,CAAP;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACe,eAASsmC,YAAT,CAAsB14B,KAAtB,EAA6B24B,IAA7B,EAAmC;AAChD,YAAI,2DAAQ34B,KAAR,MAAmB,QAAnB,IAA+BA,KAAK,KAAK,IAA7C,EAAmD,OAAOA,KAAP;AACnD,YAAI44B,IAAI,GAAG54B,KAAK,CAACqsB,MAAM,CAACwM,WAAR,CAAhB;;AACA,YAAID,IAAI,KAAKtxB,SAAb,EAAwB;AACtB,cAAIwxB,GAAG,GAAGF,IAAI,CAACrnC,IAAL,CAAUyO,KAAV,EAAiB24B,IAAI,IAAI,SAAzB,CAAV;AACA,cAAI,2DAAQG,GAAR,MAAiB,QAArB,EAA+B,OAAOA,GAAP;AAC/B,gBAAM,IAAI5nC,SAAJ,CAAc,8CAAd,CAAN;AACD;;AACD,eAAO,CAACynC,IAAI,KAAK,QAAT,GAAoB1+B,MAApB,GAA6B3F,MAA9B,EAAsC0L,KAAtC,CAAP;;;;;;;;;;;;;;;;;;ACTF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS+4B,QAAT,CAAkBppC,SAAlB,EAA6BqD,WAA7B,EAA0C;AACvD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,YAAI0H,IAAI,GAAGzH,MAAM,GAAG,CAApB;AACA,eAAO,kEAAQtD,SAAR,EAAmB+K,IAAnB,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASs+B,SAAT,CAAmBrpC,SAAnB,EAA8B;AAC3C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACAO,YAAI,CAACqU,UAAL,CAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB;AACA,eAAOrU,IAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACe,eAAS+oC,eAAT,CAAyB7M,GAAzB,EAA8Bx0B,GAA9B,EAAmCC,KAAnC,EAA0C;AACvDD,WAAG,GAAG,kEAAcA,GAAd,CAAN;;AACA,YAAIA,GAAG,IAAIw0B,GAAX,EAAgB;AACdh7B,gBAAM,CAACywB,cAAP,CAAsBuK,GAAtB,EAA2Bx0B,GAA3B,EAAgC;AAC9BC,iBAAK,EAAEA,KADuB;AAE9BqhC,sBAAU,EAAE,IAFkB;AAG9BtX,wBAAY,EAAE,IAHgB;AAI9BD,oBAAQ,EAAE;AAJoB,WAAhC;AAMD,SAPD,MAOO;AACLyK,aAAG,CAACx0B,GAAD,CAAH,GAAWC,KAAX;AACD;;AACD,eAAOu0B,GAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCSF;;;UA0Ba+M,0BAA0B;AAgDnC,4CACYC,MADZ,EAEYC,cAFZ,EAGYC,WAHZ;AAII;AACQxP,mBALZ,EAMYrN,gBANZ,EAOY8c,iBAPZ,EAQYC,YARZ,EASYtsB,WATZ,EAUYyP,WAVZ,EAWY8c,QAXZ,EAYY/c,iBAZZ,EAaYE,cAbZ,EAa0C;AAAA;;AAZ9B,eAAAwc,MAAA,GAAAA,MAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAEA,eAAAxP,WAAA,GAAAA,WAAA;AACA,eAAArN,gBAAA,GAAAA,gBAAA;AACA,eAAA8c,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAtsB,WAAA,GAAAA,WAAA;AACA,eAAAyP,WAAA,GAAAA,WAAA;AACA,eAAA8c,QAAA,GAAAA,QAAA;AACA,eAAA/c,iBAAA,GAAAA,iBAAA;AACA,eAAAE,cAAA,GAAAA,cAAA;AA5DJ,eAAA8c,IAAA,GAAO,KAAKJ,WAAL,CAAiBK,cAAjB,EAAP;AACR,eAAA9c,OAAA,GAAe,EAAf;AAEA,eAAAE,gBAAA,GAAmB,IAAnB;AAEA,eAAA6c,cAAA,GAAoC,CAChC;AACIC,qBAAS,EAAE,MADf;AAEIC,sBAAU,EAAE;AAFhB,WADgC,EAKhC;AACID,qBAAS,EAAE;AADf,WALgC,CAApC;AAYA,eAAAE,UAAA,GAAa,KAAb;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,oBAAA,GAAuB,KAAvB;AAEA,eAAAC,IAAA,GAAO,OAAP;AACA,eAAAC,QAAA,GAAiB,IAAIpqC,IAAJ,EAAjB;AACA,eAAAqqC,eAAA,GAAkB,KAAlB;AACA,eAAAC,KAAA,GAAe,EAAf;AACA,eAAAC,UAAA,GAAoB,EAApB;AAGA,eAAAC,OAAA,GAAkB,CAAC,QAAnB;AACA,eAAAC,QAAA,GAAmB,CAAC,QAApB;AAGA,eAAAxd,kBAAA,GAA4B,EAA5B;AACA,eAAAyd,iBAAA,GAA2B,EAA3B;AAKA,eAAAC,eAAA,GAAkB,iFAAlB;AAEA;;;AAIA,eAAAC,kBAAA,GAAqB,KAArB;AAyZO,eAAAC,cAAA,GAAiB,KAAjB;AACC,eAAAC,kBAAA,GAAqB,IAAI,6CAAJ,EAArB;AAnYH;;AApE8B;AAAA;AAAA,iBAsEnC,oBAAQ;AACJ,iBAAKC,eAAL;AACA,iBAAK1c,cAAL;AACA;;AACA,iBAAK2c,SAAL;AACA,iBAAKvB,YAAL,CAAkBwB,QAAlB,CAA2B,OAA3B,EALI,CAMJ;;AACA,iBAAKC,SAAL;AACA,iBAAKjd,UAAL;AAEH;AAhFkC;AAAA;AAAA,iBAkFnC,kBAAS9tB,IAAT,EAAmB;AACf,gBAAI,KAAK8pC,YAAT,EAAuB;AACnB,sCAAiB,KAAK9sB,WAAL,CAAiBkH,YAAjB,CACblkB,IADa,CAAjB,cAEKA,IAAI,CAAC+E,WAAL,EAFL;AAGH;;AAED,mBAAO,OAAP;AACH;AA1FkC;AAAA;AAAA,iBA4FnC,2BAAe;AACX,iBAAKskC,iBAAL,CAAuBuB,eAAvB,GAAyC9rB,SAAzC;AACH;AA9FkC;AAAA;AAAA,iBA+FnC,0BAAc;AAAA;;AACV,iBAAKyN,gBAAL,CAAsB2B,cAAtB,GAAuCpP,SAAvC,CAAiD,UAACC,QAAD,EAAmB;AAChE,kBAAIA,QAAQ,CAACE,YAAT,KAA0B,GAA9B,EAAmC;AAC/B,uBAAI,CAAClB,YAAL,GAAoBgB,QAAQ,CAACjS,MAA7B;AACH;AACJ,aAJD;AAKH;AAED;;;;;;;;AAvGmC;AAAA;AAAA,iBAkHnC,qBAAS;AAAA;;AACL,iBAAKyf,gBAAL,CACKse,SADL,GAEK/1B,IAFL,CAGQ,gEAAS,YAAM;AACX,qBAAI,CAAC+X,gBAAL,GAAwB,KAAxB;AACH,aAFD,CAHR,EAOK/N,SAPL,CAOe;AACP6O,kBAAI,EAAE,cAAC5O,QAAD,EAAmB;AACrB,oBAAIA,QAAQ,CAACE,YAAT,KAA0B,GAA9B,EAAmC;AAC/B,yBAAI,CAAC0N,OAAL,GAAe5N,QAAQ,CAACjS,MAAxB;;AAEA,sBACI,OAAI,CAAC6f,OAAL,CAAaO,WAAb,KAA6B,IAA7B,IACA,OAAI,CAACP,OAAL,CAAaQ,MAAb,KAAwB,IADxB,IAEC,OAAI,CAACR,OAAL,CAAahO,QAAb,KAA0B,IAA1B,IACG,OAAI,CAACgO,OAAL,CAAaO,WAAb,KAA6B,KADhC,IAEG,OAAI,CAACP,OAAL,CAAaQ,MAAb,KAAwB,KAF3B,IAGG,OAAI,CAACR,OAAL,CAAaqe,oBAAb,KAAsC,IAN9C,EAOE;AACE,2BAAI,CAACC,iBAAL;AACH,mBATD,MASO,IACH,OAAI,CAACte,OAAL,CAAahO,QAAb,KAA0B,IAA1B,IACA,OAAI,CAACgO,OAAL,CAAaO,WAAb,KAA6B,KAD7B,IAEA,OAAI,CAACP,OAAL,CAAaQ,MAAb,KAAwB,KAFxB,IAGA,OAAI,CAACR,OAAL,CAAaqe,oBAAb,KAAsC,KAJnC,EAKL;AACE,2BAAI,CAACE,WAAL;;AACA,2BAAI,CAACltB,UAAL,GAAkB,OAAI,CAACwrB,IAAL,CAAU2B,IAAV,CAAentB,UAAjC;AACA,2BAAI,CAACD,YAAL,GAAoB,OAAI,CAACyrB,IAAL,CAAU2B,IAAV,CAAeptB,YAAnC;AACA,2BAAI,CAAC+rB,YAAL,GAAoB,IAApB;AACH,mBAVM,MAUA;AACH,2BAAI,CAACC,oBAAL,GAA4B,IAA5B;AACH;AACJ,iBAzBD,MAyBO;AACH,yBAAI,CAACA,oBAAL,GAA4B,IAA5B;AACH;AACJ,eA9BM;AA+BP9b,mBAAK,EAAE,eAACA,OAAD,EAAgB;AACnB,uBAAI,CAAC8b,oBAAL,GAA4B,IAA5B;AACH;AAjCM,aAPf;AA0CH;AA7JkC;AAAA;AAAA,iBAgKnC,8BAAkB;AACd,gBACI,KAAKpd,OAAL,CAAaO,WAAb,KAA6B,IAA7B,IACA,KAAKP,OAAL,CAAaQ,MAAb,KAAwB,IADxB,IAEC,KAAKR,OAAL,CAAahO,QAAb,KAA0B,IAA1B,IACG,KAAKgO,OAAL,CAAaO,WAAb,KAA6B,KADhC,IAEG,KAAKP,OAAL,CAAaQ,MAAb,KAAwB,KAF3B,IAGG,KAAKR,OAAL,CAAaqe,oBAAb,KAAsC,IAN9C,EAOE;AACE,qBAAO,IAAP;AACH,aATD,MASO;AACH,qBAAO,KAAP;AACH;AACJ;AA7KkC;AAAA;AAAA,iBA+KnC,oBAAWI,KAAX,EAAqB;AACjB,iBAAKrtB,YAAL,GAAoBqtB,KAAK,CAACrtB,YAA1B;AACA,iBAAKC,UAAL,GAAkBotB,KAAK,CAACptB,UAAxB;AACA,iBAAK0P,cAAL,GAAsB0d,KAAK,CAAC1d,cAA5B;AACA,iBAAKD,YAAL,GAAoB2d,KAAK,CAAC3d,YAA1B;AACH;AApLkC;AAAA;AAAA,iBAsLnC,6BAAiB;AAAA;;AACb,gBAAIb,SAAS,GAAG;AACZ7O,0BAAY,EAAE,IADF;AAEZC,wBAAU,EAAE,IAFA;AAGZ0P,4BAAc,EAAE,IAHJ;AAIZD,0BAAY,EAAE;AAJF,aAAhB;AAOA,iBAAK4d,0BAAL,GAAkC,KAAKlC,cAAL,CAAoBmC,WAApB,CAAgCxsB,SAAhC,CAC9B,UAACwsB,WAAD,EAAsB;AAClB,kBAAIpqC,MAAM,CAACme,IAAP,CAAYisB,WAAZ,EAAyB3qC,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,oBAAIqU,MAAM,GAAQu2B,IAAI,CAACD,WAAW,CAAC,GAAD,CAAZ,CAAtB;AACAt2B,sBAAM,GAAGw2B,IAAI,CAAC5jC,KAAL,CAAWoN,MAAX,CAAT;AAEA,uBAAI,CAAC+I,YAAL,GAAoB3L,QAAQ,CAAC4C,MAAM,CAAC+I,YAAR,CAA5B;AACA,uBAAI,CAACC,UAAL,GAAkB5L,QAAQ,CAAC4C,MAAM,CAACgJ,UAAR,CAA1B;AACA,uBAAI,CAAC0P,cAAL,GAAsB1Y,MAAM,CAAC0Y,cAA7B;AACA,uBAAI,CAACD,YAAL,GAAoBzY,MAAM,CAACyY,YAA3B;AAEA,uBAAI,CAACoc,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,YAAL,GAAoB,IAApB;;AACA,uBAAI,CAACoB,WAAL;;AAEAhqC,sBAAM,CAACme,IAAP,CAAYuN,SAAZ,EAAuBgP,OAAvB,CAA+B,UAAA6P,OAAO,EAAI;AACtCvqC,wBAAM,CAACme,IAAP,CAAYrK,MAAZ,EAAoB4mB,OAApB,CAA4B,UAAA8P,QAAQ,EAAI;AACpC,wBACID,OAAO,IAAIC,QAAX,IACA9e,SAAS,CAAC6e,OAAD,CAAT,IAAsBz2B,MAAM,CAAC02B,QAAD,CAFhC,EAGE;AACE,0BAAI,CAACrnC,KAAK,CAACD,MAAM,CAAC4Q,MAAM,CAAC02B,QAAD,CAAP,CAAP,CAAV,EAAsC;AAClC9e,iCAAS,CAAC6e,OAAD,CAAT,GAAqBrnC,MAAM,CAAC4Q,MAAM,CAAC02B,QAAD,CAAP,CAA3B;AACH,uBAFD,MAEO;AACH9e,iCAAS,CAAC6e,OAAD,CAAT,GAAqBz2B,MAAM,CAAC02B,QAAD,CAA3B;AACH;AACJ;AACJ,mBAXD;AAYH,iBAbD;AAcH,eA3BD,MA2BO;AACH,uBAAI,CAAC7B,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAACC,YAAL,GAAoB,KAApB;AACH;AACJ,aAjC6B,CAAlC;AAmCA,iBAAKuB,0BAAL,CAAgCM,WAAhC;AACH;AAlOkC;AAAA;AAAA,iBAoOnC,uBAAW;AAAA;;AACP,gBAAMC,QAAQ,GAAQ;AAClB/mC,mBAAK,EAAE,qDADW;AAElBwJ,kBAAI,EAAE,oDAFY;AAGlBhM,iBAAG,EAAE;AAHa,cAIpB,KAAK2nC,IAJe,CAAtB;AAMA,gBAAM6B,MAAM,GAAQ;AAChBhnC,mBAAK,EAAE,mDADS;AAEhBwJ,kBAAI,EAAE,kDAFU;AAGhBhM,iBAAG,EAAE;AAHW,cAIlB,KAAK2nC,IAJa,CAApB;AAMA,gBAAI8B,SAAS,GAAG,EAAhB;;AAEA,gBAAI,CAAC,KAAKrB,kBAAV,EAA8B;AAC1B,mBAAKtB,cAAL,CAAoBmC,WAApB,CAAgCxsB,SAAhC,CAA0C,UAACwsB,WAAD,EAAsB;AAC5D,oBAAIpqC,MAAM,CAACme,IAAP,CAAYisB,WAAZ,EAAyB3qC,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,sBAAIqU,MAAM,GAAQu2B,IAAI,CAACD,WAAW,CAAC,GAAD,CAAZ,CAAtB;AACAt2B,wBAAM,GAAGw2B,IAAI,CAAC5jC,KAAL,CAAWoN,MAAX,CAAT;AAEA,sBAAM+2B,SAAS,GAAG/2B,MAAM,CAACg3B,MAAP,CAAcp6B,KAAd,CAAoB,GAApB,CAAlB;;AAEA,yBAAI,CAACq4B,QAAL,CAAcnqC,WAAd,CAA0BisC,SAAS,CAAC,CAAD,CAAnC;;AACA,yBAAI,CAAC9B,QAAL,CAAcz1B,QAAd,CAAuBu3B,SAAS,CAAC,CAAD,CAAT,GAAe,CAAtC;;AACA,yBAAI,CAAC9B,QAAL,CAAchqC,OAAd,CAAsB8rC,SAAS,CAAC,CAAD,CAA/B;;AAEAD,2BAAS,GAAG;AACRE,0BAAM,EAAEh3B,MAAM,CAACg3B,MADP;AAERC,uBAAG,EAAEj3B,MAAM,CAACi3B,GAFJ;AAGRluB,gCAAY,EAAE/I,MAAM,CAAC+I,YAHb;AAIRC,8BAAU,EAAEhJ,MAAM,CAACgJ,UAJX;AAKR0P,kCAAc,EAAE1Y,MAAM,CAAC0Y,cALf;AAMRD,gCAAY,EAAEzY,MAAM,CAACyY;AANb,mBAAZ;AAQH,iBAlBD,MAkBO;AACH,yBAAI,CAACwc,QAAL,GAAgB,IAAIpqC,IAAJ,EAAhB;AAEAisC,2BAAS,GAAG;AACRE,0BAAM,EAAE,wDAAOJ,QAAQ,CAAC,OAAI,CAAC3B,QAAN,CAAf,EAAgC,YAAhC,CADA;AAERgC,uBAAG,EAAE,wDAAOJ,MAAM,CAAC,OAAI,CAAC5B,QAAN,CAAb,EAA8B,YAA9B,CAFG;AAGRlsB,gCAAY,EAAE,OAAI,CAACA,YAHX;AAIRC,8BAAU,EAAE,OAAI,CAACA,UAJT;AAKR0P,kCAAc,EAAE,OAAI,CAACA,cALb;AAMRD,gCAAY,EAAE,OAAI,CAACA;AANX,mBAAZ;AAQH;AACJ,eA/BD;AAgCH,aAjCD,MAiCO;AACHqe,uBAAS,GAAG;AACRE,sBAAM,EAAE,wDAAOJ,QAAQ,CAAC,KAAK3B,QAAN,CAAf,EAAgC,YAAhC,CADA;AAERgC,mBAAG,EAAE,wDAAOJ,MAAM,CAAC,KAAK5B,QAAN,CAAb,EAA8B,YAA9B,CAFG;AAGRlsB,4BAAY,EAAE,KAAKA,YAHX;AAIRC,0BAAU,EAAE,KAAKA,UAJT;AAKR0P,8BAAc,EAAE,KAAKA,cALb;AAMRD,4BAAY,EAAE,KAAKA;AANX,eAAZ;AAQH;;AAED,iBAAKgd,kBAAL,GAA0B,IAA1B;AACA,iBAAKP,eAAL,GAAuB,KAAvB;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BH,WAnUkC,CAsUnC;;AAtUmC;AAAA;AAAA,iBAuUnC,uBAAcgC,MAAd,EAA2B;AACvB,iBAAKC,cAAL,GAAsBD,MAAtB;AACH;AAzUkC;AAAA;AAAA,iBA0UnC,sBAAal3B,MAAb,EAAqB;AAAA;;AACjB,iBAAK4kB,WAAL,CAAiBwS,eAAjB,CAAiCp3B,MAAjC,EAAyCF,IAAzC,CACI,gEAAS,YAAM;AACX,qBAAI,CAAC+X,gBAAL,GAAwB,KAAxB;AACH,aAFD,CADJ,EAIE/N,SAJF,CAKI,UAACC,QAAD,EAAmB;AACf,kBAAIA,QAAQ,IAAIA,QAAQ,CAAC3d,cAAT,CAAwB,MAAxB,CAAhB,EAAiD;AAC7C,uBAAI,CAAC+oC,KAAL,GAAaprB,QAAQ,CAACa,IAAtB,CAD6C,CAG7C;;AACA,uBAAI,CAACuqB,KAAL,CAAWvO,OAAX,CAAmB,UAACyQ,IAAD,EAAU;AACzB;AACAA,sBAAI,CAACC,OAAL,GAAe,EAAf;AACA,yBAAI,CAAC3R,cAAL,GAAsB0R,IAAI,CAACE,WAA3B,CAHyB,CAIzB;;AACA,sBAAIF,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AAClBH,wBAAI,CAACC,OAAL,CAAaG,IAAb,GAAoB,iFAApB,CADkB,CACqF;AAC1G,mBAFD,MAEO,IAAIJ,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AACzBH,wBAAI,CAACC,OAAL,CAAaG,IAAb,GAAoB,iFAApB,CADyB,CAC8E;AAC1G,mBAFM,MAEA,IAAIJ,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AACzBH,wBAAI,CAACC,OAAL,CAAaG,IAAb,GAAoB,iFAApB,CADyB,CAC8E;AAC1G,mBAFM,MAEA,IAAIJ,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AACzBH,wBAAI,CAACC,OAAL,CAAaG,IAAb,GAAoB,iFAApB,CADyB,CAC8E;AAC1G,mBAFM,MAEA;AACHJ,wBAAI,CAACC,OAAL,CAAaG,IAAb,GAAoB,iFAApB,CADG,CACoG;AAC1G;AAEJ,iBAjBD;AAkBH,eAtBD,MAsBO;AACH,uBAAI,CAACtC,KAAL,GAAa,IAAb;AACA,uBAAI,CAACE,OAAL,GAAe,OAAI,CAACA,OAApB;AACA,uBAAI,CAACC,QAAL,GAAgB,OAAI,CAACA,QAArB;AACH;AACJ,aAjCL,EAkCI,UAACrc,KAAD,EAAW,CACP;AACH,aApCL;AAsCH;AAjXkC;AAAA;AAAA,iBAmXnC,gCAAuBoe,IAAvB,EAAkC;AAC9B,gBAAMK,YAAY,GAAG;AACjBC,qBAAO,EAAE,KADQ;AAEjBC,uBAAS,EAAEP,IAAI,CAACQ,UAFC;AAGjBC,2BAAa,EAAET,IAAI,CAACU,cAHH;AAIjB/S,oBAAM,EAAEqS,IAAI,CAACW,MAJI;AAKjBC,uBAAS,EAAEZ,IAAI,CAACa,SALC;AAMjBC,yBAAW,EAAEd,IAAI,CAACe,YAND;AAOjBf,kBAAI,EAAEA,IAAI,CAACC,OAAL,CAAaG,IAPF;AAQjBtS,yBAAW,EAAEkS,IAAI,CAACgB,WARD;AASjBC,oBAAM,EAAEjB,IAAI,CAAC3W;AATI,aAArB;AAWA,iBAAK0U,UAAL,CAAgBtjC,IAAhB,CAAqB4lC,YAArB;AACAL,gBAAI,CAACC,OAAL,CAAa,MAAb,IAAuB,KAAK9B,eAA5B;AAEA,iBAAK+C,qBAAL,CAA2Bb,YAA3B,EAAyCL,IAAzC;AACH;AAnYkC;AAAA;AAAA,iBAqYnC,+BAAsBmB,OAAtB,EAAoCnB,IAApC,EAA+C;AAC3C;AACA,gBAAMoB,kBAAkB,GAAG,KAAK3gB,kBAAL,CAAwB4H,IAAxB,CAA6B,UAAA/V,QAAQ;AAAA,qBAAIA,QAAQ,CAAC5J,EAAT,KAAgBs3B,IAAI,CAACE,WAAzB;AAAA,aAArC,CAA3B;;AACA,gBAAIkB,kBAAJ,EAAwB;AACpBD,qBAAO,CAACrT,WAAR,GAAsBsT,kBAAkB,CAAC14B,EAAzC;AACH,aAFD,MAEO;AACHy4B,qBAAO,CAACrT,WAAR,GAAsB,EAAtB,CADG,CACuB;AAC7B;AACJ;AA7YkC;AAAA;AAAA,iBAiZnC,iCAAwBU,IAAxB,EAAmC;AAC/B,gBAAMnF,KAAK,GAAG,KAAK0U,UAAL,CAAgB16B,OAAhB,CAAwBmrB,IAAxB,CAAd;AACA,gBAAI6S,QAAQ,GAAG,CAAf;AACAA,oBAAQ,GAAG,KAAKvD,KAAL,CAAWwD,SAAX,CAAqB,UAAAtB,IAAI;AAAA,qBAAIA,IAAI,CAACU,cAAL,KAAwBlS,IAAI,CAACiS,aAAjC;AAAA,aAAzB,CAAX;;AAEA,gBAAIY,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACjB,mBAAKtD,UAAL,CAAgBwD,MAAhB,CAAuBlY,KAAvB,EAA8B,CAA9B;;AACA,kBAAI,KAAKyU,KAAL,CAAWuD,QAAX,EAAqBlB,KAArB,KAA+B,CAAnC,EAAsC;AAClC,qBAAKrC,KAAL,CAAWuD,QAAX,EAAqBpB,OAArB,CAA6BG,IAA7B,GAAoC,iFAApC,CADkC,CACqF;AAC1H,eAFD,MAEO,IAAI,KAAKtC,KAAL,CAAWuD,QAAX,EAAqBlB,KAArB,KAA+B,CAAnC,EAAsC;AACzC,qBAAKrC,KAAL,CAAWuD,QAAX,EAAqBpB,OAArB,CAA6BG,IAA7B,GAAoC,iFAApC,CADyC,CAC8E;AAC1H,eAFM,MAEA,IAAI,KAAKtC,KAAL,CAAWuD,QAAX,EAAqBlB,KAArB,KAA+B,CAAnC,EAAsC;AACzC,qBAAKrC,KAAL,CAAWuD,QAAX,EAAqBpB,OAArB,CAA6BG,IAA7B,GAAoC,iFAApC,CADyC,CAC8E;AAC1H,eAFM,MAEA,IAAI,KAAKtC,KAAL,CAAWuD,QAAX,EAAqBlB,KAArB,KAA+B,CAAnC,EAAsC;AACzC,qBAAKrC,KAAL,CAAWuD,QAAX,EAAqBpB,OAArB,CAA6BG,IAA7B,GAAoC,iFAApC,CADyC,CAC8E;AAC1H,eAFM,MAEA;AACH,qBAAKtC,KAAL,CAAWuD,QAAX,EAAqBpB,OAArB,CAA6BG,IAA7B,GAAoC,iFAApC,CADG,CACoH;AAC1H;AACJ;AAEJ;AArakC;AAAA;AAAA,iBAsanC,sBAAa;AAAA;;AACT,iBAAKjgB,iBAAL,CAAuB2B,aAAvB,GAAuCrP,SAAvC,CACI,UAACC,QAAD,EAAmB;AACf,kBAAIA,QAAQ,CAAC,cAAD,CAAR,KAA6B,GAAjC,EAAsC;AAClC,uBAAI,CAAC+N,kBAAL,GAA0B/N,QAAQ,CAAC,QAAD,CAAlC;;AACA,oBAAI,OAAI,CAAC+N,kBAAL,CAAwBnsB,MAAxB,GAAiC,CAArC,EAAwC,CACpC;AACH;AACJ,eALD,MAKO;AACH,uBAAI,CAACmsB,kBAAL,GAA0B,EAA1B;AACH;AACJ,aAVL;AAYH;AAnbkC;AAAA;AAAA,iBAwbnC,qBAAY;AAAA;;AACR,iBAAKN,iBAAL,CAAuBqhB,YAAvB,GAAsC/uB,SAAtC,CACI,UAACC,QAAD,EAAmB;AACf,kBAAIA,QAAQ,CAAC,SAAD,CAAR,IAAuB,IAA3B,EAAiC;AAC7B,uBAAI,CAACwrB,iBAAL,GAAyBxrB,QAAQ,CAAC,MAAD,CAAjC;AACH,eAFD,MAEO;AACH,uBAAI,CAACwrB,iBAAL,GAAyB,EAAzB;AACH;AACJ,aAPL,EAQI,UAACtc,KAAD,EAAgB,CACZ;AACH,aAVL;AAYH;AArckC;AAAA;AAAA,iBA0cnC,uBAAc;AACV,gBAAI6f,UAAU,GAAG,2BAAjB;AACA,gBAAIC,QAAQ,GAAG,sCAAf;AACA,gBAAMC,KAAK,GAAG,KAAK5D,UAAnB;AAEA;;;;;;;;;;;;;;;;;;AAoBH;AAnekC;AAAA;AAAA,iBAoenC,wBAAe;AAEX,iBAAKA,UAAL,GAAkB,EAAlB;AACA,iBAAKtd,kBAAL,GAA0B,EAA1B;AACA,iBAAKyd,iBAAL,GAAyB,EAAzB;AACA,iBAAKF,OAAL,GAAe,KAAKA,OAApB;AACA,iBAAKC,QAAL,GAAgB,KAAKA,QAArB;AAEH;AA5ekC;AAAA;AAAA,iBA6enC,4BAAmB;AACfhe,oBAAQ,CAAC2hB,MAAT;AACH,WA/ekC,CAgfnC;AACA;;AAjfmC;AAAA;AAAA,iBAkfnC,uBAAc;AACV,iBAAKtD,kBAAL,CAAwBhd,IAAxB;AACA,iBAAKgd,kBAAL,CAAwBuD,QAAxB;AACH;AArfkC;AAAA;AAAA,iBAsfnC,0BAAiBrT,IAAjB,EAA4BsT,QAA5B,EAA2C;AAEvCtT,gBAAI,CAACwS,WAAL,GAAmBc,QAAnB;AAEH;AA1fkC;AAAA;AAAA,iBA4fnC,yBAAgBtT,IAAhB,EAA2BsT,QAA3B,EAA0C;AACtCtT,gBAAI,CAACuT,SAAL,GAAiBD,QAAjB;AACH;AA9fkC;AAAA;AAAA,iBA+fnC,uBAActT,IAAd,EAAyBsT,QAAzB,EAAwC;AACpCtT,gBAAI,CAACsS,WAAL,GAAmBgB,QAAnB;AACH;AAOD;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AA5hBmC;AAAA;AAAA,iBAkiBnC,kBAAStE,UAAT,EAA4B;AACxB,gBAAIA,UAAJ,EAAgB;AACZ,mBAAKC,YAAL,GAAoB,IAApB;AACA,mBAAKoB,WAAL;AACH,aAHD,MAGO;AACH,mBAAKpB,YAAL,GAAoB,KAApB;AACA,mBAAKuE,eAAL,CAAqB,IAArB;AACH;;AAED,iBAAKxE,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACH;AA5iBkC;AAAA;AAAA,iBA8iBnC,yBAAgB70B,MAAhB,EAA2B;AACvB,gBAAIA,MAAM,KAAK,IAAf,EAAqB;AACjB,mBAAKk0B,MAAL,CAAYoF,QAAZ,CAAqB,EAArB,EAAyB;AACrBC,0BAAU,EAAE,KAAKpF;AADI,eAAzB;AAGH,aAJD,MAIO;AACH,mBAAKD,MAAL,CAAYoF,QAAZ,CAAqB,EAArB,EAAyB;AACrBC,0BAAU,EAAE,KAAKpF,cADI;AAErBmC,2BAAW,EAAE;AAAEplB,mBAAC,EAAEsoB,IAAI,CAAChD,IAAI,CAACiD,SAAL,CAAez5B,MAAf,CAAD;AAAT,iBAFQ;AAGrB05B,mCAAmB,EAAE;AAHA,eAAzB;AAKH;AACJ;AA1jBkC;;AAAA;AAAA,S;;;;gBA7C9B;;gBAAQ;;gBAoBR;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACW;;gBACX;;gBACA;;gBA1BA;;;;AA2CIzF,gCAA0B,6DANtC,gEAAU;AACP3kB,gBAAQ,EAAE,0BADH;AAEPxC,gBAAQ,EAAR,uEAFO;;AAAA,OAAV,CAMsC,E,+EAiDf,sD,EACQ,8D,EACH,qF,EAEA,gG,EACK,oE,EACC,sG,EACL,wF,EACD,sF,EACA,2D,EACH,yD,EACS,wF,EACH,2F,EA7DO,GAA1BmnB,0BAA0B,CAA1B;;;;;;;;;;;;;;;;AChDb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6Be,eAAS0F,YAAT,CAAsBzrC,aAAtB,EAAqCC,cAArC,EAAqD;AAClE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkvC,qBAAqB,GAAG,wEAAc1rC,aAAd,CAA5B;AACA,YAAI2rC,sBAAsB,GAAG,wEAAc1rC,cAAd,CAA7B;AACA,eAAOyrC,qBAAqB,CAACrrC,OAAtB,OAAoCsrC,sBAAsB,CAACtrC,OAAvB,EAA3C;;;;;;;;;;;;;;;;;;ACnCF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASurC,eAAT,CAAyBtyB,CAAzB,EAA4BsP,CAA5B,EAA+B;AAC5CgjB,uBAAe,GAAG5tC,MAAM,CAACyhC,cAAP,GAAwBzhC,MAAM,CAACyhC,cAAP,CAAsBE,IAAtB,EAAxB,GAAuD,SAASiM,eAAT,CAAyBtyB,CAAzB,EAA4BsP,CAA5B,EAA+B;AACtGtP,WAAC,CAACsmB,SAAF,GAAchX,CAAd;AACA,iBAAOtP,CAAP;AACD,SAHD;AAIA,eAAOsyB,eAAe,CAACtyB,CAAD,EAAIsP,CAAJ,CAAtB;;;;;;;;;;;;;;;;;;ACLF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAI9oB,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;;;AAmBe,eAAS+rC,UAAT,CAAoBtvC,SAApB,EAA+B;AAC5C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIiD,IAAI,GAAG,yEAAe1C,IAAf,EAAqBuD,OAArB,KAAiC,6EAAmBvD,IAAnB,EAAyBuD,OAAzB,EAA5C,CAH4C,CAK5C;AACA;AACA;;AACA,eAAO/C,IAAI,CAACiD,KAAL,CAAWf,IAAI,GAAGM,oBAAlB,IAA0C,CAAjD;;;;;;;;;;;;;;;;;;ACjCF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAU4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIqvB,sBAAsB,GAAG,uDAA7B,C,CAEA;AACA;;AACA,UAAIC,0BAA0B,GAAG,mCAAjC;AACA,UAAIC,mBAAmB,GAAG,cAA1B;AACA,UAAIC,iBAAiB,GAAG,KAAxB;AACA,UAAIE,6BAA6B,GAAG,UAApC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoSe,eAAS7iB,MAAT,CAAgBpQ,SAAhB,EAA2BuvC,cAA3B,EAA2CxtC,OAA3C,EAAoD;AACjE,YAAIC,IAAJ,EAAUI,eAAV,EAA2BH,KAA3B,EAAkCC,KAAlC,EAAyCmxB,KAAzC,EAAgDnb,qBAAhD,EAAuEob,gBAAvE,EAAyFC,qBAAzF,EAAgHjxB,qBAAhH,EAAuIC,sBAAvI,EAA+JixB,KAA/J,EAAsKC,KAAtK,EAA6KC,KAA7K,EAAoLvxB,qBAApL,EAA2MwxB,gBAA3M,EAA6NC,qBAA7N,EAAoPC,sBAApP,EAA4QC,sBAA5Q;;AACA,mFAAa,CAAb,EAAgB7zB,SAAhB;AACA,YAAI83B,SAAS,GAAGztB,MAAM,CAACilC,cAAD,CAAtB;AACA,YAAI/sC,cAAc,GAAG,wFAArB;AACA,YAAIE,MAAM,GAAG,CAACV,IAAI,GAAG,CAACI,eAAe,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,MAA7E,MAAyF,IAAzF,IAAiGN,eAAe,KAAK,KAAK,CAA1H,GAA8HA,eAA9H,GAAgJI,cAAc,CAACE,MAAvK,MAAmL,IAAnL,IAA2LV,IAAI,KAAK,KAAK,CAAzM,GAA6MA,IAA7M,GAAoN,oEAAjO;AACA,YAAImW,qBAAqB,GAAG,wEAAU,CAAClW,KAAK,GAAG,CAACC,KAAK,GAAG,CAACmxB,KAAK,GAAG,CAACnb,qBAAqB,GAAGnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoW,qBAAnF,MAA8G,IAA9G,IAAsHD,qBAAqB,KAAK,KAAK,CAArJ,GAAyJA,qBAAzJ,GAAiLnW,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACuxB,gBAAgB,GAAGvxB,OAAO,CAACW,MAA5B,MAAwC,IAAxC,IAAgD4wB,gBAAgB,KAAK,KAAK,CAA1E,GAA8E,KAAK,CAAnF,GAAuF,CAACC,qBAAqB,GAAGD,gBAAgB,CAACvxB,OAA1C,MAAuD,IAAvD,IAA+DwxB,qBAAqB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,qBAAqB,CAACpb,qBAApc,MAA+d,IAA/d,IAAuekb,KAAK,KAAK,KAAK,CAAtf,GAA0fA,KAA1f,GAAkgB7wB,cAAc,CAAC2V,qBAA1hB,MAAqjB,IAArjB,IAA6jBjW,KAAK,KAAK,KAAK,CAA5kB,GAAglBA,KAAhlB,GAAwlB,CAACI,qBAAqB,GAAGE,cAAc,CAACE,MAAxC,MAAoD,IAApD,IAA4DJ,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACP,OAAhD,MAA6D,IAA7D,IAAqEQ,sBAAsB,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,sBAAsB,CAAC4V,qBAAl1B,MAA62B,IAA72B,IAAq3BlW,KAAK,KAAK,KAAK,CAAp4B,GAAw4BA,KAAx4B,GAAg5B,CAA15B,CAA5B,CANiE,CAQjE;;AACA,YAAI,EAAEkW,qBAAqB,IAAI,CAAzB,IAA8BA,qBAAqB,IAAI,CAAzD,CAAJ,EAAiE;AAC/D,gBAAM,IAAIxV,UAAJ,CAAe,2DAAf,CAAN;AACD;;AACD,YAAIF,YAAY,GAAG,wEAAU,CAAC+wB,KAAK,GAAG,CAACC,KAAK,GAAG,CAACC,KAAK,GAAG,CAACvxB,qBAAqB,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACU,YAAnF,MAAqG,IAArG,IAA6GN,qBAAqB,KAAK,KAAK,CAA5I,GAAgJA,qBAAhJ,GAAwKJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAAC4xB,gBAAgB,GAAG5xB,OAAO,CAACW,MAA5B,MAAwC,IAAxC,IAAgDixB,gBAAgB,KAAK,KAAK,CAA1E,GAA8E,KAAK,CAAnF,GAAuF,CAACC,qBAAqB,GAAGD,gBAAgB,CAAC5xB,OAA1C,MAAuD,IAAvD,IAA+D6xB,qBAAqB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,qBAAqB,CAACnxB,YAA3b,MAA6c,IAA7c,IAAqdixB,KAAK,KAAK,KAAK,CAApe,GAAweA,KAAxe,GAAgflxB,cAAc,CAACC,YAAxgB,MAA0hB,IAA1hB,IAAkiBgxB,KAAK,KAAK,KAAK,CAAjjB,GAAqjBA,KAArjB,GAA6jB,CAACI,sBAAsB,GAAGrxB,cAAc,CAACE,MAAzC,MAAqD,IAArD,IAA6DmxB,sBAAsB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0G,CAACC,sBAAsB,GAAGD,sBAAsB,CAAC9xB,OAAjD,MAA8D,IAA9D,IAAsE+xB,sBAAsB,KAAK,KAAK,CAAtG,GAA0G,KAAK,CAA/G,GAAmHA,sBAAsB,CAACrxB,YAA1zB,MAA40B,IAA50B,IAAo1B+wB,KAAK,KAAK,KAAK,CAAn2B,GAAu2BA,KAAv2B,GAA+2B,CAAz3B,CAAnB,CAZiE,CAcjE;;AACA,YAAI,EAAE/wB,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;AAC7C,gBAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;AACD;;AACD,YAAI,CAACD,MAAM,CAACqjB,QAAZ,EAAsB;AACpB,gBAAM,IAAIpjB,UAAJ,CAAe,uCAAf,CAAN;AACD;;AACD,YAAI,CAACD,MAAM,CAACmpB,UAAZ,EAAwB;AACtB,gBAAM,IAAIlpB,UAAJ,CAAe,yCAAf,CAAN;AACD;;AACD,YAAIuC,YAAY,GAAG,iEAAOlF,SAAP,CAAnB;;AACA,YAAI,CAAC,kEAAQkF,YAAR,CAAL,EAA4B;AAC1B,gBAAM,IAAIvC,UAAJ,CAAe,oBAAf,CAAN;AACD,SA3BgE,CA6BjE;AACA;AACA;;;AACA,YAAI8H,cAAc,GAAG,8FAAgCvF,YAAhC,CAArB;AACA,YAAI4rB,OAAO,GAAG,0EAAgB5rB,YAAhB,EAA8BuF,cAA9B,CAAd;AACA,YAAI+kC,gBAAgB,GAAG;AACrBr3B,+BAAqB,EAAEA,qBADF;AAErB1V,sBAAY,EAAEA,YAFO;AAGrBC,gBAAM,EAAEA,MAHa;AAIrB0lB,uBAAa,EAAEljB;AAJM,SAAvB;AAMA,YAAImI,MAAM,GAAG0qB,SAAS,CAACzsB,KAAV,CAAgBunB,0BAAhB,EAA4CqB,GAA5C,CAAgD,UAAUC,SAAV,EAAqB;AAChF,cAAIC,cAAc,GAAGD,SAAS,CAAC,CAAD,CAA9B;;AACA,cAAIC,cAAc,KAAK,GAAnB,IAA0BA,cAAc,KAAK,GAAjD,EAAsD;AACpD,gBAAIC,aAAa,GAAG,4EAAeD,cAAf,CAApB;AACA,mBAAOC,aAAa,CAACF,SAAD,EAAYzxB,MAAM,CAACmpB,UAAnB,CAApB;AACD;;AACD,iBAAOsI,SAAP;AACD,SAPY,EAOVG,IAPU,CAOL,EAPK,EAODhpB,KAPC,CAOKsnB,sBAPL,EAO6BsB,GAP7B,CAOiC,UAAUC,SAAV,EAAqB;AACjE;AACA,cAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtB,mBAAO,GAAP;AACD;;AACD,cAAIC,cAAc,GAAGD,SAAS,CAAC,CAAD,CAA9B;;AACA,cAAIC,cAAc,KAAK,GAAvB,EAA4B;AAC1B,mBAAOqB,kBAAkB,CAACtB,SAAD,CAAzB;AACD;;AACD,cAAI4F,SAAS,GAAG,wEAAW3F,cAAX,CAAhB;;AACA,cAAI2F,SAAJ,EAAe;AACb,gBAAI,EAAEh4B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC4yB,2BAApD,KAAoF,+FAAyBR,SAAzB,CAAxF,EAA6H;AAC3H,wGAAoBA,SAApB,EAA+Bob,cAA/B,EAA+CjlC,MAAM,CAACtK,SAAD,CAArD;AACD;;AACD,gBAAI,EAAE+B,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC6yB,4BAApD,KAAqF,gGAA0BT,SAA1B,CAAzF,EAA+H;AAC7H,wGAAoBA,SAApB,EAA+Bob,cAA/B,EAA+CjlC,MAAM,CAACtK,SAAD,CAArD;AACD;;AACD,mBAAO+5B,SAAS,CAACjJ,OAAD,EAAUqD,SAAV,EAAqBzxB,MAAM,CAACqjB,QAA5B,EAAsCypB,gBAAtC,CAAhB;AACD;;AACD,cAAIpb,cAAc,CAAC9oB,KAAf,CAAqB2nB,6BAArB,CAAJ,EAAyD;AACvD,kBAAM,IAAItwB,UAAJ,CAAe,mEAAmEyxB,cAAnE,GAAoF,GAAnG,CAAN;AACD;;AACD,iBAAOD,SAAP;AACD,SA9BY,EA8BVG,IA9BU,CA8BL,EA9BK,CAAb;AA+BA,eAAOjnB,MAAP;AACD;;AACD,eAASooB,kBAAT,CAA4BplB,KAA5B,EAAmC;AACjC,YAAIo/B,OAAO,GAAGp/B,KAAK,CAAC/E,KAAN,CAAYwnB,mBAAZ,CAAd;;AACA,YAAI,CAAC2c,OAAL,EAAc;AACZ,iBAAOp/B,KAAP;AACD;;AACD,eAAOo/B,OAAO,CAAC,CAAD,CAAP,CAAWliC,OAAX,CAAmBwlB,iBAAnB,EAAsC,GAAtC,CAAP;;;;;;;;;;;;;;;;;;AChZF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS2c,QAAT,CAAkB1vC,SAAlB,EAA6BqD,WAA7B,EAA0C;AACvD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,mEAASrD,SAAT,EAAoB,CAACsD,MAArB,CAAP;;;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASqsC,cAAT,CAAwB9kC,OAAxB,EAAiC;AAC9C,mFAAa,CAAb,EAAgB5K,SAAhB;AACA,YAAIwI,KAAK,GAAGoC,OAAO,GAAG,iEAAtB;AACA,eAAO9J,IAAI,CAAC+D,KAAL,CAAW2D,KAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBe,eAASmnC,aAAT,CAAuB5kC,MAAvB,EAA+B;AAC5C,mFAAa,CAAb,EAAgB/K,SAAhB;AACA,YAAIgL,KAAK,GAAGD,MAAM,GAAG,gEAArB;AACA,eAAOjK,IAAI,CAAC+D,KAAL,CAAWmG,KAAX,CAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAI4kC,eAAe,GAAG;AAC3BzqC,aAAK,EAAE,gBADoB;AAE3B;AACA7E,YAAI,EAAE,oBAHqB;AAI3B;AACAmP,iBAAS,EAAE,iCALgB;AAM3B;AACAd,YAAI,EAAE,oBAPqB;AAQ3B;AACAY,eAAO,EAAE,oBATkB;AAU3B;AACAmzB,eAAO,EAAE,oBAXkB;AAY3B;AACAjD,eAAO,EAAE,gBAbkB;AAc3B;AACAn0B,eAAO,EAAE,gBAfkB;AAgB3B;AACA9F,cAAM,EAAE,WAjBmB;AAkB3B;AACAE,cAAM,EAAE,WAnBmB;AAoB3B;AAEAsU,mBAAW,EAAE,KAtBc;AAuB3B;AACAC,iBAAS,EAAE,UAxBgB;AAyB3B;AACAC,mBAAW,EAAE,UA1Bc;AA2B3B;AACAC,kBAAU,EAAE,UA5Be;AA6B3B;AAEAN,uBAAe,EAAE,QA/BU;AAgC3BQ,yBAAiB,EAAE,OAhCQ;AAiC3B;AACAC,uBAAe,EAAE,YAlCU;AAmC3B;AACAC,yBAAiB,EAAE,YApCQ;AAqC3B;AACAC,wBAAgB,EAAE,YAtCS,CAsCI;;AAtCJ,OAAtB;AAyCA,UAAIq1B,gBAAgB,GAAG;AAC5B7gC,4BAAoB,EAAE,0BADM;AAE5BC,aAAK,EAAE,yBAFqB;AAG5BC,4BAAoB,EAAE,mCAHM;AAI5BE,gBAAQ,EAAE,0BAJkB;AAK5BD,+BAAuB,EAAE;AALG,OAAvB;;;;;;;;;;;;;;;;ACzCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAAS2gC,qBAAT,CAA+BjqC,YAA/B,EAA6C;AAC1D,mFAAa,CAAb,EAAgB7F,SAAhB;AACA,YAAI4K,OAAO,GAAG/E,YAAY,GAAG,wEAA7B;AACA,eAAO/E,IAAI,CAAC+D,KAAL,CAAW+F,OAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASrK,OAAT,CAAiBR,SAAjB,EAA4BgwC,eAA5B,EAA6C;AAC1D,mFAAa,CAAb,EAAgB/vC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIo8B,UAAU,GAAG,wEAAU4T,eAAV,CAAjB;AACAzvC,YAAI,CAACC,OAAL,CAAa47B,UAAb;AACA,eAAO77B,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS0vC,gBAAT,CAA0BnhC,QAA1B,EAAoC;AACjD,mFAAa,CAAb,EAAgB7O,SAAhB;AACA,eAAOc,IAAI,CAAC+D,KAAL,CAAWgK,QAAQ,GAAG,mEAAtB,CAAP;;;;;;;;;;;;;;;;;;ACtBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASohC,WAAT,CAAqBlwC,SAArB,EAAgCqD,WAAhC,EAA6C;AAC1D,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,YAAI2H,MAAM,GAAG1H,MAAM,GAAG,CAAtB;AACA,eAAO,oEAAUtD,SAAV,EAAqBgL,MAArB,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAIkgB,mBAAmB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAAzC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCe,eAASilB,6BAAT,CAAuCC,iBAAvC,EAA0DC,kBAA1D,EAA8E;AAC3F,mFAAa,CAAb,EAAgBpwC,SAAhB;AACA,YAAI2N,YAAY,GAAGwiC,iBAAiB,IAAI,EAAxC;AACA,YAAIviC,aAAa,GAAGwiC,kBAAkB,IAAI,EAA1C;AACA,YAAIviC,aAAa,GAAG,iEAAOF,YAAY,CAAC9G,KAApB,EAA2BhD,OAA3B,EAApB;AACA,YAAIiK,WAAW,GAAG,iEAAOH,YAAY,CAAC5G,GAApB,EAAyBlD,OAAzB,EAAlB;AACA,YAAIkK,cAAc,GAAG,iEAAOH,aAAa,CAAC/G,KAArB,EAA4BhD,OAA5B,EAArB;AACA,YAAImK,YAAY,GAAG,iEAAOJ,aAAa,CAAC7G,GAArB,EAA0BlD,OAA1B,EAAnB,CAP2F,CAS3F;;AACA,YAAI,EAAEgK,aAAa,IAAIC,WAAjB,IAAgCC,cAAc,IAAIC,YAApD,CAAJ,EAAuE;AACrE,gBAAM,IAAItL,UAAJ,CAAe,kBAAf,CAAN;AACD;;AACD,YAAI2tC,aAAa,GAAGxiC,aAAa,GAAGG,YAAhB,IAAgCD,cAAc,GAAGD,WAArE;;AACA,YAAI,CAACuiC,aAAL,EAAoB;AAClB,iBAAO,CAAP;AACD;;AACD,YAAIC,gBAAgB,GAAGviC,cAAc,GAAGF,aAAjB,GAAiCA,aAAjC,GAAiDE,cAAxE;AACA,YAAIwiC,cAAc,GAAGviC,YAAY,GAAGF,WAAf,GAA6BA,WAA7B,GAA2CE,YAAhE;AACA,YAAIwiC,cAAc,GAAGD,cAAc,GAAGD,gBAAtC;AACA,eAAOxvC,IAAI,CAAC8D,IAAL,CAAU4rC,cAAc,GAAGvlB,mBAA3B,CAAP;;;;;;;;;;;;;;;;;;ACxDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEe,eAASwlB,iBAAT,CAA2B1wC,SAA3B,EAAsC;AACnD,+EAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIwC,YAAY,GAAG,CAAnB;AACA,YAAIlC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4C,GAAG,GAAGrC,IAAI,CAACuC,SAAL,EAAV;AACA,YAAIG,IAAI,GAAG,CAACL,GAAG,GAAGH,YAAN,GAAqB,CAArB,GAAyB,CAA1B,IAA+BG,GAA/B,GAAqCH,YAAhD;AACAlC,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAApC;AACA1C,YAAI,CAACqL,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,eAAOrL,IAAP;;;;;;;;;;;;;;;;;;ACVF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASowC,WAAT,CAAqB3wC,SAArB,EAAgC;AAC7C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,sEAAYG,IAAI,CAACmH,GAAL,EAAZ,EAAwBvH,SAAxB,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACe,eAAS4wC,0BAAT,CAAoC7zB,CAApC,EAAuC8zB,cAAvC,EAAuD;AACpE,YAAIC,EAAE,GAAG,OAAOpU,MAAP,KAAkB,WAAlB,IAAiC3f,CAAC,CAAC2f,MAAM,CAACC,QAAR,CAAlC,IAAuD5f,CAAC,CAAC,YAAD,CAAjE;;AACA,YAAI,CAAC+zB,EAAL,EAAS;AACP,cAAIhpC,KAAK,CAACitB,OAAN,CAAchY,CAAd,MAAqB+zB,EAAE,GAAG,+EAA2B/zB,CAA3B,CAA1B,KAA4D8zB,cAAc,IAAI9zB,CAAlB,IAAuB,OAAOA,CAAC,CAAC7b,MAAT,KAAoB,QAA3G,EAAqH;AACnH,gBAAI4vC,EAAJ,EAAQ/zB,CAAC,GAAG+zB,EAAJ;AACR,gBAAI1pB,CAAC,GAAG,CAAR;;AACA,gBAAI2pB,CAAC,GAAG,SAASA,CAAT,GAAa,CAAE,CAAvB;;AACA,mBAAO;AACL/oB,eAAC,EAAE+oB,CADE;AAEL/2B,eAAC,EAAE,SAASA,CAAT,GAAa;AACd,oBAAIoN,CAAC,IAAIrK,CAAC,CAAC7b,MAAX,EAAmB,OAAO;AACxBw0B,sBAAI,EAAE;AADkB,iBAAP;AAGnB,uBAAO;AACLA,sBAAI,EAAE,KADD;AAELxtB,uBAAK,EAAE6U,CAAC,CAACqK,CAAC,EAAF;AAFH,iBAAP;AAID,eAVI;AAWL1Y,eAAC,EAAE,SAASA,CAAT,CAAWsiC,EAAX,EAAe;AAChB,sBAAMA,EAAN;AACD,eAbI;AAcLnb,eAAC,EAAEkb;AAdE,aAAP;AAgBD;;AACD,gBAAM,IAAIxvC,SAAJ,CAAc,uIAAd,CAAN;AACD;;AACD,YAAI0vC,gBAAgB,GAAG,IAAvB;AAAA,YACEC,MAAM,GAAG,KADX;AAAA,YAEEtb,GAFF;AAGA,eAAO;AACL5N,WAAC,EAAE,SAASA,CAAT,GAAa;AACd8oB,cAAE,GAAGA,EAAE,CAAClvC,IAAH,CAAQmb,CAAR,CAAL;AACD,WAHI;AAIL/C,WAAC,EAAE,SAASA,CAAT,GAAa;AACd,gBAAI5S,IAAI,GAAG0pC,EAAE,CAAC5iB,IAAH,EAAX;AACA+iB,4BAAgB,GAAG7pC,IAAI,CAACsuB,IAAxB;AACA,mBAAOtuB,IAAP;AACD,WARI;AASLsH,WAAC,EAAE,SAASA,CAAT,CAAWyiC,GAAX,EAAgB;AACjBD,kBAAM,GAAG,IAAT;AACAtb,eAAG,GAAGub,GAAN;AACD,WAZI;AAaLtb,WAAC,EAAE,SAASA,CAAT,GAAa;AACd,gBAAI;AACF,kBAAI,CAACob,gBAAD,IAAqBH,EAAE,CAAC,QAAD,CAAF,IAAgB,IAAzC,EAA+CA,EAAE,CAAC,QAAD,CAAF;AAChD,aAFD,SAEU;AACR,kBAAII,MAAJ,EAAY,MAAMtb,GAAN;AACb;AACF;AAnBI,SAAP;;;;;;;;;;;;;;;;;;AC9BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASwb,gBAAT,CAA0BvmC,OAA1B,EAAmC;AAChD,mFAAa,CAAb,EAAgB5K,SAAhB;AACA,YAAIuK,OAAO,GAAGK,OAAO,GAAG,mEAAxB;AACA,eAAO9J,IAAI,CAAC+D,KAAL,CAAW0F,OAAX,CAAP;;;;;;;;;;;;;;;;;;AC5BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAAS6mC,QAAT,CAAkBrxC,SAAlB,EAA6B;AAC1C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkB8D,OAAlB,KAA8B1D,IAAI,CAACmH,GAAL,EAArC;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAAS+pC,wBAAT,CAAkC7tC,aAAlC,EAAiDC,cAAjD,EAAiE;AAC9E,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO1G,aAAP,CAAf;AACA,YAAI2G,SAAS,GAAG,iEAAO1G,cAAP,CAAhB;AACA,YAAI7C,IAAI,GAAG,qEAAWsJ,QAAX,EAAqBC,SAArB,CAAX;AACA,YAAIgS,UAAU,GAAGrb,IAAI,CAACC,GAAL,CAAS,2FAAiCmJ,QAAjC,EAA2CC,SAA3C,CAAT,CAAjB;AACAD,gBAAQ,GAAG,0EAAgBA,QAAhB,EAA0BtJ,IAAI,GAAGub,UAAjC,CAAX,CAN8E,CAQ9E;AACA;AACA;;AACA,YAAIm1B,wBAAwB,GAAG5sC,MAAM,CAAC,qEAAWwF,QAAX,EAAqBC,SAArB,MAAoC,CAACvJ,IAAtC,CAArC;AACA,YAAIwM,MAAM,GAAGxM,IAAI,IAAIub,UAAU,GAAGm1B,wBAAjB,CAAjB,CAZ8E,CAa9E;;AACA,eAAOlkC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;;;;;;;;;;;;;;;;;;AC1CF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAASmkC,cAAT,CAAwBxxC,SAAxB,EAAmC;AAChD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAImqB,YAAY,GAAG5pB,IAAI,CAAC8E,QAAL,EAAnB;AACA,YAAID,KAAK,GAAG+kB,YAAY,GAAGA,YAAY,GAAG,CAA1C;AACA5pB,YAAI,CAACwU,QAAL,CAAc3P,KAAd,EAAqB,CAArB;AACA7E,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASkxC,mBAAT,CAA6B5pC,IAA7B,EAAmC;AAChD,eAAO,UAAU6pC,MAAV,EAAkB;AACvB,cAAI3vC,OAAO,GAAG9B,SAAS,CAACiB,MAAV,GAAmB,CAAnB,IAAwBjB,SAAS,CAAC,CAAD,CAAT,KAAiB0X,SAAzC,GAAqD1X,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,cAAI0Z,WAAW,GAAG+3B,MAAM,CAACpmC,KAAP,CAAazD,IAAI,CAACg3B,YAAlB,CAAlB;AACA,cAAI,CAACllB,WAAL,EAAkB,OAAO,IAAP;AAClB,cAAIg4B,aAAa,GAAGh4B,WAAW,CAAC,CAAD,CAA/B;AACA,cAAI0b,WAAW,GAAGqc,MAAM,CAACpmC,KAAP,CAAazD,IAAI,CAACi3B,YAAlB,CAAlB;AACA,cAAI,CAACzJ,WAAL,EAAkB,OAAO,IAAP;AAClB,cAAIntB,KAAK,GAAGL,IAAI,CAACkU,aAAL,GAAqBlU,IAAI,CAACkU,aAAL,CAAmBsZ,WAAW,CAAC,CAAD,CAA9B,CAArB,GAA0DA,WAAW,CAAC,CAAD,CAAjF;AACAntB,eAAK,GAAGnG,OAAO,CAACga,aAAR,GAAwBha,OAAO,CAACga,aAAR,CAAsB7T,KAAtB,CAAxB,GAAuDA,KAA/D;AACA,cAAIsR,IAAI,GAAGk4B,MAAM,CAAC7+B,KAAP,CAAa8+B,aAAa,CAACzwC,MAA3B,CAAX;AACA,iBAAO;AACLgH,iBAAK,EAAEA,KADF;AAELsR,gBAAI,EAAEA;AAFD,WAAP;AAID,SAdD;;;;;;;;;;;;;;;;;;ACDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAIhX,cAAc,GAAG,EAArB;;AACO,eAAS6Y,iBAAT,GAA6B;AAClC,eAAO7Y,cAAP;AACD;;AACM,eAASo5B,iBAAT,CAA2BC,UAA3B,EAAuC;AAC5Cr5B,sBAAc,GAAGq5B,UAAjB;;;;;;;;;;;;;;;;;;ACLF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACA,eAAS+V,iBAAT,CAA2BvwC,MAA3B,EAAmCwwC,KAAnC,EAA0C;AACxC,aAAK,IAAIzqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyqB,KAAK,CAAC3wC,MAA1B,EAAkCkmB,CAAC,EAAnC,EAAuC;AACrC,cAAI0qB,UAAU,GAAGD,KAAK,CAACzqB,CAAD,CAAtB;AACA0qB,oBAAU,CAACvI,UAAX,GAAwBuI,UAAU,CAACvI,UAAX,IAAyB,KAAjD;AACAuI,oBAAU,CAAC7f,YAAX,GAA0B,IAA1B;AACA,cAAI,WAAW6f,UAAf,EAA2BA,UAAU,CAAC9f,QAAX,GAAsB,IAAtB;AAC3BvwB,gBAAM,CAACywB,cAAP,CAAsB7wB,MAAtB,EAA8B,kEAAcywC,UAAU,CAAC7pC,GAAzB,CAA9B,EAA6D6pC,UAA7D;AACD;AACF;;AACc,eAASC,YAAT,CAAsBhmC,WAAtB,EAAmCimC,UAAnC,EAA+CC,WAA/C,EAA4D;AACzE,YAAID,UAAJ,EAAgBJ,iBAAiB,CAAC7lC,WAAW,CAACrK,SAAb,EAAwBswC,UAAxB,CAAjB;AAChB,YAAIC,WAAJ,EAAiBL,iBAAiB,CAAC7lC,WAAD,EAAckmC,WAAd,CAAjB;AACjBxwC,cAAM,CAACywB,cAAP,CAAsBnmB,WAAtB,EAAmC,WAAnC,EAAgD;AAC9CimB,kBAAQ,EAAE;AADoC,SAAhD;AAGA,eAAOjmB,WAAP;;;;;;;;;;;;;;;;;;AChBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAASmmC,aAAT,CAAuBlyC,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,wEAAcG,IAAI,CAACmH,GAAL,EAAd,EAA0BvH,SAA1B,CAAP;;;;;;;;;;;;;;;;;;ACzBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAQO,UAAImyC,UAAU,GAAG,CAAjB;AAEP;;;;;;;;;;;;;AAYO,UAAIpR,UAAU,GAAG,QAAjB;AAEP;;;;;;;;;AAQO,UAAIqR,OAAO,GAAGrxC,IAAI,CAACkF,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkB,EAAlB,GAAuB,EAAvB,GAA4B,EAA5B,GAAiC,IAA/C;AAEP;;;;;;;;;AAQO,UAAIosC,oBAAoB,GAAG,KAA3B;AAEP;;;;;;;;;AAQO,UAAIC,kBAAkB,GAAG,OAAzB;AAEP;;;;;;;;;AAQO,UAAIC,oBAAoB,GAAG,IAA3B;AAEP;;;;;;;;;AAQO,UAAIC,OAAO,GAAG,CAACJ,OAAf;AAEP;;;;;;;;;AAQO,UAAIK,aAAa,GAAG,EAApB;AAEP;;;;;;;;;AAQO,UAAIC,eAAe,GAAG,CAAtB;AAEP;;;;;;;;;AAQO,UAAIC,YAAY,GAAG,EAAnB;AAEP;;;;;;;;;AAQO,UAAIC,cAAc,GAAG,CAArB;AAEP;;;;;;;;;AAQO,UAAIC,aAAa,GAAG,IAApB;AAEP;;;;;;;;;AAQO,UAAIC,eAAe,GAAG,EAAtB;AAEP;;;;;;;;;AAQO,UAAIC,YAAY,GAAGF,aAAa,GAAG,EAAnC;AAEP;;;;;;;;;AAQO,UAAIG,aAAa,GAAGD,YAAY,GAAG,CAAnC;AAEP;;;;;;;;;AAQO,UAAIE,aAAa,GAAGF,YAAY,GAAGhS,UAAnC;AAEP;;;;;;;;;AAQO,UAAImS,cAAc,GAAGD,aAAa,GAAG,EAArC;AAEP;;;;;;;;;AAQO,UAAIE,gBAAgB,GAAGD,cAAc,GAAG,CAAxC;;;;;;;;;;;;;;;;ACtLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAASE,iBAAT,CAA2BpzC,SAA3B,EAAsC;AACnD,mFAAa,CAAb,EAAgBC,SAAhB;AACA,eAAO,iEAAOD,SAAP,EAAkBS,OAAlB,OAAgC,CAAvC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS4yC,aAAT,CAAuBrzC,SAAvB,EAAkC;AAC/C,mFAAa,CAAb,EAAgBC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAIE,IAAI,GAAGK,IAAI,CAAC+E,WAAL,EAAX;AACA/E,YAAI,CAACF,WAAL,CAAiBH,IAAI,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACAK,YAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,eAAOC,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAiBe,eAAS+yC,QAAT,CAAkB/yC,IAAlB,EAAwB;AACrC,mFAAa,CAAb,EAAgBN,SAAhB;AACA,eAAO,iEAAOM,IAAP,EAAa4V,MAAb,OAA0B,CAAjC;;;;;;;;;;;;;;;;;;ACrBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS7M,UAAT,CAAoBtJ,SAApB,EAA+BuzC,YAA/B,EAA6C;AAC1D,mFAAa,CAAb,EAAgBtzC,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI6K,OAAO,GAAG,wEAAU0oC,YAAV,CAAd;AACAhzC,YAAI,CAAC+I,UAAL,CAAgBuB,OAAhB;AACA,eAAOtK,IAAP;;;;;;;;;;;;;;;;;;AC1BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBe,eAASizC,cAAT,CAAwBhqB,kBAAxB,EAA4CyS,eAA5C,EAA6D;AAC1E,mFAAa,CAAb,EAAgBh8B,SAAhB;AACA,YAAIwpB,aAAa,GAAG,iEAAOD,kBAAP,CAApB;AACA,YAAI5kB,KAAK,CAACD,MAAM,CAAC8kB,aAAD,CAAP,CAAT,EAAkC,OAAOjlB,GAAP;AAClC,YAAIijC,aAAa,GAAGhe,aAAa,CAAC3lB,OAAd,EAApB;AACA,YAAIo4B,UAAJ,CAL0E,CAM1E;;AACA,YAAID,eAAe,IAAI,IAAvB,EAA6B;AAC3BC,oBAAU,GAAG,EAAb,CAD2B,CAG3B;AACD,SAJD,MAIO,IAAI,OAAOD,eAAe,CAACE,OAAvB,KAAmC,UAAvC,EAAmD;AACxDD,oBAAU,GAAGD,eAAb,CADwD,CAGxD;AACD,SAJM,MAIA;AACLC,oBAAU,GAAGp0B,KAAK,CAACpG,SAAN,CAAgBmR,KAAhB,CAAsBjR,IAAtB,CAA2Bq6B,eAA3B,CAAb;AACD;;AACD,YAAI5uB,MAAJ;AACA,YAAIq6B,WAAJ;AACAxL,kBAAU,CAACC,OAAX,CAAmB,UAAUn8B,SAAV,EAAqBi2B,KAArB,EAA4B;AAC7C,cAAI9uB,WAAW,GAAG,iEAAOnH,SAAP,CAAlB;;AACA,cAAI4E,KAAK,CAACD,MAAM,CAACwC,WAAD,CAAP,CAAT,EAAgC;AAC9BkG,kBAAM,GAAG7I,GAAT;AACAkjC,uBAAW,GAAGljC,GAAd;AACA;AACD;;AACD,cAAImjC,QAAQ,GAAG5mC,IAAI,CAACC,GAAL,CAASymC,aAAa,GAAGtgC,WAAW,CAACrD,OAAZ,EAAzB,CAAf;;AACA,cAAIuJ,MAAM,IAAI,IAAV,IAAkBs6B,QAAQ,GAAGhjC,MAAM,CAAC+iC,WAAD,CAAvC,EAAsD;AACpDr6B,kBAAM,GAAG4oB,KAAT;AACAyR,uBAAW,GAAGC,QAAd;AACD;AACF,SAZD;AAaA,eAAOt6B,MAAP;;;;;;;;;;;;;;;;;;AC3DF;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASomC,YAAT,CAAsB5rC,IAAtB,EAA4B;AACzC,eAAO,UAAU6pC,MAAV,EAAkB;AACvB,cAAI3vC,OAAO,GAAG9B,SAAS,CAACiB,MAAV,GAAmB,CAAnB,IAAwBjB,SAAS,CAAC,CAAD,CAAT,KAAiB0X,SAAzC,GAAqD1X,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,cAAI6W,KAAK,GAAG/U,OAAO,CAAC+U,KAApB;AACA,cAAI+nB,YAAY,GAAG/nB,KAAK,IAAIjP,IAAI,CAACk3B,aAAL,CAAmBjoB,KAAnB,CAAT,IAAsCjP,IAAI,CAACk3B,aAAL,CAAmBl3B,IAAI,CAACm3B,iBAAxB,CAAzD;AACA,cAAIrlB,WAAW,GAAG+3B,MAAM,CAACpmC,KAAP,CAAauzB,YAAb,CAAlB;;AACA,cAAI,CAACllB,WAAL,EAAkB;AAChB,mBAAO,IAAP;AACD;;AACD,cAAIg4B,aAAa,GAAGh4B,WAAW,CAAC,CAAD,CAA/B;AACA,cAAIslB,aAAa,GAAGnoB,KAAK,IAAIjP,IAAI,CAACo3B,aAAL,CAAmBnoB,KAAnB,CAAT,IAAsCjP,IAAI,CAACo3B,aAAL,CAAmBp3B,IAAI,CAACq3B,iBAAxB,CAA1D;AACA,cAAIj3B,GAAG,GAAGH,KAAK,CAACitB,OAAN,CAAckK,aAAd,IAA+BiP,SAAS,CAACjP,aAAD,EAAgB,UAAUvlB,OAAV,EAAmB;AACnF,mBAAOA,OAAO,CAACrH,IAAR,CAAas/B,aAAb,CAAP;AACD,WAFiD,CAAxC,GAEL+B,OAAO,CAACzU,aAAD,EAAgB,UAAUvlB,OAAV,EAAmB;AAC7C,mBAAOA,OAAO,CAACrH,IAAR,CAAas/B,aAAb,CAAP;AACD,WAFW,CAFZ;AAKA,cAAIzpC,KAAJ;AACAA,eAAK,GAAGL,IAAI,CAACkU,aAAL,GAAqBlU,IAAI,CAACkU,aAAL,CAAmB9T,GAAnB,CAArB,GAA+CA,GAAvD;AACAC,eAAK,GAAGnG,OAAO,CAACga,aAAR,GAAwBha,OAAO,CAACga,aAAR,CAAsB7T,KAAtB,CAAxB,GAAuDA,KAA/D;AACA,cAAIsR,IAAI,GAAGk4B,MAAM,CAAC7+B,KAAP,CAAa8+B,aAAa,CAACzwC,MAA3B,CAAX;AACA,iBAAO;AACLgH,iBAAK,EAAEA,KADF;AAELsR,gBAAI,EAAEA;AAFD,WAAP;AAID,SAvBD;AAwBD;;AACD,eAASk6B,OAAT,CAAiBpyC,MAAjB,EAAyBqyC,SAAzB,EAAoC;AAClC,aAAK,IAAI1rC,GAAT,IAAgB3G,MAAhB,EAAwB;AACtB,cAAIA,MAAM,CAACK,cAAP,CAAsBsG,GAAtB,KAA8B0rC,SAAS,CAACryC,MAAM,CAAC2G,GAAD,CAAP,CAA3C,EAA0D;AACxD,mBAAOA,GAAP;AACD;AACF;;AACD,eAAO0P,SAAP;AACD;;AACD,eAASu2B,SAAT,CAAmBh8B,KAAnB,EAA0ByhC,SAA1B,EAAqC;AACnC,aAAK,IAAI1rC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGiK,KAAK,CAAChR,MAA9B,EAAsC+G,GAAG,EAAzC,EAA6C;AAC3C,cAAI0rC,SAAS,CAACzhC,KAAK,CAACjK,GAAD,CAAN,CAAb,EAA2B;AACzB,mBAAOA,GAAP;AACD;AACF;;AACD,eAAO0P,SAAP;;;;;;;;;;;;;;;;;;ACxCF;AAAA;;;AAAA;AAAA;AAAA;;AACA,UAAIi8B,WAAW,GAAG;AAChBC,YAAI,EAAE,kBADU;AAEhB,gBAAM,YAFU;AAGhBC,cAAM,EAAE,UAHQ;AAIhB,iBAAO;AAJS,OAAlB;AAMA,UAAIC,WAAW,GAAG;AAChBF,YAAI,EAAE,gBADU;AAEhB,gBAAM,aAFU;AAGhBC,cAAM,EAAE,WAHQ;AAIhB,iBAAO;AAJS,OAAlB;AAMA,UAAIE,eAAe,GAAG;AACpBH,YAAI,EAAE,wBADc;AAEpB,gBAAM,wBAFc;AAGpBC,cAAM,EAAE,oBAHY;AAIpB,iBAAO;AAJa,OAAtB;AAMA,UAAIjoB,UAAU,GAAG;AACftrB,YAAI,EAAE,gFAAkB;AACtB0zC,iBAAO,EAAEL,WADa;AAEtBnjB,sBAAY,EAAE;AAFQ,SAAlB,CADS;AAKfrf,YAAI,EAAE,gFAAkB;AACtB6iC,iBAAO,EAAEF,WADa;AAEtBtjB,sBAAY,EAAE;AAFQ,SAAlB,CALS;AASftE,gBAAQ,EAAE,gFAAkB;AAC1B8nB,iBAAO,EAAED,eADiB;AAE1BvjB,sBAAY,EAAE;AAFY,SAAlB;AATK,OAAjB;AAce;;AAAA,uCAAA5E,UAAA;;;;;;;;;;;;;;;;ACjCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIe,eAASqoB,UAAT,CAAoBl0C,SAApB,EAA+Bs/B,SAA/B,EAA0Cv9B,OAA1C,EAAmD;AAChE,+EAAa,CAAb,EAAgB9B,SAAhB;AACA,YAAIM,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI4O,IAAI,GAAG,oEAAU0wB,SAAV,CAAX;AACA,YAAIr8B,IAAI,GAAG,qEAAW1C,IAAX,EAAiBwB,OAAjB,IAA4B6M,IAAvC;AACArO,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAAI,GAAG,CAA3C;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDW4zC,iCAAiC;AAG5C,mDAAsBl/B,IAAtB,EAAwC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFL,eAAAC,GAAA;AAEyB;;AAHE;AAAA;AAAA,iBAK5C,gCAAuB+J,UAAvB,EAA2CC,QAA3C,EAA6D;AAC3D,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,mCACoC+J,UADpC,cACkDC,QADlD,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAT2C;AAAA;AAAA,iBAW5C,6BAAoB4J,UAApB,EAAwCC,QAAxC,EAA0D;AACxD,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,gCACiC+J,UADjC,cAC+CC,QAD/C,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAf2C;AAAA;AAAA,iBAiB5C,+BAAsB6J,QAAtB,EAAwC;AACtC,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,kCACmCgK,QADnC,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AArB2C;AAAA;AAAA,iBAuB5C,kBAAS4J,UAAT,EAA6BC,QAA7B,EAA+C;AAC7C,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,oBACqB+J,UADrB,cACmCC,QADnC,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA3B2C;AAAA;AAAA,iBA6B5C,qBAAY4J,UAAZ,EAAgCC,QAAhC,EAAkD;AAChD,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,gCACiC+J,UADjC,cAC+CC,QAD/C,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAjC2C;AAAA;AAAA,iBAmC5C,gCAAuB4J,UAAvB,EAA2CC,QAA3C,EAA6D;AAC3D,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,mCACoC+J,UADpC,cACkDC,QADlD,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAvC2C;AAAA;AAAA,iBAyC5C,oCAA2B4J,UAA3B,EAA+CC,QAA/C,EAAiE;AAC/D,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,uCACwC+J,UADxC,cACsDC,QADtD,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AA7C2C;AAAA;AAAA,iBA+C5C,+BAAsB6J,QAAtB,EAAwC;AACtC,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,wCACyCgK,QADzC,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAnD2C;AAAA;AAAA,iBAqD5C,kCAAyB4J,UAAzB,EAA6CC,QAA7C,EAA+D;AAC7D,mBAAO,KAAKjK,IAAL,CACJG,GADI,WACG,KAAKF,GADR,sCACuC+J,UADvC,cACqDC,QADrD,GAEJ7J,IAFI,CAEC,4DAAK,CAAL,CAFD,CAAP;AAGD;AAzD2C;;AAAA;AAAA,S;;;;gBARrC;;;;AAQI8+B,uCAAiC,6DAH7C,iEAAW;AACV1+B,kBAAU,EAAE;AADF,OAAX,CAG6C,E,+EAGhB,+D,EAHgB,GAAjC0+B,iCAAiC,CAAjC;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAIC,WAAW,GAAG;AAChBvvC,YAAI,EAAE9D,IAAI,CAAC8D,IADK;AAEhBb,aAAK,EAAEjD,IAAI,CAACiD,KAFI;AAGhBc,aAAK,EAAE/D,IAAI,CAAC+D,KAHI;AAIhBuvC,aAAK,EAAE,SAASA,KAAT,CAAensC,KAAf,EAAsB;AAC3B,iBAAOA,KAAK,GAAG,CAAR,GAAYnH,IAAI,CAAC8D,IAAL,CAAUqD,KAAV,CAAZ,GAA+BnH,IAAI,CAAC+D,KAAL,CAAWoD,KAAX,CAAtC;AACD,SANe,CAMd;;AANc,OAAlB;AASA,UAAIosC,qBAAqB,GAAG,OAA5B;;AACO,eAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,eAAOA,MAAM,GAAGJ,WAAW,CAACI,MAAD,CAAd,GAAyBJ,WAAW,CAACE,qBAAD,CAAjD;;;;;;;;;;;;;;;;;;ACXF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBe,eAASG,UAAT,CAAoBhxC,aAApB,EAAmCC,cAAnC,EAAmD;AAChE,mFAAa,CAAb,EAAgBzD,SAAhB;AACA,YAAIy0C,mBAAmB,GAAG,sEAAYjxC,aAAZ,CAA1B;AACA,YAAIkxC,oBAAoB,GAAG,sEAAYjxC,cAAZ,CAA3B;AACA,eAAOgxC,mBAAmB,CAAC5wC,OAApB,OAAkC6wC,oBAAoB,CAAC7wC,OAArB,EAAzC;;;;;;;;;;;;;;;;;;AC7BF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBe,eAAS8wC,OAAT,CAAiBC,aAAjB,EAAgCC,cAAhC,EAAgD;AAC7D,mFAAa,CAAb,EAAgB70C,SAAhB;AACA,YAAIkK,QAAQ,GAAG,iEAAO0qC,aAAP,CAAf;AACA,YAAIzqC,SAAS,GAAG,iEAAO0qC,cAAP,CAAhB;AACA,eAAO3qC,QAAQ,CAACrG,OAAT,OAAuBsG,SAAS,CAACtG,OAAV,EAA9B;;;;;;;;;;;;;;;;;;AC3BF;AAAA;;;AAAA;AAAA;AAAA;;AAAe,eAASixC,iBAAT,CAA2BltC,IAA3B,EAAiC;AAC9C,eAAO,YAAY;AACjB,cAAI9F,OAAO,GAAG9B,SAAS,CAACiB,MAAV,GAAmB,CAAnB,IAAwBjB,SAAS,CAAC,CAAD,CAAT,KAAiB0X,SAAzC,GAAqD1X,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF,CADiB,CAEjB;;AACA,cAAI6W,KAAK,GAAG/U,OAAO,CAAC+U,KAAR,GAAgBxM,MAAM,CAACvI,OAAO,CAAC+U,KAAT,CAAtB,GAAwCjP,IAAI,CAAC4oB,YAAzD;AACA,cAAIrgB,MAAM,GAAGvI,IAAI,CAACosC,OAAL,CAAan9B,KAAb,KAAuBjP,IAAI,CAACosC,OAAL,CAAapsC,IAAI,CAAC4oB,YAAlB,CAApC;AACA,iBAAOrgB,MAAP;AACD,SAND;;;;;;;;;;;;;;;;;;ACDF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGe,eAAS4kC,YAAT,CAAsBh1C,SAAtB,EAAiC8B,QAAjC,EAA2C;AACxD,+EAAa,CAAb,EAAgB7B,SAAhB;AACA,YAAI2C,GAAG,GAAG,oEAAUd,QAAV,CAAV;;AACA,YAAIc,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjBA,aAAG,GAAGA,GAAG,GAAG,CAAZ;AACD;;AACD,YAAIH,YAAY,GAAG,CAAnB;AACA,YAAIlC,IAAI,GAAG,iEAAOP,SAAP,CAAX;AACA,YAAI6C,UAAU,GAAGtC,IAAI,CAACuC,SAAL,EAAjB;AACA,YAAIC,SAAS,GAAGH,GAAG,GAAG,CAAtB;AACA,YAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AACA,YAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGP,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCG,GAApC,GAA0CC,UAArD;AACAtC,YAAI,CAAC2C,UAAL,CAAgB3C,IAAI,CAAC4C,UAAL,KAAoBF,IAApC;AACA,eAAO1C,IAAP;;;;;;;;;;;;;;;;;;AChBF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;AAkBe,eAAS00C,QAAT,CAAkBj1C,SAAlB,EAA6BqD,WAA7B,EAA0C;AACvD,mFAAa,CAAb,EAAgBpD,SAAhB;AACA,YAAIqD,MAAM,GAAG,wEAAUD,WAAV,CAAb;AACA,eAAO,oEAAUrD,SAAV,EAAqBsD,MAAM,GAAG,EAA9B,CAAP","file":"default~agenda-agenda-module~contratos-comerciais-contratos-comerciais-module~contratos-contratos-mo~569e6321-es5.js","sourcesContent":["import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousWednesday\n * @category Weekday Helpers\n * @summary When is the previous Wednesday?\n *\n * @description\n * When is the previous Wednesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Wednesday before Jun, 18, 2021?\n * const result = previousWednesday(new Date(2021, 5, 18))\n * //=> Wed June 16 2021 00:00:00\n */\nexport default function previousWednesday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 3);\n}","export default function assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n  return target;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function setUTCDay(dirtyDate, dirtyDay, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * const result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, options);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, options);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\nexport default function formatRFC3339(dirtyDate, options) {\n  var _options$fractionDigi;\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var fractionDigits = Number((_options$fractionDigi = options === null || options === void 0 ? void 0 : options.fractionDigits) !== null && _options$fractionDigi !== void 0 ? _options$fractionDigi : 0);\n\n  // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(toInteger(absoluteOffset / 60), 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2);\n    // If less than 0, the sign is +, because it is ahead of time.\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * const result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseAnyDigitsSigned } from \"../utils.js\";\nexport var TimestampSecondsParser = /*#__PURE__*/function (_Parser) {\n  _inherits(TimestampSecondsParser, _Parser);\n  var _super = _createSuper(TimestampSecondsParser);\n  function TimestampSecondsParser() {\n    var _this;\n    _classCallCheck(this, TimestampSecondsParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 40);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", '*');\n    return _this;\n  }\n  _createClass(TimestampSecondsParser, [{\n    key: \"parse\",\n    value: function parse(dateString) {\n      return parseAnyDigitsSigned(dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    }\n  }]);\n  return TimestampSecondsParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale, _options$roundingMeth;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var roundingMethod = String((_options$roundingMeth = options === null || options === void 0 ? void 0 : options.roundingMethod) !== null && _options$roundingMeth !== void 0 ? _options$roundingMeth : 'round');\n  var roundingMethodFn;\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft);\n\n  // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var defaultUnit = options === null || options === void 0 ? void 0 : options.unit;\n  var unit;\n  if (!defaultUnit) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(defaultUnit);\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions);\n\n    // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions);\n\n    // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions);\n\n    // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && defaultUnit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions);\n\n    // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import differenceInDays from \"../differenceInDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\nexport default function differenceInWeeks(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dateLeft, dateRight) / 7;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInHour } from \"../constants/index.js\";\n/**\n * @name hoursToMilliseconds\n * @category  Conversion Helpers\n * @summary Convert hours to milliseconds.\n *\n * @description\n * Convert a number of hours to a full number of milliseconds.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted to milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to milliseconds:\n * const result = hoursToMilliseconds(2)\n * //=> 7200000\n */\nexport default function hoursToMilliseconds(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * millisecondsInHour);\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour1to12Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1to12Parser, _Parser);\n  var _super = _createSuper(Hour1to12Parser);\n  function Hour1to12Parser() {\n    var _this;\n    _classCallCheck(this, Hour1to12Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['H', 'K', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour1to12Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, dateString);\n        case 'ho':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 12;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  }]);\n  return Hour1to12Parser;\n}(Parser);","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import isSameDay from \"../isSameDay/index.js\";\nimport subDays from \"../subDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\nexport default formatDistance;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\nexport default function areIntervalsOverlapping(intervalLeft, intervalRight, options) {\n  requiredArgs(2, arguments);\n  var leftStartTime = toDate(intervalLeft === null || intervalLeft === void 0 ? void 0 : intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft === null || intervalLeft === void 0 ? void 0 : intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight === null || intervalRight === void 0 ? void 0 : intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight === null || intervalRight === void 0 ? void 0 : intervalRight.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  if (options !== null && options !== void 0 && options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import eachWeekendOfInterval from \"../eachWeekendOfInterval/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * const result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate.getTime())) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\"; // Local week of year\nexport var LocalWeekParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekParser, _Parser);\n  var _super = _createSuper(LocalWeekParser);\n  function LocalWeekParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 100);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalWeekParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, dateString);\n        case 'wo':\n          return match.ordinalNumber(dateString, {\n            unit: 'week'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 53;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    }\n  }]);\n  return LocalWeekParser;\n}(Parser);","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInQuarter } from \"../constants/index.js\";\n/**\n * @name monthsToQuarters\n * @category Conversion Helpers\n * @summary Convert number of months to quarters.\n *\n * @description\n * Convert a number of months to a full number of quarters.\n *\n * @param {number} months - number of months to be converted.\n *\n * @returns {number} the number of months converted in quarters\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 6 months to quarters:\n * const result = monthsToQuarters(6)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = monthsToQuarters(7)\n * //=> 2\n */\nexport default function monthsToQuarters(months) {\n  requiredArgs(1, arguments);\n  var quarters = months / monthsInQuarter;\n  return Math.floor(quarters);\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { parseTimezonePattern } from \"../utils.js\"; // Timezone (ISO-8601. +00:00 is `'Z'`)\nexport var ISOTimezoneWithZParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneWithZParser, _Parser);\n  var _super = _createSuper(ISOTimezoneWithZParser);\n  function ISOTimezoneWithZParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneWithZParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'x']);\n    return _this;\n  }\n  _createClass(ISOTimezoneWithZParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneWithZParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour0to23Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour0to23Parser, _Parser);\n  var _super = _createSuper(Hour0to23Parser);\n  function Hour0to23Parser() {\n    var _this;\n    _classCallCheck(this, Hour0to23Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 'h', 'K', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour0to23Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, dateString);\n        case 'Ho':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 23;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return Hour0to23Parser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits, isLeapYearIndex } from \"../utils.js\";\nexport var DayOfYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayOfYearParser, _Parser);\n  var _super = _createSuper(DayOfYearParser);\n  function DayOfYearParser() {\n    var _this;\n    _classCallCheck(this, DayOfYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"subpriority\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayOfYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n        case 'Do':\n          return match.ordinalNumber(dateString, {\n            unit: 'date'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(date, value) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayOfYearParser;\n}(Parser);","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import getQuarter from \"../getQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * const result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport default function parseISO(argument, options) {\n  var _options$additionalDi;\n  requiredArgs(1, arguments);\n  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n  var dateStrings = splitDateString(argument);\n  var date;\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time);\n    // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n  return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport subDays from \"../subDays/index.js\";\n/**\n * @name previousDay\n * @category Weekday Helpers\n * @summary When is the previous day of the week?\n *\n * @description\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {number} day - day of the week\n * @returns {Date} - the date is the previous day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the previous Monday before Mar, 20, 2020?\n * const result = previousDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 16 2020 00:00:00\n *\n * @example\n * // When is the previous Tuesday before Mar, 21, 2020?\n * const result = previousDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 17 2020 00:00:00\n */\nexport default function previousDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = getDay(date) - day;\n  if (delta <= 0) delta += 7;\n  return subDays(date, delta);\n}","import defaultLocale from \"../../locale/en-US/index.js\";\nexport default defaultLocale;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISODuration\n * @category Common Helpers\n * @summary Format a duration object according as ISO 8601 duration string\n *\n * @description\n * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)\n *\n * @param {Duration} duration - the duration to format\n *\n * @returns {String} The ISO 8601 duration string\n * @throws {TypeError} Requires 1 argument\n * @throws {Error} Argument must be an object\n *\n * @example\n * // Format the given duration as ISO 8601 string\n * const result = formatISODuration({\n *   years: 39,\n *   months: 2,\n *   days: 20,\n *   hours: 7,\n *   minutes: 5,\n *   seconds: 0\n * })\n * //=> 'P39Y2M20DT0H0M0S'\n */\nexport default function formatISODuration(duration) {\n  requiredArgs(1, arguments);\n  if (_typeof(duration) !== 'object') throw new Error('Duration must be an object');\n  var _duration$years = duration.years,\n    years = _duration$years === void 0 ? 0 : _duration$years,\n    _duration$months = duration.months,\n    months = _duration$months === void 0 ? 0 : _duration$months,\n    _duration$days = duration.days,\n    days = _duration$days === void 0 ? 0 : _duration$days,\n    _duration$hours = duration.hours,\n    hours = _duration$hours === void 0 ? 0 : _duration$hours,\n    _duration$minutes = duration.minutes,\n    minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n    _duration$seconds = duration.seconds,\n    seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n  return \"P\".concat(years, \"Y\").concat(months, \"M\").concat(days, \"DT\").concat(hours, \"H\").concat(minutes, \"M\").concat(seconds, \"S\");\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * const result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n  var dates = [];\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n  return dates;\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n// Interfaces\r\nimport { JsonResponse } from 'src/app/models/json-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialVendedoresService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/vendedor`;\r\n  private readonly API_CADASTROS = `https://crm360.monterrey.com.bo/api/comercial/cadastros`;\r\n\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getDetalhesCadastro() {\r\n    return this.http\r\n      .get(`${this.API}/detalhes-cadastro`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedores() {\r\n    return this.http.get(`${this.API}/lista`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVendedoresSucursal(id: number){\r\n    return this.http\r\n    .get(`${this.API}/sucursal-vendedor/${id}`)\r\n  }\r\n\r\n  getGestiones() {\r\n    return this.http.get(`${this.API_CADASTROS}/titulos-agenda/lista?codSituacao=1`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getCarteiraClientes(params?): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes`,\r\n        {\r\n          params: params\r\n        })\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getValidaClienteCarteira(\r\n    codCliente: number\r\n  ): Observable<Object | JsonResponse> {\r\n    return this.http\r\n      .get(`${this.API}/valida-cliente-carteira/${codCliente}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n\r\n  getVinculoOperadores() {\r\n    return this.http\r\n      .get(`${this.API}/vinculo-operadores`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextTuesday\n * @category Weekday Helpers\n * @summary When is the next Tuesday?\n *\n * @description\n * When is the next Tuesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Tuesday after Mar, 22, 2020?\n * const result = nextTuesday(new Date(2020, 2, 22))\n * //=> Tue Mar 24 2020 00:00:00\n */\nexport default function nextTuesday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 2);\n}","import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf();\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInMinute } from \"../constants/index.js\";\n/**\n * @name minutesToSeconds\n * @category Conversion Helpers\n * @summary Convert minutes to seconds.\n *\n * @description\n * Convert a number of minutes to a full number of seconds.\n *\n * @param { number } minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 minutes to seconds\n * const result = minutesToSeconds(2)\n * //=> 120\n */\nexport default function minutesToSeconds(minutes) {\n  requiredArgs(1, arguments);\n  return Math.floor(minutes * secondsInMinute);\n}","import max from \"../max/index.js\";\nimport min from \"../min/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name clamp\n * @category Interval Helpers\n * @summary Return a date bounded by the start and the end of the given interval\n *\n * @description\n * Clamps a date to the lower bound with the start of the interval and the upper\n * bound with the end of the interval.\n *\n * - When the date is less than the start of the interval, the start is returned.\n * - When the date is greater than the end of the interval, the end is returned.\n * - Otherwise the date is returned.\n *\n * @example\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\n * const result = clamp(new Date(2021, 2, 21), {\n *   start: new Date(2021, 2, 22),\n *   end: new Date(2021, 3, 1),\n * })\n * //=> Mon Mar 22 2021 00:00:00\n *\n * @param {Date | Number} date - the date to be bounded\n * @param {Interval} interval - the interval to bound to\n * @returns {Date} the date bounded by the start and the end of the interval\n * @throws {TypeError} 2 arguments required\n */\nexport default function clamp(date, _ref) {\n  var start = _ref.start,\n    end = _ref.end;\n  requiredArgs(2, arguments);\n  return min([max([date, start]), end]);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { daysInWeek } from \"../constants/index.js\";\n/**\n * @name weeksToDays\n * @category Conversion Helpers\n * @summary Convert weeks to days.\n *\n * @description\n * Convert a number of weeks to a full number of days.\n *\n * @param {number} weeks - number of weeks to be converted\n *\n * @returns {number} the number of weeks converted in days\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 weeks into days\n * const result = weeksToDays(2)\n * //=> 14\n */\nexport default function weeksToDays(weeks) {\n  requiredArgs(1, arguments);\n  return Math.floor(weeks * daysInWeek);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * const result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * const result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  date.setFullYear(year);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { parseTimezonePattern } from \"../utils.js\"; // Timezone (ISO-8601)\nexport var ISOTimezoneParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneParser, _Parser);\n  var _super = _createSuper(ISOTimezoneParser);\n  function ISOTimezoneParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'X']);\n    return _this;\n  }\n  _createClass(ISOTimezoneParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigitsSigned } from \"../utils.js\";\nexport var ExtendedYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ExtendedYearParser, _Parser);\n  var _super = _createSuper(ExtendedYearParser);\n  function ExtendedYearParser() {\n    var _this;\n    _classCallCheck(this, ExtendedYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ExtendedYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, dateString);\n      }\n      return parseNDigitsSigned(token.length, dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return ExtendedYearParser;\n}(Parser);","import addMinutes from \"../addMinutes/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport startOfMinute from \"../startOfMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachMinuteOfInterval\n * @category Interval Helpers\n * @summary Return the array of minutes within the specified time interval.\n *\n * @description\n * Returns the array of minutes within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The step must be equal to or greater than 1\n * @throws {TypeError} 1 argument required\n * @returns {Date[]} the array with starts of minutes from the minute of the interval start to the minute of the interval end\n * @throws {RangeError} `options.step` must be a number equal to or greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n * const result = eachMinuteOfInterval({\n *   start: new Date(2014, 9, 14, 13),\n *   end: new Date(2014, 9, 14, 13, 3)\n * })\n * //=> [\n * //   Wed Oct 14 2014 13:00:00,\n * //   Wed Oct 14 2014 13:01:00,\n * //   Wed Oct 14 2014 13:02:00,\n * //   Wed Oct 14 2014 13:03:00\n * // ]\n */\nexport default function eachMinuteOfInterval(interval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var startDate = startOfMinute(toDate(interval.start));\n  var endDate = toDate(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n  if (startTime >= endTime) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number equal to or greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addMinutes(currentDate, step);\n  }\n  return dates;\n}","export default \"::ng-deep comercial-templates-filtro-vendedor-escritorio-date #form-filtro-vendedor-escritorio {\\n  max-width: 300px;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvdGVtcGxhdGVzL2ZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvLWRhdGUvZmlsdHJvLXZlbmRlZG9yLWVzY3JpdG9yaW8tZGF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvdGVtcGxhdGVzL2ZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvLWRhdGUvZmlsdHJvLXZlbmRlZG9yLWVzY3JpdG9yaW8tZGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCB7XHJcbiAgY29tZXJjaWFsLXRlbXBsYXRlcy1maWx0cm8tdmVuZGVkb3ItZXNjcml0b3Jpby1kYXRlIHtcclxuICAgICNmb3JtLWZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvIHtcclxuICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\"; // in the morning, in the afternoon, in the evening, at night\nexport var DayPeriodParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayPeriodParser, _Parser);\n  var _super = _createSuper(DayPeriodParser);\n  function DayPeriodParser() {\n    var _this;\n    _classCallCheck(this, DayPeriodParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayPeriodParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'BBBBB':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'BBBB':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayPeriodParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * const result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary  Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @param {Date|Number} argument - the original date.\n * @param {Object} [formatOptions] - an object with options.\n * @param {'lookup'|'best fit'} [formatOptions.localeMatcher='best fit'] - locale selection algorithm.\n * @param {'narrow'|'short'|'long'} [formatOptions.weekday] - representation the days of the week.\n * @param {'narrow'|'short'|'long'} [formatOptions.era] - representation of eras.\n * @param {'numeric'|'2-digit'} [formatOptions.year] - representation of years.\n * @param {'numeric'|'2-digit'|'narrow'|'short'|'long'} [formatOptions.month='numeric'] - representation of month.\n * @param {'numeric'|'2-digit'} [formatOptions.day='numeric'] - representation of day.\n * @param {'numeric'|'2-digit'} [formatOptions.hour='numeric'] - representation of hours.\n * @param {'numeric'|'2-digit'} [formatOptions.minute] - representation of minutes.\n * @param {'numeric'|'2-digit'} [formatOptions.second] - representation of seconds.\n * @param {'short'|'long'} [formatOptions.timeZoneName] - representation of names of time zones.\n * @param {'basic'|'best fit'} [formatOptions.formatMatcher='best fit'] - format selection algorithm.\n * @param {Boolean} [formatOptions.hour12] - determines whether to use 12-hour time format.\n * @param {String} [formatOptions.timeZone] - the time zone to use.\n * @param {Object} [localeOptions] - an object with locale.\n * @param {String|String[]} [localeOptions.locale] - the locale code\n * @returns {String} the formatted date string.\n * @throws {TypeError} 1 argument required.\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      weekday: 'long',\n *      year: 'numeric',\n *      month: 'long',\n *      day: 'numeric',\n *    }, {\n *      locale: 'de-DE',\n *  })\n * //=> Freitag, 4. Oktober 2019\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      year: 'numeric',\n *      month: 'numeric',\n *      day: 'numeric',\n *      hour: 'numeric',\n *  })\n * //=> 10/4/2019, 12 PM\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      locale: 'ko-KR',\n *  })\n * //=> 2019. 10. 4.\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\nexport default function intlFormat(date, formatOrLocale, localeOptions) {\n  var _localeOptions;\n  requiredArgs(1, arguments);\n  var formatOptions;\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n  return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);\n}\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !('locale' in opts);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { quartersInYear } from \"../constants/index.js\";\n/**\n * @name yearsToQuarters\n * @category Conversion Helpers\n * @summary Convert years to quarters.\n *\n * @description\n * Convert a number of years to a full number of quarters.\n *\n * @param {number} years - number of years to be converted\n *\n * @returns {number} the number of years converted in quarters\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 years to quarters\n * const result = yearsToQuarters(2)\n * //=> 8\n */\nexport default function yearsToQuarters(years) {\n  requiredArgs(1, arguments);\n  return Math.floor(years * quartersInYear);\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextSunday\n * @category Weekday Helpers\n * @summary When is the next Sunday?\n *\n * @description\n * When is the next Sunday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Sunday after Mar, 22, 2020?\n * const result = nextSunday(new Date(2020, 2, 22))\n * //=> Sun Mar 29 2020 00:00:00\n */\nexport default function nextSunday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 0);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInMinute } from \"../constants/index.js\";\n/**\n * @name minutesToMilliseconds\n * @category Conversion Helpers\n * @summary Convert minutes to milliseconds.\n *\n * @description\n * Convert a number of minutes to a full number of milliseconds.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 minutes to milliseconds\n * const result = minutesToMilliseconds(2)\n * //=> 120000\n */\nexport default function minutesToMilliseconds(minutes) {\n  requiredArgs(1, arguments);\n  return Math.floor(minutes * millisecondsInMinute);\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport default function getWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseAnyDigitsSigned } from \"../utils.js\";\nexport var TimestampMillisecondsParser = /*#__PURE__*/function (_Parser) {\n  _inherits(TimestampMillisecondsParser, _Parser);\n  var _super = _createSuper(TimestampMillisecondsParser);\n  function TimestampMillisecondsParser() {\n    var _this;\n    _classCallCheck(this, TimestampMillisecondsParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 20);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", '*');\n    return _this;\n  }\n  _createClass(TimestampMillisecondsParser, [{\n    key: \"parse\",\n    value: function parse(dateString) {\n      return parseAnyDigitsSigned(dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    }\n  }]);\n  return TimestampMillisecondsParser;\n}(Parser);","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isSunday from \"../isSunday/index.js\";\nimport isSaturday from \"../isSaturday/index.js\";\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var startedOnWeekend = isWeekend(date);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7);\n\n  // Get remaining days not part of a full week\n  var restDays = Math.abs(amount % 5);\n\n  // Loops over remaining days\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  }\n\n  // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n  if (startedOnWeekend && isWeekend(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if (isSaturday(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if (isSunday(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  }\n\n  // Restore hours to avoid DST lag\n  date.setHours(hours);\n  return date;\n}","import { millisecondsInHour, millisecondsInMinute, millisecondsInSecond } from \"../../constants/index.js\";\nimport { numericPatterns } from \"./constants.js\";\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest\n  };\n}\nexport function parseNumericPattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nexport function parseTimezonePattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: dateString.slice(1)\n    };\n  }\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), dateString);\n  }\n}\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), dateString);\n  }\n}\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case 'morning':\n      return 4;\n    case 'evening':\n      return 17;\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n  return isCommonEra ? result : 1 - result;\n}\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * const result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * const result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import { getDefaultOptions as getInternalDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport assign from \"../_lib/assign/index.js\";\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions]{@link https://date-fns.org/docs/setDefaultOptions}.\n *\n * @returns {Object} default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport default function getDefaultOptions() {\n  return assign({}, getInternalDefaultOptions());\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInHour } from \"../constants/index.js\";\n/**\n * @name millisecondsToHours\n * @category Conversion Helpers\n * @summary Convert milliseconds to hours.\n *\n * @description\n * Convert a number of milliseconds to a full number of hours.\n *\n * @param {number} milliseconds - number of milliseconds to be converted\n *\n * @returns {number} the number of milliseconds converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 7200000 milliseconds to hours:\n * const result = millisecondsToHours(7200000)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToHours(7199999)\n * //=> 1\n */\nexport default function millisecondsToHours(milliseconds) {\n  requiredArgs(1, arguments);\n  var hours = milliseconds / millisecondsInHour;\n  return Math.floor(hours);\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextMonday\n * @category Weekday Helpers\n * @summary When is the next Monday?\n *\n * @description\n * When is the next Monday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Monday after Mar, 22, 2020?\n * const result = nextMonday(new Date(2020, 2, 22))\n * //=> Mon Mar 23 2020 00:00:00\n */\nexport default function nextMonday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 1);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// ngx-bootstrap\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n// ng-select\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// Modules\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\n\r\n// Components\r\nimport { ComercialTemplatesFiltroVendedorEscritorioComponent } from './filtro-vendedor-escritorio/filtro-vendedor-escritorio.component';\r\nimport { ComercialTemplatesMapaMetasComponent } from './mapa-metas/mapa-metas.component';\r\nimport{ ComercialTemplatesFiltroVendedorEscritorioDateComponent} from './filtro-vendedor-escritorio-date/filtro-vendedor-escritorio-date.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ComercialTemplatesFiltroVendedorEscritorioComponent,\r\n    ComercialTemplatesFiltroVendedorEscritorioDateComponent,\r\n    ComercialTemplatesMapaMetasComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TooltipModule.forRoot(),\r\n    NgSelectModule,\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    ComercialTemplatesFiltroVendedorEscritorioComponent,\r\n    ComercialTemplatesFiltroVendedorEscritorioDateComponent,\r\n    ComercialTemplatesMapaMetasComponent\r\n  ]\r\n})\r\nexport class ComercialTemplatesModule {}\r\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits, mapValue } from \"../utils.js\";\nexport var StandAloneMonthParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneMonthParser, _Parser);\n  var _super = _createSuper(StandAloneMonthParser);\n  function StandAloneMonthParser() {\n    var _this;\n    _classCallCheck(this, StandAloneMonthParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 110);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneMonthParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case 'LL':\n          return mapValue(parseNDigits(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Lo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'month'\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case 'LLL':\n          return match.month(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n        case 'LLLLL':\n          return match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n        case 'LLLL':\n        default:\n          return match.month(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneMonthParser;\n}(Parser);","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInHour } from \"../constants/index.js\";\n/**\n * @name hoursToSeconds\n * @category Conversion Helpers\n * @summary Convert hours to seconds.\n *\n * @description\n * Convert a number of hours to a full number of seconds.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to seconds:\n * const result = hoursToSeconds(2)\n * //=> 7200\n */\nexport default function hoursToSeconds(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * secondsInHour);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import isSameSecond from \"../isSameSecond/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * const result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import startOfSecond from \"../startOfSecond/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second (and hour and day)?\n *\n * @description\n * Are the given dates in the same second (and hour and day)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second (and hour and day)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500 in the same second?\n * const result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n *\n * @example\n * // Are 4 September 2014 06:00:15.000 and 4 September 2014 06:01.15.000 in the same second?\n * const result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 0, 15),\n *   new Date(2014, 8, 4, 6, 1, 15)\n * )\n * //=> false\n *\n * @example\n * // Are 4 September 2014 06:00:15.000 and 5 September 2014 06:00.15.000 in the same second?\n * const result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 0, 15),\n *   new Date(2014, 8, 5, 6, 0, 15)\n * )\n * //=> false\n */\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarYears from \"../differenceInCalendarYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  dateLeft.setFullYear(1584);\n  dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - Number(isLastYearNotFull));\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  NgZone,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\n// amcharts\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\n\r\n// Services\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { ComercialDashboardVendedorService } from '../../dashboard/vendedor/vendedor.service';\r\n\r\n@Component({\r\n  selector: 'comercial-templates-mapa-metas',\r\n  templateUrl: './mapa-metas.component.html',\r\n  styleUrls: ['./mapa-metas.component.scss']\r\n})\r\nexport class ComercialTemplatesMapaMetasComponent implements OnInit, OnDestroy {\r\n  @Input('idVendedor') idVendedor: number;\r\n  @Input('idEscritorio') idEscritorio: number;\r\n  @Input('showHeader') showHeader = true;\r\n  @Input('loaderStyle') loaderStyle = 'full';\r\n\r\n  @Output('onData') onData: EventEmitter<any> = new EventEmitter();\r\n\r\n  private pastChartToneladas: am4charts.GaugeChart;\r\n  private pastChartClientes: am4charts.GaugeChart;\r\n  private pastChartExtras: am4charts.GaugeChart;\r\n\r\n  private currChartToneladas: am4charts.GaugeChart;\r\n  private currChartClientes: am4charts.GaugeChart;\r\n  private currChartExtras: am4charts.GaugeChart;\r\n\r\n  chartLoaded: boolean;\r\n  pastChartsEmpty = false;\r\n  currChartsEmpty = false;\r\n\r\n  pastToneladasEmpty = false;\r\n  pastClientesEmpty = false;\r\n  pastExtrasEmpty = false;\r\n\r\n  currToneladasEmpty = false;\r\n  currClientesEmpty = false;\r\n  currExtrasEmpty = false;\r\n\r\n  pastMonth: string;\r\n  currMonth: string;\r\n  activeMonth: string;\r\n\r\n  constructor(\r\n    private dashboardService: ComercialDashboardVendedorService,\r\n    private zone: NgZone,\r\n    private dateService: DateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.onDestroy();\r\n    this.renderMonthFilters();\r\n    this.getChartsData(this.idEscritorio, this.idVendedor);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDestroy();\r\n  }\r\n\r\n  onDestroy() {\r\n    this.zone.runOutsideAngular(() => {\r\n      if (this.pastChartToneladas) {\r\n        this.pastChartToneladas.dispose();\r\n      }\r\n\r\n      if (this.pastChartClientes) {\r\n        this.pastChartClientes.dispose();\r\n      }\r\n\r\n      if (this.pastChartExtras) {\r\n        this.pastChartExtras.dispose();\r\n      }\r\n\r\n      if (this.currChartToneladas) {\r\n        this.currChartToneladas.dispose();\r\n      }\r\n\r\n      if (this.currChartClientes) {\r\n        this.currChartClientes.dispose();\r\n      }\r\n\r\n      if (this.currChartExtras) {\r\n        this.currChartExtras.dispose();\r\n      }\r\n    });\r\n  }\r\n\r\n  resetChartsData() {\r\n    this.chartLoaded = false;\r\n    this.pastChartsEmpty = false;\r\n    this.currChartsEmpty = false;\r\n    this.pastToneladasEmpty = false;\r\n    this.pastClientesEmpty = false;\r\n    this.pastExtrasEmpty = false;\r\n    this.currToneladasEmpty = false;\r\n    this.currClientesEmpty = false;\r\n    this.currExtrasEmpty = false;\r\n  }\r\n\r\n  getChartsData(escritorio: number, vendedor: number) {\r\n    this.resetChartsData();\r\n\r\n    this.dashboardService\r\n      .getMetas(escritorio, vendedor)\r\n      .subscribe((response: any) => {\r\n        this.renderCharts(response);\r\n      });\r\n  }\r\n\r\n  renderCharts(response: any) {\r\n    if (response.responseCode === 200) {\r\n      this.onData.emit(response.result);\r\n\r\n      if (\r\n        response.result.passado.toneladas &&\r\n        Object.keys(response.result.passado.toneladas).length > 0\r\n      ) {\r\n        this.renderChart(\r\n          'passadoToneladas',\r\n          response.result.passado.toneladas,\r\n          'past-gauge-chart-toneladas'\r\n        );\r\n      } else {\r\n        this.handleEmpty('passadoToneladas');\r\n      }\r\n\r\n      if (\r\n        response.result.passado.clientes &&\r\n        Object.keys(response.result.passado.clientes).length > 0\r\n      ) {\r\n        this.renderChart(\r\n          'passadoClientes',\r\n          response.result.passado.clientes,\r\n          'past-gauge-chart-clientes'\r\n        );\r\n      } else {\r\n        this.handleEmpty('passadoClientes');\r\n      }\r\n\r\n      if (\r\n        response.result.passado.extras &&\r\n        Object.keys(response.result.passado.extras).length > 0\r\n      ) {\r\n        this.renderChart(\r\n          'passadoExtras',\r\n          response.result.passado.extras,\r\n          'past-gauge-chart-extras'\r\n        );\r\n      } else {\r\n        this.handleEmpty('passadoExtras');\r\n      }\r\n\r\n      if (\r\n        !response.result.passado ||\r\n        Object.keys(response.result.passado).length == 0\r\n      ) {\r\n        this.handleEmpty('passadoTodos');\r\n      }\r\n\r\n      if (\r\n        response.result.corrente.toneladas &&\r\n        Object.keys(response.result.corrente.toneladas).length > 0\r\n      ) {\r\n        this.renderChart(\r\n          'correnteToneladas',\r\n          response.result.corrente.toneladas,\r\n          'current-gauge-chart-toneladas'\r\n        );\r\n      } else {\r\n        this.handleEmpty('correnteToneladas');\r\n      }\r\n\r\n      if (\r\n        response.result.corrente.clientes &&\r\n        Object.keys(response.result.corrente.clientes).length > 0\r\n      ) {\r\n        this.renderChart(\r\n          'correnteClientes',\r\n          response.result.corrente.clientes,\r\n          'current-gauge-chart-clientes'\r\n        );\r\n      } else {\r\n        this.handleEmpty('correnteClientes');\r\n      }\r\n\r\n      if (\r\n        response.result.corrente.extras &&\r\n        Object.keys(response.result.corrente.extras).length > 0\r\n      ) {\r\n        this.renderChart(\r\n          'correnteExtras',\r\n          response.result.corrente.extras,\r\n          'current-gauge-chart-extras'\r\n        );\r\n      } else {\r\n        this.handleEmpty('correnteExtras');\r\n      }\r\n\r\n      if (\r\n        !response.result.corrente ||\r\n        Object.keys(response.result.corrente).length == 0\r\n      ) {\r\n        this.handleEmpty('correnteTodos');\r\n      }\r\n    } else {\r\n      this.handleEmpty('passadoToneladas');\r\n      this.handleEmpty('passadoClientes');\r\n      this.handleEmpty('passadoExtras');\r\n      this.handleEmpty('passadoTodos');\r\n      this.handleEmpty('correnteToneladas');\r\n      this.handleEmpty('correnteClientes');\r\n      this.handleEmpty('correnteExtras');\r\n      this.handleEmpty('correnteTodos');\r\n    }\r\n\r\n    this.chartLoaded = true;\r\n  }\r\n\r\n  handleEmpty(type: string) {\r\n    if (type == 'passadoTodos') {\r\n      this.pastChartsEmpty = true;\r\n    } else if (type == 'passadoToneladas') {\r\n      this.pastToneladasEmpty = true;\r\n    } else if (type == 'passadoClientes') {\r\n      this.pastClientesEmpty = true;\r\n    } else if (type == 'passadoExtras') {\r\n      this.pastClientesEmpty = true;\r\n    } else if (type == 'correnteTodos') {\r\n      this.currChartsEmpty = true;\r\n    } else if (type == 'correnteToneladas') {\r\n      this.currToneladasEmpty = true;\r\n    } else if (type == 'correnteClientes') {\r\n      this.currClientesEmpty = true;\r\n    } else if (type == 'correnteExtras') {\r\n      this.currExtrasEmpty = true;\r\n    }\r\n  }\r\n\r\n  renderChart(type: string, data: any, chartId: string) {\r\n    this.zone.runOutsideAngular(() => {\r\n      let chart = am4core.create(chartId, am4charts.GaugeChart);\r\n\r\n      chart.hiddenState.properties.opacity = 0;\r\n\r\n      chart.data = data;\r\n\r\n      chart.innerRadius = am4core.percent(82);\r\n\r\n      let extraGoalValue: number;\r\n      let calcExtraGoalValue = (data.progresso / data.meta - 1) * 100;\r\n\r\n      if (calcExtraGoalValue <= 40) {\r\n        extraGoalValue = 1.4;\r\n      } else if (calcExtraGoalValue > 40 && calcExtraGoalValue < 50) {\r\n        extraGoalValue = 1.5;\r\n      } else if (calcExtraGoalValue > 50 && calcExtraGoalValue < 60) {\r\n        extraGoalValue = 1.6;\r\n      } else if (calcExtraGoalValue > 60 && calcExtraGoalValue < 70) {\r\n        extraGoalValue = 1.7;\r\n      } else if (calcExtraGoalValue > 70 && calcExtraGoalValue < 80) {\r\n        extraGoalValue = 1.8;\r\n      } else if (calcExtraGoalValue > 80 && calcExtraGoalValue < 90) {\r\n        extraGoalValue = 1.9;\r\n      } else if (calcExtraGoalValue > 90 && calcExtraGoalValue < 100) {\r\n        extraGoalValue = 2;\r\n      }\r\n\r\n      const axisMax = data.meta * extraGoalValue;\r\n      const axisUnidade = data.unidade;\r\n      const rangeRedMax = data.meta * 0.88;\r\n      const rangeYellowMax = data.meta * 0.95;\r\n      const rangeGreenMax = data.meta;\r\n      const rangeBlackMax = data.meta * 1.01;\r\n      const labelText = data.tipo;\r\n      const progressValue = data.progresso;\r\n      const goalValue = data.meta;\r\n      const percentValue = data.percentual.toFixed(0);\r\n      let handMax;\r\n\r\n      if (data.progresso > axisMax) {\r\n        handMax = axisMax;\r\n      } else {\r\n        handMax = data.progresso;\r\n      }\r\n\r\n      let axis = chart.xAxes.push(new am4charts.ValueAxis() as any);\r\n      axis.min = 0;\r\n      axis.max = axisMax;\r\n      axis.strictMinMax = false;\r\n      axis.renderer.radius = am4core.percent(80);\r\n      axis.renderer.inside = false;\r\n      axis.renderer.ticks.template.strokeOpacity = 1;\r\n      axis.renderer.ticks.template.length = 10;\r\n      axis.renderer.grid.template.disabled = false;\r\n      axis.renderer.labels.template.radius = 35;\r\n      axis.renderer.labels.template.adapter.add('text', text => {\r\n        return text + axisUnidade;\r\n      });\r\n\r\n      let axis2 = chart.xAxes.push(new am4charts.ValueAxis() as any);\r\n      axis2.min = 0;\r\n      axis2.max = axisMax;\r\n      axis2.renderer.innerRadius = 10;\r\n      axis2.strictMinMax = true;\r\n      axis2.renderer.labels.template.disabled = true;\r\n      axis2.renderer.ticks.template.disabled = true;\r\n      axis2.renderer.grid.template.disabled = true;\r\n\r\n      let rangeRed = axis2.axisRanges.create();\r\n      rangeRed.value = 0;\r\n      rangeRed.endValue = rangeRedMax;\r\n      rangeRed.axisFill.fillOpacity = 1;\r\n      rangeRed.axisFill.fill = am4core.color('#FF4343');\r\n\r\n      let rangeYellow = axis2.axisRanges.create();\r\n      rangeYellow.value = rangeRedMax;\r\n      rangeYellow.endValue = rangeYellowMax;\r\n      rangeYellow.axisFill.fillOpacity = 1;\r\n      rangeYellow.axisFill.fill = am4core.color('#FFEA00');\r\n\r\n      let rangeGreen = axis2.axisRanges.create();\r\n      rangeGreen.value = rangeYellowMax;\r\n      rangeGreen.endValue = rangeGreenMax;\r\n      rangeGreen.axisFill.fillOpacity = 1;\r\n      rangeGreen.axisFill.fill = am4core.color('#4DCC71');\r\n\r\n      let rangeDivider = axis2.axisRanges.create();\r\n      rangeDivider.value = rangeGreenMax;\r\n      rangeDivider.endValue = rangeBlackMax;\r\n      rangeDivider.axisFill.fillOpacity = 1;\r\n      rangeDivider.axisFill.fill = am4core.color('#000000');\r\n\r\n      let rangeOverGoal = axis2.axisRanges.create();\r\n      rangeOverGoal.value = rangeBlackMax;\r\n      rangeOverGoal.endValue = axisMax;\r\n      rangeOverGoal.axisFill.fillOpacity = 1;\r\n      rangeOverGoal.axisFill.fill = am4core.color('#31924C');\r\n\r\n      let label = chart.radarContainer.createChild(am4core.Label);\r\n      label.isMeasured = false;\r\n      label.x = am4core.percent(50);\r\n      label.y = 60;\r\n      label.horizontalCenter = 'middle';\r\n      label.verticalCenter = 'bottom';\r\n      label.html = `<p class=\"text-center mb-0\"><strong>${labelText}</strong></p><p class=\"text-center\">${progressValue}${axisUnidade} de ${goalValue}${axisUnidade} <strong>(${percentValue}%)</strong></p>`;\r\n\r\n      let hand = chart.hands.push(new am4charts.ClockHand());\r\n      hand.axis = axis2;\r\n      hand.innerRadius = am4core.percent(20);\r\n      hand.startWidth = 3;\r\n      hand.pin.disabled = true;\r\n      hand.value = handMax;\r\n\r\n      if (type == 'passadoToneladas') {\r\n        this.pastChartToneladas = chart;\r\n      } else if (type == 'passadoClientes') {\r\n        this.pastChartClientes = chart;\r\n      } else if (type == 'passadoExtras') {\r\n        this.pastChartExtras = chart;\r\n      } else if (type == 'correnteToneladas') {\r\n        this.currChartToneladas = chart;\r\n      } else if (type == 'correnteClientes') {\r\n        this.currChartClientes = chart;\r\n      } else if (type == 'correnteExtras') {\r\n        this.currChartExtras = chart;\r\n      }\r\n    });\r\n  }\r\n\r\n  renderMonthFilters() {\r\n    const currDate = new Date();\r\n    const pastDate = new Date();\r\n\r\n    if (currDate.getDate() === 31) {\r\n      pastDate.setDate(currDate.getDate() - 31);\r\n    } else {\r\n      pastDate.setDate(currDate.getDate() - 30);\r\n    }\r\n\r\n    this.currMonth = this.dateService.getFullMonth(currDate);\r\n    this.pastMonth = this.dateService.getFullMonth(pastDate);\r\n    this.activeMonth = this.currMonth;\r\n  }\r\n\r\n  setMonth(month: string) {\r\n    this.chartLoaded = false;\r\n    this.activeMonth = month;\r\n\r\n    setTimeout(() => {\r\n      this.chartLoaded = true;\r\n    }, 1000);\r\n  }\r\n}\r\n","import addDays from \"../addDays/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week?\n *\n * @description\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {Day} day - day of the week\n * @returns {Date} - the date is the next day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\nexport default function nextDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = day - getDay(date);\n  if (delta <= 0) delta += 7;\n  return addDays(date, delta);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * const result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import parse from \"../parse/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n *\n *\n * @param {String} dateString - the date string to verify\n * @param {String} formatString - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {Boolean}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * const result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * const result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\nexport default function isMatch(dateString, formatString, options) {\n  requiredArgs(2, arguments);\n  return isValid(parse(dateString, formatString, new Date(), options));\n}","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nexport default formatters;","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\";\nexport var AMPMMidnightParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AMPMMidnightParser, _Parser);\n  var _super = _createSuper(AMPMMidnightParser);\n  function AMPMMidnightParser() {\n    var _this;\n    _classCallCheck(this, AMPMMidnightParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'B', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(AMPMMidnightParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'bbbbb':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'bbbb':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return AMPMMidnightParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport var YearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(YearParser, _Parser);\n  var _super = _createSuper(YearParser);\n  function YearParser() {\n    var _this;\n    _classCallCheck(this, YearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(YearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n      switch (token) {\n        case 'y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n        case 'yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      var currentYear = date.getUTCFullYear();\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return YearParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import eachWeekendOfInterval from \"../eachWeekendOfInterval/index.js\";\nimport endOfYear from \"../endOfYear/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * const result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * const result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport setISOWeekYear from \"../setISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * const result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInMinute } from \"../constants/index.js\";\n/**\n * @name millisecondsToMinutes\n * @category Conversion Helpers\n * @summary Convert milliseconds to minutes.\n *\n * @description\n * Convert a number of milliseconds to a full number of minutes.\n *\n * @param {number} milliseconds - number of milliseconds to be converted.\n *\n * @returns {number} the number of milliseconds converted in minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 60000 milliseconds to minutes:\n * const result = millisecondsToMinutes(60000)\n * //=> 1\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToMinutes(119999)\n * //=> 1\n */\nexport default function millisecondsToMinutes(milliseconds) {\n  requiredArgs(1, arguments);\n  var minutes = milliseconds / millisecondsInMinute;\n  return Math.floor(minutes);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * const result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * const result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nexport default function formatDistanceToNowStrict(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), options);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * const result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { daysInWeek } from \"../constants/index.js\";\n/**\n * @name daysToWeeks\n * @category Conversion Helpers\n * @summary Convert days to weeks.\n *\n * @description\n * Convert a number of days to a full number of weeks.\n *\n * @param {number} days - number of days to be converted\n *\n * @returns {number} the number of days converted in weeks\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 14 days to weeks:\n * const result = daysToWeeks(14)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = daysToWeeks(13)\n * //=> 1\n */\nexport default function daysToWeeks(days) {\n  requiredArgs(1, arguments);\n  var weeks = days / daysInWeek;\n  return Math.floor(weeks);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  var _options$nearestTo;\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n  var nearestTo = toInteger((_options$nearestTo = options === null || options === void 0 ? void 0 : options.nearestTo) !== null && _options$nearestTo !== void 0 ? _options$nearestTo : 1);\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundingMethod = getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod);\n  var roundedMinutes = roundingMethod(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Add years and months\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date;\n\n  // Add weeks and days\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\n\r\n@Component({\r\n  selector: 'comercial-templates-filtro-vendedor-escritorio',\r\n  templateUrl: './filtro-vendedor-escritorio.component.html',\r\n  styleUrls: ['./filtro-vendedor-escritorio.component.scss']\r\n})\r\nexport class ComercialTemplatesFiltroVendedorEscritorioComponent\r\n  implements OnInit {\r\n  @Input('profile') profile: any = {};\r\n  @Input('showAll') showAll: boolean;\r\n\r\n  @Output('formValue')\r\n  formValue: EventEmitter<any> = new EventEmitter();\r\n\r\n  loaderFullScreen = true;\r\n\r\n  escritorios: any[];\r\n  vendedores: any[];\r\n  estados: any[];\r\n  diasVisita: any[];\r\n  filteredVendedores: any[] = [];\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserProfile();\r\n    this.setFormFilter();\r\n  }\r\n\r\n  adminOnly(): boolean {\r\n    if (this.profile.coordenador === true || this.profile.gestor === true) {\r\n      return true;\r\n    } else if (\r\n      this.profile.vendedor === true &&\r\n      this.profile.coordenador === false &&\r\n      this.profile.gestor === false\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkUserProfile(): void {\r\n    return this.adminOnly()\r\n      ? this.getEscritoriosVendedores()\r\n      : this.getVinculoOperadores();\r\n  }\r\n\r\n  getEscritoriosVendedores(): void {\r\n    this.loadEscritoriosVendedores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n\r\n          if (this.showAll === true) {\r\n            this.formValue.emit({\r\n              idEscritorio: 0,\r\n              // idVendedor: 0,\r\n              nomeVendedor: 'TODOS LOS VENDEDORES',\r\n              nomeEscritorio: 'TODOS LAS SUCURSALES'\r\n            });\r\n          }\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response[0]['responseCode'] === 200) {\r\n            this.setFormFilter();\r\n            this.escritorios = response[0]['result'];\r\n\r\n            //console.log(this.escritorios)\r\n            // if (this.escritorios[0]>0){\r\n              // this.escritorios[0] =\r\n              // {\r\n              // id: 0,\r\n              // nome: 'todos',\r\n              // idEscritorio: 0\r\n              // }\r\n            //}\r\n\r\n            //this.escritorios.splice(1, 2);\r\n            if (this.escritorios.length > 1 && this.showAll === true) {\r\n                // this.escritorios.unshift({\r\n                //   id: 0,\r\n                //   nome: 'TODAS LAS SUCURSALES'\r\n                // });\r\n            }\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n\r\n          if (response[0]['responseCode'] === 200) {\r\n            this.vendedores = response[1]['result'];\r\n            this.filteredVendedores = this.vendedores;\r\n            if (this.showAll === true) {\r\n              this.filteredVendedores.unshift({\r\n                id: 0,\r\n                nome: 'TODOS LOS VENDEDORES'\r\n              });\r\n            }\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleLoadDependenciesError();\r\n        }\r\n      });\r\n  }\r\n\r\n  loadEscritoriosVendedores(): Observable<any> {\r\n    const escritorios = this.comercialService.getEscritorios();\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n\r\n    return forkJoin([escritorios, vendedores]).pipe(take(1));\r\n  }\r\n\r\n  getVinculoOperadores(): void {\r\n    this.vendedoresService\r\n      .getVinculoOperadores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.setFormFilter();\r\n            this.filteredVendedores = response['result'];\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.handleLoadDependenciesError();\r\n        }\r\n      );\r\n\r\n\r\n  }\r\n\r\n  getPromotorSucursal(): void {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  handleLoadDependenciesError(): void {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  setFormFilter(): void {\r\n    this.form = this.formBuilder.group({\r\n      idEscritorio: [null, Validators.required],\r\n      idVendedor: [null, Validators.required],\r\n      nomeVendedor: [null],\r\n      nomeEscritorio: [null]\r\n    });\r\n\r\n    if (this.adminOnly()) {\r\n      this.form.get('idEscritorio').setValue(0);\r\n      this.form.get('idVendedor').setValue(0);\r\n    } else {\r\n      this.form.controls['idEscritorio'].clearValidators();\r\n    }\r\n  }\r\n\r\n  onInput(): void {\r\n   /*  alert(this.form.value['idVendedor']) */\r\n    if (this.form.valid) {\r\n      if (this.adminOnly()) {\r\n        if (this.form.value['idEscritorio'] === 0) {\r\n          this.form.get('nomeEscritorio').setValue('TODAS LAS SUCURSALES');\r\n        } else {\r\n          for (let i = 0; i < this.escritorios.length; i++) {\r\n            if (this.form.value['idEscritorio'] === this.escritorios[i]['id']) {\r\n              this.form\r\n                .get('nomeEscritorio')\r\n                .setValue(this.escritorios[i]['nome']);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.form.value['idVendedor'] === 0) {\r\n          this.form.get('nomeVendedor').setValue('TODOS LOS VENDEDORES');\r\n        } else {\r\n          for (let i = 0; i < this.vendedores.length; i++) {\r\n            if (this.form.value['idVendedor'] === this.vendedores[i]['id']) {\r\n              this.form\r\n                .get('nomeVendedor')\r\n                .setValue(this.vendedores[i]['nome']);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < this.filteredVendedores.length; i++) {\r\n          if (\r\n            this.form.value['idVendedor'] === this.filteredVendedores[i]['id']\r\n          ) {\r\n            this.form\r\n              .get('idEscritorio')\r\n              .setValue(this.filteredVendedores[i]['idEscritorio']);\r\n            this.form\r\n              .get('nomeVendedor')\r\n              .setValue(this.filteredVendedores[i]['nome']);\r\n          }\r\n        }\r\n      }\r\n      this.formValue.emit(this.form.value);\r\n    }\r\n  }\r\n\r\n  onEscritorioChange(escritorio: any) {\r\n    // alert(1)\r\n    //console.log(escritorio);\r\n    //if (escritorio> 0){\r\n      this.vendedoresService.getVendedoresSucursal(escritorio).subscribe(\r\n        (response: any) => {\r\n          //console.log(response)\r\n          if (response['success'] === true) {\r\n            //this.setFormFilter();\r\n            this.filteredVendedores = response['data'];\r\n\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        },\r\n      )\r\n    //}\r\n    // //else{\r\n    //   this.vendedoresService.getVendedoresSucursal(escritorio.idEscritorio)\r\n\r\n    // }\r\n    this.form.get('idVendedor').setValue(0);\r\n  }\r\n\r\n  filterVendedores(idEscritorio: any) {\r\n    this.form.controls['idVendedor'].setValue(null);\r\n\r\n    if (idEscritorio == 0) {\r\n      this.filteredVendedores = [\r\n        {\r\n          id: 0,\r\n          nome: 'TODOS LOS VENDEDORES',\r\n          idEscritorio: 0\r\n        }\r\n      ];\r\n      this.form.controls['idVendedor'].setValue(idEscritorio);\r\n      this.onInput();\r\n    } else {\r\n      this.filteredVendedores = this.vendedores.filter(\r\n        value => value.idEscritorio == idEscritorio\r\n      );\r\n\r\n      if (this.filteredVendedores.length > 0 && this.showAll === true) {\r\n        this.filteredVendedores.unshift({\r\n          id: 0,\r\n          nome: ''\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n}\r\n","import { secondsInDay, secondsInHour, secondsInMinute, secondsInMonth, secondsInQuarter, secondsInWeek, secondsInYear } from \"../constants/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport differenceInCalendarQuarters from \"../differenceInCalendarQuarters/index.js\";\nimport differenceInCalendarWeeks from \"../differenceInCalendarWeeks/index.js\";\nimport differenceInCalendarYears from \"../differenceInCalendarYears/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name intlFormatDistance\n * @category Common Helpers\n * @summary Formats distance between two dates in a human-readable format\n * @description\n * The function calculates the difference between two dates and formats it as a human-readable string.\n *\n * The function will pick the most appropriate unit depending on the distance between dates. For example, if the distance is a few hours, it might return `x hours`. If the distance is a few months, it might return `x months`.\n *\n * You can also specify a unit to force using it regardless of the distance to get a result like `123456 hours`.\n *\n * See the table below for the unit picking logic:\n *\n * | Distance between dates | Result (past)  | Result (future) |\n * | ---------------------- | -------------- | --------------- |\n * | 0 seconds              | now            | now             |\n * | 1-59 seconds           | X seconds ago  | in X seconds    |\n * | 1-59 minutes           | X minutes ago  | in X minutes    |\n * | 1-23 hours             | X hours ago    | in X hours      |\n * | 1 day                  | yesterday      | tomorrow        |\n * | 2-6 days               | X days ago     | in X days       |\n * | 7 days                 | last week      | next week       |\n * | 8 days-1 month         | X weeks ago    | in X weeks      |\n * | 1 month                | last month     | next month      |\n * | 2-3 months             | X months ago   | in X months     |\n * | 1 quarter              | last quarter   | next quarter    |\n * | 2-3 quarters           | X quarters ago | in X quarters   |\n * | 1 year                 | last year      | next year       |\n * | 2+ years               | X years ago    | in X years      |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with.\n * @param {Object} [options] - an object with options.\n * @param {String} [options.unit] - formats the distance with the given unit ('year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second').\n * @param {String|String[]} [options.locale] - the locale to use.\n * @param {String} [options.localeMatcher='best fit'] - the locale matching algorithm to use. Other value: 'lookup'.\n * See MDN for details [Locale identification and negotiation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)\n * @param {String} [options.numeric='auto'] - the output message format. The values are 'auto' (e.g. `yesterday`), 'always'(e.g. `1 day ago`).\n * @param {String} [options.style='long'] - the length of the result. The values are: 'long' (e.g. `1 month`), 'short' (e.g. 'in 1 mo.'), 'narrow' (e.g. 'in 1 mo.').\n * The narrow one could be similar to the short one for some locales.\n * @returns {String} the distance in words according to language-sensitive relative time formatting.\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.unit` must not be invalid Unit\n * @throws {RangeError} `options.locale` must not be invalid locale\n * @throws {RangeError} `options.localeMatcher` must not be invalid localeMatcher\n * @throws {RangeError} `options.numeric` must not be invalid numeric\n * @throws {RangeError} `options.style` must not be invalid style\n *\n * @example\n * // What is the distance between the dates when the fist date is after the second?\n * intlFormatDistance(\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   new Date(1986, 3, 4, 10, 30, 0)\n * )\n * //=> 'in 1 hour'\n *\n * // What is the distance between the dates when the fist date is before the second?\n * intlFormatDistance(\n *   new Date(1986, 3, 4, 10, 30, 0),\n *   new Date(1986, 3, 4, 11, 30, 0)\n * )\n * //=> '1 hour ago'\n *\n * @example\n * // Use the unit option to force the function to output the result in quarters. Without setting it, the example would return \"next year\"\n * intlFormatDistance(\n *   new Date(1987, 6, 4, 10, 30, 0),\n *   new Date(1986, 3, 4, 10, 30, 0),\n *   { unit: 'quarter' }\n * )\n * //=> 'in 5 quarters'\n *\n * @example\n * // Use the locale option to get the result in Spanish. Without setting it, the example would return \"in 1 hour\".\n * intlFormatDistance(\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   new Date(1986, 3, 4, 10, 30, 0),\n *   { locale: 'es' }\n * )\n * //=> 'dentro de 1 hora'\n *\n * @example\n * // Use the numeric option to force the function to use numeric values. Without setting it, the example would return \"tomorrow\".\n * intlFormatDistance(\n *   new Date(1986, 3, 5, 11, 30, 0),\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   { numeric: 'always' }\n * )\n * //=> 'in 1 day'\n *\n * @example\n * // Use the style option to force the function to use short values. Without setting it, the example would return \"in 2 years\".\n * intlFormatDistance(\n *   new Date(1988, 3, 4, 11, 30, 0),\n *   new Date(1986, 3, 4, 11, 30, 0),\n *   { style: 'short' }\n * )\n * //=> 'in 2 yr'\n */\nexport default function intlFormatDistance(date, baseDate, options) {\n  requiredArgs(2, arguments);\n  var value = 0;\n  var unit;\n  var dateLeft = toDate(date);\n  var dateRight = toDate(baseDate);\n  if (!(options !== null && options !== void 0 && options.unit)) {\n    // Get the unit based on diffInSeconds calculations if no unit is specified\n    var diffInSeconds = differenceInSeconds(dateLeft, dateRight); // The smallest unit\n\n    if (Math.abs(diffInSeconds) < secondsInMinute) {\n      value = differenceInSeconds(dateLeft, dateRight);\n      unit = 'second';\n    } else if (Math.abs(diffInSeconds) < secondsInHour) {\n      value = differenceInMinutes(dateLeft, dateRight);\n      unit = 'minute';\n    } else if (Math.abs(diffInSeconds) < secondsInDay && Math.abs(differenceInCalendarDays(dateLeft, dateRight)) < 1) {\n      value = differenceInHours(dateLeft, dateRight);\n      unit = 'hour';\n    } else if (Math.abs(diffInSeconds) < secondsInWeek && (value = differenceInCalendarDays(dateLeft, dateRight)) && Math.abs(value) < 7) {\n      unit = 'day';\n    } else if (Math.abs(diffInSeconds) < secondsInMonth) {\n      value = differenceInCalendarWeeks(dateLeft, dateRight);\n      unit = 'week';\n    } else if (Math.abs(diffInSeconds) < secondsInQuarter) {\n      value = differenceInCalendarMonths(dateLeft, dateRight);\n      unit = 'month';\n    } else if (Math.abs(diffInSeconds) < secondsInYear) {\n      if (differenceInCalendarQuarters(dateLeft, dateRight) < 4) {\n        // To filter out cases that are less than a year but match 4 quarters\n        value = differenceInCalendarQuarters(dateLeft, dateRight);\n        unit = 'quarter';\n      } else {\n        value = differenceInCalendarYears(dateLeft, dateRight);\n        unit = 'year';\n      }\n    } else {\n      value = differenceInCalendarYears(dateLeft, dateRight);\n      unit = 'year';\n    }\n  } else {\n    // Get the value if unit is specified\n    unit = options === null || options === void 0 ? void 0 : options.unit;\n    if (unit === 'second') {\n      value = differenceInSeconds(dateLeft, dateRight);\n    } else if (unit === 'minute') {\n      value = differenceInMinutes(dateLeft, dateRight);\n    } else if (unit === 'hour') {\n      value = differenceInHours(dateLeft, dateRight);\n    } else if (unit === 'day') {\n      value = differenceInCalendarDays(dateLeft, dateRight);\n    } else if (unit === 'week') {\n      value = differenceInCalendarWeeks(dateLeft, dateRight);\n    } else if (unit === 'month') {\n      value = differenceInCalendarMonths(dateLeft, dateRight);\n    } else if (unit === 'quarter') {\n      value = differenceInCalendarQuarters(dateLeft, dateRight);\n    } else if (unit === 'year') {\n      value = differenceInCalendarYears(dateLeft, dateRight);\n    }\n  }\n  var rtf = new Intl.RelativeTimeFormat(options === null || options === void 0 ? void 0 : options.locale, {\n    localeMatcher: options === null || options === void 0 ? void 0 : options.localeMatcher,\n    numeric: (options === null || options === void 0 ? void 0 : options.numeric) || 'auto',\n    style: options === null || options === void 0 ? void 0 : options.style\n  });\n  return rtf.format(value, unit);\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n<div class=\\\"row justify-content-center\\\" *ngIf=\\\"!loaderFullScreen\\\">\\r\\n  <div class=\\\"col-12 mb-4\\\">\\r\\n    <div class=\\\"mtc-title text-center\\\">Filtrar resultados</div>\\r\\n  </div>\\r\\n  <form id=\\\"form-filtro-vendedor-escritorio\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"form-row\\\" *ngIf=\\\"adminOnly()\\\" style=\\\"z-index: 0;\\\">\\r\\n      <div class=\\\"form-group col\\\">\\r\\n        <label for=\\\"idEscritorio\\\">Sucursal</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"escritorios\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          [closeOnSelect]=\\\"true\\\"\\r\\n          labelForId=\\\"escritorio\\\"\\r\\n          bindLabel=\\\"nome\\\"\\r\\n          bindValue=\\\"id\\\"\\r\\n          formControlName=\\\"idEscritorio\\\"\\r\\n          (change)=\\\"onEscritorioChange($event.id)\\\"\\r\\n          style=\\\"z-index: 1;\\\"\\r\\n          >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\" style=\\\"z-index: 0;\\\">\\r\\n      <div class=\\\"form-group col\\\">\\r\\n        <label for=\\\"idVendedor\\\">Promotor</label>\\r\\n        <ng-select\\r\\n          [searchable]=\\\"true\\\"\\r\\n          [clearable]=\\\"false\\\"\\r\\n          [items]=\\\"filteredVendedores\\\"\\r\\n          [virtualScroll]=\\\"true\\\"\\r\\n          labelForId=\\\"vendedor\\\"\\r\\n          bindLabel=\\\"nome\\\"\\r\\n          bindValue=\\\"id\\\"\\r\\n          formControlName=\\\"idVendedor\\\"\\r\\n          (change)=\\\"onInput()\\\"\\r\\n          >\\r\\n        </ng-select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\";","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport add from \"../add/index.js\";\nimport differenceInDays from \"../differenceInDays/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport differenceInYears from \"../differenceInYears/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\nexport default function intervalToDuration(interval) {\n  requiredArgs(1, arguments);\n  var start = toDate(interval.start);\n  var end = toDate(interval.end);\n  if (isNaN(start.getTime())) throw new RangeError('Start Date is invalid');\n  if (isNaN(end.getTime())) throw new RangeError('End Date is invalid');\n  var duration = {};\n  duration.years = Math.abs(differenceInYears(end, start));\n  var sign = compareAsc(end, start);\n  var remainingMonths = add(start, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(end, remainingMonths));\n  var remainingDays = add(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(end, remainingDays));\n  var remainingHours = add(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(end, remainingHours));\n  var remainingMinutes = add(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(end, remainingMinutes));\n  var remainingSeconds = add(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(end, remainingSeconds));\n  return duration;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits } from \"../utils.js\";\nexport var StandAloneQuarterParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneQuarterParser, _Parser);\n  var _super = _createSuper(StandAloneQuarterParser);\n  function StandAloneQuarterParser() {\n    var _this;\n    _classCallCheck(this, StandAloneQuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneQuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case 'qo':\n          return match.ordinalNumber(dateString, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n        case 'qqq':\n          return match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'qqqqq':\n          return match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n        case 'qqqq':\n        default:\n          return match.quarter(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneQuarterParser;\n}(Parser);","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInSecond } from \"../constants/index.js\";\n/**\n * @name secondsToMilliseconds\n * @category Conversion Helpers\n * @summary Convert seconds to milliseconds.\n *\n * @description\n * Convert a number of seconds to a full number of milliseconds.\n *\n * @param {number} seconds - number of seconds to be converted\n *\n * @returns {number} the number of seconds converted in milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 seconds into milliseconds\n * const result = secondsToMilliseconds(2)\n * //=> 2000\n */\nexport default function secondsToMilliseconds(seconds) {\n  requiredArgs(1, arguments);\n  return seconds * millisecondsInSecond;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { DateToSystemTimezoneSetter } from \"./_lib/Setter.js\";\nimport { parsers } from \"./_lib/parsers/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  var setters = [new DateToSystemTimezoneSetter()];\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter in longFormatters) {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n  var _iterator = _createForOfIteratorHelper(tokens),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var token = _step.value;\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token)) {\n        throwProtectedError(token, formatString, dirtyDateString);\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {\n        throwProtectedError(token, formatString, dirtyDateString);\n      }\n      var firstCharacter = token[0];\n      var parser = parsers[firstCharacter];\n      if (parser) {\n        var incompatibleTokens = parser.incompatibleTokens;\n        if (Array.isArray(incompatibleTokens)) {\n          var incompatibleToken = usedTokens.find(function (usedToken) {\n            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;\n          });\n          if (incompatibleToken) {\n            throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n          }\n        } else if (parser.incompatibleTokens === '*' && usedTokens.length > 0) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n        }\n        usedTokens.push({\n          token: firstCharacter,\n          fullToken: token\n        });\n        var parseResult = parser.run(dateString, token, locale.match, subFnOptions);\n        if (!parseResult) {\n          return {\n            v: new Date(NaN)\n          };\n        }\n        setters.push(parseResult.setter);\n        dateString = parseResult.rest;\n      } else {\n        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n        }\n\n        // Replace two single quote characters with one single quote character\n        if (token === \"''\") {\n          token = \"'\";\n        } else if (firstCharacter === \"'\") {\n          token = cleanEscapedString(token);\n        }\n\n        // Cut token from string, or, if string doesn't match the token, return Invalid Date\n        if (dateString.indexOf(token) === 0) {\n          dateString = dateString.slice(token.length);\n        } else {\n          return {\n            v: new Date(NaN)\n          };\n        }\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n      if (_typeof(_ret) === \"object\") return _ret.v;\n    }\n\n    // Check if the remaining input contains something other than whitespace\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var setter = _step2.value;\n      if (!setter.validate(utcDate, subFnOptions)) {\n        return new Date(NaN);\n      }\n      var result = setter.set(utcDate, flags, subFnOptions);\n      // Result is tuple (date, flags)\n      if (Array.isArray(result)) {\n        utcDate = result[0];\n        assign(flags, result[1]);\n        // Result is date\n      } else {\n        utcDate = result;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return utcDate;\n}\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits } from \"../utils.js\";\nexport var QuarterParser = /*#__PURE__*/function (_Parser) {\n  _inherits(QuarterParser, _Parser);\n  var _super = _createSuper(QuarterParser);\n  function QuarterParser() {\n    var _this;\n    _classCallCheck(this, QuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(QuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case 'Qo':\n          return match.ordinalNumber(dateString, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n        case 'QQQ':\n          return match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'QQQQQ':\n          return match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n        case 'QQQQ':\n        default:\n          return match.quarter(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return QuarterParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\"; // Day of week\nexport var DayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayParser, _Parser);\n  var _super = _createSuper(DayParser);\n  function DayParser() {\n    var _this;\n    _classCallCheck(this, DayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n        case 'EEEEE':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n        case 'EEEEEE':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n        case 'EEEE':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayParser;\n}(Parser);","import isSameMinute from \"../isSameMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * const result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigitsSigned } from \"../utils.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\"; // ISO week-numbering year\nexport var ISOWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOWeekYearParser, _Parser);\n  var _super = _createSuper(ISOWeekYearParser);\n  function ISOWeekYearParser() {\n    var _this;\n    _classCallCheck(this, ISOWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISOWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, dateString);\n      }\n      return parseNDigitsSigned(token.length, dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    }\n  }]);\n  return ISOWeekYearParser;\n}(Parser);","import isSameYear from \"../isSameYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * const result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  if (day === 0) {\n    day = 7;\n  }\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nexport var MonthParser = /*#__PURE__*/function (_Parser) {\n  _inherits(MonthParser, _Parser);\n  var _super = _createSuper(MonthParser);\n  function MonthParser() {\n    var _this;\n    _classCallCheck(this, MonthParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 110);\n    return _this;\n  }\n  _createClass(MonthParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case 'MM':\n          return mapValue(parseNDigits(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Mo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'month'\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case 'MMM':\n          return match.month(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n        case 'MMMMM':\n          return match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n        case 'MMMM':\n        default:\n          return match.month(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return MonthParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n * - `2000-03-15T05:20:10Z`: Without milliseconds\n * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n * - A `Date` instance will be cloned\n * - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|(.)(\\d{2}):?(\\d{2})?)?/);\n    if (parts) {\n      // Group 8 matches the sign\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == '-' ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == '-' ? -1 : 1), +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n    return new Date(NaN);\n  }\n  return toDate(argument);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousFriday\n * @category Weekday Helpers\n * @summary When is the previous Friday?\n *\n * @description\n * When is the previous Friday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Friday before Jun, 19, 2021?\n * const result = previousFriday(new Date(2021, 5, 19))\n * //=> Fri June 18 2021 00:00:00\n */\nexport default function previousFriday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 5);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * const result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getISOWeek from \"../getISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport format from \"../format/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(addDays(new Date(), -6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nexport default function formatRelative(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$weekStartsOn, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var weekStartsOn = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.weekStartsOn) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : 0);\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n  var diff = differenceInCalendarDays(date, baseDate);\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n  var token;\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n  return format(date, formatStr, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\"; // Stand-alone local day of week\nexport var StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneLocalDayParser, _Parser);\n  var _super = _createSuper(StandAloneLocalDayParser);\n  function StandAloneLocalDayParser() {\n    var _this;\n    _classCallCheck(this, StandAloneLocalDayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneLocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n        case 'co':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'day'\n          }), valueCallback);\n        // Tue\n        case 'ccc':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n        case 'ccccc':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n        case 'cccccc':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n        case 'cccc':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneLocalDayParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { minutesInHour } from \"../constants/index.js\";\n/**\n * @name minutesToHours\n * @category Conversion Helpers\n * @summary Convert minutes to hours.\n *\n * @description\n * Convert a number of minutes to a full number of hours.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 140 minutes to hours:\n * const result = minutesToHours(120)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = minutesToHours(179)\n * //=> 2\n */\nexport default function minutesToHours(minutes) {\n  requiredArgs(1, arguments);\n  var hours = minutes / minutesInHour;\n  return Math.floor(hours);\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\nexport default function formatISO9075(dirtyDate, options) {\n  var _options$format, _options$representati;\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : '';\n\n  // Representation is either 'date' or 'complete'\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4);\n\n    // yyyyMMdd or yyyy-MM-dd.\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  }\n\n  // Representation is either 'time' or 'complete'\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2);\n\n    // If there's also date, separate it with time with a space\n    var separator = result === '' ? '' : ' ';\n\n    // HHmmss or HH:mm:ss.\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param {Number} unixTime - the given Unix timestamp (in seconds)\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * const result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","import { EraParser } from \"./EraParser.js\";\nimport { YearParser } from \"./YearParser.js\";\nimport { LocalWeekYearParser } from \"./LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./ExtendedYearParser.js\";\nimport { QuarterParser } from \"./QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./MonthParser.js\";\nimport { StandAloneMonthParser } from \"./StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./ISOWeekParser.js\";\nimport { DateParser } from \"./DateParser.js\";\nimport { DayOfYearParser } from \"./DayOfYearParser.js\";\nimport { DayParser } from \"./DayParser.js\";\nimport { LocalDayParser } from \"./LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./ISODayParser.js\";\nimport { AMPMParser } from \"./AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./Hour1To24Parser.js\";\nimport { MinuteParser } from \"./MinuteParser.js\";\nimport { SecondParser } from \"./SecondParser.js\";\nimport { FractionOfSecondParser } from \"./FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./TimestampMillisecondsParser.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport var parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser()\n};","import toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/lightFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 001, ..., 999                |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\n\nexport default function lightFormat(dirtyDate, formatStr) {\n  requiredArgs(2, arguments);\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var tokens = formatStr.match(formattingTokensRegExp);\n\n  // The only case when formattingTokensRegExp doesn't match the string is when it's empty\n  if (!tokens) return '';\n  var result = tokens.map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = formatters[firstCharacter];\n    if (formatter) {\n      return formatter(utcDate, substring);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matches = input.match(escapedStringRegExp);\n  if (!matches) {\n    return input;\n  }\n  return matches[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * const result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\n// Services\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\nimport { ComercialLoteService } from '../../lote/lote.service';\r\nimport { ComercialLoteRutaComponent } from '../../lote/ruta/ruta.component';\r\n\r\n\r\n@Component({\r\n  selector: 'comercial-templates-filtro-vendedor-escritorio-date',\r\n  templateUrl: './filtro-vendedor-escritorio-date.component.html',\r\n  styleUrls: ['./filtro-vendedor-escritorio-date.component.scss']\r\n})\r\nexport class ComercialTemplatesFiltroVendedorEscritorioDateComponent\r\n  implements OnInit {\r\n  @Input('profile') profile: any = {};\r\n  @Input('showAll') showAll: boolean;\r\n  @Output('formValue')\r\n  formValue: EventEmitter<any> = new EventEmitter();\r\n\r\n  loaderFullScreen = true;\r\n\r\n  escritorios: any[];\r\n  vendedores: any[];\r\n  estados: any[];\r\n  /*  diasVisita: any[]; */\r\n  filteredVendedores: any[] = [];\r\n  ultima_visita = [];\r\n\r\n  idVendedor: any;\r\n  idEscritorio: any;\r\n  idUltimaVisita: any;\r\n  idSucursal: any;\r\n  idEstado: any;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n\r\n    private location: Location,\r\n    private comercialService: ComercialService,\r\n    private vendedoresService: ComercialVendedoresService,\r\n    private formBuilder: FormBuilder,\r\n    private pnotifyService: PNotifyService,\r\n    private loteService: ComercialLoteService,\r\n    private rutaService: ComercialLoteRutaComponent\r\n\r\n  ) {\r\n    this.pnotifyService.getPNotify();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserProfile();\r\n    this.form = this.formBuilder.group({\r\n      sucursal_id: [],\r\n      vendedor_id: [],\r\n      visita_id: [],\r\n      estado_id: []\r\n    });\r\n    this.setFormFilter();\r\n  }\r\n\r\n\r\n  setFormFilter(): void {\r\n    this.form = this.formBuilder.group({\r\n      sucursal_id: [null, Validators.required],\r\n      vendedor_id: [null, Validators.required],\r\n      visita_id: [null],\r\n      estado_id: [null]\r\n    });\r\n  }\r\n\r\n\r\n  filtrarClientes() {\r\n    const idSucursal = this.form.get('sucursal_id').value;\r\n    const idVendedor = this.form.get('vendedor_id').value;\r\n    const idUltimaVisita = this.form.get('visita_id').value;\r\n    const idEstado = this.form.get('estado_id').value;\r\n    const params = {\r\n      idSucursal: idSucursal,\r\n      idVendedor: idVendedor,\r\n      idUltimaVisita: idUltimaVisita,\r\n      idEstado: idEstado\r\n    };\r\n    this.rutaService.filtrarMapas(params);\r\n    const vendedorSeleccionado = idVendedor;\r\n    this.rutaService.indiceVendedor = vendedorSeleccionado\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  adminOnly(): boolean {\r\n    if (this.profile.coordenador === true || this.profile.gestor === true) {\r\n      return true;\r\n    } else if (\r\n      this.profile.vendedor === true &&\r\n      this.profile.coordenador === false &&\r\n      this.profile.gestor === false\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkUserProfile(): void {\r\n    this.getEscritoriosVendedores()\r\n  }\r\n\r\n\r\n  getEscritoriosVendedores(): void {\r\n    this.loadEscritoriosVendedores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n\r\n          if (this.showAll === true) {\r\n            this.formValue.emit({\r\n              idEscritorio: 0,\r\n              idVendedor: 0,\r\n              nomeVendedor: 'TODOS OS VENDEDORES',\r\n              nomeEscritorio: 'TODOS OS ESCRITÓRIOS'\r\n            });\r\n          }\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response[0]['responseCode'] === 200) {\r\n            this.setFormFilter();\r\n            this.escritorios = response[0]['result'];\r\n\r\n            const escritorioNoVacio = this.escritorios.find(item => item.nome !== null && item.nome !== '');\r\n\r\n            if (escritorioNoVacio) {\r\n              /*  // Se encontró un valor no vacío\r\n               console.log(escritorioNoVacio.nome); */\r\n            } else {\r\n              /*   // No se encontró ningún valor no vacío\r\n              console.log(\"No hay valores no vacíos en el array\"); */\r\n            }\r\n\r\n            if (this.escritorios.length > 1 && this.showAll === true) {\r\n              this.escritorios.unshift({\r\n                id: 0,\r\n                nome: 'TODAS LAS SUCURSALES'\r\n              });\r\n            }\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n\r\n          if (response[0]['responseCode'] === 200) {\r\n            this.vendedores = response[1]['result'];\r\n            this.filteredVendedores = this.vendedores;\r\n            /* if (this.showAll === true) { */\r\n            this.filteredVendedores.unshift({\r\n              id: 0,\r\n              nome: 'TODOS'\r\n            });\r\n            /* } */\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.handleLoadDependenciesError();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  ultimaVisita = [\r\n    { id: 0, nombre: 'Todos' },\r\n    { id: 1, nombre: '>= 90 días' },\r\n    { id: 2, nombre: '>= 45 días' },\r\n    { id: 3, nombre: '>= 30 días' },\r\n    { id: 4, nombre: '>= 15 días' },\r\n    { id: 5, nombre: '<= 15 días' },\r\n  ];\r\n\r\n  estadoCliente = [\r\n    { id: 0, nombre: 'Todos' },\r\n    { id: 1, nombre: 'Activo' },\r\n    { id: 2, nombre: 'Inactivo' },\r\n  ];\r\n\r\n\r\n\r\n  loadEscritoriosVendedores(): Observable<any> {\r\n    const escritorios = this.comercialService.getEscritorios();\r\n    const vendedores = this.vendedoresService.getVendedores();\r\n\r\n    return forkJoin([escritorios, vendedores]).pipe(take(1));\r\n  }\r\n\r\n\r\n\r\n  getVinculoOperadores(): void {\r\n    this.vendedoresService\r\n      .getVinculoOperadores()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loaderFullScreen = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response['responseCode'] === 200) {\r\n            this.setFormFilter();\r\n            this.filteredVendedores = response['result'];\r\n          } else {\r\n            this.handleLoadDependenciesError();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.handleLoadDependenciesError();\r\n        }\r\n      );\r\n  }\r\n\r\n  handleLoadDependenciesError(): void {\r\n    this.pnotifyService.error();\r\n    this.location.back();\r\n  }\r\n\r\n  /* setFormFilter(): void {\r\n    this.form = this.formBuilder.group({\r\n      idEscritorio: [null, Validators.required],\r\n      idVendedor: [null, Validators.required],\r\n      nomeVendedor: [null],\r\n      nomeEscritorio: [null]\r\n    });\r\n\r\n    if (this.adminOnly()) {\r\n      this.form.get('idEscritorio').setValue(0);\r\n      this.form.get('idVendedor').setValue(0);\r\n    } else {\r\n      this.form.controls['idEscritorio'].clearValidators();\r\n    }\r\n  } */\r\n\r\n  onInput(): void {\r\n    if (this.form.valid) {\r\n      if (this.adminOnly()) {\r\n        if (this.form.value['idEscritorio'] === 0) {\r\n          this.form.get('nomeEscritorio').setValue('TODOS OS ESCRITÓRIOS');\r\n        } else {\r\n          for (let i = 0; i < this.escritorios.length; i++) {\r\n            if (this.form.value['idEscritorio'] === this.escritorios[i]['id']) {\r\n              this.form\r\n                .get('nomeEscritorio')\r\n                .setValue(this.escritorios[i]['nome']);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.form.value['idVendedor'] === 0) {\r\n          this.form.get('nomeVendedor').setValue('TODOS OS VENDEDORES');\r\n        } else {\r\n          for (let i = 0; i < this.vendedores.length; i++) {\r\n            if (this.form.value['idVendedor'] === this.vendedores[i]['id']) {\r\n              this.form\r\n                .get('nomeVendedor')\r\n                .setValue(this.vendedores[i]['nome']);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < this.filteredVendedores.length; i++) {\r\n          if (\r\n            this.form.value['idVendedor'] === this.filteredVendedores[i]['id']\r\n          ) {\r\n            this.form\r\n              .get('idEscritorio')\r\n              .setValue(this.filteredVendedores[i]['idEscritorio']);\r\n            this.form\r\n              .get('nomeVendedor')\r\n              .setValue(this.filteredVendedores[i]['nome']);\r\n          }\r\n        }\r\n      }\r\n      this.formValue.emit(this.form.value);\r\n    }\r\n  }\r\n\r\n  /*  onEscritorioChange(escritorio: any) {\r\n     this.filterVendedores(escritorio['id']);\r\n     this.form.get('idVendedor').setValue(0);\r\n   } */\r\n\r\n  filterVendedores(idEscritorio: any) {\r\n    this.form.controls['idVendedor'].setValue(null);\r\n\r\n    if (idEscritorio == 0) {\r\n      this.filteredVendedores = [\r\n        {\r\n          id: 0,\r\n          nome: 'TODOS OS VENDEDORES',\r\n          idEscritorio: 0\r\n        }\r\n      ];\r\n      this.form.controls['idVendedor'].setValue(idEscritorio);\r\n      this.onInput();\r\n    } else {\r\n      this.filteredVendedores = this.vendedores.filter(\r\n        value => value.idEscritorio == idEscritorio\r\n      );\r\n\r\n      if (this.filteredVendedores.length > 0 && this.showAll === true) {\r\n        this.filteredVendedores.unshift({\r\n          id: 0,\r\n          nome: 'TODOS OS VENDEDORES'\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addSeconds from \"../addSeconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits, normalizeTwoDigitYear, mapValue } from \"../utils.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\n// Local week-numbering year\nexport var LocalWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekYearParser, _Parser);\n  var _super = _createSuper(LocalWeekYearParser);\n  function LocalWeekYearParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n      switch (token) {\n        case 'Y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n        case 'Yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    }\n  }]);\n  return LocalWeekYearParser;\n}(Parser);","import startOfQuarter from \"../startOfQuarter/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same quarter (and year)?\n *\n * @description\n * Are the given dates in the same quarter (and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same quarter?\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import { getDefaultOptions, setDefaultOptions as setInternalDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDefaultOptions\n * @category Common Helpers\n * @summary Set default options including locale.\n * @pure false\n *\n * @description\n * Sets the defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * @param {Object} newOptions - an object with options.\n * @param {Locale} [newOptions.locale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [newOptions.weekStartsOn] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [newOptions.firstWeekContainsDate] - the day of January, which is always in the first week of the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Set global locale:\n * import { es } from 'date-fns/locale'\n * setDefaultOptions({ locale: es })\n * const result = format(new Date(2014, 8, 2), 'PPPP')\n * //=> 'martes, 2 de septiembre de 2014'\n *\n * @example\n * // Start of the week for 2 September 2014:\n * const result = startOfWeek(new Date(2014, 8, 2))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Start of the week for 2 September 2014,\n * // when we set that week starts on Monday by default:\n * setDefaultOptions({ weekStartsOn: 1 })\n * const result = startOfWeek(new Date(2014, 8, 2))\n * //=> Mon Sep 01 2014 00:00:00\n *\n * @example\n * // Manually set options take priority over default options:\n * setDefaultOptions({ weekStartsOn: 1 })\n * const result = startOfWeek(new Date(2014, 8, 2), { weekStartsOn: 0 })\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Remove the option by setting it to `undefined`:\n * setDefaultOptions({ weekStartsOn: 1 })\n * setDefaultOptions({ weekStartsOn: undefined })\n * const result = startOfWeek(new Date(2014, 8, 2))\n * //=> Sun Aug 31 2014 00:00:00\n */\nexport default function setDefaultOptions(newOptions) {\n  requiredArgs(1, arguments);\n  var result = {};\n  var defaultOptions = getDefaultOptions();\n  for (var property in defaultOptions) {\n    if (Object.prototype.hasOwnProperty.call(defaultOptions, property)) {\n      ;\n      result[property] = defaultOptions[property];\n    }\n  }\n  for (var _property in newOptions) {\n    if (Object.prototype.hasOwnProperty.call(newOptions, _property)) {\n      if (newOptions[_property] === undefined) {\n        delete result[_property];\n      } else {\n        ;\n        result[_property] = newOptions[_property];\n      }\n    }\n  }\n  setInternalDefaultOptions(result);\n}","import endOfWeek from \"../endOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray;\n  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n\n    // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (_typeof(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import addHours from \"../addHours/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachHourOfInterval\n * @category Interval Helpers\n * @summary Return the array of hours within the specified time interval.\n *\n * @description\n * Return the array of hours within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00\n * const result = eachHourOfInterval({\n *   start: new Date(2014, 9, 6, 12),\n *   end: new Date(2014, 9, 6, 15)\n * })\n * //=> [\n * //   Mon Oct 06 2014 12:00:00,\n * //   Mon Oct 06 2014 13:00:00,\n * //   Mon Oct 06 2014 14:00:00,\n * //   Mon Oct 06 2014 15:00:00\n * // ]\n */\nexport default function eachHourOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setMinutes(0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addHours(currentDate, step);\n  }\n  return dates;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addQuarters from \"../addQuarters/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * const result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds'\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\nexport default function formatDuration(duration, options) {\n  var _ref, _options$locale, _options$format, _options$zero, _options$delimiter;\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var format = (_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : defaultFormat;\n  var zero = (_options$zero = options === null || options === void 0 ? void 0 : options.zero) !== null && _options$zero !== void 0 ? _options$zero : false;\n  var delimiter = (_options$delimiter = options === null || options === void 0 ? void 0 : options.delimiter) !== null && _options$delimiter !== void 0 ? _options$delimiter : ' ';\n  if (!locale.formatDistance) {\n    return '';\n  }\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var value = duration[unit];\n    if (typeof value === 'number' && (zero || duration[unit])) {\n      return acc.concat(locale.formatDistance(token, value));\n    }\n    return acc;\n  }, []).join(delimiter);\n  return result;\n}","import isSameHour from \"../isSameHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * const result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * const result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import addBusinessDays from \"../addBusinessDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * const result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import isSameISOWeek from \"../isSameISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * const result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { isLeapYearIndex, parseNDigits, parseNumericPattern } from \"../utils.js\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// Day of the month\nexport var DateParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DateParser, _Parser);\n  var _super = _createSuper(DateParser);\n  function DateParser() {\n    var _this;\n    _classCallCheck(this, DateParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"subPriority\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DateParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, dateString);\n        case 'do':\n          return match.ordinalNumber(dateString, {\n            unit: 'date'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(date, value) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DateParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import addHours from \"../addHours/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * const result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\"; // ISO day of week\nexport var ISODayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISODayParser, _Parser);\n  var _super = _createSuper(ISODayParser);\n  function ISODayParser() {\n    var _this;\n    _classCallCheck(this, ISODayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISODayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n        return value;\n      };\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, dateString);\n        // 2nd\n        case 'io':\n          return match.ordinalNumber(dateString, {\n            unit: 'day'\n          });\n        // Tue\n        case 'iii':\n          return mapValue(match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // T\n        case 'iiiii':\n          return mapValue(match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // Tu\n        case 'iiiiii':\n          return mapValue(match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // Tuesday\n        case 'iiii':\n        default:\n          return mapValue(match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 7;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date = setUTCISODay(date, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return ISODayParser;\n}(Parser);","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * const result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","export default \"<div id=\\\"metas\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showHeader\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">\\r\\n            <ng-template #metasTooltipTemplate>\\r\\n                <p><b><u>Faturamento total:</u></b> Todas as vendas realizadas até o momento versus a meta do mês em toneladas.</p>\\r\\n                <p><b><u>Clientes com compra:</u></b> Todos os clientes que efetuaram compras até o momento versus a meta do mês.</p>\\r\\n                <p class=\\\"mb-0\\\"><b><u>Meta bônus (Civil ou Longos Industriais):</u></b> Todas as vendas realizadas até o momento na linha específica versus a meta em toneladas (Civil não inclui Corte e  Dobra/Armado e Longos Industriais não inclui Perfil W/H).</p>\\r\\n            </ng-template>\\r\\n            <i\\r\\n              class=\\\"far fa-question-circle p-2\\\"\\r\\n              [tooltip]=\\\"metasTooltipTemplate\\\"\\r\\n              placement=\\\"right\\\">\\r\\n            </i>\\r\\n            Mapa de metas\\r\\n          </div>\\r\\n          <div class=\\\"btn-group btn-group-sm\\\" *ngIf=\\\"!pastChartsEmpty || !currChartsEmpty\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-light\\\"\\r\\n              (click)=\\\"setMonth(pastMonth)\\\"\\r\\n              [ngClass]=\\\"{'active': activeMonth == pastMonth}\\\"\\r\\n              [disabled]=\\\"!chartLoaded\\\">\\r\\n              <strong>{{ pastMonth }}</strong>\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-light active\\\"\\r\\n              (click)=\\\"setMonth(currMonth)\\\"\\r\\n              [ngClass]=\\\"{'active': activeMonth == currMonth}\\\"\\r\\n              [disabled]=\\\"!chartLoaded\\\">\\r\\n              <strong>{{ currMonth }}</strong>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row align-items-center justify-content-center h-100\\\" [hidden]=\\\"!chartLoaded || activeMonth == currMonth\\\">\\r\\n      <div class=\\\"col-md-4 mb-4 d-flex justify-content-center\\\" [hidden]=\\\"pastToneladasEmpty || pastChartsEmpty\\\">\\r\\n        <div id=\\\"past-gauge-chart-toneladas\\\" class=\\\"amcharts\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 mb-4 d-flex justify-content-center\\\" [hidden]=\\\"pastClientesEmpty || pastChartsEmpty\\\">\\r\\n        <div id=\\\"past-gauge-chart-clientes\\\" class=\\\"amcharts\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 mb-4 d-flex justify-content-center\\\" [hidden]=\\\"pastExtrasEmpty || pastChartsEmpty\\\">\\r\\n        <div id=\\\"past-gauge-chart-extras\\\" class=\\\"amcharts\\\"></div>\\r\\n      </div>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"pastChartsEmpty\\\"></empty-result>\\r\\n    </div>\\r\\n    <div class=\\\"row align-items-center justify-content-center h-100\\\" [hidden]=\\\"!chartLoaded || activeMonth == pastMonth\\\">\\r\\n      <div class=\\\"col-md-4 mb-4 d-flex justify-content-center\\\" [hidden]=\\\"currToneladasEmpty || currChartsEmpty\\\">\\r\\n        <div id=\\\"current-gauge-chart-toneladas\\\" class=\\\"amcharts\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 mb-4 d-flex justify-content-center\\\" [hidden]=\\\"currClientesEmpty || currChartsEmpty\\\">\\r\\n        <div id=\\\"current-gauge-chart-clientes\\\" class=\\\"amcharts\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 mb-4 d-flex justify-content-center\\\" [hidden]=\\\"currExtrasEmpty || currChartsEmpty\\\">\\r\\n        <div id=\\\"current-gauge-chart-extras\\\" class=\\\"amcharts\\\"></div>\\r\\n      </div>\\r\\n      <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"currChartsEmpty\\\"></empty-result>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!chartLoaded\\\">\\r\\n      <div class=\\\"row align-items-center justify-content-center h-100\\\" *ngIf=\\\"loaderStyle === 'full'\\\">\\r\\n        <div class=\\\"col text-center\\\">\\r\\n          <div class=\\\"spinner-border text-dark\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"mt-2 d-flex w-100\\\" *ngIf=\\\"loaderStyle === 'tiny'\\\">\\r\\n        <div class=\\\"spinner-border spinner-border-sm text-dark my-auto mr-2\\\"></div>\\r\\n        <strong>Carregando mapa de metas...</strong>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import getWeek from \"../getWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport default function setWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, options) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { quartersInYear } from \"../constants/index.js\";\n/**\n * @name quartersToYears\n * @category Conversion Helpers\n * @summary Convert number of quarters to years.\n *\n * @description\n * Convert a number of quarters to a full number of years.\n *\n * @param {number} quarters - number of quarters to be converted\n *\n * @returns {number} the number of quarters converted in years\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 8 quarters to years\n * const result = quartersToYears(8)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = quartersToYears(11)\n * //=> 2\n */\nexport default function quartersToYears(quarters) {\n  requiredArgs(1, arguments);\n  var years = quarters / quartersInYear;\n  return Math.floor(years);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour0To11Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour0To11Parser, _Parser);\n  var _super = _createSuper(Hour0To11Parser);\n  function Hour0To11Parser() {\n    var _this;\n    _classCallCheck(this, Hour0To11Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['h', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour0To11Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, dateString);\n        case 'Ko':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  }]);\n  return Hour0To11Parser;\n}(Parser);","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\nexport default function isWithinInterval(dirtyDate, interval) {\n  requiredArgs(2, arguments);\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  return time >= startTime && time <= endTime;\n}","import eachDayOfInterval from \"../eachDayOfInterval/index.js\";\nimport isSunday from \"../isSunday/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n  return weekends;\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { take, retry } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ComercialLoteService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial`;\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  getAcessos() {\r\n    return this.http.get(`${this.API}/acessos`).pipe(take(1), retry(2));\r\n  }\r\n\r\n  getRutaClientes(params: any) {\r\n    console.log('ruta');\r\n    return this.http.get(`${this.API}/ruta/clientes`, { params }).pipe(\r\n      take(1),\r\n      retry(2)\r\n    );\r\n  }\r\n\r\n  guardarRutas(params: any) {\r\n\r\n    return this.http.post(`${this.API}/ruta/compromiso/salvar`, params).pipe(\r\n      take(1),\r\n    );\r\n  }\r\n  /*  getCompromissos(params: any) {\r\n     let httpParams = new HttpParams();\r\n\r\n     for (let param in params) {\r\n       httpParams = httpParams.append(param, params[param]);\r\n     }\r\n\r\n     return this.http\r\n       .get(`${this.API}/compromissos/lista`, { params: httpParams })\r\n       .pipe(take(1), retry(2));\r\n   }\r\n  */\r\n\r\n  /*\r\n    getCompromisso(id: any) {\r\n      return this.http\r\n        .get(`${this.API}/compromissos/detalhes/${id}`)\r\n        .pipe(take(1), retry(2));\r\n    }\r\n\r\n    private saveCompromisso(record: any) {\r\n      return this.http\r\n        .post(`${this.API}/compromisso/salvar`, record)\r\n        .pipe(take(1), retry(2));\r\n    }\r\n\r\n    private updateCompromisso(record: any) {\r\n      return this.http\r\n        .put(`${this.API}/compromisso/atualizar`, record)\r\n        .pipe(take(1), retry(2));\r\n    }\r\n\r\n    private rescheduleCompromisso(record: any) {\r\n      return this.http\r\n        .put(`${this.API}/compromisso/reagendar`, record)\r\n        .pipe(take(1), retry(2));\r\n    }\r\n\r\n    save(action: string, record: any) {\r\n      if (action == 'editar') {\r\n        return this.updateCompromisso(record);\r\n      } else if (action == 'reagendar') {\r\n        return this.rescheduleCompromisso(record);\r\n      }\r\n\r\n      return this.saveCompromisso(record);\r\n    }\r\n\r\n    deleteCompromisso(id: any) {\r\n      return this.http\r\n        .delete(`${this.API}/compromisso/excluir/${id}`)\r\n        .pipe(take(1), retry(2));\r\n    } */\r\n  deleteCompromisso(id: any) {\r\n    return this.http\r\n      .delete(`${this.API}/compromisso/excluir/${id}`)\r\n      .pipe(take(1), retry(2));\r\n  }\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import addMinutes from \"../addMinutes/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import differenceInMonths from \"../differenceInMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of quarters between the given dates.\n *\n * @description\n * Get the number of quarters between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\nexport default function differenceInQuarters(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dateLeft, dateRight) / 3;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import addDays from \"../addDays/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * const result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n *\n * // How many business days are between\n * // 30 November 2021 and 1 November 2021?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 30),\n *   new Date(2021, 10, 1)\n * )\n * //=> 21\n *\n * // How many business days are between\n * // 1 November 2021 and 1 December 2021?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 1),\n *   new Date(2021, 11, 1)\n * )\n * //=> -22\n *\n * // How many business days are between\n * // 1 November 2021 and 1 November 2021 ?\n * const result = differenceInBusinessDays(\n *   new Date(2021, 10, 1),\n *   new Date(2021, 10, 1)\n * )\n * //=> 0\n */\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return NaN;\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7);\n\n  // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n  return result === 0 ? 0 : result;\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextFriday\n * @category Weekday Helpers\n * @summary When is the next Friday?\n *\n * @description\n * When is the next Friday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Friday after Mar, 22, 2020?\n * const result = nextFriday(new Date(2020, 2, 22))\n * //=> Fri Mar 27 2020 00:00:00\n */\nexport default function nextFriday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 5);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n// Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n// 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\nvar daysInYear = 365.2425;\n\n/**\n * @name milliseconds\n * @category Millisecond Helpers\n * @summary\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * @description\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * One month is a year divided by 12.\n *\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // 1 year in milliseconds\n * milliseconds({ years: 1 })\n * //=> 31556952000\n *\n * // 3 months in milliseconds\n * milliseconds({ months: 3 })\n * //=> 7889238000\n */\nexport default function milliseconds(_ref) {\n  var years = _ref.years,\n    months = _ref.months,\n    weeks = _ref.weeks,\n    days = _ref.days,\n    hours = _ref.hours,\n    minutes = _ref.minutes,\n    seconds = _ref.seconds;\n  requiredArgs(1, arguments);\n  var totalDays = 0;\n  if (years) totalDays += years * daysInYear;\n  if (months) totalDays += months * (daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  var totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.round(totalSeconds * 1000);\n}","// This file is generated automatically by `scripts/build/indices.ts`. Please, don't change it.\nexport { default as add } from \"./add/index.js\";\nexport { default as addBusinessDays } from \"./addBusinessDays/index.js\";\nexport { default as addDays } from \"./addDays/index.js\";\nexport { default as addHours } from \"./addHours/index.js\";\nexport { default as addISOWeekYears } from \"./addISOWeekYears/index.js\";\nexport { default as addMilliseconds } from \"./addMilliseconds/index.js\";\nexport { default as addMinutes } from \"./addMinutes/index.js\";\nexport { default as addMonths } from \"./addMonths/index.js\";\nexport { default as addQuarters } from \"./addQuarters/index.js\";\nexport { default as addSeconds } from \"./addSeconds/index.js\";\nexport { default as addWeeks } from \"./addWeeks/index.js\";\nexport { default as addYears } from \"./addYears/index.js\";\nexport { default as areIntervalsOverlapping } from \"./areIntervalsOverlapping/index.js\";\nexport { default as clamp } from \"./clamp/index.js\";\nexport { default as closestIndexTo } from \"./closestIndexTo/index.js\";\nexport { default as closestTo } from \"./closestTo/index.js\";\nexport { default as compareAsc } from \"./compareAsc/index.js\";\nexport { default as compareDesc } from \"./compareDesc/index.js\";\nexport { default as daysToWeeks } from \"./daysToWeeks/index.js\";\nexport { default as differenceInBusinessDays } from \"./differenceInBusinessDays/index.js\";\nexport { default as differenceInCalendarDays } from \"./differenceInCalendarDays/index.js\";\nexport { default as differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears/index.js\";\nexport { default as differenceInCalendarISOWeeks } from \"./differenceInCalendarISOWeeks/index.js\";\nexport { default as differenceInCalendarMonths } from \"./differenceInCalendarMonths/index.js\";\nexport { default as differenceInCalendarQuarters } from \"./differenceInCalendarQuarters/index.js\";\nexport { default as differenceInCalendarWeeks } from \"./differenceInCalendarWeeks/index.js\";\nexport { default as differenceInCalendarYears } from \"./differenceInCalendarYears/index.js\";\nexport { default as differenceInDays } from \"./differenceInDays/index.js\";\nexport { default as differenceInHours } from \"./differenceInHours/index.js\";\nexport { default as differenceInISOWeekYears } from \"./differenceInISOWeekYears/index.js\";\nexport { default as differenceInMilliseconds } from \"./differenceInMilliseconds/index.js\";\nexport { default as differenceInMinutes } from \"./differenceInMinutes/index.js\";\nexport { default as differenceInMonths } from \"./differenceInMonths/index.js\";\nexport { default as differenceInQuarters } from \"./differenceInQuarters/index.js\";\nexport { default as differenceInSeconds } from \"./differenceInSeconds/index.js\";\nexport { default as differenceInWeeks } from \"./differenceInWeeks/index.js\";\nexport { default as differenceInYears } from \"./differenceInYears/index.js\";\nexport { default as eachDayOfInterval } from \"./eachDayOfInterval/index.js\";\nexport { default as eachHourOfInterval } from \"./eachHourOfInterval/index.js\";\nexport { default as eachMinuteOfInterval } from \"./eachMinuteOfInterval/index.js\";\nexport { default as eachMonthOfInterval } from \"./eachMonthOfInterval/index.js\";\nexport { default as eachQuarterOfInterval } from \"./eachQuarterOfInterval/index.js\";\nexport { default as eachWeekOfInterval } from \"./eachWeekOfInterval/index.js\";\nexport { default as eachWeekendOfInterval } from \"./eachWeekendOfInterval/index.js\";\nexport { default as eachWeekendOfMonth } from \"./eachWeekendOfMonth/index.js\";\nexport { default as eachWeekendOfYear } from \"./eachWeekendOfYear/index.js\";\nexport { default as eachYearOfInterval } from \"./eachYearOfInterval/index.js\";\nexport { default as endOfDay } from \"./endOfDay/index.js\";\nexport { default as endOfDecade } from \"./endOfDecade/index.js\";\nexport { default as endOfHour } from \"./endOfHour/index.js\";\nexport { default as endOfISOWeek } from \"./endOfISOWeek/index.js\";\nexport { default as endOfISOWeekYear } from \"./endOfISOWeekYear/index.js\";\nexport { default as endOfMinute } from \"./endOfMinute/index.js\";\nexport { default as endOfMonth } from \"./endOfMonth/index.js\";\nexport { default as endOfQuarter } from \"./endOfQuarter/index.js\";\nexport { default as endOfSecond } from \"./endOfSecond/index.js\";\nexport { default as endOfToday } from \"./endOfToday/index.js\";\nexport { default as endOfTomorrow } from \"./endOfTomorrow/index.js\";\nexport { default as endOfWeek } from \"./endOfWeek/index.js\";\nexport { default as endOfYear } from \"./endOfYear/index.js\";\nexport { default as endOfYesterday } from \"./endOfYesterday/index.js\";\nexport { default as format } from \"./format/index.js\";\nexport { default as formatDistance } from \"./formatDistance/index.js\";\nexport { default as formatDistanceStrict } from \"./formatDistanceStrict/index.js\";\nexport { default as formatDistanceToNow } from \"./formatDistanceToNow/index.js\";\nexport { default as formatDistanceToNowStrict } from \"./formatDistanceToNowStrict/index.js\";\nexport { default as formatDuration } from \"./formatDuration/index.js\";\nexport { default as formatISO } from \"./formatISO/index.js\";\nexport { default as formatISO9075 } from \"./formatISO9075/index.js\";\nexport { default as formatISODuration } from \"./formatISODuration/index.js\";\nexport { default as formatRFC3339 } from \"./formatRFC3339/index.js\";\nexport { default as formatRFC7231 } from \"./formatRFC7231/index.js\";\nexport { default as formatRelative } from \"./formatRelative/index.js\";\nexport { default as fromUnixTime } from \"./fromUnixTime/index.js\";\nexport { default as getDate } from \"./getDate/index.js\";\nexport { default as getDay } from \"./getDay/index.js\";\nexport { default as getDayOfYear } from \"./getDayOfYear/index.js\";\nexport { default as getDaysInMonth } from \"./getDaysInMonth/index.js\";\nexport { default as getDaysInYear } from \"./getDaysInYear/index.js\";\nexport { default as getDecade } from \"./getDecade/index.js\";\nexport { default as getDefaultOptions } from \"./getDefaultOptions/index.js\";\nexport { default as getHours } from \"./getHours/index.js\";\nexport { default as getISODay } from \"./getISODay/index.js\";\nexport { default as getISOWeek } from \"./getISOWeek/index.js\";\nexport { default as getISOWeekYear } from \"./getISOWeekYear/index.js\";\nexport { default as getISOWeeksInYear } from \"./getISOWeeksInYear/index.js\";\nexport { default as getMilliseconds } from \"./getMilliseconds/index.js\";\nexport { default as getMinutes } from \"./getMinutes/index.js\";\nexport { default as getMonth } from \"./getMonth/index.js\";\nexport { default as getOverlappingDaysInIntervals } from \"./getOverlappingDaysInIntervals/index.js\";\nexport { default as getQuarter } from \"./getQuarter/index.js\";\nexport { default as getSeconds } from \"./getSeconds/index.js\";\nexport { default as getTime } from \"./getTime/index.js\";\nexport { default as getUnixTime } from \"./getUnixTime/index.js\";\nexport { default as getWeek } from \"./getWeek/index.js\";\nexport { default as getWeekOfMonth } from \"./getWeekOfMonth/index.js\";\nexport { default as getWeekYear } from \"./getWeekYear/index.js\";\nexport { default as getWeeksInMonth } from \"./getWeeksInMonth/index.js\";\nexport { default as getYear } from \"./getYear/index.js\";\nexport { default as hoursToMilliseconds } from \"./hoursToMilliseconds/index.js\";\nexport { default as hoursToMinutes } from \"./hoursToMinutes/index.js\";\nexport { default as hoursToSeconds } from \"./hoursToSeconds/index.js\";\nexport { default as intervalToDuration } from \"./intervalToDuration/index.js\";\nexport { default as intlFormat } from \"./intlFormat/index.js\";\nexport { default as intlFormatDistance } from \"./intlFormatDistance/index.js\";\nexport { default as isAfter } from \"./isAfter/index.js\";\nexport { default as isBefore } from \"./isBefore/index.js\";\nexport { default as isDate } from \"./isDate/index.js\";\nexport { default as isEqual } from \"./isEqual/index.js\";\nexport { default as isExists } from \"./isExists/index.js\";\nexport { default as isFirstDayOfMonth } from \"./isFirstDayOfMonth/index.js\";\nexport { default as isFriday } from \"./isFriday/index.js\";\nexport { default as isFuture } from \"./isFuture/index.js\";\nexport { default as isLastDayOfMonth } from \"./isLastDayOfMonth/index.js\";\nexport { default as isLeapYear } from \"./isLeapYear/index.js\";\nexport { default as isMatch } from \"./isMatch/index.js\";\nexport { default as isMonday } from \"./isMonday/index.js\";\nexport { default as isPast } from \"./isPast/index.js\";\nexport { default as isSameDay } from \"./isSameDay/index.js\";\nexport { default as isSameHour } from \"./isSameHour/index.js\";\nexport { default as isSameISOWeek } from \"./isSameISOWeek/index.js\";\nexport { default as isSameISOWeekYear } from \"./isSameISOWeekYear/index.js\";\nexport { default as isSameMinute } from \"./isSameMinute/index.js\";\nexport { default as isSameMonth } from \"./isSameMonth/index.js\";\nexport { default as isSameQuarter } from \"./isSameQuarter/index.js\";\nexport { default as isSameSecond } from \"./isSameSecond/index.js\";\nexport { default as isSameWeek } from \"./isSameWeek/index.js\";\nexport { default as isSameYear } from \"./isSameYear/index.js\";\nexport { default as isSaturday } from \"./isSaturday/index.js\";\nexport { default as isSunday } from \"./isSunday/index.js\";\nexport { default as isThisHour } from \"./isThisHour/index.js\";\nexport { default as isThisISOWeek } from \"./isThisISOWeek/index.js\";\nexport { default as isThisMinute } from \"./isThisMinute/index.js\";\nexport { default as isThisMonth } from \"./isThisMonth/index.js\";\nexport { default as isThisQuarter } from \"./isThisQuarter/index.js\";\nexport { default as isThisSecond } from \"./isThisSecond/index.js\";\nexport { default as isThisWeek } from \"./isThisWeek/index.js\";\nexport { default as isThisYear } from \"./isThisYear/index.js\";\nexport { default as isThursday } from \"./isThursday/index.js\";\nexport { default as isToday } from \"./isToday/index.js\";\nexport { default as isTomorrow } from \"./isTomorrow/index.js\";\nexport { default as isTuesday } from \"./isTuesday/index.js\";\nexport { default as isValid } from \"./isValid/index.js\";\nexport { default as isWednesday } from \"./isWednesday/index.js\";\nexport { default as isWeekend } from \"./isWeekend/index.js\";\nexport { default as isWithinInterval } from \"./isWithinInterval/index.js\";\nexport { default as isYesterday } from \"./isYesterday/index.js\";\nexport { default as lastDayOfDecade } from \"./lastDayOfDecade/index.js\";\nexport { default as lastDayOfISOWeek } from \"./lastDayOfISOWeek/index.js\";\nexport { default as lastDayOfISOWeekYear } from \"./lastDayOfISOWeekYear/index.js\";\nexport { default as lastDayOfMonth } from \"./lastDayOfMonth/index.js\";\nexport { default as lastDayOfQuarter } from \"./lastDayOfQuarter/index.js\";\nexport { default as lastDayOfWeek } from \"./lastDayOfWeek/index.js\";\nexport { default as lastDayOfYear } from \"./lastDayOfYear/index.js\";\nexport { default as lightFormat } from \"./lightFormat/index.js\";\nexport { default as max } from \"./max/index.js\";\nexport { default as milliseconds } from \"./milliseconds/index.js\";\nexport { default as millisecondsToHours } from \"./millisecondsToHours/index.js\";\nexport { default as millisecondsToMinutes } from \"./millisecondsToMinutes/index.js\";\nexport { default as millisecondsToSeconds } from \"./millisecondsToSeconds/index.js\";\nexport { default as min } from \"./min/index.js\";\nexport { default as minutesToHours } from \"./minutesToHours/index.js\";\nexport { default as minutesToMilliseconds } from \"./minutesToMilliseconds/index.js\";\nexport { default as minutesToSeconds } from \"./minutesToSeconds/index.js\";\nexport { default as monthsToQuarters } from \"./monthsToQuarters/index.js\";\nexport { default as monthsToYears } from \"./monthsToYears/index.js\";\nexport { default as nextDay } from \"./nextDay/index.js\";\nexport { default as nextFriday } from \"./nextFriday/index.js\";\nexport { default as nextMonday } from \"./nextMonday/index.js\";\nexport { default as nextSaturday } from \"./nextSaturday/index.js\";\nexport { default as nextSunday } from \"./nextSunday/index.js\";\nexport { default as nextThursday } from \"./nextThursday/index.js\";\nexport { default as nextTuesday } from \"./nextTuesday/index.js\";\nexport { default as nextWednesday } from \"./nextWednesday/index.js\";\nexport { default as parse } from \"./parse/index.js\";\nexport { default as parseISO } from \"./parseISO/index.js\";\nexport { default as parseJSON } from \"./parseJSON/index.js\";\nexport { default as previousDay } from \"./previousDay/index.js\";\nexport { default as previousFriday } from \"./previousFriday/index.js\";\nexport { default as previousMonday } from \"./previousMonday/index.js\";\nexport { default as previousSaturday } from \"./previousSaturday/index.js\";\nexport { default as previousSunday } from \"./previousSunday/index.js\";\nexport { default as previousThursday } from \"./previousThursday/index.js\";\nexport { default as previousTuesday } from \"./previousTuesday/index.js\";\nexport { default as previousWednesday } from \"./previousWednesday/index.js\";\nexport { default as quartersToMonths } from \"./quartersToMonths/index.js\";\nexport { default as quartersToYears } from \"./quartersToYears/index.js\";\nexport { default as roundToNearestMinutes } from \"./roundToNearestMinutes/index.js\";\nexport { default as secondsToHours } from \"./secondsToHours/index.js\";\nexport { default as secondsToMilliseconds } from \"./secondsToMilliseconds/index.js\";\nexport { default as secondsToMinutes } from \"./secondsToMinutes/index.js\";\nexport { default as set } from \"./set/index.js\";\nexport { default as setDate } from \"./setDate/index.js\";\nexport { default as setDay } from \"./setDay/index.js\";\nexport { default as setDayOfYear } from \"./setDayOfYear/index.js\";\nexport { default as setDefaultOptions } from \"./setDefaultOptions/index.js\";\nexport { default as setHours } from \"./setHours/index.js\";\nexport { default as setISODay } from \"./setISODay/index.js\";\nexport { default as setISOWeek } from \"./setISOWeek/index.js\";\nexport { default as setISOWeekYear } from \"./setISOWeekYear/index.js\";\nexport { default as setMilliseconds } from \"./setMilliseconds/index.js\";\nexport { default as setMinutes } from \"./setMinutes/index.js\";\nexport { default as setMonth } from \"./setMonth/index.js\";\nexport { default as setQuarter } from \"./setQuarter/index.js\";\nexport { default as setSeconds } from \"./setSeconds/index.js\";\nexport { default as setWeek } from \"./setWeek/index.js\";\nexport { default as setWeekYear } from \"./setWeekYear/index.js\";\nexport { default as setYear } from \"./setYear/index.js\";\nexport { default as startOfDay } from \"./startOfDay/index.js\";\nexport { default as startOfDecade } from \"./startOfDecade/index.js\";\nexport { default as startOfHour } from \"./startOfHour/index.js\";\nexport { default as startOfISOWeek } from \"./startOfISOWeek/index.js\";\nexport { default as startOfISOWeekYear } from \"./startOfISOWeekYear/index.js\";\nexport { default as startOfMinute } from \"./startOfMinute/index.js\";\nexport { default as startOfMonth } from \"./startOfMonth/index.js\";\nexport { default as startOfQuarter } from \"./startOfQuarter/index.js\";\nexport { default as startOfSecond } from \"./startOfSecond/index.js\";\nexport { default as startOfToday } from \"./startOfToday/index.js\";\nexport { default as startOfTomorrow } from \"./startOfTomorrow/index.js\";\nexport { default as startOfWeek } from \"./startOfWeek/index.js\";\nexport { default as startOfWeekYear } from \"./startOfWeekYear/index.js\";\nexport { default as startOfYear } from \"./startOfYear/index.js\";\nexport { default as startOfYesterday } from \"./startOfYesterday/index.js\";\nexport { default as sub } from \"./sub/index.js\";\nexport { default as subBusinessDays } from \"./subBusinessDays/index.js\";\nexport { default as subDays } from \"./subDays/index.js\";\nexport { default as subHours } from \"./subHours/index.js\";\nexport { default as subISOWeekYears } from \"./subISOWeekYears/index.js\";\nexport { default as subMilliseconds } from \"./subMilliseconds/index.js\";\nexport { default as subMinutes } from \"./subMinutes/index.js\";\nexport { default as subMonths } from \"./subMonths/index.js\";\nexport { default as subQuarters } from \"./subQuarters/index.js\";\nexport { default as subSeconds } from \"./subSeconds/index.js\";\nexport { default as subWeeks } from \"./subWeeks/index.js\";\nexport { default as subYears } from \"./subYears/index.js\";\nexport { default as toDate } from \"./toDate/index.js\";\nexport { default as weeksToDays } from \"./weeksToDays/index.js\";\nexport { default as yearsToMonths } from \"./yearsToMonths/index.js\";\nexport { default as yearsToQuarters } from \"./yearsToQuarters/index.js\";\nexport * from \"./constants/index.js\";","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousThursday\n * @category Weekday Helpers\n * @summary When is the previous Thursday?\n *\n * @description\n * When is the previous Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Thursday before Jun, 18, 2021?\n * const result = previousThursday(new Date(2021, 5, 18))\n * //=> Thu June 17 2021 00:00:00\n */\nexport default function previousThursday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 4);\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2);\n\n  // Result variables.\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nexport var FractionOfSecondParser = /*#__PURE__*/function (_Parser) {\n  _inherits(FractionOfSecondParser, _Parser);\n  var _super = _createSuper(FractionOfSecondParser);\n  function FractionOfSecondParser() {\n    var _this;\n    _classCallCheck(this, FractionOfSecondParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 30);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(FractionOfSecondParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n      return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMilliseconds(value);\n      return date;\n    }\n  }]);\n  return FractionOfSecondParser;\n}(Parser);","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousSunday\n * @category Weekday Helpers\n * @summary When is the previous Sunday?\n *\n * @description\n * When is the previous Sunday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Sunday before Jun, 21, 2021?\n * const result = previousSunday(new Date(2021, 5, 21))\n * //=> Sun June 20 2021 00:00:00\n */\nexport default function previousSunday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 0);\n}","import toDate from \"../toDate/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\nexport default function formatISO(date, options) {\n  var _options$format, _options$representati;\n  requiredArgs(1, arguments);\n  var originalDate = toDate(date);\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : '';\n\n  // Representation is either 'date' or 'complete'\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4);\n\n    // yyyyMMdd or yyyy-MM-dd.\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  }\n\n  // Representation is either 'time' or 'complete'\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2);\n      // If less than 0, the sign is +, because it is ahead of time.\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2);\n\n    // If there's also date, separate it with time with 'T'\n    var separator = result === '' ? '' : 'T';\n\n    // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n    var time = [hour, minute, second].join(timeDelimiter);\n\n    // HHmmss or HH:mm:ss.\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\"; // ISO week of year\nexport var ISOWeekParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOWeekParser, _Parser);\n  var _super = _createSuper(ISOWeekParser);\n  function ISOWeekParser() {\n    var _this;\n    _classCallCheck(this, ISOWeekParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 100);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISOWeekParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, dateString);\n        case 'Io':\n          return match.ordinalNumber(dateString, {\n            unit: 'week'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 53;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value));\n    }\n  }]);\n  return ISOWeekParser;\n}(Parser);","import addQuarters from \"../addQuarters/index.js\";\nimport startOfQuarter from \"../startOfQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * const result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\nexport default function eachQuarterOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var startDateQuarter = startOfQuarter(startDate);\n  var endDateQuarter = startOfQuarter(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push(toDate(currentQuarter));\n    currentQuarter = addQuarters(currentQuarter, 1);\n  }\n  return quarters;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInYear } from \"../constants/index.js\";\n/**\n * @name yearsToMonths\n * @category Conversion Helpers\n * @summary Convert years to months.\n *\n * @description\n * Convert a number of years to a full number of months.\n *\n * @param {number} years - number of years to be converted\n *\n * @returns {number} the number of years converted in months\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 years into months\n * const result = yearsToMonths(2)\n * //=> 24\n */\nexport default function yearsToMonths(years) {\n  requiredArgs(1, arguments);\n  return Math.floor(years * monthsInYear);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n  return dates;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousTuesday\n * @category Weekday Helpers\n * @summary When is the previous Tuesday?\n *\n * @description\n * When is the previous Tuesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Tuesday before Jun, 18, 2021?\n * const result = previousTuesday(new Date(2021, 5, 18))\n * //=> Tue June 15 2021 00:00:00\n */\nexport default function previousTuesday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 2);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\"; // Local day of week\nexport var LocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalDayParser, _Parser);\n  var _super = _createSuper(LocalDayParser);\n  function LocalDayParser() {\n    var _this;\n    _classCallCheck(this, LocalDayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n        case 'eo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'day'\n          }), valueCallback);\n        // Tue\n        case 'eee':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n        case 'eeeee':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n        case 'eeeeee':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n        case 'eeee':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return LocalDayParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour1To24Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1To24Parser, _Parser);\n  var _super = _createSuper(Hour1To24Parser);\n  function Hour1To24Parser() {\n    var _this;\n    _classCallCheck(this, Hour1To24Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 'h', 'H', 'K', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour1To24Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, dateString);\n        case 'ko':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 24;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return Hour1To24Parser;\n}(Parser);","import startOfWeek from \"../startOfWeek/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} - the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray;\n  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n    // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (_typeof(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextSaturday\n * @category Weekday Helpers\n * @summary When is the next Saturday?\n *\n * @description\n * When is the next Saturday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Saturday after Mar, 22, 2020?\n * const result = nextSaturday(new Date(2020, 2, 22))\n * //=> Sat Mar 28 2020 00:00:00\n */\nexport default function nextSaturday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 6);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nexport var EraParser = /*#__PURE__*/function (_Parser) {\n  _inherits(EraParser, _Parser);\n  var _super = _createSuper(EraParser);\n  function EraParser() {\n    var _this;\n    _classCallCheck(this, EraParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 140);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['R', 'u', 't', 'T']);\n    return _this;\n  }\n  _createClass(EraParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(dateString, {\n            width: 'abbreviated'\n          }) || match.era(dateString, {\n            width: 'narrow'\n          });\n        // A, B\n        case 'GGGGG':\n          return match.era(dateString, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n        case 'GGGG':\n        default:\n          return match.era(dateString, {\n            width: 'wide'\n          }) || match.era(dateString, {\n            width: 'abbreviated'\n          }) || match.era(dateString, {\n            width: 'narrow'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return EraParser;\n}(Parser);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default \"<app-header [appTitle]=\\\"appTitle(viewDate)\\\"></app-header>\\r\\n\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\r\\n  <advanced-filter>\\r\\n    <comercial-templates-filtro-vendedor-escritorio-date [profile]=\\\"profile\\\" [showAll]=\\\"false\\\"\\r\\n      (formValue)=\\\"dataFilter($event)\\\">\\r\\n    </comercial-templates-filtro-vendedor-escritorio-date>\\r\\n  </advanced-filter>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\r\\n        <agm-map [latitude]=\\\"latitud\\\" [longitude]=\\\"longitud\\\" [zoom]=\\\"13\\\" class=\\\"embed-responsive-item\\\"\\r\\n          >\\r\\n\\r\\n          <agm-marker *ngFor=\\\"let mapa of mapas\\\" [latitude]=\\\"mapa.LATITUD\\\" [longitude]=\\\"mapa.LONGITUD\\\"\\r\\n            [iconUrl]=\\\"mapa.markers.icon\\\" (markerDragEnd)=\\\"actualizarDireccion($event)\\\"\\r\\n            (markerClick)=\\\"onMarkerClick(mapa)\\\">\\r\\n            <agm-info-window *ngIf=\\\"selectedMarker === mapa\\\" [disableAutoPan]=\\\"true\\\">\\r\\n              <div class=\\\"marker-info-window\\\">\\r\\n                <h5 class=\\\"marker-name\\\">{{ mapa.NOMBRE }}</h5>\\r\\n                <p class=\\\"marker-info\\\"><strong>Dirección:</strong> {{ mapa.DIRECCION }}</p>\\r\\n                <p class=\\\"marker-info\\\"><strong>Fecha de inicio:</strong> {{ mapa.FECHA_INICIO | date:'dd/MM/yyyy\\r\\n                  HH:mm:ss' }}</p>\\r\\n                <p class=\\\"marker-info\\\"><strong>Fecha de fin:</strong> {{ mapa.FECHA_FIN | date:'dd/MM/yyyy HH:mm:ss' }}\\r\\n                </p>\\r\\n\\r\\n                <button class=\\\"marker-button\\\" (click)=\\\"agregarClienteTemporal(mapa)\\\">\\r\\n                  <i class=\\\"fas fa-plus\\\"></i> &nbsp; Agregar\\r\\n                </button>\\r\\n              </div>\\r\\n            </agm-info-window>\\r\\n          </agm-marker>\\r\\n\\r\\n          <div class=\\\"spinner-overlay\\\" *ngIf=\\\"showSpinner\\\">\\r\\n            <div class=\\\"spinner\\\"></div>\\r\\n          </div>\\r\\n        </agm-map>\\r\\n\\r\\n\\r\\n        <div id=\\\"map-zoom-control\\\" class=\\\"map-control\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <h6 align=\\\"center\\\"> Agendar clientes </h6>\\r\\n      <custom-table [config]=\\\"tableConfigAtividades\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <!--             <th class=\\\"text-center\\\">Cod. cliente</th>\\r\\n   -->\\r\\n            <th class=\\\"text-center\\\">Nombre</th>\\r\\n            <th class=\\\"text-center\\\">Promotor</th>\\r\\n            <th class=\\\"text-center\\\">TíTULO</th>\\r\\n            <th class=\\\"text-center\\\">Fecha visita</th>\\r\\n            <th class=\\\"text-center\\\">Opciones</th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>\\r\\n          <tr *ngFor=\\\"let item of atividades\\\">\\r\\n            <!--  <td class=\\\"hover text-center\\\" style=\\\"width: 10%\\\" (click)=\\\"item.checked = !item.checked\\\">\\r\\n                <span *ngIf=\\\"item.codigoCliente\\\">{{ item.codigoCliente }}</span>\\r\\n                <span *ngIf=\\\"!item.codigoCliente\\\">N/A</span>\\r\\n              </td> -->\\r\\n            <td class=\\\"hover text-center\\\" style=\\\"width: 35%\\\" (click)=\\\"item.checked = !item.checked\\\">\\r\\n              <span *ngIf=\\\"item.nombre\\\">{{ item.nombre }}</span>\\r\\n              <span *ngIf=\\\"!item.nombre\\\">N/A</span>\\r\\n            </td>\\r\\n            <td class=\\\"hover text-center \\\" style=\\\"width: 30%\\\" (click)=\\\"item.checked = !item.checked\\\">\\r\\n              <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"filteredVendedores\\\" [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"vendedor\\\" bindLabel=\\\"nome\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"item.vendedor_id\\\"\\r\\n                (ngModelChange)=\\\"onVendedorChange(item, $event)\\\" class=\\\"select-control\\\">\\r\\n                <option value=\\\"\\\">Seleccionar</option>\\r\\n              </ng-select>\\r\\n            </td>\\r\\n            <td class=\\\"hover text-center \\\" style=\\\"width: 35%\\\" (click)=\\\"item.checked = !item.checked\\\">\\r\\n              <ng-select [searchable]=\\\"true\\\" [clearable]=\\\"false\\\" [items]=\\\"filteredGestiones\\\" [virtualScroll]=\\\"true\\\"\\r\\n                labelForId=\\\"vendedor\\\" bindLabel=\\\"descricaoTitulo\\\" bindValue=\\\"codTitulo\\\" [(ngModel)]=\\\"item.seleccion_id\\\"\\r\\n                (ngModelChange)=\\\"onGestionChange(item, $event)\\\" class=\\\"select-control\\\">\\r\\n                <option value=\\\"\\\">Seleccionar</option>\\r\\n              </ng-select>\\r\\n            </td>\\r\\n            <td class=\\\"hover text-center\\\" style=\\\"width: 10%\\\" (click)=\\\"item.checked = !item.checked\\\">\\r\\n              <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"item.fecha\\\"\\r\\n                (ngModelChange)=\\\"onFechaChange(item, $event)\\\">\\r\\n            </td>\\r\\n\\r\\n            <td class=\\\"hover text-center\\\" style=\\\"width: 35%\\\">\\r\\n              <button (click)=\\\"eliminarClienteTemporal(item)\\\" class=\\\"btn btn-danger btn-sm\\\">\\r\\n                <i class=\\\"fas fa-trash-alt\\\"></i> Eliminar\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"atividades.length === 0\\\">\\r\\n            <td colspan=\\\"6\\\" class=\\\"text-center\\\">Sin datos registrados </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table> <br>\\r\\n\\r\\n      <div align=\\\"center\\\" *ngIf=\\\"atividades.length > 0\\\">\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"enviarDatos()\\\">Agendar</button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"mostrarSpinner\\\" align=\\\"center\\\">\\r\\n        <!-- Aquí puedes agregar el código HTML para mostrar el spinner -->\\r\\n        <!-- por ejemplo: -->\\r\\n        <!--datos -->\\r\\n        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div> <br>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</app-body>\\r\\n\";","import addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import lastDayOfWeek from \"../lastDayOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * const result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function lastDayOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * const result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * const result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * const result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n  if (_typeof(values) !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n  var date = toDate(dirtyDate);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextThursday\n * @category Weekday Helpers\n * @summary When is the next Thursday?\n *\n * @description\n * When is the next Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Thursday after Mar, 22, 2020?\n * const result = nextThursday(new Date(2020, 2, 22))\n * //=> Thur Mar 26 2020 00:00:00\n */\nexport default function nextThursday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 4);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * const result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousSaturday\n * @category Weekday Helpers\n * @summary When is the previous Saturday?\n *\n * @description\n * When is the previous Saturday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Saturday before Jun, 20, 2021?\n * const result = previousSaturday(new Date(2021, 5, 20))\n * //=> Sat June 19 2021 00:00:00\n */\nexport default function previousSaturday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 6);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var SecondParser = /*#__PURE__*/function (_Parser) {\n  _inherits(SecondParser, _Parser);\n  var _super = _createSuper(SecondParser);\n  function SecondParser() {\n    var _this;\n    _classCallCheck(this, SecondParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 50);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(SecondParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, dateString);\n        case 'so':\n          return match.ordinalNumber(dateString, {\n            unit: 'second'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 59;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    }\n  }]);\n  return SecondParser;\n}(Parser);","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport getISODay from \"../getISODay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { minutesInHour } from \"../constants/index.js\";\n/**\n * @name hoursToMinutes\n * @category Conversion Helpers\n * @summary Convert hours to minutes.\n *\n * @description\n * Convert a number of hours to a full number of minutes.\n *\n * @param {number} hours - number of hours to be converted\n *\n * @returns {number} the number of hours converted in minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 hours to minutes:\n * const result = hoursToMinutes(2)\n * //=> 120\n */\nexport default function hoursToMinutes(hours) {\n  requiredArgs(1, arguments);\n  return Math.floor(hours * minutesInHour);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var MinuteParser = /*#__PURE__*/function (_Parser) {\n  _inherits(MinuteParser, _Parser);\n  var _super = _createSuper(MinuteParser);\n  function MinuteParser() {\n    var _this;\n    _classCallCheck(this, MinuteParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 60);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(MinuteParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, dateString);\n        case 'mo':\n          return match.ordinalNumber(dateString, {\n            unit: 'minute'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 59;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    }\n  }]);\n  return MinuteParser;\n}(Parser);","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { millisecondsInMinute } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport default function differenceInMinutes(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","export default \"::ng-deep #metas {\\n  height: 345px;\\n}\\n::ng-deep #metas #past-gauge-chart-toneladas,\\n::ng-deep #metas #past-gauge-chart-clientes,\\n::ng-deep #metas #past-gauge-chart-extras,\\n::ng-deep #metas #current-gauge-chart-toneladas,\\n::ng-deep #metas #current-gauge-chart-clientes,\\n::ng-deep #metas #current-gauge-chart-extras {\\n  height: 300px;\\n  max-width: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvdGVtcGxhdGVzL21hcGEtbWV0YXMvbWFwYS1tZXRhcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGFBQUE7QUFBSjtBQUNJOzs7Ozs7RUFNRSxhQUFBO0VBQ0EsZ0JBQUE7QUFDTiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL3RlbXBsYXRlcy9tYXBhLW1ldGFzL21hcGEtbWV0YXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAge1xyXG4gICNtZXRhcyB7XHJcbiAgICBoZWlnaHQ6IDM0NXB4O1xyXG4gICAgI3Bhc3QtZ2F1Z2UtY2hhcnQtdG9uZWxhZGFzLFxyXG4gICAgI3Bhc3QtZ2F1Z2UtY2hhcnQtY2xpZW50ZXMsXHJcbiAgICAjcGFzdC1nYXVnZS1jaGFydC1leHRyYXMsXHJcbiAgICAjY3VycmVudC1nYXVnZS1jaGFydC10b25lbGFkYXMsXHJcbiAgICAjY3VycmVudC1nYXVnZS1jaGFydC1jbGllbnRlcyxcclxuICAgICNjdXJyZW50LWdhdWdlLWNoYXJ0LWV4dHJhcyB7XHJcbiAgICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport isLeapYear from \"../isLeapYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  if (String(new Date(date)) === 'Invalid Date') {\n    return NaN;\n  }\n  return isLeapYear(date) ? 366 : 365;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport getDate from \"../getDate/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6 inclusively\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\nexport default function getWeekOfMonth(date, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var currentDayOfMonth = getDate(date);\n  if (isNaN(currentDayOfMonth)) return NaN;\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\n  var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\n}","import addWeeks from \"../addWeeks/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * const result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options);\n\n  // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n  return weeks;\n}","import addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function setDay(dirtyDate, dirtyDay, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff);\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousMonday\n * @category Weekday Helpers\n * @summary When is the previous Monday?\n *\n * @description\n * When is the previous Monday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Monday before Jun, 18, 2021?\n * const result = previousMonday(new Date(2021, 5, 18))\n * //=> Mon June 14 2021 00:00:00\n */\nexport default function previousMonday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 1);\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import endOfDay from \"../endOfDay/index.js\";\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { ValueSetter } from \"./Setter.js\";\nexport var Parser = /*#__PURE__*/function () {\n  function Parser() {\n    _classCallCheck(this, Parser);\n    _defineProperty(this, \"incompatibleTokens\", void 0);\n    _defineProperty(this, \"priority\", void 0);\n    _defineProperty(this, \"subPriority\", void 0);\n  }\n  _createClass(Parser, [{\n    key: \"run\",\n    value: function run(dateString, token, match, options) {\n      var result = this.parse(dateString, token, match, options);\n      if (!result) {\n        return null;\n      }\n      return {\n        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),\n        rest: result.rest\n      };\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_utcDate, _value, _options) {\n      return true;\n    }\n  }]);\n  return Parser;\n}();","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import { millisecondsInHour } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport default function differenceInHours(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextWednesday\n * @category Weekday Helpers\n * @summary When is the next Wednesday?\n *\n * @description\n * When is the next Wednesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Wednesday after Mar, 22, 2020?\n * const result = nextWednesday(new Date(2020, 2, 22))\n * //=> Wed Mar 25 2020 00:00:00\n */\nexport default function nextWednesday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 3);\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\";\nexport var AMPMParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AMPMParser, _Parser);\n  var _super = _createSuper(AMPMParser);\n  function AMPMParser() {\n    var _this;\n    _classCallCheck(this, AMPMParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['b', 'B', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(AMPMParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'aaaaa':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'aaaa':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return AMPMParser;\n}(Parser);","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","export default \"<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-lg-3\\\">\\r\\n      <label for=\\\"buscarPor\\\">Sucursal</label>\\r\\n      <ng-select\\r\\n        [searchable]=\\\"true\\\"\\r\\n        [clearable]=\\\"false\\\"\\r\\n        [items]=\\\"escritorios\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        labelForId=\\\"vendedor\\\"\\r\\n        bindLabel=\\\"nome\\\"\\r\\n        bindValue=\\\"id\\\"\\r\\n        (change)=\\\"filtrarClientes()\\\"\\r\\n        formControlName=\\\"sucursal_id\\\"\\r\\n      ></ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-lg-3\\\">\\r\\n      <label for=\\\"pesquisa\\\">Promotor</label>\\r\\n      <ng-select\\r\\n        [searchable]=\\\"true\\\"\\r\\n        [clearable]=\\\"false\\\"\\r\\n        [items]=\\\"filteredVendedores\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        labelForId=\\\"vendedor\\\"\\r\\n        bindLabel=\\\"nome\\\"\\r\\n        bindValue=\\\"id\\\"\\r\\n        (change)=\\\"filtrarClientes()\\\"\\r\\n        formControlName=\\\"vendedor_id\\\"\\r\\n      ></ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-lg-3\\\">\\r\\n      <label for=\\\"situacao\\\">Dias ultima visita</label>\\r\\n      <ng-select\\r\\n        [searchable]=\\\"false\\\"\\r\\n        [clearable]=\\\"false\\\"\\r\\n        [items]=\\\"ultimaVisita\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        labelForId=\\\"ultimaVisita\\\"\\r\\n        bindLabel=\\\"nombre\\\"\\r\\n        bindValue=\\\"id\\\"\\r\\n        (change)=\\\"filtrarClientes()\\\"\\r\\n        formControlName=\\\"visita_id\\\"\\r\\n      ></ng-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-lg-3\\\">\\r\\n      <label for=\\\"setorAtividade\\\">Estado</label>\\r\\n      <ng-select\\r\\n        [searchable]=\\\"false\\\"\\r\\n        [clearable]=\\\"false\\\"\\r\\n        [items]=\\\"estadoCliente\\\"\\r\\n        [virtualScroll]=\\\"true\\\"\\r\\n        labelForId=\\\"vendedor\\\"\\r\\n        bindLabel=\\\"nombre\\\"\\r\\n        bindValue=\\\"id\\\"\\r\\n        (change)=\\\"filtrarClientes()\\\"\\r\\n        formControlName=\\\"estado_id\\\"\\r\\n      ></ng-select>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\";","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar TIMEZONE_UNIT_PRIORITY = 10;\nexport var Setter = /*#__PURE__*/function () {\n  function Setter() {\n    _classCallCheck(this, Setter);\n    _defineProperty(this, \"priority\", void 0);\n    _defineProperty(this, \"subPriority\", 0);\n  }\n  _createClass(Setter, [{\n    key: \"validate\",\n    value: function validate(_utcDate, _options) {\n      return true;\n    }\n  }]);\n  return Setter;\n}();\nexport var ValueSetter = /*#__PURE__*/function (_Setter) {\n  _inherits(ValueSetter, _Setter);\n  var _super = _createSuper(ValueSetter);\n  function ValueSetter(value, validateValue, setValue, priority, subPriority) {\n    var _this;\n    _classCallCheck(this, ValueSetter);\n    _this = _super.call(this);\n    _this.value = value;\n    _this.validateValue = validateValue;\n    _this.setValue = setValue;\n    _this.priority = priority;\n    if (subPriority) {\n      _this.subPriority = subPriority;\n    }\n    return _this;\n  }\n  _createClass(ValueSetter, [{\n    key: \"validate\",\n    value: function validate(utcDate, options) {\n      return this.validateValue(utcDate, this.value, options);\n    }\n  }, {\n    key: \"set\",\n    value: function set(utcDate, flags, options) {\n      return this.setValue(utcDate, flags, this.value, options);\n    }\n  }]);\n  return ValueSetter;\n}(Setter);\nexport var DateToSystemTimezoneSetter = /*#__PURE__*/function (_Setter2) {\n  _inherits(DateToSystemTimezoneSetter, _Setter2);\n  var _super2 = _createSuper(DateToSystemTimezoneSetter);\n  function DateToSystemTimezoneSetter() {\n    var _this2;\n    _classCallCheck(this, DateToSystemTimezoneSetter);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this2), \"priority\", TIMEZONE_UNIT_PRIORITY);\n    _defineProperty(_assertThisInitialized(_this2), \"subPriority\", -1);\n    return _this2;\n  }\n  _createClass(DateToSystemTimezoneSetter, [{\n    key: \"set\",\n    value: function set(date, flags) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      var convertedDate = new Date(0);\n      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n      return convertedDate;\n    }\n  }]);\n  return DateToSystemTimezoneSetter;\n}(Setter);","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date | Number} dateToCompare - the date to compare with\n * @param {Array<Date> | Array<number>} datesArray - the array to search\n * @returns {Date | undefined} the date from the array closest to the given date or undefined if no valid value is given\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * const dateToCompare = new Date(2015, 8, 6)\n * const result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  if (isNaN(Number(dateToCompare))) return new Date(NaN);\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray;\n  // `dirtyDatesArray` is undefined or null\n  if (dirtyDatesArray == null) {\n    datesArray = [];\n\n    // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n\n    // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (isNaN(Number(currentDate))) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n    if (result == null || distance < Number(minDistance)) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import getTime from \"../getTime/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * const result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, options));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, options);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import addISOWeekYears from \"../addISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * const result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * const result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import differenceInCalendarWeeks from \"../differenceInCalendarWeeks/index.js\";\nimport lastDayOfMonth from \"../lastDayOfMonth/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * const result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import getWeekYear from \"../getWeekYear/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport default function startOfWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, options);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week (and year)?\n *\n * @description\n * Are the given dates in the same ISO week (and year)?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n *\n * @example\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n * //=> false\n */\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { Component, OnInit } from '@angular/core';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\n\r\n\r\n// angular-calendar\r\nimport { CalendarEvent } from 'angular-calendar';\r\nimport {\r\n    isSameMonth,\r\n    isSameDay,\r\n    startOfMonth,\r\n    endOfMonth,\r\n    startOfWeek,\r\n    endOfWeek,\r\n    startOfDay,\r\n    endOfDay,\r\n    format\r\n} from 'date-fns';\r\n\r\n// Services\r\nimport { AuthService } from 'src/app/shared/services/core/auth.service';\r\nimport { ComercialLoteService } from 'src/app/modules/comercial/lote/lote.service';\r\nimport { ComercialService } from '../../comercial.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { TitleService } from 'src/app/shared/services/core/title.service';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ComercialVendedoresService } from '../../services/vendedores.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\n// Interfaces\r\n/* import { Compromisso } from '../models/compromisso'; */\r\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\r\n\r\n@Component({\r\n    selector: 'ruta-agenda-compromissos',\r\n    templateUrl: './ruta.component.html',\r\n    styleUrls: ['./ruta.component.scss']\r\n})\r\n\r\nexport class ComercialLoteRutaComponent implements OnInit {\r\n    private user = this.authService.getCurrentUser();\r\n    profile: any = {};\r\n\r\n    loaderFullScreen = true;\r\n\r\n    breadCrumbTree: Array<Breadcrumb> = [\r\n        {\r\n            descricao: 'Home',\r\n            routerLink: '/comercial/home'\r\n        },\r\n        {\r\n            descricao: 'Rutas'\r\n        }\r\n    ];\r\n\r\n    activatedRouteSubscription: Subscription;\r\n\r\n    showFilter = false;\r\n    showCalendar = false;\r\n    showPermissionDenied = false;\r\n\r\n    view = 'month';\r\n    viewDate: Date = new Date();\r\n    activeDayIsOpen = false;\r\n    mapas: any[] = [];\r\n    atividades: any[] = [];\r\n    idEscritorio: number;\r\n    idVendedor: number;\r\n    latitud: number = -17.78629;\r\n    longitud: number = -63.18117;\r\n    nomeVendedor: string;\r\n    nomeEscritorio: string;\r\n    filteredVendedores: any[] = [];\r\n    filteredGestiones: any[] = [];\r\n    vendedor_id: any[];\r\n    seleccion_id: any[];\r\n    indiceVendedor: number;\r\n    item: any;\r\n    selectedIconUrl = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|C0C0C0';\r\n\r\n    /*   events$: Observable<Array<CalendarEvent<{ compromisso: Compromisso }>>>;\r\n      eventSelected: Compromisso; */\r\n\r\n\r\n    queryParamsChecked = false;\r\n\r\n    form: FormGroup;\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private authService: AuthService,\r\n        /* private agendaService: ComercialAgendaService, */\r\n        private loteService: ComercialLoteService,\r\n        private comercialService: ComercialService,\r\n        private atividadesService: AtividadesService,\r\n        private titleService: TitleService,\r\n        private dateService: DateService,\r\n        private formBuilder: FormBuilder,\r\n        private datePipe: DatePipe,\r\n        private vendedoresService: ComercialVendedoresService,\r\n        private pnotifyService: PNotifyService,\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.registrarAcesso();\r\n        this.getEscritorios();\r\n        /*  this.getRutas(); */\r\n        this.getPerfil();\r\n        this.titleService.setTitle('Rutas');\r\n        //this.vendedores();\r\n        this.gestiones();\r\n        this.vendedores();\r\n\r\n    }\r\n\r\n    appTitle(date: Date): string {\r\n        if (this.showCalendar) {\r\n            return `Rutas (${this.dateService.getFullMonth(\r\n                date\r\n            )}/${date.getFullYear()})`;\r\n        }\r\n\r\n        return 'Rutas';\r\n    }\r\n\r\n    registrarAcesso(): void {\r\n        this.atividadesService.registrarAcesso().subscribe();\r\n    }\r\n    getEscritorios(): void {\r\n        this.comercialService.getEscritorios().subscribe((response: any) => {\r\n            if (response.responseCode === 200) {\r\n                this.idEscritorio = response.result;\r\n            }\r\n        });\r\n    }\r\n\r\n    /* getRutas(): void {\r\n        this.loteService.getRutaClientes().subscribe((response: any) => {\r\n            if (response.responseCode === 200) {\r\n                this.idVendedor = response.result;\r\n            }\r\n        });\r\n    } */\r\n\r\n\r\n\r\n\r\n    getPerfil(): void {\r\n        this.comercialService\r\n            .getPerfil()\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.loaderFullScreen = false;\r\n                })\r\n            )\r\n            .subscribe({\r\n                next: (response: any) => {\r\n                    if (response.responseCode === 200) {\r\n                        this.profile = response.result;\r\n\r\n                        if (\r\n                            this.profile.coordenador === true ||\r\n                            this.profile.gestor === true ||\r\n                            (this.profile.vendedor === true &&\r\n                                this.profile.coordenador === false &&\r\n                                this.profile.gestor === false &&\r\n                                this.profile.hasVinculoOperadores === true)\r\n                        ) {\r\n                            this.checkRouterParams();\r\n                        } else if (\r\n                            this.profile.vendedor === true &&\r\n                            this.profile.coordenador === false &&\r\n                            this.profile.gestor === false &&\r\n                            this.profile.hasVinculoOperadores === false\r\n                        ) {\r\n                            this.fetchEvents();\r\n                            this.idVendedor = this.user.info.idVendedor;\r\n                            this.idEscritorio = this.user.info.idEscritorio;\r\n                            this.showCalendar = true;\r\n                        } else {\r\n                            this.showPermissionDenied = true;\r\n                        }\r\n                    } else {\r\n                        this.showPermissionDenied = true;\r\n                    }\r\n                },\r\n                error: (error: any) => {\r\n                    this.showPermissionDenied = true;\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    enableFilterButton(): boolean {\r\n        if (\r\n            this.profile.coordenador === true ||\r\n            this.profile.gestor === true ||\r\n            (this.profile.vendedor === true &&\r\n                this.profile.coordenador === false &&\r\n                this.profile.gestor === false &&\r\n                this.profile.hasVinculoOperadores === true)\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    dataFilter(event: any): void {\r\n        this.idEscritorio = event.idEscritorio;\r\n        this.idVendedor = event.idVendedor;\r\n        this.nomeEscritorio = event.nomeEscritorio;\r\n        this.nomeVendedor = event.nomeVendedor;\r\n    }\r\n\r\n    checkRouterParams(): void {\r\n        let formValue = {\r\n            idEscritorio: null,\r\n            idVendedor: null,\r\n            nomeEscritorio: null,\r\n            nomeVendedor: null\r\n        };\r\n\r\n        this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n            (queryParams: any) => {\r\n                if (Object.keys(queryParams).length > 0) {\r\n                    let params: any = atob(queryParams['q']);\r\n                    params = JSON.parse(params);\r\n\r\n                    this.idEscritorio = parseInt(params.idEscritorio);\r\n                    this.idVendedor = parseInt(params.idVendedor);\r\n                    this.nomeEscritorio = params.nomeEscritorio;\r\n                    this.nomeVendedor = params.nomeVendedor;\r\n\r\n                    this.showFilter = false;\r\n                    this.showCalendar = true;\r\n                    this.fetchEvents();\r\n\r\n                    Object.keys(formValue).forEach(formKey => {\r\n                        Object.keys(params).forEach(paramKey => {\r\n                            if (\r\n                                formKey == paramKey &&\r\n                                formValue[formKey] != params[paramKey]\r\n                            ) {\r\n                                if (!isNaN(Number(params[paramKey]))) {\r\n                                    formValue[formKey] = Number(params[paramKey]);\r\n                                } else {\r\n                                    formValue[formKey] = params[paramKey];\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                } else {\r\n                    this.showFilter = true;\r\n                    this.showCalendar = false;\r\n                }\r\n            }\r\n        );\r\n        this.activatedRouteSubscription.unsubscribe();\r\n    }\r\n\r\n    fetchEvents(): void {\r\n        const getStart: any = {\r\n            month: startOfMonth,\r\n            week: startOfWeek,\r\n            day: startOfDay\r\n        }[this.view];\r\n\r\n        const getEnd: any = {\r\n            month: endOfMonth,\r\n            week: endOfWeek,\r\n            day: endOfDay\r\n        }[this.view];\r\n\r\n        let paramsObj = {};\r\n\r\n        if (!this.queryParamsChecked) {\r\n            this.activatedRoute.queryParams.subscribe((queryParams: any) => {\r\n                if (Object.keys(queryParams).length > 0) {\r\n                    let params: any = atob(queryParams['q']);\r\n                    params = JSON.parse(params);\r\n\r\n                    const queryDate = params.inicio.split('-');\r\n\r\n                    this.viewDate.setFullYear(queryDate[0]);\r\n                    this.viewDate.setMonth(queryDate[1] - 1);\r\n                    this.viewDate.setDate(queryDate[2]);\r\n\r\n                    paramsObj = {\r\n                        inicio: params.inicio,\r\n                        fim: params.fim,\r\n                        idEscritorio: params.idEscritorio,\r\n                        idVendedor: params.idVendedor,\r\n                        nomeEscritorio: params.nomeEscritorio,\r\n                        nomeVendedor: params.nomeVendedor\r\n                    };\r\n                } else {\r\n                    this.viewDate = new Date();\r\n\r\n                    paramsObj = {\r\n                        inicio: format(getStart(this.viewDate), 'yyyy-MM-dd'),\r\n                        fim: format(getEnd(this.viewDate), 'yyyy-MM-dd'),\r\n                        idEscritorio: this.idEscritorio,\r\n                        idVendedor: this.idVendedor,\r\n                        nomeEscritorio: this.nomeEscritorio,\r\n                        nomeVendedor: this.nomeVendedor\r\n                    };\r\n                }\r\n            });\r\n        } else {\r\n            paramsObj = {\r\n                inicio: format(getStart(this.viewDate), 'yyyy-MM-dd'),\r\n                fim: format(getEnd(this.viewDate), 'yyyy-MM-dd'),\r\n                idEscritorio: this.idEscritorio,\r\n                idVendedor: this.idVendedor,\r\n                nomeEscritorio: this.nomeEscritorio,\r\n                nomeVendedor: this.nomeVendedor\r\n            };\r\n        }\r\n\r\n        this.queryParamsChecked = true;\r\n        this.activeDayIsOpen = false;\r\n\r\n\r\n\r\n        /* this.events$ = this.agendaService.getCompromissos(paramsObj).pipe(\r\n          map((compromissos: Compromisso[]) => {\r\n            if (compromissos['responseCode'] === 200) {\r\n              return compromissos['result'].map((compromisso: Compromisso) => {\r\n                return {\r\n                  id: compromisso.id,\r\n                  color: {\r\n                    primary: compromisso.color\r\n                  },\r\n                  title: compromisso.title,\r\n                  codClient: compromisso.codClient,\r\n                  client: compromisso.client,\r\n                  formContactId: compromisso.formContactId,\r\n                  formContactDesc: compromisso.formContactDesc,\r\n                  typeContactId: compromisso.typeContactId,\r\n                  typeContactDesc: compromisso.typeContactDesc,\r\n                  start: new Date(compromisso.start),\r\n                  end: new Date(compromisso.end),\r\n                  allDay: compromisso.allDay,\r\n                  description: compromisso.description,\r\n                  draggable: false\r\n                };\r\n              });\r\n            } else {\r\n              return [];\r\n            }\r\n          }),\r\n          finalize(() => {\r\n            this.setRouterParams(paramsObj);\r\n          })\r\n        ); */\r\n    }\r\n    selectedMarker: any; // Variable para almacenar el marcador seleccionado\r\n\r\n    // Función para manejar el evento de clic en el marcador\r\n    onMarkerClick(marker: any) {\r\n        this.selectedMarker = marker;\r\n    }\r\n    filtrarMapas(params) {\r\n        this.loteService.getRutaClientes(params).pipe(\r\n            finalize(() => {\r\n                this.loaderFullScreen = false;\r\n            })\r\n        ).subscribe(\r\n            (response: any) => {\r\n                if (response && response.hasOwnProperty('data')) {\r\n                    this.mapas = response.data;\r\n\r\n                    // Asignar colores a los markers según el código del cliente\r\n                    this.mapas.forEach((mapa) => {\r\n                        // Crear el objeto 'markers' si no existe\r\n                        mapa.markers = {};\r\n                        this.indiceVendedor = mapa.ID_VENDEDOR;\r\n                        // Asignar color basado en el código del cliente\r\n                        if (mapa.color === 1) {\r\n                            mapa.markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000'; // Rojo\r\n                        } else if (mapa.color === 2) {\r\n                            mapa.markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A'; // Naranja\r\n                        } else if (mapa.color === 3) {\r\n                            mapa.markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00'; // Amarillo\r\n                        } else if (mapa.color === 4) {\r\n                            mapa.markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF'; // Blanco\r\n                        } else {\r\n                            mapa.markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00'; // Verde\r\n                        }\r\n\r\n                    });\r\n                } else {\r\n                    this.mapas = null;\r\n                    this.latitud = this.latitud;\r\n                    this.longitud = this.longitud;\r\n                }\r\n            },\r\n            (error) => {\r\n                //console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    agregarClienteTemporal(mapa: any) {\r\n        const nuevoCliente = {\r\n            checked: false,\r\n            codClient: mapa.id_cliente,\r\n            codigoCliente: mapa.CODIGO_CLIENTE,\r\n            nombre: mapa.NOMBRE,\r\n            direccion: mapa.DIRECCION,\r\n            fechaVisita: mapa.FECHA_INICIO,\r\n            mapa: mapa.markers.icon,\r\n            vendedor_id: mapa.id_vendedor,\r\n            indice: mapa.index\r\n        };\r\n        this.atividades.push(nuevoCliente);\r\n        mapa.markers['icon'] = this.selectedIconUrl;\r\n\r\n        this.selectVendedorDefault(nuevoCliente, mapa);\r\n    }\r\n\r\n    selectVendedorDefault(cliente: any, mapa: any) {\r\n        //console.log(mapa.id_vendedor);\r\n        const vendedorEncontrado = this.filteredVendedores.find(vendedor => vendedor.id === mapa.ID_VENDEDOR);\r\n        if (vendedorEncontrado) {\r\n            cliente.vendedor_id = vendedorEncontrado.id;\r\n        } else {\r\n            cliente.vendedor_id = ''; // Valor por defecto si el vendedor no se encuentra en filteredVendedores\r\n        }\r\n    }\r\n\r\n\r\n\r\n    eliminarClienteTemporal(item: any) {\r\n        const index = this.atividades.indexOf(item);\r\n        let registro = 0;\r\n        registro = this.mapas.findIndex(mapa => mapa.CODIGO_CLIENTE === item.codigoCliente);\r\n\r\n        if (registro !== -1) {\r\n            this.atividades.splice(index, 1);\r\n            if (this.mapas[registro].color === 1) {\r\n                this.mapas[registro].markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000'; // Rojo\r\n            } else if (this.mapas[registro].color === 2) {\r\n                this.mapas[registro].markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FC9F3A'; // Naranja\r\n            } else if (this.mapas[registro].color === 3) {\r\n                this.mapas[registro].markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFF00'; // Amarillo\r\n            } else if (this.mapas[registro].color === 4) {\r\n                this.mapas[registro].markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFFFFF'; // Blanco\r\n            } else {\r\n                this.mapas[registro].markers.icon = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00FF00'; // Verde\r\n            }\r\n        }\r\n\r\n    }\r\n    vendedores() {\r\n        this.vendedoresService.getVendedores().subscribe(\r\n            (response: any) => {\r\n                if (response['responseCode'] === 200) {\r\n                    this.filteredVendedores = response['result'];\r\n                    if (this.filteredVendedores.length > 0) {\r\n                        //this.indiceVendedor = this.filteredVendedores[].id;\r\n                    }\r\n                } else {\r\n                    this.filteredVendedores = [];\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    gestiones() {\r\n        this.vendedoresService.getGestiones().subscribe(\r\n            (response: any) => {\r\n                if (response['success'] == true) {\r\n                    this.filteredGestiones = response['data'];\r\n                } else {\r\n                    this.filteredGestiones = [];\r\n                }\r\n            },\r\n            (error: any) => {\r\n                // Manejar el error de la petición si es necesario\r\n            }\r\n        );\r\n    }\r\n    public mostrarSpinner = false;\r\n    private enviarDatosSubject = new Subject<void>();\r\n\r\n\r\n    enviarDatos() {\r\n        let msgSuccess = 'Cita creada exitosamente.';\r\n        let msgError = 'Ocurrio un error al agendar la cita.';\r\n        const datos = this.atividades;\r\n\r\n        /* console.log(datos);\r\n\r\n        // Muestra el spinner\r\n        this.mostrarSpinner = true;\r\n\r\n        // Envía los datos al servicio utilizando el Subject\r\n        this.loteService.guardarRutas(datos)\r\n            .pipe(takeUntil(this.enviarDatosSubject))\r\n            .subscribe(\r\n                (response) => {\r\n                    this.pnotifyService.success(msgSuccess);\r\n                    this.mostrarSpinner = false;\r\n                    this.actualizarPagina();\r\n                },\r\n                (error) => {\r\n                    this.pnotifyService.error(msgError);\r\n                    this.mostrarSpinner = false;\r\n                }\r\n            );\r\n        this.limpiarDatos(); */\r\n    }\r\n    limpiarDatos() {\r\n\r\n        this.atividades = [];\r\n        this.filteredVendedores = [];\r\n        this.filteredGestiones = [];\r\n        this.latitud = this.latitud;\r\n        this.longitud = this.longitud;\r\n\r\n    }\r\n    actualizarPagina() {\r\n        location.reload();\r\n    }\r\n    // En caso de que el componente se destruya antes de completarse el envío de datos,\r\n    // se debe completar el Subject para evitar errores de memoria.\r\n    ngOnDestroy() {\r\n        this.enviarDatosSubject.next();\r\n        this.enviarDatosSubject.complete();\r\n    }\r\n    onVendedorChange(item: any, newValue: any) {\r\n\r\n        item.id_vendedor = newValue;\r\n\r\n    }\r\n\r\n    onGestionChange(item: any, newValue: any) {\r\n        item.codTitulo = newValue;\r\n    }\r\n    onFechaChange(item: any, newValue: any) {\r\n        item.fechaVisita = newValue;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*   dayClicked({\r\n        date,\r\n        events\r\n      }: {\r\n        date: Date;\r\n        events: Array<CalendarEvent<{ compromisso: Compromisso }>>;\r\n      }): void {\r\n        if (isSameMonth(date, this.viewDate)) {\r\n          if (\r\n            (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n            events.length === 0\r\n          ) {\r\n            this.activeDayIsOpen = false;\r\n          } else {\r\n            this.activeDayIsOpen = true;\r\n            this.viewDate = date;\r\n          }\r\n        }\r\n      } */\r\n\r\n    /*   eventClicked(event: CalendarEvent<{ compromisso: Compromisso }>): void {\r\n        this.router.navigate(['../detalhes', event.id], {\r\n          relativeTo: this.activatedRoute\r\n        });\r\n      } */\r\n\r\n    onFilter(showFilter: boolean): void {\r\n        if (showFilter) {\r\n            this.showCalendar = true;\r\n            this.fetchEvents();\r\n        } else {\r\n            this.showCalendar = false;\r\n            this.setRouterParams(null);\r\n        }\r\n\r\n        this.showFilter = !this.showFilter;\r\n    }\r\n\r\n    setRouterParams(params: any): void {\r\n        if (params === null) {\r\n            this.router.navigate([], {\r\n                relativeTo: this.activatedRoute\r\n            });\r\n        } else {\r\n            this.router.navigate([], {\r\n                relativeTo: this.activatedRoute,\r\n                queryParams: { q: btoa(JSON.stringify(params)) },\r\n                queryParamsHandling: 'merge'\r\n            });\r\n        }\r\n    }\r\n}\r\n","import startOfMinute from \"../startOfMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute (and hour and day)?\n *\n * @description\n * Are the given dates in the same minute (and hour and day)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute (and hour and day)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15 in the same minute?\n * const result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 5 September 2014 06:30:00 in the same minute?\n * const result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 5, 6, 30)\n * )\n * //=> false\n */\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = formatters[firstCharacter];\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addYears from \"../addYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * const result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInHour } from \"../constants/index.js\";\n/**\n * @name secondsToHours\n * @category Conversion Helpers\n * @summary Convert seconds to hours.\n *\n * @description\n * Convert a number of seconds to a full number of hours.\n *\n * @param {number} seconds - number of seconds to be converted\n *\n * @returns {number} the number of seconds converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 7200 seconds into hours\n * const result = secondsToHours(7200)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = secondsToHours(7199)\n * //=> 1\n */\nexport default function secondsToHours(seconds) {\n  requiredArgs(1, arguments);\n  var hours = seconds / secondsInHour;\n  return Math.floor(hours);\n}","export default \"/* Estilos para el info window de los marcadores */\\n.marker-info-window {\\n  padding: 10px;\\n  background-color: #fff;\\n}\\n.marker-name {\\n  font-size: 18px;\\n  margin-bottom: 5px;\\n}\\n.marker-info {\\n  margin-bottom: 5px;\\n}\\n.marker-button {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  -ms-flex-pack: center;\\n      justify-content: center;\\n  padding: 8px 16px;\\n  background-color: #FC9F3A;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  margin-top: 10px;\\n}\\n.marker-button:hover {\\n  background-color: #FC9F3A;\\n}\\n.map-control {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  z-index: 9999;\\n}\\ntd {\\n  font-size: 13px;\\n}\\n.spinner-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(255, 255, 255, 0.8);\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-pack: center;\\n      justify-content: center;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  z-index: 9999;\\n}\\n.spinner {\\n  border: 4px solid #f3f3f3;\\n  border-top: 4px solid #3498db;\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  animation: spin 1s linear infinite;\\n}\\n@keyframes spin {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvbG90ZS9ydXRhL3J1dGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0RBQUE7QUFDQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQUNGO0FBR0E7RUFDRSxlQUFBO0VBQ0Esa0JBQUE7QUFBRjtBQUdBO0VBQ0Usa0JBQUE7QUFBRjtBQUdBO0VBQ0Usb0JBQUE7RUFBQSxhQUFBO0VBQ0Esc0JBQUE7TUFBQSxtQkFBQTtFQUNBLHFCQUFBO01BQUEsdUJBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUFGO0FBR0E7RUFDRSx5QkFBQTtBQUFGO0FBR0E7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtBQUFGO0FBR0E7RUFDRSxlQUFBO0FBQUY7QUFHQTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLDBDQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EscUJBQUE7TUFBQSx1QkFBQTtFQUNBLHNCQUFBO01BQUEsbUJBQUE7RUFDQSxhQUFBO0FBQUY7QUFHQTtFQUNFLHlCQUFBO0VBQ0EsNkJBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0NBQUE7QUFBRjtBQUdBO0VBQ0U7SUFDRSx1QkFBQTtFQUFGO0VBR0E7SUFDRSx5QkFBQTtFQURGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbWVyY2lhbC9sb3RlL3J1dGEvcnV0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEVzdGlsb3MgcGFyYSBlbCBpbmZvIHdpbmRvdyBkZSBsb3MgbWFyY2Fkb3JlcyAqL1xyXG4ubWFya2VyLWluZm8td2luZG93IHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG59XHJcblxyXG4ubWFya2VyLW5hbWUge1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbi5tYXJrZXItaW5mbyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcblxyXG4ubWFya2VyLWJ1dHRvbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDhweCAxNnB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGQzlGM0E7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5tYXJrZXItYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkM5RjNBO1xyXG59XHJcblxyXG4ubWFwLWNvbnRyb2wge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDEwcHg7XHJcbiAgcmlnaHQ6IDEwcHg7XHJcbiAgei1pbmRleDogOTk5OTtcclxufVxyXG5cclxudGQge1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxufVxyXG5cclxuLnNwaW5uZXItb3ZlcmxheSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHotaW5kZXg6IDk5OTk7XHJcbn1cclxuXHJcbi5zcGlubmVyIHtcclxuICBib3JkZXI6IDRweCBzb2xpZCAjZjNmM2YzO1xyXG4gIGJvcmRlci10b3A6IDRweCBzb2xpZCAjMzQ5OGRiO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICB3aWR0aDogNDBweDtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgYW5pbWF0aW9uOiBzcGluIDFzIGxpbmVhciBpbmZpbml0ZTtcclxufVxyXG5cclxuQGtleWZyYW1lcyBzcGluIHtcclxuICAwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICB9XHJcblxyXG4gIDEwMCUge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICB9XHJcbn1cclxuIl19 */\";","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInYear } from \"../constants/index.js\";\n/**\n * @name monthsToYears\n * @category Conversion Helpers\n * @summary Convert number of months to years.\n *\n * @description\n * Convert a number of months to a full number of years.\n *\n * @param {number} months - number of months to be converted\n *\n * @returns {number} the number of months converted in years\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 36 months to years:\n * const result = monthsToYears(36)\n * //=> 3\n *\n * // It uses floor rounding:\n * const result = monthsToYears(40)\n * //=> 3\n */\nexport default function monthsToYears(months) {\n  requiredArgs(1, arguments);\n  var years = months / monthsInYear;\n  return Math.floor(years);\n}","export var numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n};\n\nexport var timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { millisecondsInSecond } from \"../constants/index.js\";\n/**\n * @name millisecondsToSeconds\n * @category Conversion Helpers\n * @summary Convert milliseconds to seconds.\n *\n * @description\n * Convert a number of milliseconds to a full number of seconds.\n *\n * @param {number} milliseconds - number of milliseconds to be converted\n *\n * @returns {number} the number of milliseconds converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 1000 miliseconds to seconds:\n * const result = millisecondsToSeconds(1000)\n * //=> 1\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToSeconds(1999)\n * //=> 1\n */\nexport default function millisecondsToSeconds(milliseconds) {\n  requiredArgs(1, arguments);\n  var seconds = milliseconds / millisecondsInSecond;\n  return Math.floor(seconds);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * const result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { monthsInQuarter } from \"../constants/index.js\";\n/**\n * @name quartersToMonths\n * @category Conversion Helpers\n * @summary Convert number of quarters to months.\n *\n * @description\n * Convert a number of quarters to a full number of months.\n *\n * @param {number} quarters - number of quarters to be converted\n *\n * @returns {number} the number of quarters converted in months\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 quarters to months\n * const result = quartersToMonths(2)\n * //=> 6\n */\nexport default function quartersToMonths(quarters) {\n  requiredArgs(1, arguments);\n  return Math.floor(quarters * monthsInQuarter);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n  if (!isOverlapping) {\n    return 0;\n  }\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import isSameMonth from \"../isSameMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * const result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { secondsInMinute } from \"../constants/index.js\";\n/**\n * @name secondsToMinutes\n * @category Conversion Helpers\n * @summary Convert seconds to minutes.\n *\n * @description\n * Convert a number of seconds to a full number of minutes.\n *\n * @param {number} seconds - number of seconds to be converted\n *\n * @returns {number} the number of seconds converted in minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 120 seconds into minutes\n * const result = secondsToMinutes(120)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = secondsToMinutes(119)\n * //=> 1\n */\nexport default function secondsToMinutes(seconds) {\n  requiredArgs(1, arguments);\n  var minutes = seconds / secondsInMinute;\n  return Math.floor(minutes);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarISOWeekYears from \"../differenceInCalendarISOWeekYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport subISOWeekYears from \"../subISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * const result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference);\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastISOWeekYearNotFull = Number(compareAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastISOWeekYearNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import isSameQuarter from \"../isSameQuarter/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * const result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInYear = 365.2425;\n\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInMinute = 60000;\n\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInHour = 3600000;\n\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInSecond = 1000;\n\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\nexport var minTime = -maxTime;\n\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var minutesInHour = 60;\n\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInQuarter = 3;\n\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInYear = 12;\n\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var quartersInYear = 4;\n\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInHour = 3600;\n\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMinute = 60;\n\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInDay = secondsInHour * 24;\n\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInWeek = secondsInDay * 7;\n\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInYear = secondsInDay * daysInYear;\n\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMonth = secondsInYear / 12;\n\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInQuarter = secondsInMonth * 3;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * const result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * const result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * const result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nexport default function isMonday(date) {\n  requiredArgs(1, arguments);\n  return toDate(date).getDay() === 1;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @param {Date | Number} dateToCompare - the date to compare with\n * @param {Array<Date> | Array<number>} datesArray - the array to search\n * @returns {Number | undefined} an index of the date closest to the given date or undefined if no valid value is given\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * const dateToCompare = new Date(2015, 8, 6)\n * const datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * const result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  if (isNaN(Number(dateToCompare))) return NaN;\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray;\n  // `dirtyDatesArray` is undefined or null\n  if (dirtyDatesArray == null) {\n    datesArray = [];\n\n    // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n\n    // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n    if (isNaN(Number(currentDate))) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n    if (result == null || distance < Number(minDistance)) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","export default \"::ng-deep comercial-templates-filtro-vendedor-escritorio #form-filtro-vendedor-escritorio {\\n  max-width: 300px;\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvdGVtcGxhdGVzL2ZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvL2ZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0UsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUROIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvdGVtcGxhdGVzL2ZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvL2ZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIHtcclxuICBjb21lcmNpYWwtdGVtcGxhdGVzLWZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvIHtcclxuICAgICNmb3JtLWZpbHRyby12ZW5kZWRvci1lc2NyaXRvcmlvIHtcclxuICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */\";","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComercialDashboardVendedorService {\r\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/dashboard/vendedor`;\r\n\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  getDesempenhoToneladas(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/desempenho/toneladas/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getDesempenhoLinhas(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/desempenho/linhas/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getConcentracaoVendas(vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/concentracao-vendas/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getMetas(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/metas/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getClientes(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/carteira-clientes/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getRegistroOcorrencias(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/registro-ocorrencias/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getFinanceiroInadimplentes(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/financeiro/inadimplentes/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getValorRepresentante(vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/financeiro/representantes/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  getFinanceiroNotasDebito(escritorio: number, vendedor: number) {\r\n    return this.http\r\n      .get(`${this.API}/financeiro/notas-debito/${escritorio}/${vendedor}`)\r\n      .pipe(take(1));\r\n  }\r\n}\r\n","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function trunc(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n};\n\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import startOfHour from \"../startOfHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour (and same day)?\n *\n * @description\n * Are the given dates in the same hour (and same day)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour (and same day)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\n * //=> false\n */\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}"]}