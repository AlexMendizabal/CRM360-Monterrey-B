{"version":3,"sources":["webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/formulario/formulario.component.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/formulario/formulario.component.scss","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/lista/lista.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/lista/lista.component.html","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/integracao-materiais-routing.module.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/integracao-materiais.module.ts","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/formulario/formulario.component.html","webpack:///src/app/modules/comercial/integracoes/dagda/integracao-materiais/lista/lista.component.scss"],"names":["ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent","activatedRoute","formBuilder","dateService","localeService","routerService","route","pnotify","location","confirmModalService","associacaoService","currentUser","JSON","parse","localStorage","getItem","idMtcorp","spinnerFullScreen","loaderNavbar","breadCrumbTree","data","Date","linhas","classes","matDagda","materiaisLista","loadingDagda","noResult","toggleAll","searchingDagda","inactiveForDelete","validForm","showMateriais","tableConfigAssocMateriais","fixedHeader","bodyHeight","hover","appTitle","situacao","cd","ds","tableConfig","subtitleBorder","form","group","ID_LINH","NM_LINH","value","disabled","ID_CLAS","NM_CLAS","codigoMaterial","NM_MATE_TID","cdDagda","idMatTidDagda","inCada","status","parametro","user","codSimilaridade","codLinha","codClasse","codMaterial","nomeMaterial","codSituacao","assocMateriais","array","onActivatedRoute","setBreadCrumb","getFilterValues","getListaMateriaisDagda","params","snapshot","id","getAssociacao","navigate","relativeTo","idSubModulo","descricao","routerLink","_params","_obj","prop","convertToBrazilianDate","substring","Array","toString","field","onFieldInvalid","get","touched","required","formControl","controls","validator","validationResult","length","getParams","param","getMateriaisDagda","subscribe","response","body","map","el","o","Object","assign","checked","notice","pipe","altera","setValue","ID_MATE_TID_DAGD","ID_MATE_TID","IN_STAT","getDetalhes","stat","onSubmit","next","success","back","error","event","material","onInput","onAddMaterial","responseCode","result","materiais","i","manipulateForm","checkMaterialExists","push","setTimeout","markAsTouched","markAsDirty","some","index","lista","CD_MATE","NM_MATE","materialAssociado","limparMaterialPrincipal","forEach","e","ID_MATE_DAGD","NM_MATE_DAGD","setMateriais","deleteMaterial","getDetalhesDagd","showConfirm","removeAt","item","deleteAssociacao","ID","cdMatTid","cdMatDagda","selector","template","ComercialIntegracoesDagdaIntegracaoMateriaisListaComponent","detailPanelService","listas","detalhes","dadosEmpty","dadosEmptyDetalhes","panelTitle","reg","integrados","itemsPerPage","currentPage","begin","end","orderBy","orderType","showDetailPanel","use","bsConfig","containerClass","adaptivePosition","showWeekNumbers","registros","pagina","time","getTime","getActiveRoute","getLinhas","getClasses","onSubscription","$activateRoutedSubscription","unsubscribe","$showDetailPanelSubscription","hide","queryParams","setBase64UrlParams","keys","_response","getBase64UrlParams","patchValue","totalItems","page","column","onFilter","loadingLinhas","loadingClasses","idlinha","config","showing","show","loadedFinished","splice","disable","enable","providers","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","ComercialIntegracoesDagdaIntegracaoMateriaisRoutingModule","imports","forChild","exports","ComercialIntegracoesDagdaIntegracaoMateriaisModule","declarations"],"mappings":"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","file":"integracao-materiais-integracao-materiais-module-es5.js","sourcesContent":["import { finalize } from 'rxjs/operators';\nimport { ComercialIntegracoesServicosIntegracaoMateriaisComponent } from './../../services/associacao-materiais.service';\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\nimport { RouterService } from './../../../../../../shared/services/core/router.service';\n\nimport { DateService } from './../../../../../../shared/services/core/date.service';\nimport { FormGroup, FormBuilder, FormControl, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\nimport { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent\n  implements OnInit\n{\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  idMtcorp: any = this.currentUser['info']['id'];\n  spinnerFullScreen: boolean = true;\n  loaderNavbar: boolean = false;\n  breadCrumbTree: any = [];\n  form: FormGroup;\n  data: Date = new Date();\n  linhas: Array<any> = [];\n  classes: Array<any> = [];\n  materiais: [];\n  matDagda: Array<any> = [];\n  materiaisLista: Array<any> = [];\n  teste: {};\n\n  loadingLinhas: boolean;\n  loadingClasses: boolean;\n  loadingMateriais: boolean;\n  loadingDagda = false;\n  noResult = false;\n  toggleAll = false;\n  searchingDagda = false;\n  inactiveForDelete = false;\n  validForm = false;\n\n  submittingForm: boolean;\n  limparMaterialPrincipal: boolean;\n  showMateriais = true;\n\n  tableConfigAssocMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 230,\n    hover: false,\n  };\n\n  appTitle = 'Cadastro de Associação';\n\n  situacao = [\n    {\n      cd: '',\n      ds: 'Todos',\n    },\n    {\n      cd: 0,\n      ds: 'Inativos',\n    },\n    {\n      cd: 1,\n      ds: 'Ativos',\n    },\n  ];\n\n  /* Config Table */\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: false,\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private dateService: DateService,\n    private localeService: BsLocaleService,\n    private routerService: RouterService,\n    private route: Router,\n    private pnotify: PNotifyService,\n    private location: Location,\n    private confirmModalService: ConfirmModalService,\n    private associacaoService: ComercialIntegracoesServicosIntegracaoMateriaisComponent\n  ) {\n    this.form = this.formBuilder.group({\n      ID_LINH: [null],\n      NM_LINH: [{ value: [null], disabled: true }],\n      ID_CLAS: [null],\n      NM_CLAS: [{ value: [null], disabled: true }],\n      codigoMaterial: [null],\n      NM_MATE_TID: [{ value: [null], disabled: true }],\n      cdDagda: [null],\n      idMatTidDagda: null,\n      inCada: null,\n      status: 1,\n      parametro: 1,\n      user: this.idMtcorp,\n      codSimilaridade: [null],\n      codLinha: [null],\n      codClasse: [null],\n      codMaterial: [null],\n      nomeMaterial: [null],\n      codSituacao: [null],\n      assocMateriais: this.formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.spinnerFullScreen = false;\n    this.noResult = true;\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n    this.getFilterValues();\n    this.getListaMateriaisDagda();\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n    if (params.id) {\n      //this.form.get('idMatTidDagda').setValue(params.id);\n\n      this.getAssociacao(params.id);\n    }\n  }\n\n  onCancel() {\n    this.route.navigate(\n      ['/comercial/integracoes/dagda/${id}/integracao-materiais'],\n      {\n        relativeTo: this.activatedRoute,\n      }\n    );\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Integração Dagda',\n        routerLink: `/comercial/integracoes/dagda/${id}`,\n      },\n      {\n        descricao: 'Integração de Materiais',\n        routerLink: `/comercial/integracoes/dagda/${id}/integracao-materiais`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService\n            .convertToBrazilianDate(_obj[prop])\n            .substring(0, 10);\n        if (_obj[prop] instanceof Array) _params[prop] = _obj[prop].toString();\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  resetDagda() {\n    if (this.form.get('cdDagda').value.length == 0)\n      this.getListaMateriaisDagda(this.getParams());\n  }\n\n  getMateriaisDagda() {\n    this.matDagda = [];\n    this.searchingDagda = true;\n    let param = this.getParams();\n    this.associacaoService.getMateriaisDagda(param).subscribe((response) => {\n      if (response.body['success'] == true) {\n        //this.matDagda = response.body['data'];\n        this.searchingDagda = false;\n\n        this.matDagda = response.body['data'].map(function (el: any) {\n          var o = Object.assign({}, el);\n          o.checked = 0;\n          return o;\n        });\n      } else {\n        this.pnotify.notice('Nenhum material Dagda foi encontrado!');\n        this.searchingDagda = false;\n      }\n    });\n  }\n\n  getListaMateriaisDagda(param?) {\n    this.loadingDagda = true;\n    param = param == null ? '' : param;\n    this.associacaoService.getMateriaisDagda(param).subscribe((response) => {\n      if (response.body['success'] == true) {\n        this.loadingDagda = false;\n        this.materiaisLista = response.body['data'];\n      } else {\n        this.pnotify.notice('Nenhum material Dagda foi encontrado!');\n        this.loadingDagda = false;\n      }\n    });\n  }\n\n  getAssociacao(params) {\n    let param = { codigoMaterial: params };\n    this.associacaoService\n      .getAssociacao(param)\n      .pipe(\n        finalize(() => {\n          this.spinnerFullScreen = false;\n        })\n      )\n      .subscribe((response) => {\n        this.altera(response.body['data'][0]);\n      });\n  }\n\n  altera(param) {\n    this.form.controls['idMatTidDagda'].setValue(param.ID_MATE_TID_DAGD);\n    this.form.controls['ID_LINH'].setValue(param.ID_LINH);\n    this.form.controls['codLinha'].setValue(param.NM_LINH);\n    this.form.controls['ID_CLAS'].setValue(param.ID_CLAS);\n    this.form.controls['NM_CLAS'].setValue(param.NM_CLAS);\n    this.form.controls['codMaterial'].setValue(param.ID_MATE_TID);\n    this.form.controls['nomeMaterial'].setValue(param.NM_MATE_TID);\n    this.form.controls['status'].setValue(param.IN_STAT);\n    this.getDetalhes(param.ID_MATE_TID);\n  }\n\n  onSubmit() {\n    const params = {\n      idMatTidDagda: this.form.get('idMatTidDagda').value,\n      codigoMaterial: this.form.get('codMaterial').value,\n      cdDagda: this.form.get('assocMateriais').value,\n      user: this.form.get('user').value,\n      stat: this.form.get('status').value,\n    };\n\n    this.loaderNavbar = true;\n    this.associacaoService\n      .onSubmit(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response) => {\n          if (response['status'] == 200)\n            this.pnotify.success(response.body['mensagem']);\n          this.location.back();\n        },\n        error: (error) => this.pnotify.error(),\n      });\n  }\n\n  onLoaderNavbar(event: boolean): void {\n    this.loaderNavbar = event;\n  }\n\n  materialPrincipal(material: any): void {\n    this.onInput();\n\n    this.form.controls.codLinha.setValue(material.codLinha);\n    this.form.controls.codClasse.setValue(material.codClasse);\n    this.form.controls.codMaterial.setValue(material.codigoMaterial);\n    this.form.controls.nomeMaterial.setValue(material.descricao);\n\n    //Valida informação para ativar o botão de salvar\n    if (\n      this.form.value.assocMateriais.length > 0 &&\n      this.form.get('codMaterial').value !== null\n    ) {\n      this.validForm = true;\n    }\n    // fim da validação\n  }\n\n  materialAssociado(material: any): void {\n    this.onAddMaterial(material, true);\n  }\n\n  onInput() {}\n\n  getFilterValues(): void {\n    this.associacaoService\n      .getFilterValues()\n      .pipe(\n        finalize(() => {\n          this.spinnerFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response[0].responseCode === 200) {\n          this.linhas = response[0].result;\n        } else {\n          this.pnotify.error();\n          this.location.back();\n        }\n\n        if (response[1].responseCode === 200) {\n          this.classes = response[1].result;\n        } else {\n          this.pnotify.error();\n          this.location.back();\n        }\n      });\n  }\n\n  setMateriais(materiais: any): void {\n    if (materiais.length > 0) {\n      for (let i = 0; i < materiais.length; i++) {\n        this.onAddMaterial(materiais[i]);\n      }\n    }\n  }\n\n  get assocMateriais(): FormArray {\n    return this.form.get('assocMateriais') as FormArray;\n  }\n\n  onAddMaterial(material: any, manipulateForm?: boolean): void {\n    if (this.checkMaterialExists(material) === false) {\n      this.assocMateriais.push(\n        this.formBuilder.group({\n          codMaterial: [material.codMaterial],\n          nomeMaterial: [material.nomeMaterial],\n        })\n      );\n\n      if (this.form.value.assocMateriais.length > 9) {\n        if (this.tableConfigAssocMateriais.fixedHeader === false) {\n          this.showMateriais = false;\n          this.tableConfigAssocMateriais.fixedHeader = true;\n\n          setTimeout(() => {\n            this.showMateriais = true;\n          }, 1);\n        }\n      }\n\n      //Valida informação para ativar o botão de salvar\n      if (\n        this.form.value.assocMateriais.length > 0 &&\n        this.form.get('codMaterial').value !== null\n      ) {\n        this.validForm = true;\n      }\n      // fim da validação\n\n      if (manipulateForm) {\n        this.form.markAsTouched();\n        this.form.markAsDirty();\n      }\n    } else {\n      //this.pnotify.notice('Associe apenas materiais da mesma classe.');\n    }\n  }\n\n  checkMaterialExists(material: any): boolean {\n    return this.form.value.assocMateriais.some((el: any) => {\n      return el.codMaterial === material.codMaterial;\n    });\n  }\n\n  onToggleAll() {\n    this.toggleAll = !this.toggleAll;\n\n    for (let index = 0; index < this.matDagda.length; index++) {\n      this.matDagda[index].checked = this.toggleAll === true ? 1 : 0;\n    }\n  }\n\n  onCheckMaterial(index: number, lista: any): void {\n    this.matDagda[index].checked = lista.checked == 0 ? 1 : 0;\n  }\n\n  onAssociarMateriais(): void {\n    this.toggleAll = false;\n\n    for (let index = 0; index < this.matDagda.length; index++) {\n      if (this.matDagda[index].checked === 1) {\n        const material = {\n          codMaterial: this.matDagda[index].CD_MATE,\n          nomeMaterial: this.matDagda[index].NM_MATE,\n        };\n        this.materialAssociado(material);\n        this.matDagda[index].checked = 0;\n        this.inactiveForDelete = false;\n      }\n    }\n  }\n\n  onLimparMaterialPrincipal(): void {\n    this.limparMaterialPrincipal = true;\n\n    this.form.controls.codMaterial.setValue(null);\n    this.form.controls.nomeMaterial.setValue(null);\n\n    setTimeout(() => {\n      this.limparMaterialPrincipal = false;\n    }, 100);\n  }\n\n  getDetalhes(param) {\n    param = { codigoMaterial: param };\n    let material: any = [];\n    this.associacaoService.getDetalhes(param).subscribe((response) => {\n      if (response.status == 200) {\n        response.body['data'].forEach((e) => {\n          material.push({\n            codMaterial: e.ID_MATE_DAGD,\n            nomeMaterial: e.NM_MATE_DAGD,\n          });\n        });\n        this.setMateriais(material);\n      }\n    });\n  }\n\n  onDeleteMaterial(index: number, param): void {\n    this.inactiveForDelete = true;\n    this.deleteMaterial(index);\n    this.getDetalhesDagd(param);\n  }\n\n  confirmDelete(): any {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirmar exclusão',\n      'Deseja realmente prosseguir com a exclusão do registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  deleteMaterial(index: number) {\n    this.assocMateriais.removeAt(index);\n    this.form.markAsTouched();\n    this.form.markAsDirty();\n  }\n\n  getDetalhesDagd(item) {\n    let param = { codigoMaterial: item };\n    this.associacaoService.getDetalhes(param).subscribe((response) => {\n      if (response.status == 200) {\n        this.deleteAssociacao(response.body['data'][0]);\n      } else {\n        this.pnotify.success('Associação removida com sucesso');\n      }\n    });\n  }\n\n  deleteAssociacao(item): void {\n    let param = item;\n\n    const params = {\n      idMatTidDagda: param.ID,\n      cdMatTid: param.ID_MATE_TID,\n      cdMatDagda: param.ID_MATE_DAGD,\n      user: this.idMtcorp,\n    };\n\n    this.associacaoService.deleteAssociacao(params).subscribe((response) => {\n      this.pnotify.success('Associação removida com sucesso');\n      this.getDetalhes(param.ID_MATE_TID);\n\n      if (this.form.value.assocMateriais.length > 0) {\n        this.inactiveForDelete = false;\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2ludGVncmFjb2VzL2RhZ2RhL2ludGVncmFjYW8tbWF0ZXJpYWlzL2Zvcm11bGFyaW8vZm9ybXVsYXJpby5jb21wb25lbnQuc2NzcyJ9 */\";","import { CustomTableConfig } from './../../../../../../shared/templates/custom-table/models/config';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PNotifyService } from './../../../../../../shared/services/core/pnotify.service';\nimport { RouterService } from './../../../../../../shared/services/core/router.service';\nimport { DateService } from './../../../../../../shared/services/core/date.service';\nimport { DetailPanelService } from 'src/app/shared/templates/detail-panel/detal-panel.service';\n\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ComercialIntegracoesServicosIntegracaoMateriaisComponent } from '../../services/associacao-materiais.service';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\n\n@Component({\n  selector: 'lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n  providers: [DetailPanelService],\n})\nexport class ComercialIntegracoesDagdaIntegracaoMateriaisListaComponent\n  implements OnInit, OnDestroy\n{\n  currentUser: any = JSON.parse(localStorage.getItem('currentUser'));\n  idMtcorp: any = this.currentUser['info']['id'];\n  spinnerFullScreen: boolean = true;\n  loaderNavbar: boolean = false;\n  breadCrumbTree: any = [];\n  noResult = false;\n  listas: any = [];\n  detalhes: any = [];\n  linhas: [];\n  classes: [];\n  loadingLinhas: boolean;\n  loadingClasses: boolean;\n  form: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  $activateRoutedSubscription: Subscription;\n  data: Date = new Date();\n  dadosEmpty = false;\n  dadosEmptyDetalhes = false;\n\n  appTitle = 'Integração de Materiais';\n  panelTitle = 'Associações';\n\n  situacao = [\n    {\n      cd: '',\n      ds: 'Todos',\n    },\n    {\n      cd: '0',\n      ds: 'Inativos',\n    },\n    {\n      cd: '1',\n      ds: 'Ativos',\n    },\n  ];\n\n  reg = [\n    {\n      cd: 10,\n      ds: '10',\n    },\n    {\n      cd: 25,\n      ds: '25',\n    },\n    {\n      cd: 50,\n      ds: '50',\n    },\n    {\n      cd: 100,\n      ds: '100',\n    },\n    {\n      cd: 200,\n      ds: '200',\n    },\n    {\n      cd: 300,\n      ds: '300',\n    },\n  ];\n\n  integrados = [\n    {\n      cd: '1',\n      ds: 'Vinculados',\n    },\n    {\n      cd: '0',\n      ds: 'Não Vinculados',\n    },\n  ];\n\n  /* Paginação */\n  itemsPerPage: number = 10;\n  totalItems: number;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = this.itemsPerPage;\n\n  orderBy = 'ID_MATE_TID_DAGD';\n  orderType = 'DESC';\n\n  /* Config Table */\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  /* Painel de detalhes */\n  $showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private dateService: DateService,\n    private localeService: BsLocaleService,\n    private routerService: RouterService,\n    private pnotify: PNotifyService,\n    private route: Router,\n    private detailPanelService: DetailPanelService,\n    private associacaoService: ComercialIntegracoesServicosIntegracaoMateriaisComponent\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n\n    this.form = this.formBuilder.group({\n      codigoMaterial: [null],\n      cdDagda: [null],\n      status: [null],\n      ID_LINH: [null],\n      ID_CLAS: [null],\n      idMatTidDagda: null,\n      inCada: null,\n      registros: 10,\n      pagina: this.currentPage,\n      orderBy: this.orderBy,\n      orderType: this.orderType,\n      time: [new Date().getTime()],\n    });\n  }\n\n  ngOnInit(): void {\n    this.setBreadCrumb();\n    this.getActiveRoute();\n    this.getLinhas();\n    this.getClasses();\n    this.onSubscription();\n  }\n\n  ngOnDestroy() {\n    this.$activateRoutedSubscription.unsubscribe();\n    this.$showDetailPanelSubscription.unsubscribe();\n  }\n\n  onFilter() {\n    this.form.get('time').setValue(new Date().getTime());\n    this.loaderNavbar = true;\n    this.detailPanelService.hide();\n    if (this.form.value['registros']) {\n      this.itemsPerPage = this.form.value['registros'];\n      this.end = this.form.value['registros'];\n    }\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getActiveRoute() {\n    this.spinnerFullScreen = true;\n    this.$activateRoutedSubscription =\n      this.activatedRoute.queryParams.subscribe((response) => {\n        if (Object.keys(response).length > 0) {\n          const _response = this.routerService.getBase64UrlParams(response);\n          this.form.patchValue(_response);\n        }\n\n        if (this.form.get('cdDagda').value) {\n          this.getDetalhes({ cdDagda: this.getParams()['cdDagda'] });\n        } else {\n          this.getAssociacao(this.getParams());\n        }\n      });\n  }\n\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/comercial/home`,\n      },\n      {\n        descricao: 'Integração Dagda',\n        routerLink: `/comercial/integracoes/dagda/${id}`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n  }\n\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n\n  getAssociacao(params: any) {\n    if (params === 0) {\n      this.dadosEmpty = true;\n      this.noResult = false;\n      this.spinnerFullScreen = false;\n      this.loaderNavbar = false;\n      return;\n    } else {\n      this.loaderNavbar = true;\n      this.associacaoService\n        .getAssociacao(params)\n        .pipe(\n          finalize(() => {\n            this.spinnerFullScreen = false;\n            this.loaderNavbar = false;\n          })\n        )\n        .subscribe({\n          next: (response) => {\n            if (response.status != 200) {\n              this.dadosEmpty = true;\n              this.noResult = false;\n              this.pnotify.notice('Nenhum resgistro foi encontrado!');\n              this.listas = [];\n              return;\n            }\n\n            this.listas = response.body['data'];\n            this.totalItems = response.body['data'].length;\n            this.noResult = true;\n          },\n          error: (error) => this.pnotify.error(),\n        });\n    }\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService\n            .convertToBrazilianDate(_obj[prop])\n            .substring(0, 10);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'desc') {\n        this.orderType = 'asc';\n      } else if (this.orderType == 'asc') {\n        this.orderType = 'desc';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'asc';\n    }\n    this.form.get('orderBy').setValue(this.orderBy);\n    this.form.get('orderType').setValue(this.orderType);\n    this.onFilter();\n  }\n\n  onEdit(item) {\n    this.route.navigate(['./', item.ID_MATE_TID], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(item),\n    });\n  }\n\n  onEditStatus(param) {\n    this.loaderNavbar = true;\n    param.IN_STAT = param.IN_STAT == 1 ? 0 : 1;\n\n    const params = {\n      idMatTidDagda: param.ID_MATE_TID_DAGD,\n      status: param.IN_STAT,\n      user: this.idMtcorp,\n    };\n\n    this.associacaoService\n      .onSubmit(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe({\n        next: (response) => {\n          if (response.status === 200) {\n            this.pnotify.success('Status alterado com sucesso');\n            this.getAssociacao(this.getParams());\n          }\n        },\n        error: (error) => this.pnotify.error(),\n      });\n  }\n\n  getLinhas() {\n    this.loadingLinhas = true;\n\n    this.associacaoService.getLinhas().subscribe((response) => {\n      if (response.body['responseCode'] != 200) {\n        this.pnotify.notice('Nenhuma linha foi encontrada!');\n        this.loadingLinhas = false;\n      } else {\n        this.loadingLinhas = false;\n        this.linhas = response.body['result'];\n      }\n    });\n  }\n\n  getClasses() {\n    this.loadingClasses = true;\n    let idlinha = {\n      ID_LINH:\n        this.form.get('ID_LINH').value == null\n          ? ''\n          : this.form.get('ID_LINH').value,\n    };\n    this.associacaoService.getClasses(idlinha).subscribe((response) => {\n      if (response.body['responseCode'] == 200) {\n        this.loadingClasses = false;\n        this.classes = response.body['result'];\n      } else {\n        this.pnotify.notice('Nenhuma classe foi encontrada!');\n        this.loadingClasses = false;\n      }\n    });\n  }\n\n  onSubscription() {\n    this.$showDetailPanelSubscription =\n      this.detailPanelService.config.subscribe((event: any) => {\n        this.showDetailPanel = event.showing;\n      });\n  }\n\n  onDetailPanel(param): void {\n    if (param.IN_STAT == 0) {\n      return;\n    } else {\n      this.detailPanelService.show();\n      this.getDetalhes({ codigoMaterial: param.ID_MATE_TID });\n    }\n  }\n\n  getDetalhes(param) {\n    let params = {};\n    this.associacaoService\n      .getDetalhes(param)\n      .pipe(\n        finalize(() => {\n          if (this.showDetailPanel) {\n            this.detailPanelService.loadedFinished(false);\n          }\n        })\n      )\n      .subscribe((response) => {\n        if (response.status == 200) {\n          this.detalhes = response.body['data'];\n          params = { codigoMaterial: this.detalhes[0]['ID_MATE_TID'] };\n          this.dadosEmptyDetalhes = false;\n\n          if (this.form.get('cdDagda').value && this.showDetailPanel == false) {\n            this.getAssociacao({\n              params,\n            });\n          }\n        } else {\n          this.pnotify.notice('Nenhuma associação encontrada!');\n          this.detalhes = [];\n          this.dadosEmptyDetalhes = true;\n          this.getAssociacao(0);\n        }\n      });\n  }\n\n  deleteAssociacao(i, param): void {\n    this.detalhes.splice(i, 1);\n    const params = {\n      idMatTidDagda: param.ID,\n      cdMatTid: param.ID_MATE_TID,\n      cdMatDagda: param.ID_MATE_DAGD,\n      user: this.idMtcorp,\n    };\n\n    this.associacaoService.deleteAssociacao(params).subscribe((response) => {\n      this.pnotify.success('Associação removida com sucesso');\n      this.getDetalhes({ codigoMaterial: param.ID_MATE_TID });\n    });\n  }\n\n  disableForm() {\n    if (this.form.get('cdDagda').value) {\n      this.form.get('ID_LINH').disable();\n      this.form.get('ID_CLAS').disable();\n    } else {\n      this.form.get('ID_LINH').enable();\n      this.form.get('ID_CLAS').enable();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [routerLink]=\\\"['../novo']\\\">\\n    Adicionar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"de\\\">\\n                <span class=\\\"mr-1\\\">De</span>\\n                <ng-template #tooltipLabelDeTemplate>\\n                  <p class=\\\"mb-0\\\">Código do Material no TID</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelDeTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"number\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"codigoMaterial\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"para\\\">\\n                <span class=\\\"mr-1\\\">Para</span>\\n                <ng-template #tooltipLabelParaTemplate>\\n                  <p class=\\\"text-nowrap mb-0\\\">Código do Material no Dagda</p>\\n                </ng-template>\\n                <i class=\\\"far fa-question-circle\\\" [tooltip]=\\\"tooltipLabelParaTemplate\\\" container=\\\"body\\\"></i>\\n              </label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"cdDagda\\\"\\n                (input)=\\\"disableForm()\\\"\\n                (keydown.enter)=\\\"onFilter()\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"linhas\\\">Linhas</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"linhas\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingLinhas\\\"\\n                labelForId=\\\"linhas\\\"\\n                bindLabel=\\\"NM_LINH\\\"\\n                bindValue=\\\"ID\\\"\\n                id=\\\"linhas\\\"\\n                formControlName=\\\"ID_LINH\\\"\\n                (change) =\\\"getClasses()\\\"\\n                [ngClass]=\\\"onFieldError('ID_LINH') + ' ' + onFieldRequired('ID_LINH')\\\"\\n                >\\n              </ng-select>\\n              <invalid-form-control\\n                [show]=\\\"onFieldInvalid('ID_LINH')\\\"\\n                message=\\\"Linha é obrigatório.\\\">\\n              </invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"classes\\\">Classes</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"true\\\"\\n                [items]=\\\"classes\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                [loading]=\\\"loadingClasses\\\"\\n                labelForId=\\\"classes\\\"\\n                bindLabel=\\\"NM_CLAS\\\"\\n                bindValue=\\\"ID\\\"\\n                id=\\\"classes\\\"\\n                formControlName=\\\"ID_CLAS\\\"\\n                [ngClass]=\\\"onFieldError('ID_CLAS') + ' ' + onFieldRequired('ID_CLAS')\\\"\\n                >\\n              </ng-select>\\n              <invalid-form-control\\n                [show]=\\\"onFieldInvalid('ID_CLAS')\\\"\\n                message=\\\"Classe é obrigatório.\\\">\\n              </invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"status\\\"> Situação </label>\\n\\t\\t\\t\\t\\t\\t\\t<ng-select\\n\\t\\t\\t\\t\\t\\t\\t\\t[searchable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[clearable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[items]=\\\"situacao\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[virtualScroll]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelForId=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tbindLabel=\\\"ds\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tbindValue=\\\"cd\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Selecione...\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"onFieldError('status') + ' ' + onFieldRequired('status')\\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t</ng-select>\\n\\t\\t\\t\\t\\t\\t\\t<invalid-form-control\\n\\t\\t\\t\\t\\t\\t\\t\\t[show]=\\\"onFieldInvalid('status')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tmessage=\\\"Situação é obrigatório.\\\">\\n\\t\\t\\t\\t\\t\\t\\t</invalid-form-control>\\n\\t\\t\\t\\t\\t\\t</div>\\n            <div class=\\\"form-group col-md-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"registros\\\"> Registros </label>\\n\\t\\t\\t\\t\\t\\t\\t<ng-select\\n\\t\\t\\t\\t\\t\\t\\t\\t[searchable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[clearable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[items]=\\\"reg\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[virtualScroll]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelForId=\\\"registros\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tbindLabel=\\\"ds\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tbindValue=\\\"cd\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Selecione...\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"registros\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"onFieldError('registros') + ' ' + onFieldRequired('registros')\\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t</ng-select>\\n\\t\\t\\t\\t\\t\\t\\t<invalid-form-control\\n\\t\\t\\t\\t\\t\\t\\t\\t[show]=\\\"onFieldInvalid('registros')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tmessage=\\\"Registros é obrigatório.\\\">\\n\\t\\t\\t\\t\\t\\t\\t</invalid-form-control>\\n\\t\\t\\t\\t\\t\\t</div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n\\t<div class=\\\"row\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-7 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n\\t\\t\\t\\t\\t\\t<th></th>\\n            <th class=\\\"text-nowrap\\\" (click)=\\\"setOrderBy('ID_MATE_TID')\\\">\\n              <thead-sorter value=\\\"Cod. TID\\\" [active]=\\\"orderBy == 'ID_MATE_TID'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n            </th>\\n\\t\\t\\t\\t\\t\\t<th (click)=\\\"setOrderBy('NM_MATE_TID')\\\">\\n\\t\\t\\t\\t\\t\\t\\t<thead-sorter value=\\\"Material\\\" [active]=\\\"orderBy == 'NM_MATE_TID'\\\" [sort]=\\\"orderType\\\"></thead-sorter>\\n\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"text-left\\\"> Usuário Cadastro</th>\\n            <th [hidden]=\\\"showDetailPanel\\\"></th>\\n            <th></th>\\n            <th></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody >\\n          <tr *ngFor=\\\"let lista of listas | slice : begin : end; let i = index\\\" [tooltip]=\\\"lista.IN_STAT == 0 ? 'Editar' : ''\\\"\\n               class=\\\"hover\\\">\\n\\t\\t\\t\\t\\t\\t<td [ngClass]=\\\"{ \\n                'border-success' : lista.IN_STAT == 1, \\n                'border-danger'  : lista.IN_STAT == 0\\n              }\\\">\\n            </td>\\n            <td class=\\\"text-center\\\" (click)=\\\"onDetailPanel(lista)\\\">{{ lista.ID_MATE_TID }}</td>\\n            <td class=\\\"text-left\\\" style=\\\"width: 50rem\\\" (click)=\\\"onDetailPanel(lista)\\\">{{ lista.NM_MATE_TID | uppercase }}</td>\\n            <td class=\\\"text-left\\\" style=\\\"width: 15rem\\\" (click)=\\\"onDetailPanel(lista)\\\">{{ lista.NR_MATR }}</td>\\n            <td  style=\\\"width: 10rem\\\" [hidden]=\\\"showDetailPanel\\\" (click)=\\\"onDetailPanel(lista)\\\"></td>\\n            <td class=\\\"text-right px-0\\\" style=\\\"width: 10rem\\\">\\n              <span class=\\\"\\\" [tooltip]=\\\"lista.IN_STAT == 1 ? 'Inativar' : 'Ativar'\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" [style]=\\\"lista.IN_STAT == 1 ? 'color: green;' : 'color: red;'\\\" (click)=\\\"onEditStatus(lista)\\\" [disabled]=\\\"lista.IN_STAT == null\\\">\\n                  <i [ngClass]=\\\"lista.IN_STAT == 1 ? 'fas fa-toggle-on' : 'fas fa-toggle-off'\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n            <td class=\\\"text-center px-0\\\" style=\\\"width: 4rem\\\">\\n              <span tooltip=\\\"Editar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button class=\\\"btn-icon-sm\\\" style=\\\"color: blue;\\\" (click)=\\\"onEdit(lista)\\\" [disabled]=\\\"lista.IN_STAT == 0\\\">\\n                  <i class=\\\"fas fa-edit\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"mt-3\\\" [hidden]=\\\"!noResult\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"10\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n    </div>\\n    <div class=\\\"col-5\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel [panelTitle]=\\\"panelTitle\\\">\\n        <custom-table [hidden]=\\\"dadosEmptyDetalhes\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th class=\\\"text-center\\\">Cod. Dagda</th>\\n              <th class=\\\"text-center\\\">Material</th>\\n              <th></th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr *ngFor=\\\"let detalhe of detalhes let i = index\\\">\\n              <td class=\\\"text-center\\\">{{ detalhe.ID_MATE_DAGD }}</td>\\n              <td class=\\\"text-center nowrap\\\">{{ detalhe.DS_MATE }}</td>\\n              <td class=\\\"text-left px-0\\\">\\n                <span class=\\\"\\\" tooltip=\\\"Excluir Associação\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" style=\\\"color: red;\\\" (click)=\\\"deleteAssociacao(i, detalhe)\\\">\\n                    <i class=\\\"fas fa-trash-alt\\\"></i>\\n                  </button>\\n                </span>\\n              </td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <empty-result\\n          message=\\\"Nenhuma informação encontrada\\\"\\n          class=\\\"my-3\\\"\\n          *ngIf=\\\"dadosEmptyDetalhes\\\">\\n        </empty-result>\\n      </detail-panel>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './../../../../../core/not-found/not-found.component';\n\nimport { ComercialIntegracoesDagdaIntegracaoMateriaisListaComponent } from './lista/lista.component';\nimport { ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialIntegracoesDagdaIntegracaoMateriaisListaComponent,\n  },\n  {\n    path: 'novo',\n    component: ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent,\n  },\n  {\n    path: ':id',\n    component: ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialIntegracoesDagdaIntegracaoMateriaisRoutingModule {}\n","import { TemplatesModule } from './../../../../../shared/templates/templates.module';\nimport { SharedModule } from './../../../../../shared/modules/shared.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComercialIntegracoesDagdaIntegracaoMateriaisRoutingModule } from './integracao-materiais-routing.module';\nimport { ComercialIntegracoesDagdaIntegracaoMateriaisListaComponent } from './lista/lista.component';\nimport { ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent } from './formulario/formulario.component';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from '../../../cadastros/materiais/templates/templates.module';\nimport { ComercialIntegracoesDagdaMateriaisTemplatesModule } from '../templates/templates.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\n@NgModule({\n  declarations: [\n    ComercialIntegracoesDagdaIntegracaoMateriaisListaComponent,\n    ComercialIntegracoesDagdaIntegracaoMateriaisFormularioComponent,\n  ],\n  imports: [\n    CommonModule,\n    TooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    NgSelectModule,\n    SharedModule,\n    TemplatesModule,\n    NotFoundModule,\n    ComercialIntegracoesDagdaMateriaisTemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n    ComercialIntegracoesDagdaIntegracaoMateriaisRoutingModule,\n  ],\n})\nexport class ComercialIntegracoesDagdaIntegracaoMateriaisModule {}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"spinnerFullScreen\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onCancel()\\\"\\n    [disabled]=\\\"submittingForm\\\">\\n    Cancelar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onSubmit()\\\"\\n    [disabled]=\\\"!validForm || submittingForm || inactiveForDelete\\\">\\n    Salvar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!spinnerFullScreen\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <div [hidden]=\\\"form.getRawValue().codMaterial != null\\\">\\n        <comercial-integracao_dagda-materiais-templates-material-principal\\n          [linhas]=\\\"linhas\\\"\\n          [classes]=\\\"classes\\\"\\n          [limparMaterialSelecionado]=\\\"limparMaterialPrincipal\\\"\\n          (loaderNavbar)=\\\"onLoaderNavbar($event)\\\"\\n          (materialPrincipal)=\\\"materialPrincipal($event)\\\">\\n        </comercial-integracao_dagda-materiais-templates-material-principal>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <hr>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <form [formGroup]=\\\"form\\\">\\n        <div [hidden]=\\\"form.getRawValue().codMaterial === null\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Associação material TID</div>\\n            </div>\\n            <div class=\\\"col\\\" *ngIf=\\\"form.getRawValue().codMaterial != null && form.getRawValue().idMatTidDagda == null\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-danger\\\"\\n                  (click)=\\\"onLimparMaterialPrincipal()\\\">\\n                  <i class=\\\"fas fa-trash\\\"></i>\\n                  <span>Limpar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg-2\\\">\\n              <label for=\\\"codMaterial\\\">Cód. Material</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeGrupo\\\"\\n                formControlName=\\\"codMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('codMaterial')\\\" message=\\\"Código é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-lg-7\\\">\\n              <label for=\\\"nomeMaterial\\\">Material</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"nomeGrupo\\\"\\n                formControlName=\\\"nomeMaterial\\\"\\n                (input)=\\\"onInput()\\\"\\n                autocomplete=\\\"new-password\\\">\\n              <invalid-form-control [show]=\\\"onFieldInvalid('nomeMaterial')\\\" message=\\\"Material é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n            <div class=\\\"form-group col-md-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"status\\\"> Situação </label>\\n\\t\\t\\t\\t\\t\\t\\t<ng-select\\n\\t\\t\\t\\t\\t\\t\\t\\t[searchable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[clearable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[items]=\\\"situacao\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[virtualScroll]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tlabelForId=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tbindLabel=\\\"ds\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tbindValue=\\\"cd\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Selecione...\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"onFieldError('status') + ' ' + onFieldRequired('status')\\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t</ng-select>\\n\\t\\t\\t\\t\\t\\t\\t<invalid-form-control\\n\\t\\t\\t\\t\\t\\t\\t\\t[show]=\\\"onFieldInvalid('status')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tmessage=\\\"Situação é obrigatório.\\\">\\n\\t\\t\\t\\t\\t\\t\\t</invalid-form-control>\\n\\t\\t\\t\\t\\t\\t</div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col\\\">\\n              <hr>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div formArrayName=\\\"assocMateriais\\\">\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length > 0\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"mtc-title\\\">Materiais Associados</div>\\n              <custom-table [config]=\\\"tableConfigAssocMateriais\\\">\\n                <ng-template #thead let-thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\" style=\\\"width: 95%\\\">Material</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%\\\"></th>\\n                  </tr>\\n                </ng-template>\\n                <ng-template #tbody let-tbody>\\n                  <tr *ngFor=\\\"let material of assocMateriais.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n                    <td style=\\\"width: 95%\\\">\\n                      {{ form.value.assocMateriais[i].codMaterial }} - {{ form.value.assocMateriais[i].nomeMaterial | uppercase }}\\n                    </td>\\n                    <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                      <btn-icon\\n                        icon=\\\"fas fa-trash\\\"\\n                        size=\\\"small\\\"\\n                        (click)=\\\"onDeleteMaterial(i, form.value.codMaterial)\\\">\\n                      </btn-icon>\\n                    </td>\\n                  </tr>\\n                </ng-template>\\n              </custom-table>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showMateriais && form.value.assocMateriais.length == 0\\\">\\n            <div class=\\\"col\\\">\\n              <message\\n                icon=\\\"fas fa-exchange-alt\\\"\\n                text=\\\"Nenhuma associação encontrada\\\">\\n              </message>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row\\\" #scrollToFilter>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col mt-auto\\\">\\n              <div class=\\\"mtc-title mb-0\\\">Pesquisar por materiais dagda para associação</div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-secondary\\\"\\n                  (click)=\\\"getMateriaisDagda()\\\"\\n                  >\\n                  <i class=\\\"fas fa-search\\\"></i>\\n                  <span>Pesquisar</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <advanced-filter>\\n            <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-12\\\">\\n                  <label for=\\\"cdDagda\\\">Código Dagda</label>\\n                  <ng-select\\n                    [searchable]=\\\"true\\\"\\n                    [clearable]=\\\"true\\\"\\n                    [items]=\\\"materiaisLista\\\"\\n                    [virtualScroll]=\\\"true\\\"\\n                    [multiple]=\\\"true\\\"\\n                    [closeOnSelect]=\\\"false\\\"\\n                    placeholder=\\\"Selecione...\\\"\\n                    [loading]=\\\"loadingDagda\\\"\\n                    labelForId=\\\"cdDagda\\\"\\n                    bindLabel=\\\"DS_MATE\\\"\\n                    bindValue=\\\"CD_MATE\\\"\\n                    id=\\\"cdDagda\\\"\\n                    (change) =\\\"resetDagda()\\\"\\n                    formControlName=\\\"cdDagda\\\"\\n                    [ngClass]=\\\"onFieldError('cdDagda') + ' ' + onFieldRequired('cdDagda')\\\"\\n                    >\\n                  </ng-select>\\n                  <invalid-form-control\\n                    [show]=\\\"onFieldInvalid('cdDagda')\\\"\\n                    message=\\\"Código Dagda é obrigatório.\\\">\\n                  </invalid-form-control>\\n                </div>\\n              </div>\\n            </form>\\n          </advanced-filter>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"searchingDagda === true\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos pesquisando os materiais para você...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\" *ngIf=\\\"matDagda.length > 0\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Seleção de materiais</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                (click)=\\\"onAssociarMateriais()\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span>Associar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfig\\\" [hidden] = \\\"!noResult\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th scope=\\\"col\\\" class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggleAll ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll()\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th class=\\\"text-center\\\"> Código</th>\\n                  <th class=\\\"text-left\\\"> Material</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody >\\n                <tr *ngFor=\\\"let lista of matDagda; let i = index\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"lista.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onCheckMaterial(i, lista)\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td class=\\\"text-center\\\">{{ lista.CD_MATE }}</td>\\n                  <td class=\\\"text-left\\\">{{ lista.NM_MATE }}</td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\";","export default \".border-secondary {\\n  border-color: #929090 !important;\\n}\\n\\ninput[type=number] {\\n  -moz-appearance: textfield;\\n}\\n\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvaW50ZWdyYWNvZXMvZGFnZGEvaW50ZWdyYWNhby1tYXRlcmlhaXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQ0FBQTtBQUNGOztBQUVBO0VBQ0UsMEJBQUE7QUFDRjs7QUFFQTs7RUFFRSx3QkFBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwvaW50ZWdyYWNvZXMvZGFnZGEvaW50ZWdyYWNhby1tYXRlcmlhaXMvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9yZGVyLXNlY29uZGFyeSB7XG4gIGJvcmRlci1jb2xvcjogcmdiKDE0NiwgMTQ0LCAxNDQpICFpbXBvcnRhbnQ7XG59XG5cbmlucHV0W3R5cGU9J251bWJlciddIHtcbiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG59XG5cbmlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLFxuaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG4iXX0= */\";"]}