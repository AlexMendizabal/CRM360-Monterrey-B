{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/lista/lista.component.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/restricoes-transporte.module.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/cadastro/cadastro.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/lista/lista.component.scss","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/cadastro/cadastro.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/lista/lista.component.html","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/restricoes-transporte-routing.module.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/cadastro/cadastro.component.ts"],"names":["LogisticaRestricoesTransporteListaComponent","route","restricoesService","pnotify","formBuilder","activatedRoute","atividadesService","routerService","dateService","appTitle","breadCrumbTree","showAdvancedFilter","itemsPerPage","totalItems","currentPage","loading","loadingNavBar","noResult","form","group","required","registrarAcesso","subscribe","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","response","_response","getBase64UrlParams","patchValue","hasOwnProperty","TT_REGI_PAGI","getRestricoes","getParams","descricao","routerLink","params","pipe","status","restricoes","body","notice","error","event","get","setValue","page","Date","getTime","navigate","relativeTo","setBase64UrlParams","reset","onFilter","restricao","onSave","postRestricoes","success","_params","_obj","value","prop","convertToUrlDate","selector","template","LogisticaRestricoesTransporteModule","declarations","imports","forRoot","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","routes","path","component","LogisticaRestricoesTransporteRoutingModule","forChild","exports","LogisticaRestricoesTransporteCadastroComponent","restricaoService","router","confirmModalService","materiais","materiaisLoading","materiaisAssociados","materiaisAssociadosLoading","tableConfigMateriaisAssociados","fixedHeader","bodyHeight","hover","tableConfigMateriais","toggle","formMateriais","buscarPor","pesquisa","snapshot","id","getRestricao","getMateriaisAssociados","getMateriais","filter","material","some","item","UUID_MATE","UUID","length","IN_STAT","IN_PAGI","ORDE_BY","checked","map","ID_REFE_ERP","postMateriaisAssociados","UUID_LOGI_REST_TRAN","showConfirm","confirmDelete","field","onFieldInvalid","touched","formControl","controls","validator","validationResult"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eACA;AAKA;AAKA;;;UAUaA,2CAA2C;AA6BtD,6DACUC,KADV,EAEUC,iBAFV,EAGUC,OAHV,EAIUC,WAJV,EAKUC,cALV,EAMUC,iBANV,EAOUC,aAPV,EAQUC,WARV,EAQkC;AAAA;;AAPxB,eAAAP,KAAA,GAAAA,KAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAnCV,eAAAC,QAAA,GAAW,6BAAX;AAIA,eAAAC,cAAA,GAAsB,EAAtB;AAEA,eAAAC,kBAAA,GAAqB,IAArB;AAOA;;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,CAAd;AACA;;AAEA;;AACA,eAAAC,OAAA,GAAU,IAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,QAAA,GAAW,IAAX;AAeE,eAAKC,IAAL,GAAY,KAAKd,WAAL,CAAiBe,KAAjB,CAAuB;AACjC,oBAAQ,CAAC,IAAD,CADyB;AAEjC,4BAAgB,CAAC,IAAD,EAAO,0DAAWC,QAAlB,CAFiB;AAGjC,uBAAW,CAAC,IAAD,CAHsB;AAIjC,uBAAW,CAAC,IAAD;AAJsB,WAAvB,CAAZ;AAMD;;AA7CqD;AAAA;AAAA,qCA+C3C;AACT,iBAAKd,iBAAL,CAAuBe,eAAvB,GAAyCC,SAAzC;AACA,iBAAKC,aAAL;AACA,iBAAKC,gBAAL;AACD;AAnDqD;AAAA;AAAA,wCAqDxC;AACZ,iBAAKC,2BAAL,CAAiCC,WAAjC;AACD;AAvDqD;AAAA;AAAA,6CAyDnC;AAAA;;AACjB,iBAAKD,2BAAL,GAAmC,KAAKpB,cAAL,CAAoBsB,WAApB,CAAgCL,SAAhC,CACjC,UAACM,QAAD,EAAc;AACZ,kBAAMC,SAAS,GAAG,KAAI,CAACtB,aAAL,CAAmBuB,kBAAnB,CAAsCF,QAAtC,CAAlB;;AACA,mBAAI,CAACV,IAAL,CAAUa,UAAV,CAAqBF,SAArB;;AAEA,kBAAIA,SAAS,CAACG,cAAV,CAAyB,cAAzB,CAAJ,EAA6C;AAC3C,qBAAI,CAACpB,YAAL,GAAoBiB,SAAS,CAACI,YAA9B;AACD;;AAED,mBAAI,CAACC,aAAL,CAAmB,KAAI,CAACC,SAAL,EAAnB;AACD,aAVgC,CAAnC;AAYD;AAtEqD;AAAA;AAAA,0CAwEtC;AACd,iBAAKzB,cAAL,GAAsB,CACpB;AACE0B,uBAAS,EAAE;AADb,aADoB,EAIpB;AACEA,uBAAS,EAAE,WADb;AAEEC,wBAAU,EAAE;AAFd,aAJoB,EAQpB;AACED,uBAAS,EAAE,KAAK3B;AADlB,aARoB,CAAtB;AAYD;AArFqD;AAAA;AAAA,wCAuFxC6B,MAvFwC,EAuF/B;AAAA;;AAErB,gBAAI,KAAKvB,OAAL,KAAiB,KAArB,EAA4B;AAC1B,mBAAKC,aAAL,GAAqB,IAArB;AACD;;AAED,mBAAO,KAAKd,iBAAL,CACJgC,aADI,CACUI,MADV,EAEJC,IAFI,CAGH,iEAAS,YAAM;AACb,oBAAI,CAACxB,OAAL,GAAe,KAAf;AACA,oBAAI,CAACC,aAAL,GAAqB,KAArB;AACD,aAHD,CAHG,EAQJM,SARI,CASH,UAACM,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACC,UAAL,GAAkBb,QAAQ,CAACc,IAAT,CAAc,MAAd,CAAlB;AACA,sBAAI,CAAC7B,UAAL,GAAkBe,QAAQ,CAACc,IAAT,CAAc,OAAd,CAAlB;AACA,sBAAI,CAACzB,QAAL,GAAgB,KAAhB;AACD,eAJD,MAIO;AACL,sBAAI,CAACd,OAAL,CAAawC,MAAb,CAAoB,4BAApB;;AACA,sBAAI,CAAC1B,QAAL,GAAgB,IAAhB;AACD;AACF,aAlBE,EAmBH,UAAC2B,KAAD,EAAW;AACT,oBAAI,CAAC3B,QAAL,GAAgB,IAAhB;;AACA,oBAAI,CAACd,OAAL,CAAayC,KAAb;AACD,aAtBE,CAAP;AAwBD;AArHqD;AAAA;AAAA,wCAuHxCC,KAvHwC,EAuHjC;AACnB,iBAAK3B,IAAL,CAAU4B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BF,KAAK,CAACG,IAArC;AACA,iBAAK9B,IAAL,CAAU4B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,IAAIE,IAAJ,GAAWC,OAAX,EAA/B;AACA,iBAAKjD,KAAL,CAAWkD,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK/C,cADK;AAEtBsB,yBAAW,EAAE,KAAKpB,aAAL,CAAmB8C,kBAAnB,CAAsC,KAAKlB,SAAL,EAAtC;AAFS,aAAxB;AAID;AA9HqD;AAAA;AAAA,yCAgIvC;AACb,iBAAKxB,kBAAL,GAA0B,CAAC,KAAKA,kBAAhC;AACD;AAlIqD;AAAA;AAAA,qCAoI3C;AACT,gBAAI2B,MAAM,GAAG,KAAKH,SAAL,EAAb;AAEA,iBAAKlC,KAAL,CAAWkD,QAAX,CAAoB,EAApB,EAAwB;AACtBC,wBAAU,EAAE,KAAK/C,cADK;AAEtBsB,yBAAW,EAAEW;AAFS,aAAxB;AAKA,iBAAKJ,aAAL,CAAmBI,MAAnB;AACD;AA7IqD;AAAA;AAAA,oCA+I5C;AACR,iBAAKpB,IAAL,CAAUoC,KAAV;AACA,iBAAKpC,IAAL,CAAU4B,GAAV,CAAc,QAAd,EAAwBC,QAAxB,CAAiC,GAAjC;AACA,iBAAKQ,QAAL;AACA,iBAAKtD,KAAL,CAAWkD,QAAX,CAAoB,EAApB,EACE;AACEC,wBAAU,EAAE,KAAK/C,cADnB;AAEEsB,yBAAW,EAAE;AAFf,aADF;AAMD;AAzJqD;AAAA;AAAA,qCA2J3C6B,SA3J2C,EA2JhC;AACpBA,qBAAS,CAAChB,MAAV,GAAmBgB,SAAS,CAAChB,MAAV,IAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAA/C;AACA,iBAAKiB,MAAL,CAAYD,SAAZ;AACD;AA9JqD;AAAA;AAAA,iCAgK/CA,SAhK+C,EAgKpC;AAAA;;AAChB,iBAAKtD,iBAAL,CAAuBwD,cAAvB,CAAsCF,SAAtC,EACGlC,SADH,CAEI,UAACM,QAAD,EAAc;AACZA,sBAAQ,CAACY,MAAT,KAAoB,GAApB,GAA0B,MAAI,CAACrC,OAAL,CAAawD,OAAb,EAA1B,GAAmD,MAAI,CAACxD,OAAL,CAAayC,KAAb,EAAnD;AACD,aAJL,EAKI,UAACA,KAAD,EAAW;AACT,oBAAI,CAACzC,OAAL,CAAayC,KAAb;AACD,aAPL;AASD;AA1KqD;AAAA;AAAA,sCA4K1C;AACV,gBAAIgB,OAAO,GAAG,EAAd;AACA,gBAAIC,IAAI,GAAG,KAAK3C,IAAL,CAAU4C,KAArB;;AAEA,iBAAK,IAAIC,IAAT,IAAiBF,IAAjB,EAAuB;AACrB,kBAAIA,IAAI,CAACE,IAAD,CAAR,EAAgB;AACd,oBAAIF,IAAI,CAACE,IAAD,CAAJ,YAAsBd,IAA1B,EACEW,OAAO,CAACG,IAAD,CAAP,GAAgB,KAAKvD,WAAL,CAAiBwD,gBAAjB,CAAkCH,IAAI,CAACE,IAAD,CAAtC,CAAhB,CADF,KAEKH,OAAO,CAACG,IAAD,CAAP,GAAgBF,IAAI,CAACE,IAAD,CAApB;AACN;AACF;;AAED,mBAAOH,OAAP;AACD;AAzLqD;;AAAA;AAAA,S;;;;gBAlB/C;;gBAIA;;gBACA;;gBAJA;;gBADQ;;gBAMR;;gBATA;;gBAcA;;;;AAOI5D,iDAA2C,6DALvD,gEAAU;AACTiE,gBAAQ,EAAE,uCADD;AAETC,gBAAQ,EAAR,wEAFS;;AAAA,OAAV,CAKuD,E,+EA8BrC,sD,EACY,8F,EACV,2F,EACI,0D,EACG,8D,EACG,qG,EACJ,yF,EACF,sF,EArC+B,GAA3ClE,2CAA2C,CAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCsCAmE,mCAAmC;AAAA;AAAA,O;;AAAnCA,yCAAmC,6DA5B/C,+DAAS;AACRC,oBAAY,EAAE,CACZ,mGADY,EAEZ,4GAFY,CADN;AAMRC,eAAO,EAAE,CACP,iHADO,EAEP,4DAFO,EAGP,4DAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,mEANO,EAOP,+DAAiBC,OAAjB,EAPO,EAQP,4DAAcA,OAAd,EARO,EASP,yDAAWA,OAAX,EATO,EAUP,+DAAiBA,OAAjB,EAVO,EAWP,iEAAmBA,OAAnB,EAXO,EAYP,0DAAYA,OAAZ,EAZO,EAaP,6EAbO,EAcP,sFAdO,EAeP,qGAfO,EAgBP,kFAhBO,EAiBP,0FAjBO,EAkBP,mDAlBO,EAmBP,kEAnBO;AAND,OAAT,CA4B+C,GAAnCH,mCAAmC,CAAnC;;;;;;;;;;;;;;;;AC3Db;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCGf;;;UAMaI,mBAAmB;AAC9B,qCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,eAAAA,YAAA,GAAAA,YAAA;AAAgC;;AADtB;AAAA;AAAA,sCAI5BC,IAJ4B,EAK5BC,KAL4B,EAM5BC,OAN4B,EAO5BC,SAP4B,EAQ5BC,KAR4B,EAQd;AAEd,gBAAMC,QAAQ,GAAG,KAAKN,YAAL,CAAkBO,IAAlB,CAAuB,8EAAvB,EAA8C;AAC7DC,sBAAQ,EAAE,KADmD;AAE7DC,iCAAmB,EAAE,IAFwC;AAG7DC,sBAAQ,EAAE,KAHmD;AAI7D,uBAAO;AAJsD,aAA9C,CAAjB;AAOAJ,oBAAQ,CAACK,OAAT,CAAiBV,IAAjB,GAAwBA,IAAxB;AACAK,oBAAQ,CAACK,OAAT,CAAiBT,KAAjB,GAAyBA,KAAzB;AACAI,oBAAQ,CAACK,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;;AAEA,gBAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,+CAD+B,EAE/B,mCAF+B,CAAjC;AAID;;AAED,gBAAIX,IAAI,KAAK,YAAb,EAA2B;AACzBK,sBAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiC,CAC/B,oCAD+B,CAAjC;AAGD;;AAED,gBAAIR,SAAJ,EAAe;AACbE,sBAAQ,CAACK,OAAT,CAAiBP,SAAjB,GAA6BA,SAA7B;AACD;;AAED,gBAAIC,KAAJ,EAAW;AACTC,sBAAQ,CAACK,OAAT,CAAiBN,KAAjB,GAAyBA,KAAzB;AACD,aAhCa,CAkCd;AACA;;;AACA,mBAA+BC,QAAQ,CAACK,OAAT,CAAkBE,aAAjD;AACD;AA7C6B;;AAAA;AAAA,S;;;;gBARvB;;;;AAQId,yBAAmB,6DAH/B,iEAAW;AACVe,kBAAU,EAAE;AADF,OAAX,CAG+B,E,+EACI,kE,EADJ,GAAnBf,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKFgB,WAAW;;;;AACtB,eAAAC,MAAA,GAAwB,CACtB,OADsB,EAEtB,SAFsB,EAGtB,QAHsB,EAItB,OAJsB,EAKtB,MALsB,EAMtB,OANsB,EAOtB,OAPsB,EAQtB,QARsB,EAStB,YATsB,EAUtB,SAVsB,EAWtB,WAXsB,EAYtB,WAZsB,CAAxB;AAeA,eAAAC,KAAA,GAAuB,CACrB,SADqB,EAErB,OAFqB,EAGrB,QAHqB,EAIrB,WAJqB,EAKrB,QALqB,EAMrB,SANqB,EAOrB,QAPqB,CAAvB;AAsMD;;AAtNuB;AAAA;AAAA,kCA0BdC,KA1Bc,EA0BDC,KA1BC,EA0BU;AAC9B,mBACED,KAAK,CAACE,WAAN,OAAwBD,KAAK,CAACC,WAAN,EAAxB,IACAF,KAAK,CAACG,QAAN,OAAqBF,KAAK,CAACE,QAAN,EADrB,IAEAH,KAAK,CAACI,OAAN,OAAoBH,KAAK,CAACG,OAAN,EAHtB;AAKD;AAhCqB;AAAA;AAAA,wCAkCRC,IAlCQ,EAkCE;AACtB,gBAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAL,EAAjB;AACA,gBAAMC,UAAU,GAAGF,IAAI,CAACE,UAAL,EAAnB;AACA,gBAAIC,KAAJ,EAAgBC,OAAhB;;AAEA,gBAAIH,QAAQ,GAAG,EAAf,EAAmB;AACjBE,mBAAK,cAAOF,QAAP,CAAL;AACD,aAFD,MAEO;AACLE,mBAAK,GAAGF,QAAR;AACD;;AAED,gBAAIC,UAAU,GAAG,EAAjB,EAAqB;AACnBE,qBAAO,cAAOF,UAAP,CAAP;AACD,aAFD,MAEO;AACLE,qBAAO,GAAGF,UAAV;AACD;;AAED,6BAAUC,KAAV,cAAmBC,OAAnB;AACD;AApDqB;AAAA;AAAA,sCAsDVT,KAtDU,EAsDGC,KAtDH,EAsDyC;AAAA,gBAAxBS,QAAwB,uEAAJ,IAAI;AAC7D,gBAAMC,GAAG,GAAGX,KAAK,CAACI,OAAN,EAAZ;AACA,gBAAMQ,OAAO,GAAGZ,KAAK,CAACa,MAAN,EAAhB;AACA,gBAAMC,KAAK,GAAGd,KAAK,CAACG,QAAN,EAAd;AACA,gBAAMY,IAAI,GAAGf,KAAK,CAACE,WAAN,EAAb;AACA,gBAAMc,IAAI,GAAG,KAAKC,aAAL,CAAmBjB,KAAnB,CAAb;;AAEA,gBAAIU,QAAJ,EAAc;AACZ,kBAAIT,KAAJ,EAAW;AACT,oBAAMiB,KAAK,GAAG,KAAKD,aAAL,CAAmBhB,KAAnB,CAAd;AAEA,iCAAU,KAAKF,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE,qBAAqFC,IAArF,oBAAmGE,KAAnG;AACD;;AAED,+BAAU,KAAKnB,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE,oBAAoFC,IAApF;AACD,aARD,MAQO;AACL,+BAAU,KAAKjB,KAAL,CAAWa,OAAX,CAAV,eAAkCD,GAAlC,iBAA4C,KAAKb,MAAL,CAAYgB,KAAZ,CAA5C,kBAAsEC,IAAtE;AACD;AACF;AAxEqB;AAAA;AAAA,uCA0ETV,IA1ES,EA0EC;AACrB,mBAAO,KAAKP,MAAL,CAAYO,IAAI,CAACF,QAAL,EAAZ,CAAP;AACD;AA5EqB;AAAA;AAAA,4CA8EP;AACb,gBAAIE,IAAI,GAAG,IAAI9C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS8C,IAAI,CAACH,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAP;AACD;AAjFqB;AAAA;AAAA,2CAmFR;AACZ,gBAAIG,IAAI,GAAG,IAAI9C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS8C,IAAI,CAACH,WAAL,EAAT,EAA6B,EAA7B,EAAiC,EAAjC,CAAP;AACD;AAtFqB;AAAA;AAAA,6CAwFN;AACd,gBAAIG,IAAI,GAAG,IAAI9C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS8C,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,EAA7B,EAA8C,CAA9C,CAAP;AACD;AA3FqB;AAAA;AAAA,4CA6FP;AACb,gBAAIE,IAAI,GAAG,IAAI9C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS8C,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAP;AACD;AAhGqB;AAAA;AAAA,qCAkGd;AACN,gBAAIE,IAAI,GAAG,IAAI9C,IAAJ,EAAX;AACA,mBAAO,IAAIA,IAAJ,CAAS8C,IAAI,CAACH,WAAL,EAAT,EAA6BG,IAAI,CAACF,QAAL,EAA7B,EAA8CE,IAAI,CAACD,OAAL,EAA9C,CAAP;AACD;AArGqB;AAAA;AAAA,0CAuGNC,IAvGM,EAuGI;AACxB,gBAAMc,CAAC,GAAGd,IAAI,CAACH,WAAL,EAAV;AACA,gBAAIkB,CAAC,GAAQf,IAAI,CAACF,QAAL,KAAkB,CAA/B;AACA,gBAAIkB,CAAC,GAAQhB,IAAI,CAACD,OAAL,EAAb;AACA,gBAAIkB,CAAC,GAAQjB,IAAI,CAACC,QAAL,EAAb;AACA,gBAAIiB,CAAC,GAAQlB,IAAI,CAACE,UAAL,EAAb;AAEA,gBAAIa,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAIC,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUJ,CAAV,cAAeC,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BC,CAA9B;AACD;AApHqB;AAAA;AAAA,iDAsHClB,IAtHD,EAsHW;AAC/B,gBAAIc,CAAC,GAAGd,IAAI,CAACH,WAAL,GAAmBsB,QAAnB,EAAR;AACA,gBAAIJ,CAAC,GAAG,CAACf,IAAI,CAACF,QAAL,KAAkB,CAAnB,EAAsBqB,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAR;AACA,gBAAIJ,CAAC,GAAGhB,IAAI,CAACD,OAAL,GAAeoB,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAR;AACA,gBAAIH,CAAC,GAAGjB,IAAI,CAACC,QAAL,GAAgBkB,QAAhB,GAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAR;AACA,gBAAIF,CAAC,GAAGlB,IAAI,CAACE,UAAL,GAAkBiB,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AACA,gBAAIC,CAAC,GAAGrB,IAAI,CAACsB,UAAL,GAAkBH,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAR;AAEA,6BAAUJ,CAAV,cAAeD,CAAf,cAAoBD,CAApB,cAAyBG,CAAzB,cAA8BC,CAA9B,cAAmCG,CAAnC;AACD;AA/HqB;AAAA;AAAA,2CAiILE,IAjIK,EAiIO;AAC3B,gBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,kBAAIC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAhB;AAEA,+BAAUD,SAAS,CAAC,CAAD,CAAnB,cAA0BA,SAAS,CAAC,CAAD,CAAnC;AACD;;AAED,mBAAOD,IAAP;AACD;AAzIqB;AAAA;AAAA,2CA2ILvB,IA3IK,EA2IK;AACzB,gBAAIgB,CAAC,GAAQhB,IAAI,CAACD,OAAL,EAAb;AACA,gBAAIgB,CAAC,GAAQf,IAAI,CAACF,QAAL,KAAkB,CAA/B;AACA,gBAAIgB,CAAC,GAAQd,IAAI,CAACH,WAAL,EAAb;AAEA,gBAAImB,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AACZ,gBAAID,CAAC,GAAG,EAAR,EAAYA,CAAC,cAAOA,CAAP,CAAD;AAEZ,6BAAUC,CAAV,cAAeD,CAAf,cAAoBD,CAApB;AACD;AApJqB;AAAA;AAAA,8CAsJFY,UAtJE,EAsJeC,QAtJf,EAsJ+B;AACnD,gBAAI3B,IAAJ;;AAEA,gBAAI0B,UAAU,CAACE,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAA/B,EAAkC;AAChC,kBAAMC,eAAe,GAAGH,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAxB;AACA,kBAAMK,SAAS,GAAGD,eAAe,CAAC,CAAD,CAAf,CAAmBJ,KAAnB,CAAyB,GAAzB,CAAlB;AACA,kBAAMD,SAAS,GAAGK,eAAe,CAAC,CAAD,CAAf,CAAmBJ,KAAnB,CAAyB,GAAzB,CAAlB;;AAEA,kBAAIE,QAAQ,IAAI,OAAhB,EAAyB;AACvB3B,oBAAI,GAAG,IAAI9C,IAAJ,CACL4E,SAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILR,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD,eATD,MASO,IAAIG,QAAQ,IAAI,KAAhB,EAAuB;AAC5B3B,oBAAI,GAAG,IAAI9C,IAAJ,CACL4E,SAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,EAILR,SAAS,CAAC,CAAD,CAJJ,EAKLA,SAAS,CAAC,CAAD,CALJ,EAMLA,SAAS,CAAC,CAAD,CANJ,CAAP;AAQD;AACF,aAxBD,MAwBO;AACL,kBAAMM,UAAS,GAAGJ,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAlB;;AAEA,kBAAIE,QAAQ,IAAI,OAAhB,EAAyB;AACvB3B,oBAAI,GAAG,IAAI9C,IAAJ,CACL4E,UAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD,eAND,MAMO,IAAIL,QAAQ,IAAI,KAAhB,EAAuB;AAC5B3B,oBAAI,GAAG,IAAI9C,IAAJ,CACL4E,UAAS,CAAC,CAAD,CADJ,EAELC,QAAQ,CAACD,UAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,CAFpB,EAGLA,UAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAHK,CAAP;AAKD;AACF;;AAED,mBAAOhC,IAAP;AACD;AApMqB;AAAA;AAAA,4CAsMJ0B,UAtMI,EAsMaC,QAtMb,EAsM6B;AACjD,gBAAMG,SAAS,GAAGJ,UAAU,CAACD,KAAX,CAAiB,GAAjB,CAAlB;AACA,gBAAIzB,IAAJ;;AAEA,gBAAI2B,QAAQ,IAAI,OAAhB,EAAyB;AACvB3B,kBAAI,aAAM8B,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD,aAFD,MAEO,IAAIH,QAAQ,IAAI,KAAhB,EAAuB;AAC5B3B,kBAAI,aAAM8B,SAAS,CAAC,CAAD,CAAf,cAAsBA,SAAS,CAAC,CAAD,CAA/B,cAAsCA,SAAS,CAAC,CAAD,CAA/C,CAAJ;AACD;;AAED,mBAAO9B,IAAP;AACD;AAjNqB;AAAA;AAAA,wCAmNRA,IAnNQ,EAmNIiC,IAnNJ,EAmNgB;AACpC,mBAAO,IAAI/E,IAAJ,CAAS8C,IAAI,CAACkC,OAAL,CAAalC,IAAI,CAACD,OAAL,KAAiBkC,IAA9B,CAAT,CAAP;AACD;AArNqB;;AAAA;AAAA,S;;AAAXzC,iBAAW,6DAHvB,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAXC,WAAW,CAAX;;;;;;;;;;;;;;;;ACLb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,UAAM2C,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE;AAFb,OALqB,EASrB;AACED,YAAI,EAAE,KADR;AAEEC,iBAAS,EAAE;AAFb,OATqB,EAarB;AACED,YAAI,EAAE,IADR;AAEEC,iBAAS,EAAE;AAFb,OAbqB,CAAvB;;UAuBaC,0CAA0C;AAAA;AAAA,O;;AAA1CA,gDAA0C,6DAJtD,+DAAS;AACRhE,eAAO,EAAE,CAAC,6DAAaiE,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsD,GAA1CF,0CAA0C,CAA1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eC9Bb;AAKA;AAKA;;;UAWaG,8CAA8C;AAoDzD,gEACUpI,WADV,EAEUqI,gBAFV,EAGUtI,OAHV,EAIUuI,MAJV,EAKUrI,cALV,EAMUC,iBANV,EAOUqI,mBAPV,EAOkD;AAAA;;AANxC,eAAAvI,WAAA,GAAAA,WAAA;AACA,eAAAqI,gBAAA,GAAAA,gBAAA;AACA,eAAAtI,OAAA,GAAAA,OAAA;AACA,eAAAuI,MAAA,GAAAA,MAAA;AACA,eAAArI,cAAA,GAAAA,cAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAqI,mBAAA,GAAAA,mBAAA;AAzDV,eAAAlI,QAAA,GAAW,WAAX;AAKA,eAAA+B,MAAA,GAAS,CACP;AACE,kBAAM,CADR;AAEE,oBAAQ,QAFV;AAGE,qBAAS;AAHX,WADO,EAMP;AACE,kBAAM,CADR;AAEE,oBAAQ,UAFV;AAGE,qBAAS;AAHX,WANO,CAAT;AAaA,eAAA9B,cAAA,GAAsB,EAAtB;AAIA;;AACA,eAAAK,OAAA,GAAU,IAAV;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,QAAA,GAAW,IAAX;AACA;;AAEA,eAAA2H,SAAA,GAAY,EAAZ;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AAEA,eAAAC,mBAAA,GAAsB,EAAtB;AACA,eAAAC,0BAAA,GAA6B,KAA7B;AAEA,eAAAC,8BAAA,GAA6D;AAC3DC,uBAAW,EAAE,KAD8C;AAE3DC,sBAAU,EAAE,GAF+C;AAG3DC,iBAAK,EAAE;AAHoD,WAA7D;AAMA,eAAAC,oBAAA,GAAmD;AACjDH,uBAAW,EAAE,KADoC;AAEjDC,sBAAU,EAAE;AAFqC,WAAnD;AAKA,eAAAG,MAAA,GAAS;AACPT,qBAAS,EAAE,KADJ;AAEPE,+BAAmB,EAAE;AAFd,WAAT;AAcE,eAAK5H,IAAL,GAAY,KAAKd,WAAL,CAAiBe,KAAjB,CAAuB;AACjC,oBAAQ,CAAC,IAAD,CADyB;AAEjC,4BAAgB,CAAC,IAAD,EAAO,0DAAWC,QAAlB,CAFiB;AAGjC,uBAAW,CAAC,CAAD,EAAI,0DAAWA,QAAf,CAHsB;AAIjC,uBAAW,CAAC,IAAD,EAAO,0DAAWA,QAAlB,CAJsB;AAKjC,uBAAW,CAAC,IAAD;AALsB,WAAvB,CAAZ;AAQA,eAAKkI,aAAL,GAAqB,KAAKlJ,WAAL,CAAiBe,KAAjB,CAAuB;AAC1CoI,qBAAS,EAAE,CAAC,SAAD,CAD+B;AAE1CC,oBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWpI,QAAlB;AAFgC,WAAvB,CAArB;AAID;;AAzEwD;AAAA;AAAA,qCA2E9C;AAET,iBAAKd,iBAAL,CACGe,eADH,GAEGC,SAFH;AAGA,iBAAKE,gBAAL;AACA,iBAAKD,aAAL;AACD;AAlFwD;AAAA;AAAA,6CAoFtC;AACjB,gBAAMe,MAAM,GAAG,KAAKjC,cAAL,CAAoBoJ,QAApB,CAA6BnH,MAA5C;;AAEA,gBAAI,EAACA,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEoH,EAAT,CAAJ,EAAgB;AACd,mBAAK3I,OAAL,GAAe,KAAf;AACA;AACD;;AAED,iBAAK4I,YAAL,CAAkBrH,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEoH,EAA1B;AACA,iBAAKE,sBAAL,CAA4B;AAAC,qCAAuBtH,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEoH;AAAhC,aAA5B;AACD;AA9FwD;AAAA;AAAA,0CAgGzC;AACd,iBAAKhJ,cAAL,GAAsB,CACpB;AACE0B,uBAAS,EAAE;AADb,aADoB,EAIpB;AACEA,uBAAS,EAAE,UADb;AAEEC,wBAAU,EAAE;AAFd,aAJoB,EAQpB;AACED,uBAAS,EAAE,6BADb;AAEEC,wBAAU,EAAE;AAFd,aARoB,EAYpB;AACED,uBAAS,EAAE,KAAK3B;AADlB,aAZoB,CAAtB;AAgBD;AAjHwD;AAAA;AAAA,mCAmHhD;AAAA;;AACP,iBAAKO,aAAL,GAAqB,IAArB;AACA,mBAAO,KAAKyH,gBAAL,CACJ/E,cADI,CACW,KAAKxC,IAAL,CAAU4C,KADrB,EAEJvB,IAFI,CAGH,iEAAS,YAAM;AACb,oBAAI,CAACvB,aAAL,GAAqB,KAArB;AACA,oBAAI,CAACD,OAAL,GAAe,KAAf;AACD,aAHD,CAHG,EAQJO,SARI,CASH,UAACM,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACtB,IAAL,CAAUoC,KAAV;;AACA,sBAAI,CAACnD,OAAL,CAAawD,OAAb;;AACA,sBAAI,CAAC+E,MAAL,CAAYvF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAAgC;AAACC,4BAAU,EAAE,MAAI,CAAC/C;AAAlB,iBAAhC;AACD,eAJD,MAIO;AACL,sBAAI,CAACF,OAAL,CAAayC,KAAb;AACD;AACF,aAjBE,EAkBH,UAACA,KAAD,EAAW;AACT,oBAAI,CAAC3B,QAAL,GAAgB,IAAhB;;AACA,oBAAI,CAACd,OAAL,CAAayC,KAAb;AACD,aArBE,CAAP;AAuBD;AA5IwD;AAAA;AAAA,uCA8I5C8G,EA9I4C,EA8IxC;AAAA;;AACf,iBAAKjB,gBAAL,CACGkB,YADH,CACgBD,EADhB,EAEGnH,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACxB,OAAL,GAAe,KAAf;AACD,aAFD,CAHJ,EAOGO,SAPH,CAQI,UAACM,QAAD,EAAc;AACZ,kBAAIA,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAI,CAACtB,IAAL,CAAUa,UAAV,CAAqBH,QAAQ,CAACc,IAAT,CAAc,MAAd,CAArB;AACD,eAFD,MAEO;AACL,sBAAI,CAACvC,OAAL,CAAayC,KAAb;AACD;AACF,aAdL,EAeI,UAACA,KAAD,EAAW;AACT,oBAAI,CAACzC,OAAL,CAAayC,KAAb;AACD,aAjBL;AAmBD;AAlKwD;AAAA;AAAA,yCAoK7C;AAAA;;;;AAEV,gBAAM2G,SAAS,GAAG,CAAH,KAAG,KAAKD,aAAL,CAAmBxG,GAAnB,CAAuB,WAAvB,OAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAEgB,KAAvD;AACA,gBAAM0F,QAAQ,GAAG,CAAH,KAAG,KAAKF,aAAL,CAAmBxG,GAAnB,CAAuB,UAAvB,OAAkC,IAAlC,IAAkC,aAAlC,GAAkC,MAAlC,GAAkC,GAAEgB,KAArD;AAEA,gBAAIxB,MAAM,GAAG,EAAb;;AAEA,gBAAGiH,SAAH,EAAa;AACXjH,oBAAM,CAACiH,SAAD,CAAN,GAAoBC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAAA,QAAA,GAAY,EAAhC;AACD;;AAED,iBAAKH,MAAL,CAAYT,SAAZ,GAAwB,KAAxB;AAEA,iBAAKC,gBAAL,GAAwB,IAAxB;AAEA,iBAAKJ,gBAAL,CACGoB,YADH,CACgBvH,MADhB,EAEGC,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACsG,gBAAL,GAAwB,KAAxB;AACD,aAFD,CAHJ,EAOGvH,SAPH,CAQI,UAAAM,QAAQ,EAAI;AAEV,kBAAGA,QAAQ,CAACY,MAAT,KAAoB,GAAvB,EAA2B;AACzB,sBAAI,CAACoG,SAAL,GAAiB,EAAjB;AACA;AACD;;AAED,kBAAIA,SAAS,GAAGhH,QAAQ,CAACc,IAAT,CAAc,MAAd,CAAhB;AAEA,oBAAI,CAACkG,SAAL,GAAiBA,SAAS,CAACkB,MAAV,CAAiB,UAAAC,QAAQ,EAAI;AAC5C,uBAAO,CAAC,MAAI,CAACjB,mBAAL,CAAyBkB,IAAzB,CAA8B,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACC,SAAL,IAAkBH,QAAQ,CAACI,IAA/B;AAAA,iBAAlC,CAAR;AACD,eAFgB,CAAjB;AAIA,oBAAI,CAACf,oBAAL,CAA0BH,WAA1B,GAAwC,MAAI,CAACL,SAAL,CAAewB,MAAf,GAAwB,CAAxB,GAA4B,IAA5B,GAAmC,KAA3E;AAED,aAvBL;AAyBD;AA5MwD;AAAA;AAAA,iDA8MlC9H,MA9MkC,EA8M5B;AAAA;;AAE3BA,kBAAM,CAAC+H,OAAP,GAAiB,GAAjB;AACA/H,kBAAM,CAACgI,OAAP,GAAiB,GAAjB;AACAhI,kBAAM,CAACiI,OAAP,GAAiB,aAAjB;AAEA,iBAAKxB,0BAAL,GAAkC,IAAlC;AAEA,iBAAKN,gBAAL,CACGmB,sBADH,CAC0BtH,MAD1B,EAEGC,IAFH,CAGI,iEAAS,YAAM;AACb,oBAAI,CAACwG,0BAAL,GAAkC,KAAlC;AACD,aAFD,CAHJ,EAOGzH,SAPH,CAQI,UAAAM,QAAQ,EAAI;AACV,kBAAGA,QAAQ,CAACY,MAAT,KAAoB,GAAvB,EAA2B;AACzB,sBAAI,CAACsG,mBAAL,GAA2B,EAA3B;AACA;AACD;;AAED,oBAAI,CAACA,mBAAL,GAA2BlH,QAAQ,CAACc,IAAT,CAAc,MAAd,CAA3B;AACA,oBAAI,CAACsG,8BAAL,CAAoCC,WAApC,GAAkD,MAAI,CAACH,mBAAL,CAAyBsB,MAAzB,GAAkC,CAAlC,GAAsC,IAAtC,GAA6C,KAA/F;AACD,aAhBL;AAkBD;AAxOwD;AAAA;AAAA,gDA0OtC;AAAA;;AAEjB,gBAAIxB,SAAS,GAAG,KAAKA,SAAL,CAAekB,MAAf,CAAsB,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACS,OAAb;AAAA,aAA9B,CAAhB;AACA,iBAAKnB,MAAL,CAAYT,SAAZ,GAAwB,KAAxB;AAEAA,qBAAS,CAAC6B,GAAV,CAAc,UAAAR,IAAI,EAAI;;;AAEpBA,kBAAI,CAAClJ,OAAL,GAAe,IAAf;;AAEA,kBAAG,MAAI,CAAC+H,mBAAL,CAAyBkB,IAAzB,CAA8B,UAAAD,QAAQ;AAAA,uBAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEW,WAAV,MAA0BT,IAAI,CAACS,WAAnC;AAAA,eAAtC,CAAH,EAAyF;AACvF;AACD;;AAED,kBAAIpI,MAAM,GAAG;AACX,uCAAuB,CAAF,KAAE,MAAI,CAACpB,IAAL,CAAU4B,GAAV,CAAc,MAAd,EAAsBgB,KAAtB,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,EAA3B,GAA+B,EAD3C;AAEX,6BAAa,CAAF,KAAEmG,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEE,IAAN,MAAU,IAAV,IAAU,aAAV,GAAU,EAAV,GAAc,EAFhB;AAGX,2BAAW;AAHA,eAAb;;AAMA,oBAAI,CAAC1B,gBAAL,CACGkC,uBADH,CAC2BrI,MAD3B,EAEGhB,SAFH,CAGI,UAAAM,QAAQ,EAAI;AACV,oBAAGA,QAAQ,CAACY,MAAT,KAAoB,GAAvB,EAA2B;AAEzB,wBAAI,CAACsG,mBAAL,gCAA+B,MAAI,CAACA,mBAApC,IAAuD,gCAEhDmB,IAFgD,GAE5C;AACPO,2BAAO,EAAE,KADF;AAEPzJ,2BAAO,EAAE,KAFF;AAGPmJ,6BAAS,EAAED,IAAI,CAACE,IAHT;AAIPS,uCAAmB,EAAE,MAAI,CAAC1J,IAAL,CAAU4B,GAAV,CAAc,MAAd,EAAsBgB;AAJpC,mBAF4C,CAAvD;AAUA,wBAAI,CAAC8E,SAAL,GAAiB,MAAI,CAACA,SAAL,CAAekB,MAAf,CAAsB,UAAAC,QAAQ;AAAA,2BAAI,CAACA,QAAQ,CAACS,OAAd;AAAA,mBAA9B,CAAjB;AACA,wBAAI,CAACxB,8BAAL,CAAoCC,WAApC,GAAkD,MAAI,CAACH,mBAAL,CAAyBsB,MAAzB,GAAkC,CAAlC,GAAsC,IAAtC,GAA6C,KAA/F;AAED;AACF,eApBL;AAsBD,aApCD;AAsCD;AArRwD;AAAA;AAAA,0CAuR5C;AACX,mBAAO,KAAKzB,mBAAL,CAAyBkC,WAAzB,CACL,QADK,EAEL,yBAFK,EAGL,sEAHK,EAIL,UAJK,EAKL,WALK,CAAP;AAOD;AA/RwD;AAAA;AAAA,8CAiSrCd,QAjSqC,EAiS5B;AAAA;;AAE3B,gBAAInB,SAAS,GAAGmB,QAAQ,GAAG,CAACA,QAAD,CAAH,GAAgB,KAAKjB,mBAAL,CAAyBgB,MAAzB,CAAgC,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACS,OAAb;AAAA,aAAxC,CAAxC;AACA,iBAAKnB,MAAL,CAAYP,mBAAZ,GAAkC,KAAlC;;AAEA,gBAAGF,SAAS,CAACwB,MAAV,IAAoB,CAAvB,EAAyB;AACvB,mBAAKjK,OAAL,CAAawC,MAAb,CAAoB,+BAApB;AACA;AACD;;AAED,iBAAKmI,aAAL,GACGxJ,SADH,CAEI,UAACM,QAAD,EAAuB;AAErB,kBAAG,CAACA,QAAJ,EAAa;AACX;AACD;;AAEDgH,uBAAS,CAAC6B,GAAV,CAAc,UAAAR,IAAI,EAAI;AAEpBA,oBAAI,CAACI,OAAL,GAAe,GAAf;AACAJ,oBAAI,CAAClJ,OAAL,GAAe,IAAf;;AAEA,sBAAI,CAAC0H,gBAAL,CACGkC,uBADH,CAC2BV,IAD3B,EAEG1H,IAFH,CAEQ,iEAAS,YAAM;AACnB0H,sBAAI,CAAClJ,OAAL,GAAe,KAAf;AACD,iBAFK,CAFR,EAKGO,SALH,CAMI,UAAAM,QAAQ,EAAI;AAEV,sBAAGA,QAAQ,CAACY,MAAT,KAAoB,GAAvB,EAA2B;AACzB;AACD;;AAED,wBAAI,CAACsG,mBAAL,GAA2B,MAAI,CAACA,mBAAL,CACxBgB,MADwB,CACjB,UAAAC,QAAQ;AAAA,2BAAIA,QAAQ,CAACG,SAAT,IAAsBD,IAAI,CAACC,SAA/B;AAAA,mBADS,CAA3B;AAGA,wBAAI,CAAClB,8BAAL,CAAoCC,WAApC,GAAkD,MAAI,CAACH,mBAAL,CAAyBsB,MAAzB,GAAkC,CAAlC,GAAsC,IAAtC,GAA6C,KAA/F;AACD,iBAhBL;AAmBD,eAxBD;AA0BD,aAlCL;AAoCD;AA/UwD;AAAA;AAAA,sCAiV7CH,IAjV6C,EAiVjC;AAAA;;AACtB,iBAAKZ,MAAL,CAAYY,IAAZ,IAAoB,CAAC,KAAKZ,MAAL,CAAYY,IAAZ,CAArB;AACA,iBAAKA,IAAL,EAAWQ,GAAX,CAAe,UAAAV,QAAQ;AAAA,qBAAIA,QAAQ,CAACS,OAAT,GAAmB,OAAI,CAACnB,MAAL,CAAYY,IAAZ,CAAvB;AAAA,aAAvB;AACD,WApVwD,CAsVzD;;AAtVyD;AAAA;AAAA,uCAuV5Cc,KAvV4C,EAuV7B;AAC1B,gBAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9B,qBAAO,YAAP;AACD;;AACD,mBAAO,EAAP;AACD;AA5VwD;AAAA;AAAA,yCA8V1CA,KA9V0C,EA8V9B;AACzBA,iBAAK,GAAG,KAAK7J,IAAL,CAAU4B,GAAV,CAAciI,KAAd,CAAR;AACA,mBAAOA,KAAK,CAACvI,MAAN,IAAgB,SAAhB,IAA6BuI,KAAK,CAACE,OAA1C;AACD;AAjWwD;AAAA;AAAA,0CAmWzCF,KAnWyC,EAmW1B;AAC7B,gBAAI3J,QAAQ,GAAG,KAAf;AACA,gBAAI8J,WAAW,GAAG,IAAI,0DAAJ,EAAlB;;AAEA,gBAAI,KAAKhK,IAAL,CAAUiK,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA9B,EAAyC;AACvC,kBAAIC,gBAAgB,GAAG,KAAKnK,IAAL,CAAUiK,QAAV,CAAmBJ,KAAnB,EAA0BK,SAA1B,CAAoCF,WAApC,CAAvB;AACA9J,sBAAQ,GACNiK,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,CAACjK,QAAjB,KAA8B,IAD7D;AAED;;AAED,gBAAIA,QAAJ,EAAc;AACZ,qBAAO,aAAP;AACD;AACF;AAhXwD;;AAAA;AAAA,S;;;;gBAnB1B;;gBAIxB;;gBACA;;gBAJA;;gBAAQ;;gBAKR;;gBATA;;;;AAsBIoH,oDAA8C,6DAL1D,gEAAU;AACTvE,gBAAQ,EAAE,0CADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK0D,E,+EAqDlC,0D,EACK,8F,EACT,2F,EACD,sD,EACQ,8D,EACG,qG,EACE,8G,EA3D0B,GAA9CsE,8CAA8C,CAA9C","file":"restricoes-transporte-restricoes-transporte-module-es5.js","sourcesContent":["import { RouterService } from 'src/app/shared/services/core/router.service';\n// angular\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n//services\nimport { LogisticaEntergaRestricoesService } from '../services/restricoes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n//rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { DateService } from 'src/app/shared/services/core/date.service';\n\n@Component({\n  selector: 'logistica-restricoes-transporte-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class LogisticaRestricoesTransporteListaComponent implements OnInit {\n\n  appTitle = \"Restricciones de transporte\";\n\n  form: FormGroup;\n\n  breadCrumbTree: any = [];\n\n  showAdvancedFilter = true;\n  restricoes: any;\n\n  idSubModulo: number;\n\n  $subscription: Subscription;\n\n  /* Pagination */\n  itemsPerPage = 10;\n  totalItems = 10;\n  currentPage = 1;\n  /* Pagination */\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  noResult = true;\n  /*loading*/\n\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private route: Router,\n    private restricoesService: LogisticaEntergaRestricoesService,\n    private pnotify: PNotifyService,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private routerService: RouterService,\n    private dateService: DateService,\n  ) {\n    this.form = this.formBuilder.group({\n      \"UUID\": [null],\n      \"NM_REST_TRAN\": [null, Validators.required],\n      \"IN_STAT\": [null],\n      \"DS_OBSE\": [null]\n    });\n  }\n\n  ngOnInit() {\n    this.atividadesService.registrarAcesso().subscribe();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n\n        if (_response.hasOwnProperty('TT_REGI_PAGI')){\n          this.itemsPerPage = _response.TT_REGI_PAGI;\n        }\n        \n        this.getRestricoes(this.getParams());\n      }\n    );\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: 'Cadastros',\n        routerLink: '../../'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getRestricoes(params?) {\n\n    if (this.loading === false) {\n      this.loadingNavBar = true;\n    }\n\n    return this.restricoesService\n      .getRestricoes(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.restricoes = response.body[\"data\"];\n            this.totalItems = response.body[\"total\"];\n            this.noResult = false;\n          } else {\n            this.pnotify.notice(\"No se encontró información\");\n            this.noResult = true;\n          }\n        },\n        (error) => {\n          this.noResult = true;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  onShowFilter() {\n    this.showAdvancedFilter = !this.showAdvancedFilter;\n  }\n\n  onFilter() {\n    let params = this.getParams();\n\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: params\n    });\n\n    this.getRestricoes(params);\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.get(\"status\").setValue(\"T\");\n    this.onFilter();\n    this.route.navigate([],\n      {\n        relativeTo: this.activatedRoute,\n        queryParams: null\n      }\n    );\n  }\n\n  changeType(restricao) {\n    restricao.status = restricao.status == 1 ? 0 : 1;\n    this.onSave(restricao);\n  }\n\n  onSave(restricao) {\n    this.restricoesService.postRestricoes(restricao)\n      .subscribe(\n        (response) => {\n          response.status === 200 ? this.pnotify.success() : this.pnotify.error();\n        },\n        (error) => {\n          this.pnotify.error();\n        }\n      )\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  PaginationModule,\n  TooltipModule,\n  TabsModule,\n  TimepickerModule,\n  BsDatepickerModule,\n  ModalModule,\n} from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\nimport { NgBrazil } from 'ng-brazil';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { LogisticaRestricoesTransporteRoutingModule } from './restricoes-transporte-routing.module';\n\nimport { LogisticaRestricoesTransporteListaComponent } from './lista/lista.component';\nimport { LogisticaRestricoesTransporteCadastroComponent } from './cadastro/cadastro.component';\n\n\n@NgModule({\n  declarations: [\n    LogisticaRestricoesTransporteListaComponent,\n    LogisticaRestricoesTransporteCadastroComponent\n\n  ],\n  imports: [\n    LogisticaRestricoesTransporteRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ]\n})\nexport class LogisticaRestricoesTransporteModule { }\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button \\n    [disabled]=\\\"loadingNavBar === true\\\"\\n    [routerLink]=\\\"['../']\\\"\\n    >\\n    Regresar\\n  </button>\\n  <button\\n    [disabled]=\\\"form.status == 'INVALID' || loadingNavBar === true\\\"\\n    (click) = \\\"onSave()\\\"\\n    >Ahorrar</button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <form [formGroup]=\\\"form\\\" class=\\\"d-flex flex-column align-items-center\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n        <div class=\\\"mtc-title\\\">Datos de restricción de transporte</div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"nome\\\">Nombre</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"nome\\\"\\n            formControlName=\\\"NM_REST_TRAN\\\"\\n            placeholder=\\\"Escribelo...\\\"\\n            [ngClass]=\\\"onFieldRequired('NM_REST_TRAN')\\\"\\n          />\\n          <invalid-form-control [show]=\\\"onFieldInvalid('NM_REST_TRAN')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\n        </div>\\n        <div class=\\\"form-row col-12\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"status\\\">Status</label>\\n            <ng-select\\n              [searchable]=\\\"true\\\"\\n              [clearable]=\\\"false\\\"\\n              [items]=\\\"status\\\"\\n              [virtualScroll]=\\\"true\\\"\\n              labelForId=\\\"status\\\"\\n              bindLabel=\\\"nome\\\"\\n              bindValue=\\\"id\\\"\\n              id=\\\"status\\\"\\n              formControlName=\\\"IN_STAT\\\"\\n              placeholder=\\\"Seleccione...\\\"\\n            >\\n            </ng-select>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"prioridade\\\">Prioridad</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"NR_PRIO\\\" min=\\\"1\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"observacao\\\">Observación</label>\\n          <textarea\\n            id=\\\"observacao\\\"\\n            rows=\\\"5\\\"\\n            formControlName=\\\"DS_OBSE\\\"\\n            placeholder=\\\"Escribelo...\\\"\\n            class=\\\"form-control\\\"\\n            >\\n          </textarea>\\n        </div>\\n      </form>\\n      <div class=\\\"row mb-4\\\">\\n        <div class=\\\"col mb-3\\\">\\n          <hr>\\n        </div>\\n      </div>\\n      <message\\n        *ngIf=\\\"materiaisAssociadosLoading\\\"\\n        icon=\\\"fas fa-cog fa-spin\\\"\\n        text=\\\"Buscamos información sobre la restricción de transporte seleccionada ...\\\">\\n      </message>\\n      <div [hidden]=\\\"materiaisAssociadosLoading\\\">\\n        <div class=\\\"row mb-2 mt-4\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Materiales asociados con restricciones de transporte</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\n                (click)=\\\"onRemoverAssociacao()\\\">\\n                <i class=\\\"fas fa-trash\\\"></i>\\n                <span>Limpiar</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!materiaisAssociadosLoading && materiaisAssociados.length > 0\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriaisAssociados\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.materiaisAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('materiaisAssociados')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">Código</th>\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Descripción</th>\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of materiaisAssociados\\\" >\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td width=\\\"20%\\\">{{ item.ID_REFE_ERP }}</td>\\n                  <td width=\\\"70%\\\">\\n                   {{ item.NM_MATE | uppercase }}\\n                  </td>\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\">\\n                    <btn-icon\\n                      icon=\\\"fas fa-trash\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\n                      *ngIf=\\\"!item.loading\\\"  \\n                    >\\n                    </btn-icon>\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!materiaisLoading && materiaisAssociados.length === 0\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-exchange-alt\\\"\\n              text=\\\"No se encontró asociación\\\">\\n            </message>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6 border-left\\\">\\n      <div class=\\\"row mb-2\\\">\\n        <div class=\\\"col mt-auto\\\">\\n          <div class=\\\"mtc-title mb-0\\\">Búsqueda de materiales</div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\n              (click)=\\\"getMateriais()\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <advanced-filter>\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-4\\\">\\n              <label for=\\\"buscarPor\\\">BÚSQUEDA POR</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                formControlName=\\\"buscarPor\\\"\\n              >\\n                <option value=\\\"ID_REFE_ERP\\\">Código</option>\\n                <option value=\\\"NM_MATE\\\" selected>Descripción</option>\\n                <option value=\\\"NM_CLAS\\\" selected>Clase</option>\\n                <option value=\\\"NM_LINH\\\" selected>Línea</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-8\\\">\\n              <label>TÉRMINO DE BÚSQUEDA</label>\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  formControlName=\\\"pesquisa\\\"\\n                  (keyup.enter)=\\\"getMateriais()\\\"\\n                >\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n      <div *ngIf=\\\"materiais.length > 0 && !materiaisLoading\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col mt-auto\\\">\\n            <div class=\\\"mtc-title mb-0\\\">Selección de material</div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end\\\">\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\n                (click)=\\\"onAssociarMateriais()\\\"\\n                [disabled]=\\\"!form.get('UUID')?.value\\\">\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\n                <span\\n                  [tooltip]=\\\"!form.get('UUID')?.value ? 'Seleccione una restricción de transporte':''\\\"\\n                  container=\\\"body\\\"\\n                  placement =\\\"left\\\">Conectar\\n                </span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th\\n                    scope=\\\"col\\\"\\n                    class=\\\"text-center\\\"\\n                    style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"toggle?.materiais ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"onToggleAll('materiais')\\\">\\n                    </btn-icon>\\n                  </th>\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Materiales</th>\\n                  <th style=\\\"width: 5%\\\"></th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of materiais\\\">\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\n                    <btn-icon\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\n                      size=\\\"small\\\"\\n                      (click)=\\\"item.checked = !item.checked\\\">\\n                    </btn-icon>\\n                  </td>\\n                  <td\\n                    class=\\\"hover\\\"\\n                    style=\\\"width: 90%\\\"\\n                    (click)=\\\"item.checked = !item.checked\\\">\\n                    {{ item.ID_REFE_ERP }} - {{ item.NM_MATE | uppercase }}\\n                  </td>\\n                  <td style=\\\"width: 5%\\\">\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                    </div>\\n                  </td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"materiaisLoading\\\">\\n        <div class=\\\"col\\\">\\n          <message\\n            icon=\\\"fas fa-cog fa-spin\\\"\\n            text=\\\"Estamos investigando los materiales para usted ...\\\">\\n          </message>\\n        </div>\\n      </div>\\n      <div>\\n        <div class=\\\"row\\\" *ngIf=\\\"(materiais.length == 0) && !materiaisLoading\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-box-open\\\"\\n              text=\\\"No se encontró información\\\">\\n            </message>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"usuariosLista.length === 0 && !firstSearch\\\">\\n          <div class=\\\"col\\\">\\n            <message\\n              icon=\\\"fas fa-search\\\"\\n              text=\\\"Preecha os campos acima para pesquisar usuarios\\\">\\n            </message>\\n          </div>\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\";","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","export default \".fa-check {\\n  color: green;\\n}\\n\\n.fa-ban {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvY2FkYXN0cm9zL3Jlc3RyaWNvZXMtdHJhbnNwb3J0ZS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9yZXN0cmljb2VzLXRyYW5zcG9ydGUvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmEtY2hlY2sge1xuICBjb2xvcjogZ3JlZW47XG59XG5cbi5mYS1iYW4ge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9yZXN0cmljb2VzLXRyYW5zcG9ydGUvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  months: Array<string> = [\n    'Enero',\n    'Febrero',\n    'Marzon',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre',\n  ];\n\n  weeks: Array<string> = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Miercoles',\n    'Jueves',\n    'Viernes',\n    'Sábado',\n  ];\n\n  sameDay(dateA: Date, dateB: Date): boolean {\n    return (\n      dateA.getFullYear() === dateB.getFullYear() &&\n      dateA.getMonth() === dateB.getMonth() &&\n      dateA.getDate() === dateB.getDate()\n    );\n  }\n\n  getHourMinute(date: Date): string {\n    const getHours = date.getHours();\n    const getMinutes = date.getMinutes();\n    let hours: any, minutes: any;\n\n    if (getHours < 10) {\n      hours = `0${getHours}`;\n    } else {\n      hours = getHours;\n    }\n\n    if (getMinutes < 10) {\n      minutes = `0${getMinutes}`;\n    } else {\n      minutes = getMinutes;\n    }\n\n    return `${hours}:${minutes}`;\n  }\n\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\n    const day = dateA.getDate();\n    const weekDay = dateA.getDay();\n    const month = dateA.getMonth();\n    const year = dateA.getFullYear();\n    const hour = this.getHourMinute(dateA);\n\n    if (showTime) {\n      if (dateB) {\n        const hourB = this.getHourMinute(dateB);\n\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\n      }\n\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\n    } else {\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\n    }\n  }\n\n  getFullMonth(date: Date): string {\n    return this.months[date.getMonth()];\n  }\n\n  getFirstDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 0, 1);\n  }\n\n  getLastDayYear(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), 11, 31);\n  }\n\n  getFirstDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getLastDayMonth(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getToday(): Date {\n    let date = new Date();\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  convert2PhpDate(date: Date): string {\n    const y = date.getFullYear();\n    let m: any = date.getMonth() + 1;\n    let d: any = date.getDate();\n    let h: any = date.getHours();\n    let i: any = date.getMinutes();\n\n    if (m < 10) m = `0${m}`;\n    if (d < 10) d = `0${d}`;\n    if (h < 10) h = `0${h}`;\n    if (i < 10) i = `0${i}`;\n\n    return `${y}-${m}-${d} ${h}:${i}`;\n  }\n\n  convertToBrazilianDate(date: Date): string {\n    let y = date.getFullYear().toString();\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\n    let d = date.getDate().toString().padStart(2, '0');\n    let h = date.getHours().toString().padStart(2, '0');\n    let i = date.getMinutes().toString().padStart(2, '0');\n    let s = date.getSeconds().toString().padStart(2, '0');\n\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\n  }\n\n  convertMysqlTime(time: string): string {\n    if (time !== null) {\n      let timeSplit = time.split(':');\n\n      return `${timeSplit[0]}:${timeSplit[1]}`;\n    }\n\n    return time;\n  }\n\n  convertToUrlDate(date: Date): string {\n    let d: any = date.getDate();\n    let m: any = date.getMonth() + 1;\n    let y: any = date.getFullYear();\n\n    if (d < 10) d = `0${d}`;\n    if (m < 10) m = `0${m}`;\n\n    return `${d}-${m}-${y}`;\n  }\n\n  convertStringToDate(stringDate: any, dateType: string): Date {\n    let date: Date;\n\n    if (stringDate.indexOf(':') > -1) {\n      const stringDateSplit = stringDate.split(' ');\n      const dateSplit = stringDateSplit[0].split('-');\n      const timeSplit = stringDateSplit[1].split(':');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2),\n          timeSplit[0],\n          timeSplit[1],\n          timeSplit[2]\n        );\n      }\n    } else {\n      const dateSplit = stringDate.split('-');\n\n      if (dateType == 'latam') {\n        date = new Date(\n          dateSplit[2],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[0].substr(0, 2)\n        );\n      } else if (dateType == 'usa') {\n        date = new Date(\n          dateSplit[0],\n          parseInt(dateSplit[1]) - 1,\n          dateSplit[2].substr(0, 2)\n        );\n      }\n    }\n\n    return date;\n  }\n\n  formatWithSlashes(stringDate: any, dateType: string): string {\n    const dateSplit = stringDate.split('-');\n    let date: string;\n\n    if (dateType == 'latam') {\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\n    } else if (dateType == 'usa') {\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\n    }\n\n    return date;\n  }\n\n  addDaysToDate(date: Date, days: number): Date {\n    return new Date(date.setDate(date.getDate() + days));\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button (click)=\\\"onReset()\\\">\\n    Limpiar\\n  </button>\\n  <button (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n  <button [routerLink]=\\\"['../novo']\\\" >\\n    Nuevo\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <advanced-filter>\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"nome\\\">Nombre</label>\\n          <input\\n            id=\\\"nome\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"NM_REST_TRAN\\\" \\n            (keyup.enter)=\\\"onFilter()\\\">\\n        </div>\\n        <div class=\\\"form-group col-3\\\">\\n          <label for=\\\"status\\\">Status</label>\\n          <select\\n            name=\\\"status\\\"\\n            id=\\\"status\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Todos</option>\\n            <option value=\\\"'1'\\\">Activo</option>\\n            <option value=\\\"'0'\\\">Inactivo</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div  class=\\\"col-12 p-0 mt-3\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th>Nombre</th>\\n            <th>Usuario</th>\\n            <th width=\\\"70px\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let restricao of restricoes; let i = index\\\">\\n            <td class=\\\"text-truncate\\\"  [ngClass]=\\\"restricao.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\"> {{ restricao.UUID }} </td>  \\n            <td class=\\\"text-truncate\\\"> {{ restricao.NM_REST_TRAN }} </td>\\n            <td class=\\\"text-truncate\\\"> \\n              <span *ngIf=\\\"!restricao.DT_ATUA\\\">[{{ restricao.DT_INCL | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\n              <span *ngIf=\\\"restricao.DT_ATUA\\\">[{{ restricao.DT_ATUA | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\n              <span>({{ restricao.NR_MATR }})&nbsp; {{ restricao.NM_USUA }}</span>\\n            </td>\\n            <td class=\\\"align-middle\\\">\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['../', restricao.UUID]\\\">\\n                <i class=\\\"fas fa-edit\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\n    <empty-result message=\\\"No se encontró información\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\n\nimport { LogisticaRestricoesTransporteCadastroComponent } from './cadastro/cadastro.component';\nimport { LogisticaRestricoesTransporteListaComponent } from './lista/lista.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaRestricoesTransporteListaComponent,\n  },\n  {\n    path: 'novo',\n    component: LogisticaRestricoesTransporteCadastroComponent,\n  },\n  {\n    path: ':id',\n    component: LogisticaRestricoesTransporteCadastroComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LogisticaRestricoesTransporteRoutingModule { }\n","import { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\n// angular\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n// services\nimport { LogisticaEntergaRestricoesService } from '../services/restricoes.service';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Observable, Subscription } from 'rxjs';\nimport { LogisticaEntradaMateriaisService } from '../../../entrada-materiais/services/entrada-materiais.service';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\n\n@Component({\n  selector: 'logistica-restricoes-transporte-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class LogisticaRestricoesTransporteCadastroComponent implements OnInit {\n\n  appTitle = \"registrar\";\n\n  form: FormGroup;\n  formMateriais: FormGroup;\n\n  status = [\n    {\n      \"id\": 1,\n      \"nome\": \"activo\",\n      \"valor\": 1\n    },\n    {\n      \"id\": 0,\n      \"nome\": \"inactivo\",\n      \"valor\": 0\n    }\n  ]\n\n  breadCrumbTree: any = [];\n  idSubModulo: number;\n  $subscription: Subscription;\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  noResult = true;\n  /*loading*/\n\n  materiais = [];\n  materiaisLoading = false;\n\n  materiaisAssociados = [];\n  materiaisAssociadosLoading = false;\n\n  tableConfigMateriaisAssociados: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n    hover: false,\n  };\n\n  tableConfigMateriais: Partial<CustomTableConfig> = {\n    fixedHeader: false,\n    bodyHeight: 243,\n  };\n\n  toggle = {\n    materiais: false,\n    materiaisAssociados: false\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private restricaoService: LogisticaEntergaRestricoesService,\n    private pnotify: PNotifyService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private confirmModalService: ConfirmModalService\n  ) {\n    this.form = this.formBuilder.group({\n      \"UUID\": [null],\n      \"NM_REST_TRAN\": [null, Validators.required],\n      \"IN_STAT\": [1, Validators.required],\n      \"NR_PRIO\": [null, Validators.required],\n      \"DS_OBSE\": [null]\n    });\n\n    this.formMateriais = this.formBuilder.group({\n      buscarPor: ['NM_MATE'],\n      pesquisa: [null, Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n    this.atividadesService\n      .registrarAcesso()\n      .subscribe();\n    this.onActivatedRoute();\n    this.setBreadCrumb();\n  }\n\n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n\n    if (!params?.id){\n      this.loading = false;\n      return\n    }\n\n    this.getRestricao(params?.id);\n    this.getMateriaisAssociados({\"UUID_LOGI_REST_TRAN\": params?.id})\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: 'Cadastro',\n        routerLink: './../../'\n      },\n      {\n        descricao: 'Restricciones de transporte',\n        routerLink: '../'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  onSave() {\n    this.loadingNavBar = true;\n    return this.restricaoService\n      .postRestricoes(this.form.value)\n      .pipe(\n        finalize(() => {\n          this.loadingNavBar = false;\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.form.reset();\n            this.pnotify.success();\n            this.router.navigate([\"./../\"], {relativeTo: this.activatedRoute})\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error) => {\n          this.noResult = true;\n          this.pnotify.error();\n        }\n      );\n  }\n\n  getRestricao(id) {\n    this.restricaoService\n      .getRestricao(id)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.form.patchValue(response.body['data']);\n          } else {\n            this.pnotify.error();\n          }\n        },\n        (error) => {\n          this.pnotify.error();\n        }\n      )\n  }\n\n  getMateriais(){\n\n    const buscarPor = this.formMateriais.get('buscarPor')?.value;\n    const pesquisa = this.formMateriais.get('pesquisa')?.value;\n\n    let params = {};\n\n    if(buscarPor){\n      params[buscarPor] = pesquisa ?? '';\n    }\n\n    this.toggle.materiais = false;\n\n    this.materiaisLoading = true\n\n    this.restricaoService\n      .getMateriais(params)\n      .pipe(\n        finalize(() => {\n          this.materiaisLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n\n          if(response.status !== 200){\n            this.materiais = [];\n            return\n          }\n\n          let materiais = response.body['data'];\n\n          this.materiais = materiais.filter(material => {\n            return !this.materiaisAssociados.some(item => item.UUID_MATE == material.UUID)\n          })\n\n          this.tableConfigMateriais.fixedHeader = this.materiais.length > 9 ? true : false;\n\n        }\n      )\n  }\n\n  getMateriaisAssociados(params){\n\n    params.IN_STAT = '1';\n    params.IN_PAGI = '1';\n    params.ORDE_BY = 'ID_REFE_ERP'\n\n    this.materiaisAssociadosLoading = true;\n\n    this.restricaoService\n      .getMateriaisAssociados(params)\n      .pipe(\n        finalize(() => {\n          this.materiaisAssociadosLoading = false;\n        })\n      )\n      .subscribe(\n        response => {\n          if(response.status !== 200){\n            this.materiaisAssociados = [];\n            return\n          }\n\n          this.materiaisAssociados = response.body['data'];\n          this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\n        }\n      )\n  }\n\n  onAssociarMateriais(){\n\n    let materiais = this.materiais.filter(material => material.checked);\n    this.toggle.materiais = false;\n\n    materiais.map(item => {\n\n      item.loading = true;\n\n      if(this.materiaisAssociados.some(material => material?.ID_REFE_ERP === item.ID_REFE_ERP)){\n        return\n      }\n\n      let params = {\n        \"UUID_LOGI_REST_TRAN\": this.form.get(\"UUID\").value ?? \"\",\n        \"UUID_MATE\": item?.UUID ?? \"\",\n        \"IN_STAT\": \"1\"\n      }\n\n      this.restricaoService\n        .postMateriaisAssociados(params)\n        .subscribe(\n          response => {\n            if(response.status === 200){\n\n              this.materiaisAssociados = [...this.materiaisAssociados,\n                {\n                  ...item,\n                  checked: false,\n                  loading: false,\n                  UUID_MATE: item.UUID,\n                  UUID_LOGI_REST_TRAN: this.form.get(\"UUID\").value\n                }\n              ];\n\n              this.materiais = this.materiais.filter(material => !material.checked)\n              this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\n\n            }\n          }\n        )\n    });\n\n  }\n\n  confirmDelete(): Observable<boolean> {\n    return this.confirmModalService.showConfirm(\n      'delete',\n      'Confirma la eliminación',\n      '¿Está seguro de que desea continuar con la eliminación del registro?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  onRemoverAssociacao(material?){\n\n    let materiais = material ? [material] : this.materiaisAssociados.filter(material => material.checked);\n    this.toggle.materiaisAssociados = false;\n\n    if(materiais.length == 0){\n      this.pnotify.notice(\"Ningún material seleccionado.\");\n      return\n    }\n\n    this.confirmDelete()\n      .subscribe(\n        (response: boolean) => {\n\n          if(!response){\n            return\n          }\n\n          materiais.map(item => {\n\n            item.IN_STAT = '0';\n            item.loading = true;\n\n            this.restricaoService\n              .postMateriaisAssociados(item)\n              .pipe(finalize(() => {\n                item.loading = false;\n              }))\n              .subscribe(\n                response => {\n\n                  if(response.status !== 200){\n                    return\n                  }\n\n                  this.materiaisAssociados = this.materiaisAssociados\n                    .filter(material => material.UUID_MATE != item.UUID_MATE);\n\n                  this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\n                }\n              )\n\n          })\n\n        }\n      )\n  }\n\n  onToggleAll(item: string){\n    this.toggle[item] = !this.toggle[item];\n    this[item].map(material => material.checked = this.toggle[item]);\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n  // Validação de formulário\n\n}\n"]}