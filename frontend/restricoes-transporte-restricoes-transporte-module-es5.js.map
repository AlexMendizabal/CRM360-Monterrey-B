{"version":3,"sources":["webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/lista/lista.component.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/restricoes-transporte.module.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/cadastro/cadastro.component.html","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/lista/lista.component.scss","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/cadastro/cadastro.component.scss","webpack:///src/app/shared/services/core/date.service.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/lista/lista.component.html","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/restricoes-transporte-routing.module.ts","webpack:///src/app/modules/logistica/cadastros/restricoes-transporte/cadastro/cadastro.component.ts"],"names":["LogisticaRestricoesTransporteListaComponent","route","restricoesService","pnotify","formBuilder","activatedRoute","atividadesService","routerService","dateService","appTitle","breadCrumbTree","showAdvancedFilter","itemsPerPage","totalItems","currentPage","loading","loadingNavBar","noResult","form","group","required","registrarAcesso","subscribe","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","queryParams","response","_response","getBase64UrlParams","patchValue","hasOwnProperty","TT_REGI_PAGI","getRestricoes","getParams","descricao","routerLink","params","pipe","status","restricoes","body","notice","error","event","get","setValue","page","Date","getTime","navigate","relativeTo","setBase64UrlParams","reset","onFilter","restricao","onSave","postRestricoes","success","_params","_obj","value","prop","convertToUrlDate","selector","template","LogisticaRestricoesTransporteModule","declarations","imports","forRoot","ConfirmModalService","modalService","type","title","message","cancelTxt","okTxt","modalRef","show","animated","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","DateService","months","weeks","dateA","dateB","getFullYear","getMonth","getDate","date","getHours","getMinutes","hours","minutes","showTime","day","weekDay","getDay","month","year","hour","getHourMinute","hourB","y","m","d","h","i","toString","padStart","s","getSeconds","time","timeSplit","split","stringDate","dateType","indexOf","stringDateSplit","dateSplit","parseInt","substr","days","setDate","routes","path","component","LogisticaRestricoesTransporteRoutingModule","forChild","exports","LogisticaRestricoesTransporteCadastroComponent","restricaoService","router","confirmModalService","materiais","materiaisLoading","materiaisAssociados","materiaisAssociadosLoading","tableConfigMateriaisAssociados","fixedHeader","bodyHeight","hover","tableConfigMateriais","toggle","formMateriais","buscarPor","pesquisa","snapshot","id","getRestricao","getMateriaisAssociados","getMateriais","filter","material","some","item","UUID_MATE","UUID","length","IN_STAT","IN_PAGI","ORDE_BY","checked","map","ID_REFE_ERP","postMateriaisAssociados","UUID_LOGI_REST_TRAN","showConfirm","confirmDelete","field","onFieldInvalid","touched","formControl","controls","validator","validationResult"],"mappings":"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","file":"restricoes-transporte-restricoes-transporte-module-es5.js","sourcesContent":["import { RouterService } from 'src/app/shared/services/core/router.service';\r\n// angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//services\r\nimport { LogisticaEntergaRestricoesService } from '../services/restricoes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n//rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { DateService } from 'src/app/shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'logistica-restricoes-transporte-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class LogisticaRestricoesTransporteListaComponent implements OnInit {\r\n\r\n  appTitle = \"Restricciones de transporte\";\r\n\r\n  form: FormGroup;\r\n\r\n  breadCrumbTree: any = [];\r\n\r\n  showAdvancedFilter = true;\r\n  restricoes: any;\r\n\r\n  idSubModulo: number;\r\n\r\n  $subscription: Subscription;\r\n\r\n  /* Pagination */\r\n  itemsPerPage = 10;\r\n  totalItems = 10;\r\n  currentPage = 1;\r\n  /* Pagination */\r\n\r\n  /*loading*/\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  noResult = true;\r\n  /*loading*/\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private restricoesService: LogisticaEntergaRestricoesService,\r\n    private pnotify: PNotifyService,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private routerService: RouterService,\r\n    private dateService: DateService,\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      \"UUID\": [null],\r\n      \"NM_REST_TRAN\": [null, Validators.required],\r\n      \"IN_STAT\": [null],\r\n      \"DS_OBSE\": [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (response) => {\r\n        const _response = this.routerService.getBase64UrlParams(response);\r\n        this.form.patchValue(_response);\r\n\r\n        if (_response.hasOwnProperty('TT_REGI_PAGI')){\r\n          this.itemsPerPage = _response.TT_REGI_PAGI;\r\n        }\r\n        \r\n        this.getRestricoes(this.getParams());\r\n      }\r\n    );\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica'\r\n      },\r\n      {\r\n        descricao: 'Cadastros',\r\n        routerLink: '../../'\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getRestricoes(params?) {\r\n\r\n    if (this.loading === false) {\r\n      this.loadingNavBar = true;\r\n    }\r\n\r\n    return this.restricoesService\r\n      .getRestricoes(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.restricoes = response.body[\"data\"];\r\n            this.totalItems = response.body[\"total\"];\r\n            this.noResult = false;\r\n          } else {\r\n            this.pnotify.notice(\"No se encontró información\");\r\n            this.noResult = true;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  onPageChanged(event) {\r\n    this.form.get('PAGI').setValue(event.page);\r\n    this.form.get('TIME').setValue(new Date().getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\r\n    });\r\n  }\r\n\r\n  onShowFilter() {\r\n    this.showAdvancedFilter = !this.showAdvancedFilter;\r\n  }\r\n\r\n  onFilter() {\r\n    let params = this.getParams();\r\n\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: params\r\n    });\r\n\r\n    this.getRestricoes(params);\r\n  }\r\n\r\n  onReset() {\r\n    this.form.reset();\r\n    this.form.get(\"status\").setValue(\"T\");\r\n    this.onFilter();\r\n    this.route.navigate([],\r\n      {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: null\r\n      }\r\n    );\r\n  }\r\n\r\n  changeType(restricao) {\r\n    restricao.status = restricao.status == 1 ? 0 : 1;\r\n    this.onSave(restricao);\r\n  }\r\n\r\n  onSave(restricao) {\r\n    this.restricoesService.postRestricoes(restricao)\r\n      .subscribe(\r\n        (response) => {\r\n          response.status === 200 ? this.pnotify.success() : this.pnotify.error();\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n        }\r\n      )\r\n  }\r\n\r\n  getParams() {\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\r\n        else _params[prop] = _obj[prop];\r\n      }\r\n    }\r\n\r\n    return _params;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  PaginationModule,\r\n  TooltipModule,\r\n  TabsModule,\r\n  TimepickerModule,\r\n  BsDatepickerModule,\r\n  ModalModule,\r\n} from 'ngx-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\n\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\n\r\nimport { LogisticaRestricoesTransporteRoutingModule } from './restricoes-transporte-routing.module';\r\n\r\nimport { LogisticaRestricoesTransporteListaComponent } from './lista/lista.component';\r\nimport { LogisticaRestricoesTransporteCadastroComponent } from './cadastro/cadastro.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogisticaRestricoesTransporteListaComponent,\r\n    LogisticaRestricoesTransporteCadastroComponent\r\n\r\n  ],\r\n  imports: [\r\n    LogisticaRestricoesTransporteRoutingModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ]\r\n})\r\nexport class LogisticaRestricoesTransporteModule { }\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button \\r\\n    [disabled]=\\\"loadingNavBar === true\\\"\\r\\n    [routerLink]=\\\"['../']\\\"\\r\\n    >\\r\\n    Regresar\\r\\n  </button>\\r\\n  <button\\r\\n    [disabled]=\\\"form.status == 'INVALID' || loadingNavBar === true\\\"\\r\\n    (click) = \\\"onSave()\\\"\\r\\n    >Ahorrar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <form [formGroup]=\\\"form\\\" class=\\\"d-flex flex-column align-items-center\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n        <div class=\\\"mtc-title\\\">Datos de restricción de transporte</div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"nome\\\">Nombre</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"nome\\\"\\r\\n            formControlName=\\\"NM_REST_TRAN\\\"\\r\\n            placeholder=\\\"Escribelo...\\\"\\r\\n            [ngClass]=\\\"onFieldRequired('NM_REST_TRAN')\\\"\\r\\n          />\\r\\n          <invalid-form-control [show]=\\\"onFieldInvalid('NM_REST_TRAN')\\\" message=\\\"Nome é obrigatório.\\\"></invalid-form-control>\\r\\n        </div>\\r\\n        <div class=\\\"form-row col-12\\\">\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"status\\\">Status</label>\\r\\n            <ng-select\\r\\n              [searchable]=\\\"true\\\"\\r\\n              [clearable]=\\\"false\\\"\\r\\n              [items]=\\\"status\\\"\\r\\n              [virtualScroll]=\\\"true\\\"\\r\\n              labelForId=\\\"status\\\"\\r\\n              bindLabel=\\\"nome\\\"\\r\\n              bindValue=\\\"id\\\"\\r\\n              id=\\\"status\\\"\\r\\n              formControlName=\\\"IN_STAT\\\"\\r\\n              placeholder=\\\"Seleccione...\\\"\\r\\n            >\\r\\n            </ng-select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-6\\\">\\r\\n            <label for=\\\"prioridade\\\">Prioridad</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"NR_PRIO\\\" min=\\\"1\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"observacao\\\">Observación</label>\\r\\n          <textarea\\r\\n            id=\\\"observacao\\\"\\r\\n            rows=\\\"5\\\"\\r\\n            formControlName=\\\"DS_OBSE\\\"\\r\\n            placeholder=\\\"Escribelo...\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            >\\r\\n          </textarea>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col mb-3\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <message\\r\\n        *ngIf=\\\"materiaisAssociadosLoading\\\"\\r\\n        icon=\\\"fas fa-cog fa-spin\\\"\\r\\n        text=\\\"Buscamos información sobre la restricción de transporte seleccionada ...\\\">\\r\\n      </message>\\r\\n      <div [hidden]=\\\"materiaisAssociadosLoading\\\">\\r\\n        <div class=\\\"row mb-2 mt-4\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Materiales asociados con restricciones de transporte</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-danger\\\"\\r\\n                (click)=\\\"onRemoverAssociacao()\\\">\\r\\n                <i class=\\\"fas fa-trash\\\"></i>\\r\\n                <span>Limpiar</span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!materiaisAssociadosLoading && materiaisAssociados.length > 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigMateriaisAssociados\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.materiaisAssociados ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('materiaisAssociados')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"20%\\\">Código</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"70%\\\">Descripción</th>\\r\\n                  <th scope=\\\"col\\\" width=\\\"5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of materiaisAssociados\\\" >\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td width=\\\"20%\\\">{{ item.ID_REFE_ERP }}</td>\\r\\n                  <td width=\\\"70%\\\">\\r\\n                   {{ item.NM_MATE | uppercase }}\\r\\n                  </td>\\r\\n                  <td class=\\\"text-center\\\" width=\\\"5%\\\">\\r\\n                    <btn-icon\\r\\n                      icon=\\\"fas fa-trash\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onRemoverAssociacao(item)\\\"\\r\\n                      *ngIf=\\\"!item.loading\\\"  \\r\\n                    >\\r\\n                    </btn-icon>\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!materiaisLoading && materiaisAssociados.length === 0\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-exchange-alt\\\"\\r\\n              text=\\\"No se encontró asociación\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 border-left\\\">\\r\\n      <div class=\\\"row mb-2\\\">\\r\\n        <div class=\\\"col mt-auto\\\">\\r\\n          <div class=\\\"mtc-title mb-0\\\">Búsqueda de materiales</div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"d-flex justify-content-end\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-sm btn-outline-secondary\\\"\\r\\n              (click)=\\\"getMateriais()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <advanced-filter>\\r\\n        <form [formGroup]=\\\"formMateriais\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-4\\\">\\r\\n              <label for=\\\"buscarPor\\\">BÚSQUEDA POR</label>\\r\\n              <select\\r\\n                class=\\\"form-control custom-select\\\"\\r\\n                formControlName=\\\"buscarPor\\\"\\r\\n              >\\r\\n                <option value=\\\"ID_REFE_ERP\\\">Código</option>\\r\\n                <option value=\\\"NM_MATE\\\" selected>Descripción</option>\\r\\n                <option value=\\\"NM_CLAS\\\" selected>Clase</option>\\r\\n                <option value=\\\"NM_LINH\\\" selected>Línea</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-8\\\">\\r\\n              <label>TÉRMINO DE BÚSQUEDA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"pesquisa\\\"\\r\\n                  (keyup.enter)=\\\"getMateriais()\\\"\\r\\n                >\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </advanced-filter>\\r\\n      <div *ngIf=\\\"materiais.length > 0 && !materiaisLoading\\\">\\r\\n        <div class=\\\"row mb-2\\\">\\r\\n          <div class=\\\"col mt-auto\\\">\\r\\n            <div class=\\\"mtc-title mb-0\\\">Selección de material</div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"d-flex justify-content-end\\\">\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-sm btn-outline-primary\\\"\\r\\n                (click)=\\\"onAssociarMateriais()\\\"\\r\\n                [disabled]=\\\"!form.get('UUID')?.value\\\">\\r\\n                <i class=\\\"fas fa-exchange-alt\\\"></i>\\r\\n                <span\\r\\n                  [tooltip]=\\\"!form.get('UUID')?.value ? 'Seleccione una restricción de transporte':''\\\"\\r\\n                  container=\\\"body\\\"\\r\\n                  placement =\\\"left\\\">Conectar\\r\\n                </span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <custom-table [config]=\\\"tableConfigMateriais\\\">\\r\\n              <ng-template #thead let-thead>\\r\\n                <tr>\\r\\n                  <th\\r\\n                    scope=\\\"col\\\"\\r\\n                    class=\\\"text-center\\\"\\r\\n                    style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"toggle?.materiais ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"onToggleAll('materiais')\\\">\\r\\n                    </btn-icon>\\r\\n                  </th>\\r\\n                  <th scope=\\\"col\\\" style=\\\"width: 90%\\\">Materiales</th>\\r\\n                  <th style=\\\"width: 5%\\\"></th>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n              <ng-template #tbody let-tbody>\\r\\n                <tr *ngFor=\\\"let item of materiais\\\">\\r\\n                  <td class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                    <btn-icon\\r\\n                      [icon]=\\\"item.checked == 1 ? 'fas fa-check-square' : 'far fa-square'\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    </btn-icon>\\r\\n                  </td>\\r\\n                  <td\\r\\n                    class=\\\"hover\\\"\\r\\n                    style=\\\"width: 90%\\\"\\r\\n                    (click)=\\\"item.checked = !item.checked\\\">\\r\\n                    {{ item.ID_REFE_ERP }} - {{ item.NM_MATE | uppercase }}\\r\\n                  </td>\\r\\n                  <td style=\\\"width: 5%\\\">\\r\\n                    <div class=\\\"text-primary small\\\" *ngIf=\\\"item.loading\\\">\\r\\n                      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </custom-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"materiaisLoading\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <message\\r\\n            icon=\\\"fas fa-cog fa-spin\\\"\\r\\n            text=\\\"Estamos investigando los materiales para usted ...\\\">\\r\\n          </message>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"(materiais.length == 0) && !materiaisLoading\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-box-open\\\"\\r\\n              text=\\\"No se encontró información\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"usuariosLista.length === 0 && !firstSearch\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <message\\r\\n              icon=\\\"fas fa-search\\\"\\r\\n              text=\\\"Preecha os campos acima para pesquisar usuarios\\\">\\r\\n            </message>\\r\\n          </div>\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-body>\\r\\n\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n// Components\r\nimport { ConfirmModalComponent } from './confirm-modal.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmModalService {\r\n  constructor(private modalService: BsModalService) {}\r\n\r\n  showConfirm(\r\n    type: string,\r\n    title: string,\r\n    message: string,\r\n    cancelTxt?: string,\r\n    okTxt?: string\r\n  ) {\r\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\r\n      animated: false,\r\n      ignoreBackdropClick: true,\r\n      keyboard: false,\r\n      class: 'confirm'\r\n    });\r\n\r\n    modalRef.content.type = type;\r\n    modalRef.content.title = title;\r\n    modalRef.content.message = message;\r\n\r\n    if (type === 'delete') {\r\n      modalRef.content.messageAlerts = [\r\n        \"Se eliminará toda la información relacionada.\",\r\n        \"Esta acción no se puede deshacer.\"\r\n      ];\r\n    }\r\n\r\n    if (type === 'inactivate') {\r\n      modalRef.content.messageAlerts = [\r\n        'Las informaciones serán inactivadas.'\r\n      ];\r\n    }\r\n\r\n    if (cancelTxt) {\r\n      modalRef.content.cancelTxt = cancelTxt;\r\n    }\r\n\r\n    if (okTxt) {\r\n      modalRef.content.okTxt = okTxt;\r\n    }\r\n\r\n    // É uma boa prática tipar o retorno.\r\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\r\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\r\n  }\r\n}\r\n","export default \".fa-check {\\n  color: green;\\n}\\n\\n.fa-ban {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvY2FkYXN0cm9zL3Jlc3RyaWNvZXMtdHJhbnNwb3J0ZS9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9yZXN0cmljb2VzLXRyYW5zcG9ydGUvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmEtY2hlY2sge1xyXG4gIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLmZhLWJhbiB7XHJcbiAgY29sb3I6IHJlZDtcclxufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2NhZGFzdHJvcy9yZXN0cmljb2VzLXRyYW5zcG9ydGUvY2FkYXN0cm8vY2FkYXN0cm8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DateService {\r\n  months: Array<string> = [\r\n    'Enero',\r\n    'Febrero',\r\n    'Marzo',\r\n    'Abril',\r\n    'Mayo',\r\n    'Junio',\r\n    'Julio',\r\n    'Agosto',\r\n    'Septiembre',\r\n    'Octubre',\r\n    'Noviembre',\r\n    'Diciembre',\r\n  ];\r\n\r\n  weeks: Array<string> = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miercoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  sameDay(dateA: Date, dateB: Date): boolean {\r\n    return (\r\n      dateA.getFullYear() === dateB.getFullYear() &&\r\n      dateA.getMonth() === dateB.getMonth() &&\r\n      dateA.getDate() === dateB.getDate()\r\n    );\r\n  }\r\n\r\n  getHourMinute(date: Date): string {\r\n    const getHours = date.getHours();\r\n    const getMinutes = date.getMinutes();\r\n    let hours: any, minutes: any;\r\n\r\n    if (getHours < 10) {\r\n      hours = `0${getHours}`;\r\n    } else {\r\n      hours = getHours;\r\n    }\r\n\r\n    if (getMinutes < 10) {\r\n      minutes = `0${getMinutes}`;\r\n    } else {\r\n      minutes = getMinutes;\r\n    }\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  getFullDate(dateA: Date, dateB?: Date, showTime: boolean = true): string {\r\n    const day = dateA.getDate();\r\n    const weekDay = dateA.getDay();\r\n    const month = dateA.getMonth();\r\n    const year = dateA.getFullYear();\r\n    const hour = this.getHourMinute(dateA);\r\n\r\n    if (showTime) {\r\n      if (dateB) {\r\n        const hourB = this.getHourMinute(dateB);\r\n\r\n        return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}, desde ${hour} hasta ${hourB}`;\r\n      }\r\n\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year} hasta ${hour}`;\r\n    } else {\r\n      return `${this.weeks[weekDay]}, ${day} de ${this.months[month]} del ${year}`;\r\n    }\r\n  }\r\n\r\n  getFullMonth(date: Date): string {\r\n    return this.months[date.getMonth()];\r\n  }\r\n\r\n  getFirstDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 0, 1);\r\n  }\r\n\r\n  getLastDayYear(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), 11, 31);\r\n  }\r\n\r\n  getFirstDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), 1);\r\n  }\r\n\r\n  getLastDayMonth(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n  }\r\n\r\n  getToday(): Date {\r\n    let date = new Date();\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  }\r\n\r\n  convert2PhpDate(date: Date): string {\r\n    const y = date.getFullYear();\r\n    let m: any = date.getMonth() + 1;\r\n    let d: any = date.getDate();\r\n    let h: any = date.getHours();\r\n    let i: any = date.getMinutes();\r\n\r\n    if (m < 10) m = `0${m}`;\r\n    if (d < 10) d = `0${d}`;\r\n    if (h < 10) h = `0${h}`;\r\n    if (i < 10) i = `0${i}`;\r\n\r\n    return `${y}-${m}-${d} ${h}:${i}`;\r\n  }\r\n\r\n  convertToBrazilianDate(date: Date): string {\r\n    let y = date.getFullYear().toString();\r\n    let m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    let d = date.getDate().toString().padStart(2, '0');\r\n    let h = date.getHours().toString().padStart(2, '0');\r\n    let i = date.getMinutes().toString().padStart(2, '0');\r\n    let s = date.getSeconds().toString().padStart(2, '0');\r\n\r\n    return `${d}/${m}/${y} ${h}:${i}:${s}`;\r\n  }\r\n\r\n  convertMysqlTime(time: string): string {\r\n    if (time !== null) {\r\n      let timeSplit = time.split(':');\r\n\r\n      return `${timeSplit[0]}:${timeSplit[1]}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  convertToUrlDate(date: Date): string {\r\n    let d: any = date.getDate();\r\n    let m: any = date.getMonth() + 1;\r\n    let y: any = date.getFullYear();\r\n\r\n    if (d < 10) d = `0${d}`;\r\n    if (m < 10) m = `0${m}`;\r\n\r\n    return `${d}-${m}-${y}`;\r\n  }\r\n\r\n  convertStringToDate(stringDate: any, dateType: string): Date {\r\n    let date: Date;\r\n\r\n    if (stringDate.indexOf(':') > -1) {\r\n      const stringDateSplit = stringDate.split(' ');\r\n      const dateSplit = stringDateSplit[0].split('-');\r\n      const timeSplit = stringDateSplit[1].split(':');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2),\r\n          timeSplit[0],\r\n          timeSplit[1],\r\n          timeSplit[2]\r\n        );\r\n      }\r\n    } else {\r\n      const dateSplit = stringDate.split('-');\r\n\r\n      if (dateType == 'latam') {\r\n        date = new Date(\r\n          dateSplit[2],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[0].substr(0, 2)\r\n        );\r\n      } else if (dateType == 'usa') {\r\n        date = new Date(\r\n          dateSplit[0],\r\n          parseInt(dateSplit[1]) - 1,\r\n          dateSplit[2].substr(0, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  formatWithSlashes(stringDate: any, dateType: string): string {\r\n    const dateSplit = stringDate.split('-');\r\n    let date: string;\r\n\r\n    if (dateType == 'latam') {\r\n      date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n    } else if (dateType == 'usa') {\r\n      date = `${dateSplit[1]}/${dateSplit[2]}/${dateSplit[0]}`;\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  addDaysToDate(date: Date, days: number): Date {\r\n    return new Date(date.setDate(date.getDate() + days));\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button (click)=\\\"onReset()\\\">\\r\\n    Limpiar\\r\\n  </button>\\r\\n  <button (click)=\\\"onFilter()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button [routerLink]=\\\"['../novo']\\\" >\\r\\n    Nuevo\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <advanced-filter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"nome\\\">Nombre</label>\\r\\n          <input\\r\\n            id=\\\"nome\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            placeholder=\\\"DIGITE...\\\" \\r\\n            formControlName=\\\"NM_REST_TRAN\\\" \\r\\n            (keyup.enter)=\\\"onFilter()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-3\\\">\\r\\n          <label for=\\\"status\\\">Status</label>\\r\\n          <select\\r\\n            name=\\\"status\\\"\\r\\n            id=\\\"status\\\"\\r\\n            class=\\\"form-control\\\">\\r\\n            <option value=\\\"\\\">Todos</option>\\r\\n            <option value=\\\"'1'\\\">Activo</option>\\r\\n            <option value=\\\"'0'\\\">Inactivo</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div  class=\\\"col-12 p-0 mt-3\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <table class=\\\"table table-sm table-hover custom-border border-left border-right border-bottom text-center table-fixed\\\">\\r\\n        <thead class=\\\"thead-light\\\">\\r\\n          <tr>\\r\\n            <th>Id</th>\\r\\n            <th>Nombre</th>\\r\\n            <th>Usuario</th>\\r\\n            <th width=\\\"70px\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let restricao of restricoes; let i = index\\\">\\r\\n            <td class=\\\"text-truncate\\\"  [ngClass]=\\\"restricao.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\"> {{ restricao.UUID }} </td>  \\r\\n            <td class=\\\"text-truncate\\\"> {{ restricao.NM_REST_TRAN }} </td>\\r\\n            <td class=\\\"text-truncate\\\"> \\r\\n              <span *ngIf=\\\"!restricao.DT_ATUA\\\">[{{ restricao.DT_INCL | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\r\\n              <span *ngIf=\\\"restricao.DT_ATUA\\\">[{{ restricao.DT_ATUA | date : 'dd/MM/yyyy HH:mm' }}]&nbsp;</span>\\r\\n              <span>({{ restricao.NR_MATR }})&nbsp; {{ restricao.NM_USUA }}</span>\\r\\n            </td>\\r\\n            <td class=\\\"align-middle\\\">\\r\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['../', restricao.UUID]\\\">\\r\\n                <i class=\\\"fas fa-edit\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\r\\n    <empty-result message=\\\"No se encontró información\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from 'src/app/core/not-found/not-found.component';\r\n\r\nimport { LogisticaRestricoesTransporteCadastroComponent } from './cadastro/cadastro.component';\r\nimport { LogisticaRestricoesTransporteListaComponent } from './lista/lista.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaRestricoesTransporteListaComponent,\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaRestricoesTransporteCadastroComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaRestricoesTransporteCadastroComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogisticaRestricoesTransporteRoutingModule { }\r\n","import { ConfirmModalService } from 'src/app/shared/modules/confirm-modal/confirm-modal.service';\r\n// angular\r\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n// services\r\nimport { LogisticaEntergaRestricoesService } from '../services/restricoes.service';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\n\r\n// rxjs\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LogisticaEntradaMateriaisService } from '../../../entrada-materiais/services/entrada-materiais.service';\r\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\r\n\r\n@Component({\r\n  selector: 'logistica-restricoes-transporte-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class LogisticaRestricoesTransporteCadastroComponent implements OnInit {\r\n\r\n  appTitle = \"registrar\";\r\n\r\n  form: FormGroup;\r\n  formMateriais: FormGroup;\r\n\r\n  status = [\r\n    {\r\n      \"id\": 1,\r\n      \"nome\": \"activo\",\r\n      \"valor\": 1\r\n    },\r\n    {\r\n      \"id\": 0,\r\n      \"nome\": \"inactivo\",\r\n      \"valor\": 0\r\n    }\r\n  ]\r\n\r\n  breadCrumbTree: any = [];\r\n  idSubModulo: number;\r\n  $subscription: Subscription;\r\n\r\n  /*loading*/\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  noResult = true;\r\n  /*loading*/\r\n\r\n  materiais = [];\r\n  materiaisLoading = false;\r\n\r\n  materiaisAssociados = [];\r\n  materiaisAssociadosLoading = false;\r\n\r\n  tableConfigMateriaisAssociados: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n    hover: false,\r\n  };\r\n\r\n  tableConfigMateriais: Partial<CustomTableConfig> = {\r\n    fixedHeader: false,\r\n    bodyHeight: 243,\r\n  };\r\n\r\n  toggle = {\r\n    materiais: false,\r\n    materiaisAssociados: false\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private restricaoService: LogisticaEntergaRestricoesService,\r\n    private pnotify: PNotifyService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private atividadesService: AtividadesService,\r\n    private confirmModalService: ConfirmModalService\r\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      \"UUID\": [null],\r\n      \"NM_REST_TRAN\": [null, Validators.required],\r\n      \"IN_STAT\": [1, Validators.required],\r\n      \"NR_PRIO\": [null, Validators.required],\r\n      \"DS_OBSE\": [null]\r\n    });\r\n\r\n    this.formMateriais = this.formBuilder.group({\r\n      buscarPor: ['NM_MATE'],\r\n      pesquisa: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.atividadesService\r\n      .registrarAcesso()\r\n      .subscribe();\r\n    this.onActivatedRoute();\r\n    this.setBreadCrumb();\r\n  }\r\n\r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n\r\n    if (!params?.id){\r\n      this.loading = false;\r\n      return\r\n    }\r\n\r\n    this.getRestricao(params?.id);\r\n    this.getMateriaisAssociados({\"UUID_LOGI_REST_TRAN\": params?.id})\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica'\r\n      },\r\n      {\r\n        descricao: 'Cadastro',\r\n        routerLink: './../../'\r\n      },\r\n      {\r\n        descricao: 'Restricciones de transporte',\r\n        routerLink: '../'\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  onSave() {\r\n    this.loadingNavBar = true;\r\n    return this.restricaoService\r\n      .postRestricoes(this.form.value)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadingNavBar = false;\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.reset();\r\n            this.pnotify.success();\r\n            this.router.navigate([\"./../\"], {relativeTo: this.activatedRoute})\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error) => {\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      );\r\n  }\r\n\r\n  getRestricao(id) {\r\n    this.restricaoService\r\n      .getRestricao(id)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.form.patchValue(response.body['data']);\r\n          } else {\r\n            this.pnotify.error();\r\n          }\r\n        },\r\n        (error) => {\r\n          this.pnotify.error();\r\n        }\r\n      )\r\n  }\r\n\r\n  getMateriais(){\r\n\r\n    const buscarPor = this.formMateriais.get('buscarPor')?.value;\r\n    const pesquisa = this.formMateriais.get('pesquisa')?.value;\r\n\r\n    let params = {};\r\n\r\n    if(buscarPor){\r\n      params[buscarPor] = pesquisa ?? '';\r\n    }\r\n\r\n    this.toggle.materiais = false;\r\n\r\n    this.materiaisLoading = true\r\n\r\n    this.restricaoService\r\n      .getMateriais(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.materiaisLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n\r\n          if(response.status !== 200){\r\n            this.materiais = [];\r\n            return\r\n          }\r\n\r\n          let materiais = response.body['data'];\r\n\r\n          this.materiais = materiais.filter(material => {\r\n            return !this.materiaisAssociados.some(item => item.UUID_MATE == material.UUID)\r\n          })\r\n\r\n          this.tableConfigMateriais.fixedHeader = this.materiais.length > 9 ? true : false;\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  getMateriaisAssociados(params){\r\n\r\n    params.IN_STAT = '1';\r\n    params.IN_PAGI = '1';\r\n    params.ORDE_BY = 'ID_REFE_ERP'\r\n\r\n    this.materiaisAssociadosLoading = true;\r\n\r\n    this.restricaoService\r\n      .getMateriaisAssociados(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.materiaisAssociadosLoading = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          if(response.status !== 200){\r\n            this.materiaisAssociados = [];\r\n            return\r\n          }\r\n\r\n          this.materiaisAssociados = response.body['data'];\r\n          this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\r\n        }\r\n      )\r\n  }\r\n\r\n  onAssociarMateriais(){\r\n\r\n    let materiais = this.materiais.filter(material => material.checked);\r\n    this.toggle.materiais = false;\r\n\r\n    materiais.map(item => {\r\n\r\n      item.loading = true;\r\n\r\n      if(this.materiaisAssociados.some(material => material?.ID_REFE_ERP === item.ID_REFE_ERP)){\r\n        return\r\n      }\r\n\r\n      let params = {\r\n        \"UUID_LOGI_REST_TRAN\": this.form.get(\"UUID\").value ?? \"\",\r\n        \"UUID_MATE\": item?.UUID ?? \"\",\r\n        \"IN_STAT\": \"1\"\r\n      }\r\n\r\n      this.restricaoService\r\n        .postMateriaisAssociados(params)\r\n        .subscribe(\r\n          response => {\r\n            if(response.status === 200){\r\n\r\n              this.materiaisAssociados = [...this.materiaisAssociados,\r\n                {\r\n                  ...item,\r\n                  checked: false,\r\n                  loading: false,\r\n                  UUID_MATE: item.UUID,\r\n                  UUID_LOGI_REST_TRAN: this.form.get(\"UUID\").value\r\n                }\r\n              ];\r\n\r\n              this.materiais = this.materiais.filter(material => !material.checked)\r\n              this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\r\n\r\n            }\r\n          }\r\n        )\r\n    });\r\n\r\n  }\r\n\r\n  confirmDelete(): Observable<boolean> {\r\n    return this.confirmModalService.showConfirm(\r\n      'delete',\r\n      'Confirma la eliminación',\r\n      '¿Está seguro de que desea continuar con la eliminación del registro?',\r\n      'Cancelar',\r\n      'Confirmar'\r\n    );\r\n  }\r\n\r\n  onRemoverAssociacao(material?){\r\n\r\n    let materiais = material ? [material] : this.materiaisAssociados.filter(material => material.checked);\r\n    this.toggle.materiaisAssociados = false;\r\n\r\n    if(materiais.length == 0){\r\n      this.pnotify.notice(\"Ningún material seleccionado.\");\r\n      return\r\n    }\r\n\r\n    this.confirmDelete()\r\n      .subscribe(\r\n        (response: boolean) => {\r\n\r\n          if(!response){\r\n            return\r\n          }\r\n\r\n          materiais.map(item => {\r\n\r\n            item.IN_STAT = '0';\r\n            item.loading = true;\r\n\r\n            this.restricaoService\r\n              .postMateriaisAssociados(item)\r\n              .pipe(finalize(() => {\r\n                item.loading = false;\r\n              }))\r\n              .subscribe(\r\n                response => {\r\n\r\n                  if(response.status !== 200){\r\n                    return\r\n                  }\r\n\r\n                  this.materiaisAssociados = this.materiaisAssociados\r\n                    .filter(material => material.UUID_MATE != item.UUID_MATE);\r\n\r\n                  this.tableConfigMateriaisAssociados.fixedHeader = this.materiaisAssociados.length > 9 ? true : false;\r\n                }\r\n              )\r\n\r\n          })\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  onToggleAll(item: string){\r\n    this.toggle[item] = !this.toggle[item];\r\n    this[item].map(material => material.checked = this.toggle[item]);\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  // Validação de formulário\r\n\r\n}\r\n"]}