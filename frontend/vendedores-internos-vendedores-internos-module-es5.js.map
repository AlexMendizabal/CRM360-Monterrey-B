{"version":3,"sources":["webpack:///src/app/modules/comercial/comissoes/vendedores-internos/programacao-pagamentos/programacao-pagamentos.component.html","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/vendedores-internos.component.html","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/programacao-pagamentos/programacao-pagamentos.component.scss","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/programacao-pagamentos/programacao-pagamentos.component.ts","webpack:///src/app/shared/modules/confirm-modal/confirm-modal.service.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/vendedores-internos-routing.module.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/vendedores-internos.component.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/lancamento-metas/lancamento-metas.component.scss","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/vendedores-internos.component.scss","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/vendedores-internos.module.ts","webpack:///src/app/modules/comercial/comissoes/comissoes.service.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/lancamento-metas/lancamento-metas.component.ts","webpack:///src/app/modules/comercial/comissoes/vendedores-internos/lancamento-metas/lancamento-metas.component.html"],"names":["ComercialComissoesVendedoresInternosProgramacaoPagamentosComponent","activatedRoute","pnotifyService","localeService","router","atividadesService","titleService","vendedoresService","formBuilder","dateService","escritoriosService","comercialService","detailPanelService","dashboardService","authService","modalService","confirmModalService","comissoesService","user","getCurrentUser","loaderNavbar","loaderFullScreen","userMarketing","loadingModal","breadCrumbTree","showDetailPanel","subtitles","id","text","color","tableConfig","subtitleBorder","orderBy","orderType","profile","showPermissionDenied","vendedores","gerentes","maxSize","itemsPerPage","currentPage","totalItems","dados","dadosPagination","codComissao","situacao","codVendedor","nomeVendedor","codGerente","nomeGerente","dataProg","valorComissao","dadosLoaded","dadosEmpty","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","getPNotify","registrarAcesso","setBreadCrumb","getGerentes","getVendedores","setFormFilter","setTitle","setComissaoSelecionada","subscribe","params","descricao","routerLink","formValue","checkRouterParams","form","group","dataInicial","dataFinal","required","pagina","registros","getFirstDayMonth","getLastDayMonth","activatedRouteSubscription","queryParams","keys","length","atob","q","JSON","parse","search","forEach","formKey","paramKey","convertStringToDate","isNaN","Number","unsubscribe","valid","value","setRouterParams","verificaParams","navigate","relativeTo","btoa","stringify","column","onFilter","event","startItem","page","endItem","slice","scrollToFilter","nativeElement","scrollIntoView","behavior","response","responseCode","result","unshift","nome","getListaCoordenadoresEscritorios","coordenadores","comissao","borderClass","comissaoSelecionada","template","lista","modalRef","show","animated","index","confirmPagar","asObservable","pipe","pagarComissao","success","refreshMainData","error","showConfirm","hide","i","selector","ConfirmModalService","type","title","message","cancelTxt","okTxt","ignoreBackdropClick","keyboard","content","messageAlerts","confirmResult","providedIn","routes","path","component","children","loadChildren","then","m","ComercialComissoesVendedoresInternosGestaoComissionamentosModule","ComercialComissoesVendedoresInternosRoutingModule","imports","forChild","exports","ComercialComissoesVendedoresInternosComponent","location","appTitle","ComercialComissoesVendedoresInternosModule","declarations","forRoot","providers","ComercialComissoesService","http","API","emAberto","getAberto","transferidos","getTransferidos","emLiberacao","getLiberacao","aguardandoFaturamento","getFaturamento","aguardandoEntrega","getEntrega","httpParams","param","append","get","ComercialComissoesVendedoresInternosLancamentoMetasComponent","vendedoresTotal","escritorios","filteredVendedores","descReprov","metas","getPerfil","getFiltersValues","onDetailPanelEmitter","loadingFilterValues","showDetailPanelSubscription","config","showing","metaClientes","metaCliente","metaCivil","metaFaturamento","checkValuesEscritorio","controls","enable","console","log","getEscritorios","disable","escritorio","reset","setValue","filter","idEscritorio","idClasse","nomeClasse","onChangeVendedores","onChangeEscritorio","next","coordenador","gestor","vendedor","anoPassado","clientes","meta","extras","toneladas","passado","corrente","loadedFinished","getMetas","setTimeout","hasOwnProperty","test","mensagem","nomeClassificacao"],"mappings":"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","file":"vendedores-internos-vendedores-internos-module-es5.js","sourcesContent":["export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Programação de Pagamentos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg\\\">\\n              <label for=\\\"dataInicial\\\">Data inicial</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"dataInicial\\\"\\n                  type=\\\"text\\\"\\n                  bsDatepicker\\n                  [bsConfig]=\\\"bsConfig\\\"\\n                  formControlName=\\\"dataInicial\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-lg\\\">\\n              <label for=\\\"dataFinal\\\">Data final</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"dataFinal\\\"\\n                  type=\\\"text\\\"\\n                  bsDatepicker\\n                  [bsConfig]=\\\"bsConfig\\\"\\n                  formControlName=\\\"dataFinal\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-lg-5\\\">\\n              <label for=\\\"codGerente\\\">Gerente</label>\\n              <ng-select\\n                [items]=\\\"gerentes\\\"\\n                labelForId=\\\"codGerente\\\"\\n                formControlName=\\\"codGerente\\\"\\n                bindValue=\\\"matricula\\\"\\n                bindLabel=\\\"nome\\\"\\n                [virtualScroll]=\\\"true\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-3\\\">\\n              <label for=\\\"situacao\\\">Situação</label>\\n              <select\\n                class=\\\"form-control custom-select\\\"\\n                id=\\\"situacao\\\"\\n                formControlName=\\\"situacao\\\">\\n                <option value=\\\"\\\">Todos</option>\\n                <option value=\\\"1\\\">Pago</option>\\n                <option value=\\\"0\\\">PROGRAMADO</option>\\n                <option value=\\\"2\\\">AGUARDANDO PROGRAMAÇÃO</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row text-center justify-content-center\\\">\\n    <div class=\\\"col\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Cod. Vendedor</th>\\n            <th scope=\\\"col\\\">Vendedor</th>\\n            <th scope=\\\"col\\\">Gerente</th>\\n            <th scope=\\\"col\\\">Valor da Comissão</th>\\n            <th scope=\\\"col\\\">Data Programada</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let lista of dadosPagination; let i = index\\\" [class.table-active]=\\\"lista.codVendedor == comissaoSelecionada.codVendedor\\\">\\n            <td [ngClass]=\\\"classStatusBorder(lista)\\\">\\n              {{ lista.codVendedor}}\\n            </td>\\n            <td>\\n              {{ lista.nomeVendedor | uppercase }}\\n            </td>\\n            <td>\\n              {{ lista.nomeGerente | uppercase }}\\n            </td>\\n            <td>\\n              {{ lista.valorComissao | currency:'BRL':'symbol':'1.2-2' }} \\n            </td>\\n            <td>\\n              {{ lista.dataProg | uppercase }}\\n            </td>\\n            <td class=\\\"row text-center justify-content-center\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" *ngIf=\\\"lista.situacao == 2\\\" (click)=\\\"openModal(programarPag, lista)\\\">\\n                Programar\\n              </button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm\\\" *ngIf=\\\"lista.situacao == 0\\\" (click)=\\\"onPagar(i, lista)\\\">\\n                Confirmar\\n              </button>\\n              <button type=\\\"button\\\" tooltip=\\\"Comissão Paga\\\" class=\\\"btn btn-sm btn-outline-success disabled\\\" *ngIf=\\\"lista.situacao == 1\\\">\\n                <span><i class=\\\"far fa-check-circle green\\\"></i></span>\\n              </button>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n  <ng-template #programarPag>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Digite a data do pagamento do vendedor #{{comissaoSelecionada?.codVendedor}} - {{comissaoSelecionada?.nomeVendedor}} </h4>\\n      <div class=\\\"d-flex\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"col-12 \\\">\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n          <form [formGroup]=\\\"formData\\\" autocomplete=\\\"off\\\" [hidden] =\\\"comissaoSelecionada.situacao != 2\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n              <label for=\\\"dataProg\\\">Data Programada</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"dataProg\\\"\\n                  type=\\\"text\\\"\\n                  bsDatepicker\\n                  [bsConfig]=\\\"bsConfig\\\"\\n                  formControlName=\\\"dataProg\\\">\\n              </div>\\n            </div>\\n          </form>\\n        </div><br>\\n        <div  class=\\\"form-row justify-content-center\\\" [hidden] =\\\"comissaoSelecionada.situacao != 2\\\">\\n          <button \\n            type=\\\"button\\\" \\n            class=\\\"btn btn-sm mb-3\\\"\\n            (click)=\\\"onProgramar(comissaoSelecionada)\\\"\\n            \\n            >\\n            Confirmar\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</app-body>\\n\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<app-header appTitle=\\\"Vendedores Internos\\\"></app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <h5 class=\\\"pt-2 mb-4 text-center\\\">Selecione uma atividade</h5>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-9\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Lançamento de metas\\\"\\n            [routerLink]=\\\"['../../lancamento-metas']\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Gestão de Comissionamentos\\\"\\n            [routerLink]=\\\"['../../gestao-comissionamentos']\\\">\\n          </card-button>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <card-button\\n            icon=\\\"fas fa-chart-pie\\\"\\n            text=\\\"Programação de Pagamentos\\\"\\n            [routerLink]=\\\"['../../programacao-pagamentos']\\\">\\n          </card-button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy92ZW5kZWRvcmVzLWludGVybm9zL3Byb2dyYW1hY2FvLXBhZ2FtZW50b3MvcHJvZ3JhbWFjYW8tcGFnYW1lbnRvcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { object } from '@amcharts/amcharts4/core';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\nimport { TitleService } from './../../../../../shared/services/core/title.service';\nimport { AtividadesService } from './../../../../../shared/services/requests/atividades.service';\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialGestaoAssociacoesCoordenadoresEscritoriosService } from '../../../gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service';\nimport { ComercialDashboardVendedorService } from '../../../dashboard/vendedor/vendedor.service';\nimport { ComercialComissoesService } from './../../comissoes.service';\nimport { AuthService } from './../../../../../shared/services/core/auth.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\n\n// Interfaces\nimport { IComissaoPagamentos } from './../models/comissao-pagamentos';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from './../../../../../shared/modules/breadcrumb/breadcrumb';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-comissoes-vendedores-internos-programacao-pagamentos',\n  templateUrl: './programacao-pagamentos.component.html',\n  styleUrls: ['./programacao-pagamentos.component.scss'],\n})\nexport class ComercialComissoesVendedoresInternosProgramacaoPagamentosComponent\n  implements OnInit\n{\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  private user = this.authService.getCurrentUser();\n\n  loaderNavbar = false;\n  //loaderFullScreen = true;\n  loaderFullScreen = false;\n\n  userMarketing: boolean = true;\n\n  loadingModal = false;\n  modalRef: BsModalRef;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Pago',\n      color: 'green',\n    },\n    {\n      id: 0,\n      text: 'Programado',\n      color: 'blue',\n    },\n    {\n      id: 2,\n      text: 'Aguardando Programação',\n      color: 'gray',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  form: FormGroup;\n  orderBy = 'codComissao';\n  orderType = 'ASC';\n\n  profile: any = {};\n  showPermissionDenied = false;\n  disable: boolean;\n\n  vendedores: Array<any> = [];\n  gerentes: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IComissaoPagamentos> = [];\n  dadosPagination: Array<IComissaoPagamentos> = [\n    {\n      codComissao: 1,\n      situacao: 1,\n      codVendedor: 1,\n      nomeVendedor: 'vendedor 1',\n      codGerente: 1,\n      nomeGerente: 'gerente 1',\n      dataProg: '12/11/2020',\n      valorComissao: 1000,\n    },\n    {\n      codComissao: 2,\n      situacao: 2,\n      codVendedor: 2,\n      nomeVendedor: 'vendedor 2',\n      codGerente: 2,\n      nomeGerente: 'gerente 2',\n      dataProg: null,\n      valorComissao: 2000,\n    },\n    {\n      codComissao: 3,\n      situacao: 0,\n      codVendedor: 3,\n      nomeVendedor: 'vendedor 3',\n      codGerente: 3,\n      nomeGerente: 'gerente 3',\n      dataProg: '12/11/2020',\n      valorComissao: 3000,\n    },\n  ];\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  comissaoSelecionada: IComissaoPagamentos;\n  test: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private pnotifyService: PNotifyService,\n    private localeService: BsLocaleService,\n    private router: Router,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private vendedoresService: ComercialVendedoresService,\n    private formBuilder: FormBuilder,\n    private dateService: DateService,\n    private escritoriosService: ComercialGestaoAssociacoesCoordenadoresEscritoriosService,\n    private comercialService: ComercialService,\n    private detailPanelService: DetailPanelService,\n    private dashboardService: ComercialDashboardVendedorService,\n    private authService: AuthService,\n    private modalService: BsModalService,\n    private confirmModalService: ConfirmModalService,\n    private comissoesService: ComercialComissoesService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getGerentes();\n    this.getVendedores();\n    this.setFormFilter();\n\n    this.titleService.setTitle('Programação de Pagamentos');\n\n    this.setComissaoSelecionada();\n  }\n\n  ngOnDestroy(): void {}\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Vendedores Internos',\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/vendedores-internos`,\n        },\n        {\n          descricao: 'Programação de Pagamentos',\n        },\n      ];\n    });\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dataInicial: [formValue.dataInicial],\n      dataFinal: [formValue.dataFinal],\n      codGerente: [formValue.codGerente, [Validators.required]],\n      situacao: [formValue.situacao, [Validators.required]],\n      dataProg: [formValue.dataProg, [Validators.required]],\n      pagina: [formValue.pagina],\n      registros: [this.itemsPerPage, Validators.required],\n      orderBy: [formValue.orderBy],\n      orderType: [formValue.orderType],\n    });\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n      codGerente: 0,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams.q);\n          params = JSON.parse(params);\n          this.search(params);\n\n          if (params['pagina']) {\n            this.currentPage = params['pagina'];\n          }\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onFilter() {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.dataInicial) {\n      params.dataInicial = this.form.value.dataInicial;\n    }\n\n    if (this.form.value.dataFinal) {\n      params.dataFinal = this.form.value.dataFinal;\n    }\n\n    if (this.form.value.codGerente) {\n      params.codGerente = this.form.value.codGerente;\n    }\n\n    if (this.form.value.situacao) {\n      params.situacao = this.form.value.situacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n    params.pagina = this.form.value.pagina;\n    params.registros = this.form.value.registros;\n\n    return params;\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n\n    this.dadosLoaded = true; //retirar\n    /* this.cotacoesService\n      .getCotacoes(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: JsonResponse) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n\n            this.totalItems = this.dados[0].qtdeRegistros;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false &&\n            response.hasOwnProperty('mensagem') &&\n            response.mensagem.length > 0 &&\n            response.mensagem !== null\n          ) {\n            this.pnotifyService.error(response.mensagem);\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      ); */\n  }\n\n  setOrderBy(column: string): void {\n    if (this.orderBy === column) {\n      if (this.orderType == 'DESC') {\n        this.orderType = 'ASC';\n      } else if (this.orderType == 'ASC') {\n        this.orderType = 'DESC';\n      }\n    } else {\n      this.orderBy = column;\n      this.orderType = 'ASC';\n    }\n\n    this.form.value.orderBy = this.orderBy;\n    this.form.value.orderType = this.orderType;\n\n    this.onFilter();\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  getVendedores(): void {\n    this.vendedoresService.getVendedores().subscribe((response: any) => {\n      if (response.responseCode === 200) {\n        this.vendedores = response.result;\n\n        this.vendedores.unshift({\n          id: 0,\n          nome: 'EXIBIR TODOS',\n        });\n      }\n    });\n  }\n\n  getGerentes(): void {\n    this.escritoriosService\n      .getListaCoordenadoresEscritorios()\n      .subscribe((response: any) => {\n        if (response.responseCode === 200) {\n          this.gerentes = response.result.coordenadores;\n\n          this.gerentes.unshift({\n            id: 0,\n            nome: 'EXIBIR TODOS',\n          });\n        }\n      });\n  }\n\n  classStatusBorder(comissao: IComissaoPagamentos): string {\n    let borderClass: string;\n\n    if (comissao.situacao === 1) {\n      borderClass = 'border-success';\n    } else if (comissao.situacao === 2) {\n      borderClass = 'border-secondary';\n    } else if (comissao.situacao === 0) {\n      borderClass = 'border-primary';\n    }\n\n    return borderClass;\n  }\n\n  setComissaoSelecionada(): void {\n    this.comissaoSelecionada = {\n      codComissao: null,\n      situacao: null,\n      codVendedor: null,\n      nomeVendedor: null,\n      codGerente: null,\n      nomeGerente: null,\n      dataProg: null,\n      valorComissao: null,\n    };\n  }\n\n  openModal(template: TemplateRef<any>, lista) {\n    this.loadingModal = true;\n    this.comissaoSelecionada = lista;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-lg text-align-center',\n    });\n  }\n\n  onPagar(index: number, lista: IComissaoPagamentos): void {\n    this.confirmPagar()\n      .asObservable()\n      .pipe(\n        take(1),\n        switchMap((result) =>\n          result ? this.pagarComissao(index, lista) : EMPTY\n        ),\n        finalize(() => {\n          this.loaderNavbar = false;\n        })\n      )\n      .subscribe(\n        (success: any) => {\n          this.pnotifyService.success();\n          this.refreshMainData(lista);\n        },\n        (error: any) => {\n          this.pnotifyService.error();\n          this.dadosPagination[index].situacao = 2;\n        }\n      );\n  }\n\n  confirmPagar(): any {\n    return this.confirmModalService.showConfirm(\n      null,\n      null,\n      'Deseja realmente confirmar o pagamento da comissão?',\n      'Cancelar',\n      'Confirmar'\n    );\n  }\n\n  pagarComissao(index: number, lista: IComissaoPagamentos): Observable<any> {\n    this.loaderNavbar = true;\n    this.dadosPagination[index].situacao = 1;\n    return;\n    //return this.materiaisGrupoService.pagarComissao(lista.codComissao);\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  onProgramar(index: number, lista: IComissaoPagamentos): void {\n    this.modalRef.hide();\n  }\n\n  refreshMainData(lista: IComissaoPagamentos): void {\n    for (let i = 0; i < this.dados.length; i++) {\n      if (lista.codComissao === this.dados[i].codComissao) {\n        this.dados[i].situacao = lista.situacao;\n        return;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmModalService {\n  constructor(private modalService: BsModalService) {}\n\n  showConfirm(\n    type: string,\n    title: string,\n    message: string,\n    cancelTxt?: string,\n    okTxt?: string\n  ) {\n    const modalRef = this.modalService.show(ConfirmModalComponent, {\n      animated: false,\n      ignoreBackdropClick: true,\n      keyboard: false,\n      class: 'confirm'\n    });\n\n    modalRef.content.type = type;\n    modalRef.content.title = title;\n    modalRef.content.message = message;\n\n    if (type === 'delete') {\n      modalRef.content.messageAlerts = [\n        \"Se eliminará toda la información relacionada.\",\n        \"Esta acción no se puede deshacer.\"\n      ];\n    }\n\n    if (type === 'inactivate') {\n      modalRef.content.messageAlerts = [\n        'Las informacion serán inactivadas.'\n      ];\n    }\n\n    if (cancelTxt) {\n      modalRef.content.cancelTxt = cancelTxt;\n    }\n\n    if (okTxt) {\n      modalRef.content.okTxt = okTxt;\n    }\n\n    // É uma boa prática tipar o retorno.\n    // Obs.: ao tipar o retorno é possível acessar o intellisense do serviço.\n    return (<ConfirmModalComponent>modalRef.content).confirmResult;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Guards\n// import { FormDeactivateGuard } from 'src/app/guards/form-deactivate.guard';\n\n// Components\nimport { ComercialComissoesVendedoresInternosComponent } from './vendedores-internos.component';\nimport { ComercialComissoesVendedoresInternosLancamentoMetasComponent } from './lancamento-metas/lancamento-metas.component';\nimport { ComercialComissoesVendedoresInternosProgramacaoPagamentosComponent } from './programacao-pagamentos/programacao-pagamentos.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialComissoesVendedoresInternosComponent,\n  },\n  {\n    path: 'lancamento-metas',\n    component: ComercialComissoesVendedoresInternosLancamentoMetasComponent,\n  },\n  {\n    path: 'gestao-comissionamentos',\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import(\n            './gestao-comissionamentos/gestao-comissionamentos.module'\n          ).then(\n            (m) =>\n              m.ComercialComissoesVendedoresInternosGestaoComissionamentosModule\n          ),\n      },\n    ],\n  },\n  {\n    path: 'programacao-pagamentos',\n    component: ComercialComissoesVendedoresInternosProgramacaoPagamentosComponent,\n  },\n  \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialComissoesVendedoresInternosRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\n\n@Component({\n  selector: 'comercial-comissoes-vendedores-internos',\n  templateUrl: './vendedores-internos.component.html',\n  styleUrls: ['./vendedores-internos.component.scss']\n})\nexport class ComercialComissoesVendedoresInternosComponent implements OnInit {\n  loaderNavbar: boolean = false;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n  appTitle: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pnotifyService: PNotifyService,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService\n  ) {\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit() {\n      this.registrarAcesso();\n      this.setBreadCrumb();\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n\n    this.appTitle = 'Vendedores Internos';\n    this.titleService.setTitle(this.appTitle)\n\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: '/comercial/home',\n      },\n      {\n        descricao: 'Comissões',\n        routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\n      },\n      {\n        descricao: this.appTitle,\n      },\n    ];\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy92ZW5kZWRvcmVzLWludGVybm9zL2xhbmNhbWVudG8tbWV0YXMvbGFuY2FtZW50by1tZXRhcy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2NvbWlzc29lcy92ZW5kZWRvcmVzLWludGVybm9zL3ZlbmRlZG9yZXMtaW50ZXJub3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng-brazil\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgBrazil } from 'ng-brazil';\n\n// PNotify\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\n\n// Modules\nimport { TemplatesModule } from './../../../../shared/templates/templates.module';\nimport { SharedModule } from './../../../../shared/modules/shared.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ComercialComissoesVendedoresInternosRoutingModule } from './vendedores-internos-routing.module';\nimport { ComercialComissoesVendedoresInternosGestaoComissionamentosModule } from './gestao-comissionamentos/gestao-comissionamentos.module';\n\n// Components\nimport { ComercialComissoesVendedoresInternosComponent } from './vendedores-internos.component';\nimport { ComercialComissoesVendedoresInternosLancamentoMetasComponent } from './lancamento-metas/lancamento-metas.component';\nimport { ComercialComissoesVendedoresInternosProgramacaoPagamentosComponent } from './programacao-pagamentos/programacao-pagamentos.component';\n\n@NgModule({\n  declarations: [\n    ComercialComissoesVendedoresInternosComponent,\n    ComercialComissoesVendedoresInternosLancamentoMetasComponent,\n    ComercialComissoesVendedoresInternosProgramacaoPagamentosComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    NgSelectModule,\n    TextMaskModule,\n    NgBrazil,\n    ComercialComissoesVendedoresInternosRoutingModule,\n    ComercialComissoesVendedoresInternosGestaoComissionamentosModule,\n    SharedModule,\n    TemplatesModule,\n  ],\n  providers: [PNotifyService],\n})\nexport class ComercialComissoesVendedoresInternosModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from '../comercial.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialComissoesService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/kanban`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n  ) {}\n\n  getCards(params): Observable<Object | JsonResponse> {\n    let emAberto = this.getAberto(params);\n    let transferidos = this.getTransferidos(params);\n    let emLiberacao = this.getLiberacao(params);\n    let aguardandoFaturamento = this.getFaturamento(params);\n    let aguardandoEntrega = this.getEntrega(params);\n\n    return forkJoin([\n      emAberto,\n      transferidos,\n      emLiberacao,\n      aguardandoFaturamento,\n      aguardandoEntrega\n    ]).pipe(take(1));\n  }\n\n  getAberto(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista/aberto`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getTransferidos(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista/transferidos`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getLiberacao(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista/liberacao`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getFaturamento(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista/faturamento`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getEntrega(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista/entrega`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n}\n","import { object } from '@amcharts/amcharts4/core';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Subscription, EMPTY, Observable } from 'rxjs';\nimport { take, switchMap, finalize } from 'rxjs/operators';\n\n// ngx-bootstrap\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { BsLocaleService, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from './../../../../../shared/services/core/pnotify.service';\nimport { TitleService } from './../../../../../shared/services/core/title.service';\nimport { AtividadesService } from './../../../../../shared/services/requests/atividades.service';\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { DetailPanelService } from './../../../../../shared/templates/detail-panel/detal-panel.service';\nimport { ComercialVendedoresService } from '../../../services/vendedores.service';\nimport { ComercialService } from '../../../comercial.service';\nimport { ComercialDashboardVendedorService } from '../../../dashboard/vendedor/vendedor.service';\nimport { ComercialComissoesService } from './../../comissoes.service';\nimport { AuthService } from './../../../../../shared/services/core/auth.service';\nimport { ConfirmModalService } from './../../../../../shared/modules/confirm-modal/confirm-modal.service';\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\n\n// Interfaces\nimport { IComissaoMetas } from './../models/comissao-metas';\nimport { CustomTableConfig } from './../../../../../shared/templates/custom-table/models/config';\nimport { Subtitles } from './../../../../../shared/modules/subtitles/subtitles';\nimport { Breadcrumb } from './../../../../../shared/modules/breadcrumb/breadcrumb';\n// import { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-comissoes-vendedores-internos-lancamento-metas',\n  templateUrl: './lancamento-metas.component.html',\n  styleUrls: ['./lancamento-metas.component.scss'],\n})\nexport class ComercialComissoesVendedoresInternosLancamentoMetasComponent\n  implements OnInit\n{\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n  private user = this.authService.getCurrentUser();\n\n  loaderNavbar = false;\n  //loaderFullScreen = true;\n  loaderFullScreen = false;\n\n  userMarketing: boolean = true;\n\n  loadingModal = false;\n  modalRef: BsModalRef;\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  showDetailPanelSubscription: Subscription;\n  showDetailPanel = false;\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Aprovada',\n      color: 'green',\n    },\n    {\n      id: 0,\n      text: 'Reprovada',\n      color: 'red',\n    },\n    {\n      id: 2,\n      text: 'Em aprovação',\n      color: 'blue',\n    },\n  ];\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true,\n  };\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  form: FormGroup;\n  orderBy = 'codClassificacao';\n  orderType = 'ASC';\n\n  profile: any = {};\n  showPermissionDenied = false;\n  disable: boolean;\n\n  vendedores: Array<any> = [];\n  vendedoresTotal: Array<any> = [];\n  escritorios: Array<any> = [];\n\n  filteredVendedores: Array<any> = [];\n\n  maxSize = 10;\n  itemsPerPage = 300;\n  currentPage = 1;\n  totalItems = 0;\n\n  dados: Array<IComissaoMetas> = [];\n  dadosPagination: Array<IComissaoMetas> = [\n    {\n      codComissao: 1,\n      situacao: 2,\n      codVendedor: 1,\n      nomeVendedor: 'vendedor 1vendedor 1vendedor 1',\n      codGerente: 1,\n      nomeGerente: 'gerente 1gerente 1',\n      descReprov: null,\n    },\n    {\n      codComissao: 2,\n      situacao: 2,\n      codVendedor: 2,\n      nomeVendedor: 'vendedor 2vendedor 2vendedor 2',\n      codGerente: 2,\n      nomeGerente: 'gerente 2gerente 2',\n      descReprov: null,\n    },\n  ];\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  metas: Array<any> = [];\n  comissaoSelecionada: IComissaoMetas;\n  test: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pnotifyService: PNotifyService,\n    private localeService: BsLocaleService,\n    private atividadesService: AtividadesService,\n    private titleService: TitleService,\n    private formBuilder: FormBuilder,\n    private dateService: DateService,\n    private vendedoresService: ComercialVendedoresService,\n    private escritoriosService: EscritoriosService,\n    private comercialService: ComercialService,\n    private detailPanelService: DetailPanelService,\n    private dashboardService: ComercialDashboardVendedorService,\n    private authService: AuthService,\n    private modalService: BsModalService,\n    private confirmModalService: ConfirmModalService,\n    private comissoesService: ComercialComissoesService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n    this.pnotifyService.getPNotify();\n  }\n\n  ngOnInit(): void {\n    this.registrarAcesso();\n    this.setBreadCrumb();\n    this.getPerfil();\n    this.getFiltersValues();\n    this.setFormFilter();\n    this.titleService.setTitle('Lançamento de Metas');\n    this.onDetailPanelEmitter();\n    this.setComissaoSelecionada();\n    this.loadingFilterValues();\n  }\n\n  ngOnDestroy(): void {\n    this.showDetailPanelSubscription.unsubscribe();\n  }\n\n  registrarAcesso(): void {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  onDetailPanelEmitter(): void {\n    this.showDetailPanelSubscription = this.detailPanelService.config.subscribe(\n      (event: any) => {\n        this.showDetailPanel = event.showing;\n      }\n    );\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Gestão',\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}`,\n        },\n        {\n          descricao: 'Vendedores Internos',\n          routerLink: `/comercial/comissoes/${params['idSubModulo']}/vendedores-internos`,\n        },\n        {\n          descricao: 'Lançamento de Metas',\n        },\n      ];\n    });\n  }\n\n  setFormFilter(): void {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dataInicial: [formValue.dataInicial],\n      dataFinal: [formValue.dataFinal],\n      codVendedor: [formValue.codVendedor],\n      codGerente: [formValue.codGerente],\n      pagina: [formValue.pagina],\n      registros: [this.itemsPerPage, Validators.required],\n      metaClientes: [formValue.metaCliente, [Validators.required]],\n      metaCivil: [formValue.metaCivil, [Validators.required]],\n      metaFaturamento: [formValue.metaFaturamento, [Validators.required]],\n    });\n\n    this.checkValuesEscritorio();\n  }\n\n  checkRouterParams(): Object {\n    let formValue = {\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n      codVendedor: 0,\n      codGerente: 0,\n      pagina: 1,\n      registros: this.itemsPerPage,\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params = atob(queryParams.q);\n          params = JSON.parse(params);\n          this.search(params);\n\n          if (params['pagina']) {\n            this.currentPage = params['pagina'];\n          }\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (formKey === 'dataInicial' || formKey === 'dataFinal') {\n                  formValue[formKey] = this.dateService.convertStringToDate(\n                    params[paramKey],\n                    'pt-br'\n                  );\n                } else {\n                  if (!isNaN(Number(params[paramKey]))) {\n                    formValue[formKey] = Number(params[paramKey]);\n                  } else {\n                    formValue[formKey] = params[paramKey];\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  onPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    this.dadosPagination = this.dados.slice(startItem, endItem);\n\n    this.scrollToFilter.nativeElement.scrollIntoView({\n      behavior: 'instant',\n    });\n  }\n\n  getFiltersValues(): void {\n    this.vendedoresService.getVendedores().subscribe((response: any) => {\n      if (response.responseCode === 200) {\n        this.vendedores = response.result;\n        this.vendedoresTotal = this.vendedores;\n        this.form.controls.codVendedor.enable();\n\n        console.log(this.vendedores); //retirar\n\n        this.vendedores.unshift({\n          id: 0,\n          nome: 'EXIBIR TODOS',\n        });\n      }\n    });\n\n    this.escritoriosService.getEscritorios().subscribe((response: any) => {\n      if (response.responseCode === 200) {\n        this.escritorios = response.result;\n        this.form.controls.codGerente.enable();\n\n        console.log(this.escritorios); //retirar\n\n        this.escritorios.unshift({\n          id: 0,\n          nome: 'EXIBIR TODOS',\n        });\n      }\n    });\n  }\n\n  loadingFilterValues() {\n    this.form.controls.codGerente.disable();\n    this.form.controls.codVendedor.disable();\n  }\n\n  onChangeEscritorio(escritorio: Array<any>, reset: boolean) {\n    if (reset) {\n      this.form.controls.codVendedor.reset();\n      this.form.controls.codVendedor.setValue(0);\n      this.form.controls.codVendedor.disable();\n      this.vendedores = this.vendedoresTotal;\n    }\n\n    this.form.controls.codVendedor.enable();\n\n    this.filteredVendedores = this.vendedores.filter(\n      (value: any) => value.idEscritorio == this.form.value.codGerente\n    );\n\n    console.log(this.filteredVendedores);\n\n    this.filteredVendedores.unshift({\n      idClasse: 0,\n      nomeClasse: 'EXIBIR TODOS',\n    });\n\n    this.onChangeVendedores();\n  }\n\n  onChangeVendedores(): void {\n    this.vendedores = this.filteredVendedores;\n  }\n\n  checkValuesEscritorio(): void {\n    if (\n      this.form.value.codGerente !== '' &&\n      this.form.value.codGerente !== null\n    ) {\n      this.onChangeEscritorio(this.form.value.codGerente, false);\n    }\n  }\n\n  getPerfil() {\n    this.comercialService\n      .getPerfil()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          if (response.responseCode === 200) {\n            this.profile = response.result;\n            console.log(this.user);\n            console.log(this.profile);\n\n            if (\n              this.profile.coordenador === true ||\n              this.profile.gestor === true\n            ) {\n              this.form.controls.codGerente.disable();\n              this.userMarketing = false; //alterar para visualizar a tela\n              console.log(this.userMarketing);\n            } else if (this.profile.vendedor === true) {\n              this.form.controls.codGerente.enable();\n            } else {\n              this.showPermissionDenied = true;\n            }\n          } else {\n            this.showPermissionDenied = true;\n          }\n        },\n        error: (error: any) => {\n          this.showPermissionDenied = true;\n        }\n      });\n  }\n\n  classStatusBorder(comissao: IComissaoMetas): string {\n    let borderClass: string;\n\n    if (comissao.situacao === 1) {\n      borderClass = 'border-success';\n    } else if (comissao.situacao === 2) {\n      borderClass = 'border-primary';\n    } else if (comissao.situacao === 0) {\n      borderClass = 'border-danger';\n    }\n\n    return borderClass;\n  }\n\n  setComissaoSelecionada(): void {\n    this.comissaoSelecionada = {\n      codComissao: null,\n      situacao: null,\n      codVendedor: null,\n      nomeVendedor: null,\n      codGerente: null,\n      nomeGerente: null,\n      descReprov: null,\n    };\n  }\n\n  onDetails(comissao: IComissaoMetas): void {\n    this.loaderNavbar = true;\n    this.detailPanelService.show();\n    this.setComissaoSelecionada();\n    this.comissaoSelecionada = comissao;\n    this.loaderNavbar = false; //retirar\n\n    this.metas = [\n      {\n        anoPassado: [\n          { clientes: { meta: 10 } },\n          { extras: { meta: 20 } },\n          { toneladas: { meta: 30 } },\n        ],\n        passado: [\n          { clientes: { meta: 11 } },\n          { extras: { meta: 21 } },\n          { toneladas: { meta: 31 } },\n        ],\n        corrente: [\n          { clientes: { meta: 12 } },\n          { extras: { meta: 22 } },\n          { toneladas: { meta: 32 } },\n        ],\n      },\n    ];\n\n    console.log(this.metas);\n    this.detailPanelService.loadedFinished(false); //retirar\n    \n    return;\n    this.dashboardService\n      .getMetas(comissao.codGerente, comissao.codVendedor)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.loaderNavbar = false;\n          }, 500);\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            // Não está vazio.\n            this.detailPanelService.loadedFinished(false);\n            this.metas = response;\n            console.log(this.metas);\n            console.log(this.test);\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            // Vazio.\n            this.detailPanelService.loadedFinished(true);\n          } else {\n            // Vazio e com possível erro.\n            this.pnotifyService.error();\n            this.detailPanelService.loadedFinished(true);\n          }\n        },\n        (error: any) => {\n          // Vazio e com erro.\n          this.detailPanelService.loadedFinished(true);\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      );\n  }\n\n  openModal(template: TemplateRef<any>, meta) {\n    this.loadingModal = true;\n    this.comissaoSelecionada = meta;\n    this.modalRef = this.modalService.show(template, {\n      animated: false,\n      class: 'modal-lg',\n    });\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  onSalvar(meta: Array<any>) {}\n\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.verificaParams());\n    }\n  }\n\n  setRouterParams(params: any): void {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  verificaParams(): Object {\n    let params: any = {};\n\n    if (this.form.value.nomeClassificacao) {\n      params.nomeClassificacao = this.form.value.nomeClassificacao;\n    }\n\n    if (this.form.value.situacao) {\n      params.situacao = this.form.value.situacao;\n    }\n\n    params.orderBy = this.form.value.orderBy;\n    params.orderType = this.form.value.orderType;\n\n    return params;\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dados = [];\n    this.dadosPagination = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = false;\n    this.detailPanelService.hide();\n\n    /* this.rankingClientesService\n      .getListaRanking(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe(\n        (response: any) => {\n          if (response.hasOwnProperty('success') && response.success === true) {\n            this.dados = response.data;\n            this.dadosPagination = this.dados.slice(0, this.itemsPerPage);\n            this.totalItems = this.dados.length;\n            this.dadosLoaded = true;\n          } else if (\n            response.hasOwnProperty('success') &&\n            response.success === false\n          ) {\n            this.dadosEmpty = true;\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      ); */\n  }\n\n  onAprovar() {}\n\n  onReprovar() {}\n}\n","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Lançamento de Metas\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loaderFullScreen\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-lg\\\">\\n              <label for=\\\"dataInicial\\\">Data inicial</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"dataInicial\\\"\\n                  type=\\\"text\\\"\\n                  bsDatepicker\\n                  [bsConfig]=\\\"bsConfig\\\"\\n                  formControlName=\\\"dataInicial\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-lg\\\">\\n              <label for=\\\"dataFinal\\\">Data final</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"dataFinal\\\"\\n                  type=\\\"text\\\"\\n                  bsDatepicker\\n                  [bsConfig]=\\\"bsConfig\\\"\\n                  formControlName=\\\"dataFinal\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codGerente\\\">Escritorio</label>\\n              <ng-select\\n                [items]=\\\"escritorios\\\"\\n                labelForId=\\\"codGerente\\\"\\n                formControlName=\\\"codGerente\\\"\\n                bindValue=\\\"codEscritorio\\\"\\n                bindLabel=\\\"nomeEscritorio\\\"\\n                (change)=\\\"onChangeEscritorio($event.id, true)\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n              <label for=\\\"codVendedor\\\">Vendedor</label>\\n              <ng-select\\n                [items]=\\\"vendedores\\\"\\n                labelForId=\\\"codVendedor\\\"\\n                formControlName=\\\"codVendedor\\\"\\n                bindValue=\\\"id\\\"\\n                bindLabel=\\\"nome\\\">\\n              </ng-select>\\n            </div>\\n            <div class=\\\"form-group col-lg-1\\\">\\n              <label for=\\\"registros\\\">Registros</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"registros\\\"\\n                formControlName=\\\"registros\\\">\\n                <option>25</option>\\n                <option>50</option>\\n                <option>100</option>\\n                <option>200</option>\\n                <option>300</option>\\n              </select>\\n            </div>\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div class=\\\"row text-center justify-content-center\\\">\\n    <div [ngClass]=\\\"{'col': !showDetailPanel, 'col-4 pr-0': showDetailPanel}\\\">\\n      <custom-table [config]=\\\"tableConfig\\\" *ngIf=\\\"dadosPagination.length > 0 && !dadosEmpty\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Cod. Vendedor</th>\\n            <th scope=\\\"col\\\">Vendedor</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\">Gerente</th>\\n            <th scope=\\\"col\\\" [hidden]=\\\"showDetailPanel\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>\\n          <tr *ngFor=\\\"let lista of dadosPagination; let i = index\\\" [class.table-active]=\\\"lista.codVendedor == comissaoSelecionada.codVendedor\\\">\\n            <td\\n              class=\\\"hover\\\"\\n              [ngClass]=\\\"classStatusBorder(lista)\\\"\\n              (click)=\\\"onDetails(lista)\\\">\\n              {{ lista.codVendedor}}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(lista)\\\">\\n              {{ lista.nomeVendedor | uppercase }}\\n            </td>\\n            <td\\n              class=\\\"hover\\\"\\n              (click)=\\\"onDetails(lista)\\\"\\n              [hidden]=\\\"showDetailPanel\\\">\\n              {{ lista.nomeGerente | uppercase }}\\n            </td>\\n            <td class=\\\"text-right\\\" [hidden]=\\\"showDetailPanel\\\">\\n              <span class=\\\"mr-3\\\" tooltip=\\\"Visualizar\\\" placement=\\\"left\\\" container=\\\"body\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-icon-sm\\\" (click)=\\\"onDetails(lista)\\\">\\n                  <i class=\\\"fas fa-eye\\\"></i>\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <empty-result\\n        message=\\\"Nenhuma informação encontrada\\\"\\n        class=\\\"my-3\\\"\\n        *ngIf=\\\"dadosEmpty\\\">\\n      </empty-result>\\n      <div class=\\\"d-flex justify-content-center mt-3\\\" *ngIf=\\\"totalItems > itemsPerPage && dadosLoaded\\\">\\n        <pagination\\n          [maxSize]=\\\"maxSize\\\"\\n          [(totalItems)]=\\\"totalItems\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n    <div class=\\\"col-8\\\" [hidden]=\\\"!showDetailPanel\\\">\\n      <detail-panel panelTitle=\\\"Metas\\\">\\n        <custom-table *ngIf=\\\"metas.length > 0\\\">\\n          <ng-template #thead let-thead>\\n            <tr>\\n              <th></th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Ano passado</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Mês passado</th>\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Atual</th>\\n            </tr>\\n          </ng-template>\\n          <ng-template #tbody let-tbody>\\n            <tr>\\n              <td class=\\\"text-center\\\"><strong>CLIENTES COM COMPRA</strong></td>\\n              <td class=\\\"text-center\\\">{{ metas[0].anoPassado[0].clientes.meta }}</td>\\n              <td class=\\\"text-center\\\">{{ metas[0].passado[0].clientes.meta }}</td>\\n              <td class=\\\"text-center\\\">{{ metas[0].corrente[0].clientes.meta }}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"text-center\\\"><strong>CIVIL</strong></td>\\n              <td class=\\\"text-center\\\">{{ metas[0].anoPassado[1].extras.meta }}</td>\\n              <td class=\\\"text-center\\\">{{ metas[0].passado[1].extras.meta }}</td>\\n              <td class=\\\"text-center\\\">{{ metas[0].corrente[1].extras.meta }}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"text-center\\\"><strong>FATURAMENTO TOTAL</strong></td>\\n              <td class=\\\"text-center\\\">{{ metas[0].anoPassado[2].toneladas.meta }}</td>\\n              <td class=\\\"text-center\\\">{{ metas[0].passado[2].toneladas.meta }}</td>\\n              <td class=\\\"text-center\\\">{{ metas[0].corrente[2].toneladas.meta }}</td>\\n            </tr>\\n          </ng-template>\\n        </custom-table>\\n        <br>\\n        <div *ngIf=\\\"!userMarketing\\\" >\\n          <div>\\n            <strong><p>PREENCHER METAS ATUAIS</p></strong>\\n            <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\"> \\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-4\\\">\\n                  <label for=\\\"metaClientes\\\">Clientes com compras</label>\\n                  <br>\\n                  <input type=\\\"text\\\"\\n                  id=\\\"metaClientes\\\"\\n                  formControlName=\\\"metaClientes\\\">\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                  <label for=\\\"metaCivil\\\">Civil</label>\\n                  <br>\\n                  <input type=\\\"text\\\"\\n                  id=\\\"metaCivil\\\"\\n                  formControlName=\\\"metaCivil\\\">\\n                </div>\\n                <div class=\\\"form-group col-4\\\">\\n                  <label for=\\\"metaFaturamento\\\">Faturamento total</label>\\n                  <br>\\n                  <input type=\\\"text\\\"\\n                  id=\\\"metaFaturamento\\\"\\n                  formControlName=\\\"metaFaturamento\\\">\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <br>\\n          <div class=\\\"justify-content-center\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-sm mb-3\\\"\\n              (click)=\\\"onSalvar()\\\">\\n              Salvar\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"userMarketing\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col justify-content-center\\\">\\n              <button\\n              type=\\\"button\\\"\\n              (click)=\\\"onAprovar()\\\"\\n              class=\\\"btn btn-sm btn-outline-success mb-3\\\"\\n              >\\n              Aprovar\\n              </button>\\n            </div>\\n              <div class=\\\"col justify-content-center\\\">\\n              <button\\n              type=\\\"button\\\"\\n              (click)=\\\"openModal(reprovarMeta, meta)\\\"\\n              class=\\\"btn btn-sm btn-outline-danger mb-3\\\"\\n              >\\n              Reprovar\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </detail-panel>\\n    </div>\\n  </div>\\n  <ng-template #reprovarMeta>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Descrição de Reprovação #{{comissaoSelecionada?.codVendedor}}</h4>\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"col-12\\\">\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\" [hidden] =\\\"comissaoSelecionada.situacao != 2\\\">\\n          <div class=\\\"form-row justify-content-center\\\">\\n            <div class=\\\"form-group col pl-0\\\">\\n              <label for=\\\"descReprov\\\" >Descrição:</label>\\n              <textarea \\n                class=\\\"form-control\\\" \\n                id=\\\"descReprov\\\" \\n                formControlName=\\\"descReprov\\\" \\n                rows=\\\"3\\\"\\n                [ngClass]=\\\"onFieldError('descReprov') + ' ' + onFieldRequired('descReprov')\\\">\\n              </textarea>\\n              <invalid-form-control [show]=\\\"onFieldInvalid('descReprov')\\\" message=\\\"Descrição é obrigatório e deve conter no mínimo 3 dígitos.\\\"></invalid-form-control>\\n            </div>\\n          </div>\\n        </form>\\n        <div  class=\\\"form-row justify-content-center text-center\\\" [hidden] =\\\"comissaoSelecionada.situacao != 2\\\">\\n          <button \\n            type=\\\"button\\\" \\n            class=\\\"btn btn-sm btn-outline-danger mb-3\\\"\\n            (click)=\\\"onReprovar(comissaoSelecionada)\\\"\\n            [disabled]=\\\"form.valid === false || loadergNavBar === false\\\"\\n            >\\n            Reprovar\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</app-body>\\n\";"]}