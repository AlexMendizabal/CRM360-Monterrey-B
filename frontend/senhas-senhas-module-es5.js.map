{"version":3,"sources":["webpack:///src/app/modules/logistica/senhas/services/senhas.service.ts","webpack:///src/app/modules/logistica/senhas/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/senhas/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/senhas/lista/lista.component.scss","webpack:///src/app/modules/logistica/senhas/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/senhas/senhas.module.ts","webpack:///src/app/modules/logistica/senhas/lista/lista.component.html","webpack:///src/app/modules/logistica/senhas/lista/lista.component.ts","webpack:///src/app/modules/logistica/senhas/senhas-routing.module.ts"],"names":["LogisticaSenhasService","http","API","params","get","observe","post","providedIn","LogisticaSenhasCadastroComponent","formBuilder","activatedRoute","location","atividadesService","pnotify","senhasService","appTitle","breadCrumbTree","loading","loadingNavBar","buildForm","registraAcesso","setBreadCrumb","onActivatedRoute","snapshot","hasOwnProperty","getSenhas","id","form","group","ID_LOGI_SENH","DS_SENH","DS_USUA","DS_APLC","IN_STAT","DS_OBSE","registrarAcesso","subscribe","descricao","routerLink","pipe","response","status","senha","body","patchValue","notice","error","message","postSenha","success","back","field","onFieldInvalid","touched","required","formControl","controls","validator","validationResult","selector","template","SenhasModule","declarations","imports","forRoot","LogisticaSenhasListaComponent","route","routerService","localeService","dateService","itemsPerPage","currentPage","totalItems","begin","end","senhas","noResult","tableConfig","subtitleBorder","subtitles","text","color","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","keys","length","getParams","DT_INIC","Date","DT_FINA","TT_REGI_PAGI","PAGI","TIME","getTime","ev","event","setValue","page","onSearch","_params","_obj","value","prop","convertToUrlDate","navigate","relativeTo","setBase64UrlParams","reset","routes","path","component","LogisticaSenhasModuleRouting","forChild","exports"],"mappings":"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","file":"senhas-senhas-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticaSenhasService {\n\n  private readonly API = environment.API;\n  \n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n\n  getSenhas(params?){\n    return this.http.get(`${this.API}/logistica/senhas`, {\n      params: params,\n      observe: \"response\"\n    })\n  }\n\n  postSenha(params){\n    return this.http.post(`${this.API}/logistica/senhas`, params, {\n      observe: \"response\"\n    })\n  }\n}\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"appTitle\\\">\\n  <button\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\n    (click) = \\\"postSenha(form.value)\\\"\\n    >Salvar</button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <form [formGroup]=\\\"form\\\" class=\\\"d-flex flex-column align-items-center\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"usuario\\\">Usuário</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"usuario\\\"\\n        formControlName=\\\"usuario\\\"\\n        placeholder=\\\"Digite...\\\"\\n        [ngClass]=\\\"onFieldRequired('DS_USUA')\\\"\\n        formControlName=\\\"DS_USUA\\\"\\n      />\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_USUA')\\\" message=\\\"Usuário é obrigatório.\\\"></invalid-form-control>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"senha\\\">Senha</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"senha\\\"\\n        formControlName=\\\"senha\\\"\\n        placeholder=\\\"Digite...\\\"\\n        [ngClass]=\\\"onFieldRequired('DS_SENH')\\\"\\n        formControlName=\\\"DS_SENH\\\"\\n      />\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_SENH')\\\" message=\\\"Senha é obrigatória.\\\"></invalid-form-control>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"aplicacao\\\">Aplicação</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"aplicacao\\\"\\n        formControlName=\\\"aplicacao\\\"\\n        placeholder=\\\"Digite...\\\"\\n        [ngClass]=\\\"onFieldRequired('DS_APLC')\\\"\\n        formControlName=\\\"DS_APLC\\\"\\n      />\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_SENH')\\\" message=\\\"Senha é obrigatória.\\\"></invalid-form-control>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"status\\\">Status</label>\\n      <select name=\\\"status\\\" class=\\\"form-control\\\" id=\\\"status\\\" formControlName=\\\"IN_STAT\\\">\\n        <option value=\\\"1\\\">Ativo</option>\\n        <option value=\\\"0\\\">Inativo</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group col-md-3\\\">\\n      <label for=\\\"observacao\\\">Observação</label>\\n      <textarea\\n        id=\\\"observacao\\\"\\n        rows=\\\"10\\\"\\n        formControlName=\\\"observacao\\\"\\n        placeholder=\\\"Digite...\\\"\\n        class=\\\"form-control\\\"\\n        formControlName=\\\"DS_OBSE\\\"\\n        >\\n      </textarea>\\n    </div>\\n  </form>\\n</app-body>\";","export default \"input {\\n  text-transform: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2Evc2VuaGFzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsK0JBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3Nlbmhhcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0e1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3Nlbmhhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute,  } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\nimport { LogisticaSenhasService } from '../services/senhas.service';\n\n@Component({\n  selector: 'logistica-senhas-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class LogisticaSenhasCadastroComponent implements OnInit {\n\n  form: FormGroup;\n\n  appTitle: string = \"Cadastro\";\n  breadCrumbTree: any = [];\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  /*loading*/\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private location: Location,\n    private atividadesService: AtividadesService,\n    private pnotify: PNotifyService,\n    private senhasService: LogisticaSenhasService\n    ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.registraAcesso()\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n  }\n  \n  onActivatedRoute() {\n    const params = this.activatedRoute.snapshot.params;\n    \n    if(!params.hasOwnProperty(\"id\")){\n      this.loading = false;\n      return\n    }\n\n    this.loading = true;\n\n    this.getSenhas({\"ID_LOGI_SENH\": params.id});\n\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_SENH: [null],\n      DS_SENH: [null],\n      DS_USUA: [null],\n      DS_APLC: [null],\n      IN_STAT: [1],\n      DS_OBSE: [null]\n    })\n  }\n\n  registraAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: 'Lista de senhas',\n        routerLink: './../'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getSenhas(params){\n    if (!this.loading)\n      this.loadingNavBar = true;\n\n    this.senhasService\n      .getSenhas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            const senha = response.body['data'][0];\n            this.form.patchValue(senha);\n          } else {\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\n          }\n        },\n        error => {\n          try{\n            this.pnotify.error(error.error.message);\n          }catch{\n            this.pnotify.error();\n          }\n        }\n      )\n  }\n\n  postSenha(params){\n\n    this.loadingNavBar = true;\n\n    this.senhasService\n      .postSenha(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.pnotify.success(response.body[\"message\"])\n            this.location.back();\n          } else {\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\n          }\n        },\n        error => {\n          try{\n            this.pnotify.error(error.error.message);\n          }catch{\n            this.pnotify.error();\n          }\n        }\n      )\n  }\n\n    // Validação de formulário\n    onFieldError(field: string) {\n      if (this.onFieldInvalid(field)) {\n        return 'is-invalid';\n      }\n      return '';\n    }\n  \n    onFieldInvalid(field: any) {\n      field = this.form.get(field);\n      return field.status == 'INVALID' && field.touched;\n    }\n  \n    onFieldRequired(field: string) {\n      let required = false;\n      let formControl = new FormControl();\n  \n      if (this.form.controls[field].validator) {\n        let validationResult = this.form.controls[field].validator(formControl);\n        required =\n          validationResult !== null && validationResult.required === true;\n      }\n  \n      if (required) {\n        return 'is-required';\n      }\n    }\n    // Validação de formulário\n\n}\n","import { NotFoundModule } from 'src/app/core/not-found/not-found.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LogisticaSenhasListaComponent } from './lista/lista.component';\nimport { LogisticaSenhasCadastroComponent } from './cadastro/cadastro.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { NgBrazil } from 'ng-brazil';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { LogisticaSenhasModuleRouting } from './senhas-routing.module';\n\n@NgModule({\n  declarations: [LogisticaSenhasListaComponent, LogisticaSenhasCadastroComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    LogisticaSenhasModuleRouting,\n    ReactiveFormsModule,\n    NgSelectModule,\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    TabsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PipesModule,\n    NotFoundModule,\n    ModuleWrapperModule,\n    SharedModule,\n    TemplatesModule,\n    NgBrazil,\n    TextMaskModule,\n  ]\n})\nexport class SenhasModule { }\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\n<app-header [appTitle]=\\\"this.appTitle\\\">\\n  <button (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button \\n  [disabled]=\\\"form.status == 'INVALID'\\\"\\n  (click)=\\\"onSearch()\\\">\\n    Filtrar\\n  </button>\\n  <button [routerLink]=\\\"['./novo']\\\" >\\n    Novo\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\n  <advanced-filter>\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\n      <div class=\\\"form-row\\\">\\n        <!-- <div class=\\\"form-group col\\\">\\n          <label for=\\\"dtInicial\\\">Data inicial</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\n              </span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dtInicial\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            placeholder=\\\"Digite...\\\"\\n            formControlName=\\\"DT_INIC\\\"\\n          />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"dtFinal\\\">Data Final</label>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\n              </span>\\n            </div>\\n            <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dtFinal\\\"\\n            type=\\\"text\\\"\\n            bsDatepicker\\n            [bsConfig]=\\\"bsConfig\\\"\\n            placeholder=\\\"Digite...\\\"\\n            formControlName=\\\"DT_FINA\\\"\\n          />\\n          </div>\\n        </div> -->\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"usuario\\\">Usuário</label>\\n          <input\\n            id=\\\"usuario\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"DS_USUA\\\"\\n            (keyup.enter)=\\\"onSearch()\\\">\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"senha\\\">Senha</label>\\n          <input\\n            id=\\\"senha\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"DS_SENH\\\"\\n            (keyup.enter)=\\\"onSearch()\\\">\\n        </div>\\n        <div class=\\\"form-group col\\\">\\n          <label for=\\\"aplicacao\\\">Aplicação</label>\\n          <input\\n            id=\\\"aplicacao\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            placeholder=\\\"DIGITE...\\\" \\n            formControlName=\\\"DS_APLC\\\"\\n            (keyup.enter)=\\\"onSearch()\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"itensPorPagina\\\">Registros</label>\\n          <select\\n            class=\\\"form-control custom-select\\\"\\n            (change)=\\\"setItensPerPage($event); onSearch()\\\"\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\n            >\\n            <option value=\\\"10\\\">10</option>\\n            <option value=\\\"25\\\">25</option>\\n            <option value=\\\"50\\\">50</option>\\n            <option value=\\\"100\\\">100</option>\\n            <option value=\\\"250\\\">250</option>\\n            <option value=\\\"500\\\">500</option>\\n          </select>\\n        </div>\\n      </div>\\n    </form>\\n  </advanced-filter>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <subtitles\\n        [data]=\\\"subtitles\\\"\\n        [show]=\\\"!noResult\\\">\\n      </subtitles>\\n    </div>\\n  </div>\\n  <div  class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\n    <div>\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th class=\\\"text-center\\\">Código</th>\\n            <th class=\\\"text-center\\\">Data de cadastro</th>\\n            <th class=\\\"text-center\\\">Usuário</th>\\n            <th class=\\\"text-center\\\">Senha</th>\\n            <th class=\\\"text-center\\\">Aplicação</th>\\n            <th class=\\\"text-left\\\"></th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>  \\n          <tr *ngFor=\\\"let item of senhas; let i = index\\\">\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"item.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\">{{ item.ID_LOGI_SENH | number: '6.0-0'}}</td>\\n            <td class=\\\"text-center\\\">{{ item.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</td>\\n            <td class=\\\"text-center\\\">{{ item.DS_USUA}}</td>\\n            <td class=\\\"text-center text-truncate\\\">{{ item.DS_SENH }}</td>\\n            <td class=\\\"text-center text-truncate\\\">{{ item.DS_APLC }}</td>\\n            <td class=\\\"text-right\\\">\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./' + item.ID_LOGI_SENH]\\\" routerLinkActive=\\\"router-link-active\\\" >\\n                <i class=\\\"far fa-edit\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n    </div>\\n    <div>\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n      <pagination\\n        [maxSize]=\\\"10\\\"\\n        [totalItems]=\\\"totalItems\\\"\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n        [boundaryLinks]=\\\"true\\\"\\n        [(ngModel)]=\\\"currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\"\\n        nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n  </div>\\n</app-body>\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { BsDatepickerConfig, BsLocaleService, PageChangedEvent } from 'ngx-bootstrap';\n\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n// models\nimport { ILogisticaSenha } from '../models/senha';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from './../../../../shared/templates/custom-table/models/config';\n\n// services\nimport { LogisticaSenhasService } from '../services/senhas.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RouterService } from './../../../../shared/services/core/router.service';\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\nimport { AtividadesService } from './../../../../shared/services/requests/atividades.service';\nimport { DateService } from './../../../../shared/services/core/date.service';\n\n@Component({\n  selector: 'logistica-senhas-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss']\n})\nexport class LogisticaSenhasListaComponent implements OnInit {\n\n  form: FormGroup;\n\n  appTitle: string = \"Lista de senhas\";\n  breadCrumbTree: any = [];\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  \n  /* Pagination */\n  itemsPerPage: number = 100;\n  currentPage: number = 1;\n  totalItems: any = 0;\n  begin: number = 0;\n  end: number = this.itemsPerPage;\n  /* Pagination */\n\n  senhas: ILogisticaSenha[] = [];\n\n  /*loading*/\n  loading = true;\n  loadingNavBar = false;\n  noResult = true;\n  /*loading*/\n\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: true\n  };\n\n  subtitles: Array<Subtitles> = [\n    {\n      id: 1,\n      text: 'Ativo',\n      color: 'green',\n    },\n    {\n      id: 2,\n      text: 'Inativo',\n      color: 'red',\n    },\n  ];\n\n  $activatedRouteSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private route: Router,\n    private routerService: RouterService,\n    private localeService: BsLocaleService,\n    private dateService: DateService,\n    private atividadesService: AtividadesService,\n    private pnotify: PNotifyService,\n    private senhasService: LogisticaSenhasService\n  ) { \n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.registraAcesso()\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n  }\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams\n      .subscribe(\n        (response) => {\n\n          let _response = this.routerService.getBase64UrlParams(response);\n\n          if (Object.keys(_response).length > 0)\n            this.form.patchValue(_response);\n\n          if (_response.hasOwnProperty('TT_REGI_PAGI'))\n            this.itemsPerPage = _response['TT_REGI_PAGI']\n\n          this.getSenhas(this.getParams())\n        }\n      )\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      ID_LOGI_SENH: [null],\n      DS_SENH: [null],\n      DS_USUA: [null],\n      DS_APLC: [null],\n      DT_INIC: [new Date()],\n      DT_FINA: [new Date()],\n      TT_REGI_PAGI: [100],\n      PAGI: [1],\n      TIME: [(new Date()).getTime()]\n    })\n  }\n\n  registraAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setBreadCrumb() {\n    this.breadCrumbTree = [\n      {\n        descricao: 'Logistica'\n      },\n      {\n        descricao: this.appTitle\n      }\n    ];\n  }\n\n  getSenhas(params){\n    if (!this.loading)\n      this.loadingNavBar = true;\n\n    this.senhasService\n      .getSenhas(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            this.senhas = response.body['data'];\n            this.totalItems = response.body['total'];\n            this.noResult = false;\n          } else {\n            this.senhas = [];\n            this.noResult = true;\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\n          }\n        },\n        error => {\n          this.senhas = [];\n          this.noResult = true;\n          this.pnotify.error();\n        }\n      )\n  }\n\n  setItensPerPage(ev): number {\n    this.itemsPerPage = ev;\n    return this.itemsPerPage;\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.form.get(\"PAGI\").setValue(event.page);\n    this.onSearch();\n  }\n  /* Paginação */\n\n  getParams() {\n\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop])\n        else\n          _params[prop] = _obj[prop]\n      }\n    }\n\n    return _params;\n\n  }\n\n  onSearch() {\n    this.form.get(\"TIME\").setValue((new Date()).getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\n    })\n  }\n\n  // Validação de formulário\n  onFieldError(field: string) {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n    return '';\n  }\n\n  onFieldInvalid(field: any) {\n    field = this.form.get(field);\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(field: string) {\n    let required = false;\n    let formControl = new FormControl();\n\n    if (this.form.controls[field].validator) {\n      let validationResult = this.form.controls[field].validator(formControl);\n      required =\n        validationResult !== null && validationResult.required === true;\n    }\n\n    if (required) {\n      return 'is-required';\n    }\n  }\n  // Validação de formulário\n\n  onReset(){\n    this.form.reset();\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from \"@angular/core\";\n\nimport { LogisticaSenhasListaComponent } from './lista/lista.component';\nimport { LogisticaSenhasCadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaSenhasListaComponent\n  },\n  {\n    path: 'novo',\n    component: LogisticaSenhasCadastroComponent\n  },\n  {\n    path: ':id',\n    component: LogisticaSenhasCadastroComponent\n  }\n]\n\n@NgModule({\n  imports:[RouterModule.forChild(routes)],\n  exports:[RouterModule]\n})\nexport class LogisticaSenhasModuleRouting{};"]}