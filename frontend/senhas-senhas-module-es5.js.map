{"version":3,"sources":["webpack:///src/app/modules/logistica/senhas/services/senhas.service.ts","webpack:///src/app/modules/logistica/senhas/cadastro/cadastro.component.html","webpack:///src/app/modules/logistica/senhas/cadastro/cadastro.component.scss","webpack:///src/app/modules/logistica/senhas/lista/lista.component.scss","webpack:///src/app/modules/logistica/senhas/cadastro/cadastro.component.ts","webpack:///src/app/modules/logistica/senhas/senhas.module.ts","webpack:///src/app/modules/logistica/senhas/lista/lista.component.html","webpack:///src/app/modules/logistica/senhas/lista/lista.component.ts","webpack:///src/app/modules/logistica/senhas/senhas-routing.module.ts"],"names":["LogisticaSenhasService","http","API","params","get","observe","post","providedIn","LogisticaSenhasCadastroComponent","formBuilder","activatedRoute","location","atividadesService","pnotify","senhasService","appTitle","breadCrumbTree","loading","loadingNavBar","buildForm","registraAcesso","setBreadCrumb","onActivatedRoute","snapshot","hasOwnProperty","getSenhas","id","form","group","ID_LOGI_SENH","DS_SENH","DS_USUA","DS_APLC","IN_STAT","DS_OBSE","registrarAcesso","subscribe","descricao","routerLink","pipe","response","status","senha","body","patchValue","notice","error","message","postSenha","success","back","field","onFieldInvalid","touched","required","formControl","controls","validator","validationResult","selector","template","SenhasModule","declarations","imports","forRoot","LogisticaSenhasListaComponent","route","routerService","localeService","dateService","itemsPerPage","currentPage","totalItems","begin","end","senhas","noResult","tableConfig","subtitleBorder","subtitles","text","color","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","$activatedRouteSubscription","unsubscribe","queryParams","_response","getBase64UrlParams","keys","length","getParams","DT_INIC","Date","DT_FINA","TT_REGI_PAGI","PAGI","TIME","getTime","ev","event","setValue","page","onSearch","_params","_obj","value","prop","convertToUrlDate","navigate","relativeTo","setBase64UrlParams","reset","routes","path","component","LogisticaSenhasModuleRouting","forChild","exports"],"mappings":"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","file":"senhas-senhas-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogisticaSenhasService {\r\n\r\n  private readonly API = environment.API;\r\n  \r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  getSenhas(params?){\r\n    return this.http.get(`${this.API}/logistica/senhas`, {\r\n      params: params,\r\n      observe: \"response\"\r\n    })\r\n  }\r\n\r\n  postSenha(params){\r\n    return this.http.post(`${this.API}/logistica/senhas`, params, {\r\n      observe: \"response\"\r\n    })\r\n  }\r\n}\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"appTitle\\\">\\r\\n  <button\\r\\n    [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n    (click) = \\\"postSenha(form.value)\\\"\\r\\n    >Salvar</button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <form [formGroup]=\\\"form\\\" class=\\\"d-flex flex-column align-items-center\\\" autocomplete=\\\"off\\\" [hidden] = \\\"loading\\\">\\r\\n    <div class=\\\"form-group col-md-3\\\">\\r\\n      <label for=\\\"usuario\\\">Usuário</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"usuario\\\"\\r\\n        formControlName=\\\"usuario\\\"\\r\\n        placeholder=\\\"Digite...\\\"\\r\\n        [ngClass]=\\\"onFieldRequired('DS_USUA')\\\"\\r\\n        formControlName=\\\"DS_USUA\\\"\\r\\n      />\\r\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_USUA')\\\" message=\\\"Usuário é obrigatório.\\\"></invalid-form-control>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-3\\\">\\r\\n      <label for=\\\"senha\\\">Senha</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"senha\\\"\\r\\n        formControlName=\\\"senha\\\"\\r\\n        placeholder=\\\"Digite...\\\"\\r\\n        [ngClass]=\\\"onFieldRequired('DS_SENH')\\\"\\r\\n        formControlName=\\\"DS_SENH\\\"\\r\\n      />\\r\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_SENH')\\\" message=\\\"Senha é obrigatória.\\\"></invalid-form-control>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-3\\\">\\r\\n      <label for=\\\"aplicacao\\\">Aplicação</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"aplicacao\\\"\\r\\n        formControlName=\\\"aplicacao\\\"\\r\\n        placeholder=\\\"Digite...\\\"\\r\\n        [ngClass]=\\\"onFieldRequired('DS_APLC')\\\"\\r\\n        formControlName=\\\"DS_APLC\\\"\\r\\n      />\\r\\n      <invalid-form-control [show]=\\\"onFieldInvalid('DS_SENH')\\\" message=\\\"Senha é obrigatória.\\\"></invalid-form-control>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-3\\\">\\r\\n      <label for=\\\"status\\\">Status</label>\\r\\n      <select name=\\\"status\\\" class=\\\"form-control\\\" id=\\\"status\\\" formControlName=\\\"IN_STAT\\\">\\r\\n        <option value=\\\"1\\\">Ativo</option>\\r\\n        <option value=\\\"0\\\">Inativo</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-3\\\">\\r\\n      <label for=\\\"observacao\\\">Observação</label>\\r\\n      <textarea\\r\\n        id=\\\"observacao\\\"\\r\\n        rows=\\\"10\\\"\\r\\n        formControlName=\\\"observacao\\\"\\r\\n        placeholder=\\\"Digite...\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"DS_OBSE\\\"\\r\\n        >\\r\\n      </textarea>\\r\\n    </div>\\r\\n  </form>\\r\\n</app-body>\";","export default \"input {\\n  text-transform: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2Evc2VuaGFzL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsK0JBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3Nlbmhhcy9jYWRhc3Ryby9jYWRhc3Ryby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0e1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL3Nlbmhhcy9saXN0YS9saXN0YS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute,  } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\r\nimport { AtividadesService } from 'src/app/shared/services/requests/atividades.service';\r\nimport { LogisticaSenhasService } from '../services/senhas.service';\r\n\r\n@Component({\r\n  selector: 'logistica-senhas-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class LogisticaSenhasCadastroComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  appTitle: string = \"Cadastro\";\r\n  breadCrumbTree: any = [];\r\n\r\n  /*loading*/\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  /*loading*/\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private location: Location,\r\n    private atividadesService: AtividadesService,\r\n    private pnotify: PNotifyService,\r\n    private senhasService: LogisticaSenhasService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.registraAcesso()\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n  \r\n  onActivatedRoute() {\r\n    const params = this.activatedRoute.snapshot.params;\r\n    \r\n    if(!params.hasOwnProperty(\"id\")){\r\n      this.loading = false;\r\n      return\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.getSenhas({\"ID_LOGI_SENH\": params.id});\r\n\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_SENH: [null],\r\n      DS_SENH: [null],\r\n      DS_USUA: [null],\r\n      DS_APLC: [null],\r\n      IN_STAT: [1],\r\n      DS_OBSE: [null]\r\n    })\r\n  }\r\n\r\n  registraAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica'\r\n      },\r\n      {\r\n        descricao: 'Lista de senhas',\r\n        routerLink: './../'\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getSenhas(params){\r\n    if (!this.loading)\r\n      this.loadingNavBar = true;\r\n\r\n    this.senhasService\r\n      .getSenhas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            const senha = response.body['data'][0];\r\n            this.form.patchValue(senha);\r\n          } else {\r\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\r\n          }\r\n        },\r\n        error => {\r\n          try{\r\n            this.pnotify.error(error.error.message);\r\n          }catch{\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  postSenha(params){\r\n\r\n    this.loadingNavBar = true;\r\n\r\n    this.senhasService\r\n      .postSenha(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.pnotify.success(response.body[\"message\"])\r\n            this.location.back();\r\n          } else {\r\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\r\n          }\r\n        },\r\n        error => {\r\n          try{\r\n            this.pnotify.error(error.error.message);\r\n          }catch{\r\n            this.pnotify.error();\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n    // Validação de formulário\r\n    onFieldError(field: string) {\r\n      if (this.onFieldInvalid(field)) {\r\n        return 'is-invalid';\r\n      }\r\n      return '';\r\n    }\r\n  \r\n    onFieldInvalid(field: any) {\r\n      field = this.form.get(field);\r\n      return field.status == 'INVALID' && field.touched;\r\n    }\r\n  \r\n    onFieldRequired(field: string) {\r\n      let required = false;\r\n      let formControl = new FormControl();\r\n  \r\n      if (this.form.controls[field].validator) {\r\n        let validationResult = this.form.controls[field].validator(formControl);\r\n        required =\r\n          validationResult !== null && validationResult.required === true;\r\n      }\r\n  \r\n      if (required) {\r\n        return 'is-required';\r\n      }\r\n    }\r\n    // Validação de formulário\r\n\r\n}\r\n","import { NotFoundModule } from 'src/app/core/not-found/not-found.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LogisticaSenhasListaComponent } from './lista/lista.component';\r\nimport { LogisticaSenhasCadastroComponent } from './cadastro/cadastro.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BsDatepickerModule, ModalModule, PaginationModule, TabsModule, TimepickerModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ModuleWrapperModule } from 'src/app/core/module-wrapper/module-wrapper.module';\r\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\r\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\r\nimport { NgBrazil } from 'ng-brazil';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { LogisticaSenhasModuleRouting } from './senhas-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [LogisticaSenhasListaComponent, LogisticaSenhasCadastroComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    LogisticaSenhasModuleRouting,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    PaginationModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    PipesModule,\r\n    NotFoundModule,\r\n    ModuleWrapperModule,\r\n    SharedModule,\r\n    TemplatesModule,\r\n    NgBrazil,\r\n    TextMaskModule,\r\n  ]\r\n})\r\nexport class SenhasModule { }\r\n","export default \"<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\r\\n<loader-spinner-navbar [hidden]=\\\"!loadingNavBar\\\"></loader-spinner-navbar>\\r\\n<app-header [appTitle]=\\\"this.appTitle\\\">\\r\\n  <button (click)=\\\"onReset()\\\">\\r\\n    Limpar\\r\\n  </button>\\r\\n  <button \\r\\n  [disabled]=\\\"form.status == 'INVALID'\\\"\\r\\n  (click)=\\\"onSearch()\\\">\\r\\n    Filtrar\\r\\n  </button>\\r\\n  <button [routerLink]=\\\"['./novo']\\\" >\\r\\n    Novo\\r\\n  </button>\\r\\n</app-header>\\r\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\">\\r\\n  <advanced-filter>\\r\\n    <form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <!-- <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"dtInicial\\\">Data inicial</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dtInicial\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            placeholder=\\\"Digite...\\\"\\r\\n            formControlName=\\\"DT_INIC\\\"\\r\\n          />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"dtFinal\\\">Data Final</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">\\r\\n                <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"dtFinal\\\"\\r\\n            type=\\\"text\\\"\\r\\n            bsDatepicker\\r\\n            [bsConfig]=\\\"bsConfig\\\"\\r\\n            placeholder=\\\"Digite...\\\"\\r\\n            formControlName=\\\"DT_FINA\\\"\\r\\n          />\\r\\n          </div>\\r\\n        </div> -->\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"usuario\\\">Usuário</label>\\r\\n          <input\\r\\n            id=\\\"usuario\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            placeholder=\\\"DIGITE...\\\" \\r\\n            formControlName=\\\"DS_USUA\\\"\\r\\n            (keyup.enter)=\\\"onSearch()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"senha\\\">Senha</label>\\r\\n          <input\\r\\n            id=\\\"senha\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            placeholder=\\\"DIGITE...\\\" \\r\\n            formControlName=\\\"DS_SENH\\\"\\r\\n            (keyup.enter)=\\\"onSearch()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col\\\">\\r\\n          <label for=\\\"aplicacao\\\">Aplicação</label>\\r\\n          <input\\r\\n            id=\\\"aplicacao\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            placeholder=\\\"DIGITE...\\\" \\r\\n            formControlName=\\\"DS_APLC\\\"\\r\\n            (keyup.enter)=\\\"onSearch()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"itensPorPagina\\\">Registros</label>\\r\\n          <select\\r\\n            class=\\\"form-control custom-select\\\"\\r\\n            (change)=\\\"setItensPerPage($event); onSearch()\\\"\\r\\n            formControlName=\\\"TT_REGI_PAGI\\\"\\r\\n            >\\r\\n            <option value=\\\"10\\\">10</option>\\r\\n            <option value=\\\"25\\\">25</option>\\r\\n            <option value=\\\"50\\\">50</option>\\r\\n            <option value=\\\"100\\\">100</option>\\r\\n            <option value=\\\"250\\\">250</option>\\r\\n            <option value=\\\"500\\\">500</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </advanced-filter>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <subtitles\\r\\n        [data]=\\\"subtitles\\\"\\r\\n        [show]=\\\"!noResult\\\">\\r\\n      </subtitles>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div  class=\\\"col-12 p-0\\\" [hidden] = \\\"loading || noResult\\\">\\r\\n    <div>\\r\\n      <custom-table [config]=\\\"tableConfig\\\">\\r\\n        <ng-template #thead let-thead>\\r\\n          <tr>\\r\\n            <th class=\\\"text-center\\\">Código</th>\\r\\n            <th class=\\\"text-center\\\">Data de cadastro</th>\\r\\n            <th class=\\\"text-center\\\">Usuário</th>\\r\\n            <th class=\\\"text-center\\\">Senha</th>\\r\\n            <th class=\\\"text-center\\\">Aplicação</th>\\r\\n            <th class=\\\"text-left\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template #tbody let-tbody>  \\r\\n          <tr *ngFor=\\\"let item of senhas; let i = index\\\">\\r\\n            <td class=\\\"text-center\\\" [ngClass]=\\\"item.IN_STAT == 1 ? 'border-success' : 'border-danger'\\\">{{ item.ID_LOGI_SENH | number: '6.0-0'}}</td>\\r\\n            <td class=\\\"text-center\\\">{{ item.DT_INCL | date: 'dd/MM/yyyy HH:mm'}}</td>\\r\\n            <td class=\\\"text-center\\\">{{ item.DS_USUA}}</td>\\r\\n            <td class=\\\"text-center text-truncate\\\">{{ item.DS_SENH }}</td>\\r\\n            <td class=\\\"text-center text-truncate\\\">{{ item.DS_APLC }}</td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n              <a class=\\\"btn-icon-sm\\\" [routerLink]=\\\"['./' + item.ID_LOGI_SENH]\\\" routerLinkActive=\\\"router-link-active\\\" >\\r\\n                <i class=\\\"far fa-edit\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </custom-table>\\r\\n    </div>\\r\\n    <div>\\r\\n      Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\r\\n      <pagination\\r\\n        [maxSize]=\\\"10\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChanged)=\\\"onPageChanged($event)\\\"\\r\\n        [(itemsPerPage)]=\\\"itemsPerPage\\\"\\r\\n        [boundaryLinks]=\\\"true\\\"\\r\\n        [(ngModel)]=\\\"currentPage\\\"\\r\\n        previousText=\\\"&lsaquo;\\\"\\r\\n        nextText=\\\"&rsaquo;\\\"\\r\\n        firstText=\\\"&laquo;\\\"\\r\\n        lastText=\\\"&raquo;\\\">\\r\\n      </pagination>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading || !noResult\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\" style=\\\"height: 250px\\\">\\r\\n    <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\r\\n  </div>\\r\\n</app-body>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { BsDatepickerConfig, BsLocaleService, PageChangedEvent } from 'ngx-bootstrap';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n// models\r\nimport { ILogisticaSenha } from '../models/senha';\r\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\r\nimport { CustomTableConfig } from './../../../../shared/templates/custom-table/models/config';\r\n\r\n// services\r\nimport { LogisticaSenhasService } from '../services/senhas.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RouterService } from './../../../../shared/services/core/router.service';\r\nimport { PNotifyService } from './../../../../shared/services/core/pnotify.service';\r\nimport { AtividadesService } from './../../../../shared/services/requests/atividades.service';\r\nimport { DateService } from './../../../../shared/services/core/date.service';\r\n\r\n@Component({\r\n  selector: 'logistica-senhas-lista',\r\n  templateUrl: './lista.component.html',\r\n  styleUrls: ['./lista.component.scss']\r\n})\r\nexport class LogisticaSenhasListaComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  appTitle: string = \"Lista de senhas\";\r\n  breadCrumbTree: any = [];\r\n\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  \r\n  /* Pagination */\r\n  itemsPerPage: number = 100;\r\n  currentPage: number = 1;\r\n  totalItems: any = 0;\r\n  begin: number = 0;\r\n  end: number = this.itemsPerPage;\r\n  /* Pagination */\r\n\r\n  senhas: ILogisticaSenha[] = [];\r\n\r\n  /*loading*/\r\n  loading = true;\r\n  loadingNavBar = false;\r\n  noResult = true;\r\n  /*loading*/\r\n\r\n  tableConfig: Partial<CustomTableConfig> = {\r\n    subtitleBorder: true\r\n  };\r\n\r\n  subtitles: Array<Subtitles> = [\r\n    {\r\n      id: 1,\r\n      text: 'Ativo',\r\n      color: 'green',\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Inativo',\r\n      color: 'red',\r\n    },\r\n  ];\r\n\r\n  $activatedRouteSubscription: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private route: Router,\r\n    private routerService: RouterService,\r\n    private localeService: BsLocaleService,\r\n    private dateService: DateService,\r\n    private atividadesService: AtividadesService,\r\n    private pnotify: PNotifyService,\r\n    private senhasService: LogisticaSenhasService\r\n  ) { \r\n    this.localeService.use('pt-br');\r\n    this.bsConfig = Object.assign(\r\n      {},\r\n      { containerClass: 'theme-dark-blue' },\r\n      { adaptivePosition: true },\r\n      { showWeekNumbers: false }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.registraAcesso()\r\n    this.setBreadCrumb();\r\n    this.onActivatedRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.$activatedRouteSubscription.unsubscribe();\r\n  }\r\n  onActivatedRoute() {\r\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams\r\n      .subscribe(\r\n        (response) => {\r\n\r\n          let _response = this.routerService.getBase64UrlParams(response);\r\n\r\n          if (Object.keys(_response).length > 0)\r\n            this.form.patchValue(_response);\r\n\r\n          if (_response.hasOwnProperty('TT_REGI_PAGI'))\r\n            this.itemsPerPage = _response['TT_REGI_PAGI']\r\n\r\n          this.getSenhas(this.getParams())\r\n        }\r\n      )\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      ID_LOGI_SENH: [null],\r\n      DS_SENH: [null],\r\n      DS_USUA: [null],\r\n      DS_APLC: [null],\r\n      DT_INIC: [new Date()],\r\n      DT_FINA: [new Date()],\r\n      TT_REGI_PAGI: [100],\r\n      PAGI: [1],\r\n      TIME: [(new Date()).getTime()]\r\n    })\r\n  }\r\n\r\n  registraAcesso() {\r\n    this.atividadesService.registrarAcesso().subscribe();\r\n  }\r\n\r\n  setBreadCrumb() {\r\n    this.breadCrumbTree = [\r\n      {\r\n        descricao: 'Logistica'\r\n      },\r\n      {\r\n        descricao: this.appTitle\r\n      }\r\n    ];\r\n  }\r\n\r\n  getSenhas(params){\r\n    if (!this.loading)\r\n      this.loadingNavBar = true;\r\n\r\n    this.senhasService\r\n      .getSenhas(params)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loading = false;\r\n          this.loadingNavBar = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          if (response.status === 200) {\r\n            this.senhas = response.body['data'];\r\n            this.totalItems = response.body['total'];\r\n            this.noResult = false;\r\n          } else {\r\n            this.senhas = [];\r\n            this.noResult = true;\r\n            this.pnotify.notice('Nenhum resultado para sua consulta.')\r\n          }\r\n        },\r\n        error => {\r\n          this.senhas = [];\r\n          this.noResult = true;\r\n          this.pnotify.error();\r\n        }\r\n      )\r\n  }\r\n\r\n  setItensPerPage(ev): number {\r\n    this.itemsPerPage = ev;\r\n    return this.itemsPerPage;\r\n  }\r\n\r\n  /* Paginação */\r\n  onPageChanged(event: PageChangedEvent): void {\r\n    this.form.get(\"PAGI\").setValue(event.page);\r\n    this.onSearch();\r\n  }\r\n  /* Paginação */\r\n\r\n  getParams() {\r\n\r\n    let _params = {};\r\n    let _obj = this.form.value;\r\n\r\n    for (let prop in _obj) {\r\n      if (_obj[prop]) {\r\n        if (_obj[prop] instanceof Date)\r\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop])\r\n        else\r\n          _params[prop] = _obj[prop]\r\n      }\r\n    }\r\n\r\n    return _params;\r\n\r\n  }\r\n\r\n  onSearch() {\r\n    this.form.get(\"TIME\").setValue((new Date()).getTime());\r\n    this.route.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: this.routerService.setBase64UrlParams(this.getParams())\r\n    })\r\n  }\r\n\r\n  // Validação de formulário\r\n  onFieldError(field: string) {\r\n    if (this.onFieldInvalid(field)) {\r\n      return 'is-invalid';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  onFieldInvalid(field: any) {\r\n    field = this.form.get(field);\r\n    return field.status == 'INVALID' && field.touched;\r\n  }\r\n\r\n  onFieldRequired(field: string) {\r\n    let required = false;\r\n    let formControl = new FormControl();\r\n\r\n    if (this.form.controls[field].validator) {\r\n      let validationResult = this.form.controls[field].validator(formControl);\r\n      required =\r\n        validationResult !== null && validationResult.required === true;\r\n    }\r\n\r\n    if (required) {\r\n      return 'is-required';\r\n    }\r\n  }\r\n  // Validação de formulário\r\n\r\n  onReset(){\r\n    this.form.reset();\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { LogisticaSenhasListaComponent } from './lista/lista.component';\r\nimport { LogisticaSenhasCadastroComponent } from './cadastro/cadastro.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LogisticaSenhasListaComponent\r\n  },\r\n  {\r\n    path: 'novo',\r\n    component: LogisticaSenhasCadastroComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: LogisticaSenhasCadastroComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports:[RouterModule.forChild(routes)],\r\n  exports:[RouterModule]\r\n})\r\nexport class LogisticaSenhasModuleRouting{};"]}