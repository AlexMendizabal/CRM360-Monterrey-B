{"version":3,"sources":["webpack:///src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte-routing.modulte.ts","webpack:///src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte.component.scss","webpack:///src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte.component.html","webpack:///src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte.component.ts","webpack:///src/app/modules/logistica/dashboards/conferencia-cte/conferencia-cte.module.ts"],"names":["routes","path","component","LogisticaDashboadsConferenciaCteRoutingModule","imports","forChild","exports","LogisticaDashboardsConferenciaCteComponent","route","pnotify","localeService","activatedRoute","conferenciaCteService","formBuilder","routerService","dateService","modalService","xlsxService","MASKS","dados","total","loading","loadingNavBar","tableConfig","subtitleBorder","isFixed","border","small","hover","theme","color","modoViewIncorretas","modoViewNaoEmitidas","relatorio","relatorioCache","colunas","inColunas","tipos","cod","nome","itemsPerPage","currentPage","begin","end","totalItems","keepOriginalOrder","a","b","key","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","buildForm","setBreadCrumb","onActivatedRoute","$activatedRouteSubscription","unsubscribe","hide","queryParams","subscribe","response","_response","getBase64UrlParams","form","patchValue","getConferencia","getParams","cnpjs","group","DS_STAT","DS_USUA","DT_INIC","getFirstDayMonth","required","DT_FINA","Date","PAGI","TT_REGI_PAGI","TIME","getTime","onFilter","id","snapshot","params","idSubModulo","breadCrumbTree","descricao","routerLink","template","modalRef","show","animated","ignoreBackdropClick","get","setValue","navigate","relativeTo","setBase64UrlParams","pipe","status","body","noResult","foreach","el","valor","quantidade","notice","error","conferencia","undefined","message","reset","_params","_obj","value","prop","convertToUrlDate","hasOwnProperty","length","cache","getRelatorioCache","values","columns","openModal","getRelatorio","config","getColumnsConfig","keys","promise","forEach","Promise","resolve","setRelatorioCache","colunms","column","getLocalStorageKey","localStorage","setItem","JSON","stringify","data","event","page","storage","getItem","parse","selector","LogisticaDashboardsConferenciaCteModule","declarations","forRoot"],"mappings":"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","file":"conferencia-cte-conferencia-cte-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {RouterModule, Routes } from '@angular/router'\n\nimport { LogisticaDashboardsConferenciaCteComponent } from './conferencia-cte.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogisticaDashboardsConferenciaCteComponent\n  }\n]\n\n@NgModule({\n  imports:[RouterModule.forChild(routes)],\n  exports:[RouterModule]\n})\nexport class LogisticaDashboadsConferenciaCteRoutingModule{}","export default \"li {\\n  list-style: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sb2dpc3RpY2EvZGFzaGJvYXJkcy9jb25mZXJlbmNpYS1jdGUvY29uZmVyZW5jaWEtY3RlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naXN0aWNhL2Rhc2hib2FyZHMvY29uZmVyZW5jaWEtY3RlL2NvbmZlcmVuY2lhLWN0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImxpe1xuICBsaXN0LXN0eWxlOiBub25lO1xufSJdfQ== */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loadingNavBar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loading\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Conferência de CTEs\\\">\\n  <!-- <button\\n    type=\\\"button\\\"\\n    (click)=\\\"getExport()\\\">\\n    Exportar\\n  </button> -->\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onReset()\\\">\\n    Limpar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" [show]=\\\"!loading\\\">\\n  <div class=\\\"row\\\" #scrollToFilter>\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-3\\\">\\n              <label for=\\\"empresa\\\">Data Inicial</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                  class=\\\"form-control\\\"\\n                  id=\\\"dataInicial\\\"\\n                  type=\\\"text\\\"\\n                  bsDatepicker\\n                  [bsConfig]=\\\"bsConfig\\\"\\n                  formControlName=\\\"DT_INIC\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-3\\\">\\n              <label for=\\\"empresa\\\">Data Final</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"DT_FINA\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"usuario\\\">Usuário de emissão do cte</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"DS_USUA\\\"\\n                placeholder=\\\"Nome ou matrícula\\\"\\n                (keyup.enter)=\\\"onFilter()\\\"\\n              >\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col\\\">\\n              <label for=\\\"cnpj\\\">CNPJ's não considerados</label>\\n              <input type=\\\"text\\\" formControlName=\\\"DS_REMV_CNPJ\\\" class=\\\"form-control\\\" (keyup.enter)=\\\"onFilter()\\\">\\n            </div>\\n          </div> -->\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-between\\\">\\n    <div class=\\\"col-lg-7\\\">\\n      <div [ngClass]=\\\"modoViewIncorretas != 1 ? 'card border-primary w-100 mb-5' : 'card border-danger w-100 mb-5' \\\">\\n        <div class=\\\"card-body\\\" >\\n          <div class=\\\"row\\\">\\n            <h5 [ngClass]=\\\"modoViewIncorretas != 1 ? 'card-title text-primary col' : 'card-title text-danger col' \\\">EMISSÕES INCORRETAS</h5>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-primary mr-3\\\"\\n                  (click)=\\\"getRelatorio(relatorioModal, 'EMISSOES_INCORRETAS')\\\"\\n                  >\\n                  <i class=\\\"fas fa-file-alt\\\"></i>\\n                  <span>Relatório</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div [hidden]=\\\"loading || !hasData('emissoesIncorretas')\\\">\\n            <custom-table\\n              [config]=\\\"tableConfig\\\"\\n            >\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th width=\\\"20%\\\">Tipo</th>\\n                  <th class=\\\"text-center\\\">Emitente</th>\\n                  <th class=\\\"text-center\\\">Destinatário</th>\\n                  <th class=\\\"text-center\\\">Tomador</th>\\n                  <th class=\\\"text-center\\\">Valor</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr>\\n                <tr *ngFor=\\\"let item of dados?.emissoesIncorretas?.dados\\\">\\n                  <td class=\\\"border-right\\\" width=\\\"20%\\\"><strong>{{ item?.descricao }}</strong></td>\\n                  <td class=\\\"text-center\\\">{{item?.emitente || 0}}</td>\\n                  <td class=\\\"text-center\\\">{{item?.destinatario || 0}}</td>\\n                  <td class=\\\"text-center\\\">{{item?.pagador || 0}}</td>\\n                  <td class=\\\"text-center\\\">{{item?.valor || 0}}</td>\\n                </tr>\\n                <tr >\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>TOTAL:</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{dados?.emissoesIncorretas?.total?.emitente || 0}}</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{dados?.emissoesIncorretas?.total?.destinatario || 0}}</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{dados?.emissoesIncorretas?.total?.pagador || 0}}</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{dados?.emissoesIncorretas?.total?.valor || 0}}</strong></td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          <div *ngIf=\\\"loading || !hasData('emissoesIncorretas')\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\">\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card border-primary w-100 mb-5\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <h5 class=\\\"card-title text-primary col\\\">NÃO EMITIDOS</h5>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-primary mr-3\\\"\\n                  (click)=\\\"getRelatorio(relatorioModal, 'NAO_EMITIDO')\\\"\\n                  >\\n                  <i class=\\\"fas fa-file-alt\\\"></i>\\n                  <span>Relatório</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div [hidden]=\\\"loading || !hasData('naoEmitidos')\\\">\\n            <custom-table [config]=\\\"tableConfig\\\">\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th width=\\\"25%\\\">Tipo</th>\\n                  <th class=\\\"text-center\\\">Quantidade</th>\\n                  <th class=\\\"text-center\\\">Valor</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>\\n                <tr *ngFor=\\\"let item of dados?.naoEmitidos?.dados\\\">\\n                  <td class=\\\"border-right\\\"><strong>{{ item?.descricao }}</strong></td>\\n                  <td class=\\\"text-center\\\">{{item?.quantidade}}</td>\\n                  <td class=\\\"text-center\\\">{{item?.valor || 0 | currency: 'BRL'}}</td>\\n                </tr>\\n                <tr>\\n                  <td class=\\\"bg-dark text-white\\\" style=\\\"width:160px;\\\"><strong>TOTAL:</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{dados?.naoEmitidos?.total?.quantidade}}</strong></td>\\n                  <td class=\\\"bg-dark text-white text-center\\\"><strong>{{dados?.naoEmitidos?.total?.valor | currency : 'BRL'}}</strong></td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          <div *ngIf=\\\"loading || !hasData('naoEmitidos')\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\">\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-5 border-left\\\">\\n      <div class=\\\"card w-100 mb-5\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <h5 class=\\\"card-title col\\\">DEMAIS EMISSÕES</h5>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"d-flex justify-content-end\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-outline-primary mr-3\\\"\\n                  (click)=\\\"getRelatorio(relatorioModal, 'DEMAIS_EMISSOES')\\\"\\n                  >\\n                  <i class=\\\"fas fa-file-alt\\\"></i>\\n                  <span>Relatório</span>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div [hidden]=\\\"loading || !hasData('demaisEmissoes')\\\">\\n            <custom-table [config]=\\\"tableConfig\\\" >\\n              <ng-template #thead let-thead>\\n                <tr>\\n                  <th>Filial</th>\\n                  <th>Quantidade</th>\\n                </tr>\\n              </ng-template>\\n              <ng-template #tbody let-tbody>  \\n                <tr *ngFor=\\\"let item of dados?.demaisEmissoes?.dados\\\">\\n                  <td\\n                    style=\\\"width:160px\\\"\\n                    class=\\\"border-right\\\"\\n                  >\\n                    {{item?.descricao}}\\n                  </td>\\n                  <td>{{item?.quantidade}}</td>\\n                </tr>\\n                <tr >\\n                  <td  class=\\\"bg-dark text-white\\\" style=\\\"width:160px;\\\"><strong>TOTAL:</strong></td>\\n                  <td class=\\\"bg-dark text-white\\\"><strong>{{dados?.demaisEmissoes?.total?.quantidade}}</strong></td>\\n                </tr>\\n              </ng-template>\\n            </custom-table>\\n          </div>\\n          <div *ngIf=\\\"loading || !hasData('demaisEmissoes')\\\" class=\\\"text-center d-flex justify-content-center align-items-center\\\">\\n            <empty-result message=\\\"Nenhuma informação encontrada\\\"></empty-result>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-body>\\n\\n\\n<ng-template #relatorioModal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Relatorio</h4>\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <div class=\\\"mb-2 d-flex justify-content-between\\\">\\n        <div>\\n          <span>Colunas</span>\\n          <button\\n            class=\\\"btn-icon-sm ml-2\\\"\\n            (click)=\\\"hideListColumns()\\\"\\n            >\\n            <i class=\\\"fas\\\" [ngClass]=\\\"{'fa-sort-up': !inColunas, 'fa-sort-down': inColunas}\\\"></i>\\n          </button>\\n        </div>\\n        <button\\n          class=\\\"btn btn-outline-primary\\\"\\n          (click)=\\\"export()\\\"\\n          >\\n          Exportar\\n        </button>\\n      </div>\\n      <ul *ngIf=\\\"inColunas\\\">\\n        <li *ngFor=\\\"let item of colunas | keyvalue : keepOriginalOrder\\\">\\n          <div class=\\\"custom-control custom-checkbox\\\">\\n            <input\\n              type=\\\"checkbox\\\"\\n              class=\\\"custom-control-input\\\"\\n              [checked]=\\\"item.value\\\"\\n              (change)=\\\"setColumnState(item)\\\"\\n              [id]=\\\"item.key\\\">\\n            <label class=\\\"custom-control-label\\\" [for]=\\\"item.key\\\">{{item.key}}</label>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n    <div style=\\\"display: block; overflow-x: auto;\\\">\\n      <custom-table [config]=\\\"tableConfig\\\">\\n        <ng-template #thead let-thead>\\n          <tr>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['TIPO']\\\">TIPO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_EMITENTE']\\\">CNPJ_EMITENTE</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_EMITENTE_CTRC']\\\">CNPJ_EMITENTE_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_DESTINATARIO']\\\">CNPJ_DESTINATARIO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_DESTINATARIO_CTRC']\\\">CNPJ_DESTINATARIO_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_PAGADOR']\\\">CNPJ_PAGADOR</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_PAGADOR_CTRC']\\\">CNPJ_PAGADOR_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['FRETE_PESO']\\\">FRETE_PESO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['FRETE_PESO_ARCELOR']\\\">FRETE_PESO_ARCELOR</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['DATA_EMISSAO']\\\">DATA_EMISSAO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['NOTA_FISCAL']\\\">NOTA_FISCAL</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PESO_NF']\\\">PESO_NF</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['VALOR_NF']\\\">VALOR_NF</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CHAVE_ACESSO_NF']\\\">CHAVE_ACESSO_NF</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CUSTO_FRETE_NF']\\\">CUSTO_FRETE_NF</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['HORA_IMPORTACAO']\\\">HORA_IMPORTACAO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CODIGO_CTRC']\\\">CODIGO_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['FILIAL_CTRC']\\\">FILIAL_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['SERIE_CTRC']\\\">SERIE_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['TIPOCTE']\\\">TIPOCTE</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['ALIQ_ICMS']\\\">ALIQ_ICMS</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['OBS_CTE']\\\">OBS_CTE</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CIDADE_EMITENTE_CTRC']\\\">CIDADE_EMITENTE_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CIDADE_DESTINATARIO_CTRC']\\\">CIDADE_DESTINATARIO_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['NOTA_FISCAL_CTRC']\\\">NOTA_FISCAL_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['SERIE_NOTA_FISCAL_CTRC']\\\">SERIE_NOTA_FISCAL_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PESO_NOTA_FISCAL_CTRC']\\\">PESO_NOTA_FISCAL_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['VALOR_NOTA_CTRC']\\\">VALOR_NOTA_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['TRASNPORTE_CTRC']\\\">TRASNPORTE_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_TRANSPORTADORA']\\\">CNPJ_TRANSPORTADORA</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PESO_DESCARREGADO']\\\">PESO_DESCARREGADO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['BRM']\\\">BRM</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['DATA_BRM']\\\">DATA_BRM</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PAGADOR_FRETE']\\\">PAGADOR_FRETE</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['INCLUSAO_CTRC']\\\">INCLUSAO_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['ENVIO_CTRC_ARCELOR']\\\">ENVIO_CTRC_ARCELOR</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['XML_CTRC']\\\">XML_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['SITUACAO_CTRC']\\\">SITUACAO_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['STATUS_ARCELOR']\\\">STATUS_ARCELOR</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['MENSAGEM']\\\">MENSAGEM</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['DATA_PAGAMENTO']\\\">DATA_PAGAMENTO</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['VALOR_FATURA']\\\">VALOR_FATURA</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['LOCAL_TRANSPORTE']\\\">LOCAL_TRANSPORTE</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['NOME_USUARIO_EMISSAO_CTRC']\\\">NOME_USUARIO_EMISSAO_CTRC</th>\\n            <th class=\\\"text-truncate\\\" *ngIf=\\\"colunas['MATRICULA_USUARIO_EMISSAO_CTRC']\\\">MATRICULA_USUARIO_EMISSAO_CTRC</th>\\n          </tr>\\n        </ng-template>\\n        <ng-template #tbody let-tbody>  \\n          <tr *ngFor=\\\"let item of relatorio | slice : begin : end;\\\">\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['TIPO']\\\">{{item?.TIPO}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_EMITENTE']\\\">{{item?.CNPJ_EMITENTE}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_EMITENTE_CTRC']\\\">{{item?.CNPJ_EMITENTE_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_DESTINATARIO']\\\">{{item?.CNPJ_DESTINATARIO}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_DESTINATARIO_CTRC']\\\">{{item?.CNPJ_DESTINATARIO_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_PAGADOR']\\\">{{item?.CNPJ_PAGADOR}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_PAGADOR_CTRC']\\\">{{item?.CNPJ_PAGADOR_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['FRETE_PESO']\\\">{{item?.FRETE_PESO | currency:'BRL'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['FRETE_PESO_ARCELOR']\\\">{{item?.FRETE_PESO_ARCELOR | currency:'BRL'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['DATA_EMISSAO']\\\">{{item?.DATA_EMISSAO | date : 'dd/MM/yyyy HH:mm'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['NOTA_FISCAL']\\\">{{item?.NOTA_FISCAL}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PESO_NF']\\\">{{item?.PESO_NF | number:'0.3-3'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['VALOR_NF']\\\">{{item?.VALOR_NF | currency:'BRL'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CHAVE_ACESSO_NF']\\\">{{item?.CHAVE_ACESSO_NF}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CUSTO_FRETE_NF']\\\">{{item?.CUSTO_FRETE_NF | currency:'BRL'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['HORA_IMPORTACAO']\\\">{{item?.HORA_IMPORTACAO}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CODIGO_CTRC']\\\">{{item?.CODIGO_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['FILIAL_CTRC']\\\">{{item?.FILIAL_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['SERIE_CTRC']\\\">{{item?.SERIE_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['TIPOCTE']\\\">{{item?.TIPOCTE}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['ALIQ_ICMS']\\\">{{item?.ALIQ_ICMS}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['OBS_CTE']\\\">{{item?.OBS_CTE}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CIDADE_EMITENTE_CTRC']\\\">{{item?.CIDADE_EMITENTE_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CIDADE_DESTINATARIO_CTRC']\\\">{{item?.CIDADE_DESTINATARIO_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['NOTA_FISCAL_CTRC']\\\">{{item?.NOTA_FISCAL_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['SERIE_NOTA_FISCAL_CTRC']\\\">{{item?.SERIE_NOTA_FISCAL_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PESO_NOTA_FISCAL_CTRC']\\\">{{item?.PESO_NOTA_FISCAL_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['VALOR_NOTA_CTRC']\\\">{{item?.VALOR_NOTA_CTRC | currency:'BRL'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['TRASNPORTE_CTRC']\\\">{{item?.TRASNPORTE_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['CNPJ_TRANSPORTADORA']\\\">{{item?.CNPJ_TRANSPORTADORA}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PESO_DESCARREGADO']\\\">{{item?.PESO_DESCARREGADO}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['BRM']\\\">{{item?.BRM}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['DATA_BRM']\\\">{{item?.DATA_BRM}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['PAGADOR_FRETE']\\\">{{item?.PAGADOR_FRETE}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['INCLUSAO_CTRC']\\\">{{item?.INCLUSAO_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['ENVIO_CTRC_ARCELOR']\\\">{{item?.ENVIO_CTRC_ARCELOR}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['XML_CTRC']\\\">{{item?.XML_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['SITUACAO_CTRC']\\\">{{item?.SITUACAO_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['STATUS_ARCELOR']\\\">{{item?.STATUS_ARCELOR}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['MENSAGEM']\\\">{{item?.MENSAGEM}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['DATA_PAGAMENTO']\\\">{{item?.DATA_PAGAMENTO}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['VALOR_FATURA']\\\">{{item?.VALOR_FATURA | currency:'BRL'}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['LOCAL_TRANSPORTE']\\\">{{item?.LOCAL_TRANSPORTE}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['NOME_USUARIO_EMISSAO_CTRC']\\\">{{item?.NOME_USUARIO_EMISSAO_CTRC}}</td>\\n            <td class=\\\"text-truncate\\\" *ngIf=\\\"colunas['MATRICULA_USUARIO_EMISSAO_CTRC']\\\">{{item?.MATRICULA_USUARIO_EMISSAO_CTRC}}</td>\\n          </tr>\\n        </ng-template>\\n      </custom-table>\\n      <div class=\\\"mt-3 col p-0\\\" [hidden]=\\\"noResult\\\">\\n        Exibindo {{ itemsPerPage*(currentPage - 1) + 1 }} a {{ currentPage*(itemsPerPage) > totalItems ? totalItems : currentPage*(itemsPerPage) }} de {{ totalItems }}\\n        <pagination\\n          [maxSize]=\\\"5\\\"\\n          [totalItems]=\\\"totalItems\\\"\\n          [(itemsPerPage)]=\\\"itemsPerPage\\\"\\n          (pageChanged)=\\\"onPageChanged($event)\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n          [(ngModel)]=\\\"currentPage\\\"\\n          previousText=\\\"&lsaquo;\\\"\\n          nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\"\\n          lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\";","//angular\nimport { Component, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n//servicos\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { RouterService } from 'src/app/shared/services/core/router.service';\nimport { LogisticaDashboardConferenciaCteService } from './conferencia-cte.service';\nimport { XlsxService } from './../../../../shared/services/core/xlsx.service';\n\nimport { BsDatepickerConfig, BsLocaleService, BsModalRef, BsModalService, PageChangedEvent } from 'ngx-bootstrap';\n\n// rxjs\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n//modelos\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { DateService } from 'src/app/shared/services/core/date.service';\nimport { CustomTableConfig } from './../../../../shared/templates/custom-table/models/config';\n\n//masks\nimport { MASKS } from 'ng-brazil';\n\n\n@Component({\n  selector: 'logistica-dashboard-conferencia-cte',\n  templateUrl: './conferencia-cte.component.html',\n  styleUrls: ['./conferencia-cte.component.scss'],\n})\nexport class LogisticaDashboardsConferenciaCteComponent implements OnInit, OnDestroy {\n  public MASKS = MASKS;\n\n  breadCrumbTree: Array<Breadcrumb>;\n  idSubModulo: number;\n  conferencia: any;\n  dados = {};\n  total = {};\n  noResult: boolean;\n  loading = true; //Loading FullPage\n  loadingNavBar = false; //Loading do NAVBAR\n  $activatedRouteSubscription: Subscription;\n  tableConfig: Partial<CustomTableConfig> = {\n    subtitleBorder: false,\n    isFixed: true,\n    border: false,\n    small: false,\n    hover: false,\n    theme: {\n      color: 'white',\n    },\n  };\n  modoViewIncorretas = 0;\n  modoViewNaoEmitidas= 0;\n  form: FormGroup;\n\n  relatorio = [];\n  relatorioCache = {};\n  colunas = {};\n  inColunas = false;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n  \n  // Tipos de Operações (Ativo/Inativo)\n  tipos = [\n    {\n      cod: '1',\n      nome: 'Abastecimento',\n    },\n    {\n      cod: '2',\n      nome: 'Escoamento',\n    },\n  ];\n\n  /* Paginação */\n  itemsPerPage: number = 100;\n  currentPage: number = 1;\n  begin: number = 0;\n  end: number = this.itemsPerPage;\n  totalItems: number = 0;\n  /* Paginação */\n\n  modalRef: BsModalRef;\n  \n  constructor(\n    private route: Router,\n    private pnotify: PNotifyService,\n    private localeService: BsLocaleService,\n    private activatedRoute: ActivatedRoute,\n    private conferenciaCteService: LogisticaDashboardConferenciaCteService,\n    private formBuilder: FormBuilder,\n    private routerService: RouterService,\n    private dateService: DateService,\n    private modalService: BsModalService,\n    private xlsxService: XlsxService\n  ) {\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.setBreadCrumb();\n    this.onActivatedRoute();\n  }\n\n  ngOnDestroy() {\n    this.$activatedRouteSubscription.unsubscribe();\n\n    if(this.modalService){\n      this.modalService.hide(1);\n    }\n  }\n\n  onActivatedRoute() {\n    this.$activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (response) => {\n        const _response = this.routerService.getBase64UrlParams(response);\n        this.form.patchValue(_response);\n        this.getConferencia(this.getParams());\n      }\n    );\n  }\n\n  buildForm() {\n\n    const cnpjs = \"1170112600290,30456615000198,30456615000279,479795800001298,49795800001530,49795800001883\"\n\n    this.form = this.formBuilder.group({\n      DS_STAT: [null],\n      DS_USUA: [null],\n      DT_INIC: [this.dateService.getFirstDayMonth(), [Validators.required]],\n      DT_FINA: [new Date(), [Validators.required]],\n      PAGI: [1],\n      TT_REGI_PAGI: [this.itemsPerPage],\n      TIME: [new Date().getTime()],\n    });\n  }\n  setPageRegistros(itemsPerPage) {\n    this.itemsPerPage = itemsPerPage;\n    this.onFilter();\n  }\n  setBreadCrumb() {\n    const id = this.activatedRoute.snapshot.params.idSubModulo;\n    this.breadCrumbTree = [\n      {\n        descricao: 'Home',\n        routerLink: `/logistica/home`,\n      },\n      {\n        descricao: 'Dashboard',\n        routerLink: `/logistica/dashboards/${id}`,\n      },\n      {\n        descricao: 'Conferência de CTEs',\n      },\n    ];\n  }\n\n  /* changeViewIncorretas(event?){\n    if(this.modoViewIncorretas == 1){\n      this.modoViewIncorretas = 0\n    }else{\n      this.modoViewIncorretas = 1\n    }\n  } */\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, {class: 'modal-xxl', animated: false, ignoreBackdropClick: true});\n  }\n\n  /* changeViewNaoEmitidas(event?){\n    if(this.modoViewNaoEmitidas == 1){\n      this.modoViewNaoEmitidas = 0\n    }else{\n      this.modoViewNaoEmitidas = 1\n    }\n  } */\n\n  onFilter() {\n    this.form.get('TIME').setValue(new Date().getTime());\n    this.route.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: this.routerService.setBase64UrlParams(this.getParams()),\n    });\n  }\n\n  getConferencia(params?) {\n    if (!this.loading) this.loadingNavBar = true;\n\n    this.conferenciaCteService\n      .getConferencia(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            \n            this.dados = response.body['data'];\n            this.noResult = false;\n\n            for (const key in this.dados) {\n              \n              this.total[key] = {'valor': 0, 'quantidade': 0};\n              \n              if(!this.dados[key]){\n                continue;\n              }\n\n              this.dados[key].foreach(el => {\n                this.total[key].valor += el?.valor;\n                this.total[key].quantidade += el?.quantidade;\n              });\n\n            }\n\n          } else {\n            this.noResult = true;\n            this.pnotify.notice(\"Nenhuma informação encontrada.\")\n          }\n        },\n        (error) => {\n          this.conferencia = undefined;\n          this.noResult = true;\n          try {\n            this.pnotify.error(error.error.message)\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n\n  onReset() {\n    this.form.reset();\n    this.form.patchValue({\n      PAGI: 1,\n      TT_REGI_PAGI: 100,\n      TIME: [new Date().getTime()],\n    });\n  }\n\n  /* onPageChanged(event) {\n    this.form.get('PAGI').setValue(event.page);\n    this.onFilter();\n  } */\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n\n    return _params;\n  }\n\n  hasData(key){\n\n    if(!this.dados)\n      return false;\n\n    if(!this.dados.hasOwnProperty(key))\n      return false;\n\n    if(this.dados[key].length == 0)\n      return false\n\n    return true;\n  }\n\n  getRelatorio(template: TemplateRef<any>, status){\n\n    this.inColunas = false;\n    this.form.get('DS_STAT').setValue(status)\n    const params = {...this.getParams(), 'DS_STAT': status}\n\n    const cache = this.getRelatorioCache(status, params);\n\n    if(cache){\n      this.relatorio = cache.values;\n      this.colunas = cache.columns;\n      this.openModal(template)\n      return\n    }\n\n\n    if (!this.loading)\n      this.loadingNavBar = true;\n\n    this.conferenciaCteService\n      .getRelatorio(params)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n          this.loadingNavBar = false;\n        })\n      )\n      .subscribe(\n        async (response) => {\n          if (response.status === 200) {\n            \n            this.relatorio = response.body['data'];\n            this.totalItems = this.relatorio.length;\n            \n            const config = this.getColumnsConfig(status)\n            const keys = Object.keys(this.relatorio[0]);\n            const promise = () => keys.forEach(key => this.colunas[key] = config?.hasOwnProperty(key) ? config[key] : false); \n\n            await Promise.resolve(promise());\n\n            this.setRelatorioCache(status, params, this.relatorio, this.colunas);\n          \n            this.noResult = false;\n\n            this.openModal(template)\n          \n          } else {\n            this.noResult = true;\n            this.relatorio = [];\n            this.pnotify.notice(\"Nenhuma informação encontrada.\")\n          }\n        },\n        (error) => {\n          this.relatorio = [];\n          this.noResult = true;\n          try {\n            this.pnotify.error(error.error.message)\n          } catch (error) {\n            this.pnotify.error();\n          }\n        }\n      );\n  }\n\n  setRelatorioCache(status, params, values, colunms){\n    this.relatorioCache[status] = {\n      'params': params,\n      'values': values,\n      'columns': colunms\n    }\n  }\n\n  getRelatorioCache(status, params){\n    \n    try {\n      \n      const _params = this.relatorioCache[status]['params'];\n\n      if(params?.DT_INIC == _params?.DT_INIC && params?.DT_FINA == _params?.DT_FINA && params?.DS_USUA == _params?.DS_USUA)\n        return this.relatorioCache[status];\n      \n    } catch (error) {\n      return false\n    }\n    return false\n  }\n\n  hideListColumns(): boolean{\n    this.inColunas = !this.inColunas;\n    return this.inColunas;\n  }\n\n  setColumnState(column){\n    this.colunas[column.key] = column.value ? false : true;\n    const status = this.form.get('DS_STAT').value;\n    const key = `${this.getLocalStorageKey()}.${status}`\n    localStorage.setItem(key, JSON.stringify(this.colunas))\n  }\n\n  keepOriginalOrder = (a, b) => a.key\n\n  export(){\n    this.xlsxService.export({data: this.relatorio})\n  }\n\n  /* Paginação */\n  onPageChanged(event: PageChangedEvent): void {\n    this.begin = (event.page - 1) * event.itemsPerPage;\n    this.end = event.page * event.itemsPerPage;\n  }\n  /* Paginação */\n\n  getColumnsConfig(status?){\n    const config = {\n      \"EMISSOES_INCORRETAS\":{\n        \"TIPO\": true,\n        \"CNPJ_EMITENTE\": true,\n        \"CNPJ_EMITENTE_CTRC\": true,\n        \"FRETE_PESO_ARCELOR\": true,\n        \"FRETE_PESO\": true,\n        \"CNPJ_PAGADOR\": true,\n        \"CNPJ_PAGADOR_CTRC\": true\n      },\n      \"NAO_EMITIDO\":{\n        \"TIPO\": true,\n        \"CNPJ_EMITENTE\": true,\n        \"CNPJ_PAGADOR\": true,\n        \"CUSTO_FRETE_NF\": true,\n        \"TRANSPORTE\": true,\n        \"NOTA_FISCAL\": true\n      },\n      \"DEMAIS_EMISSOES\":{\n        \"TIPO\": true,\n        \"CNPJ_EMITENTE_CTRC\": true,\n        \"CNPJ_PAGADOR_CTRC\": true,\n        \"FRETE_PESO\": true,\n        \"TRANSPORTE\": true,\n        \"NOTA_FISCAL\": true\n      }\n    }\n\n    const key = `${this.getLocalStorageKey()}.${status}`\n    const storage = localStorage.getItem(key)\n\n    if(storage)\n      return JSON.parse(storage)\n\n    if(status)\n      return config[status]\n\n    return config;\n  }\n\n  getLocalStorageKey(){\n    const key = `logistica.dashboards.conferenciaCte.colunas`\n    return key;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { LogisticaDashboardsConferenciaCteComponent } from './conferencia-cte.component';\nimport { LogisticaDashboadsConferenciaCteRoutingModule } from './conferencia-cte-routing.modulte';\n\nimport { NotFoundModule } from './../../../../core/not-found/not-found.module';\n\nimport { BsDatepickerModule, PaginationModule, TooltipModule } from 'ngx-bootstrap';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CountoModule } from 'angular2-counto';\n\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\n\n\n@NgModule({\n  declarations: [\n    LogisticaDashboardsConferenciaCteComponent\n  ],\n  imports: [\n    CommonModule,\n    LogisticaDashboadsConferenciaCteRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule,\n    CountoModule,\n    NotFoundModule,\n    SharedModule,\n    TemplatesModule\n  ]\n})\nexport class LogisticaDashboardsConferenciaCteModule { }\n"]}