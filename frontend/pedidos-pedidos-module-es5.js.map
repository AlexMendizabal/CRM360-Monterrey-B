{"version":3,"sources":["webpack:///src/app/modules/comercial/kanban/pedidos/pedidos.module.ts","webpack:///src/app/modules/comercial/kanban/pedidos/pedidos.service.ts","webpack:///src/app/modules/comercial/kanban/pedidos/lista/lista.component.ts","webpack:///src/app/modules/comercial/kanban/pedidos/lista/lista.component.scss","webpack:///src/app/modules/comercial/kanban/pedidos/lista/lista.component.html","webpack:///src/app/modules/comercial/kanban/pedidos/pedidos-routing.module.ts","webpack:///src/app/modules/comercial/tid-software/tid-software.service.ts"],"names":["ComercialKanbanPedidosModule","declarations","imports","forRoot","providers","ComercialKanbanPedidosService","http","comercialService","API","params","httpParams","param","append","get","pipe","emAberto","getAberto","transferidos","getTransferidos","emLiberacao","getEmLiberacao","aguardandoFaturamento","getAguardandoFaturamento","aguardandoEntrega","getAguardandoEntrega","providedIn","ComercialKanbanPedidosListaComponent","router","location","formBuilder","pnotifyService","activatedRoute","atividadesService","kanbanPedidosService","dateService","localeService","authService","comercialVendedoresService","gestaoAssociacoesService","materiaisGrupoService","titleService","escritoriosService","user","getCurrentUser","loaderNavbar","loaderFullScreen","profile","breadCrumbTree","showDashboard","showFilter","showPermissionDenied","red","yellow","green","coordenadores","vendedores","vendedoresTotal","filteredVendedores","gerencia","empresa","linhas","viewVendedor","itemsPerPage","currentPage","maxSize","clientesPagination","detalhes","dadosLoaded","dadosEmpty","dadosFiltrados","getPNotify","use","bsConfig","Object","assign","containerClass","adaptivePosition","showWeekNumbers","setTitle","registrarAcesso","setFormFilter","getPerfil","getFilteredValues","setBreadCrumb","loadingFilters","subscribe","descricao","routerLink","idSubModulo","formValue","checkRouterParams","form","group","dataInicial","getFirstDayMonth","required","dataFinal","getLastDayMonth","codVendedor","codGerencia","codEmpresa","codLinha","cliente","checkValuesGerente","activatedRouteSubscription","queryParams","keys","length","atob","JSON","parse","search","forEach","formKey","paramKey","isNaN","Number","unsubscribe","valid","value","registros","setRouterParams","getParams","getCards","next","response","console","log","hasOwnProperty","success","data","error","mensagem","navigate","relativeTo","q","btoa","stringify","_params","_obj","prop","Date","convertToUrlDate","responseCode","result","coordenador","gestor","getVendedores","controls","setValue","updateValueAndValidity","vendedor","getVinculoOperadores","parseInt","info","idVendedor","event","reset","filter","idEscritorio","unshift","id","nome","onChangeVendedores","onChangeEscritorio","getGestores","getEmpresas","getLinhas","disable","getFilterValues","enable","back","tipo","idEmpresa","nomeEmpresa","getEscritorios","codEscritorio","nomeEscritorio","field","onFieldInvalid","status","touched","abstractControl","abstractControlField","validator","controlName","onFieldRequired","selector","template","routes","path","children","component","redirectTo","pathMatch","ComercialKanbanPedidosRoutingModule","forChild","exports","ComercialTidSoftwareService","empresas","modulosVendas","getModulosVendas","modulosProducaoTela","getModulosProducaoTela","acao","post"],"mappings":"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","file":"pedidos-pedidos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// ngx-bootstrap\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// ng-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n// ng2-currency-mask\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n\n// PNotify\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\n\n// Modules\nimport { ComercialTemplatesModule } from './../../templates/templates.module';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { TemplatesModule } from 'src/app/shared/templates/templates.module';\nimport { ComercialCadastrosMateriaisTemplatesModule } from './../../cadastros/materiais/templates/templates.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n// Components\nimport { ComercialKanbanPedidosListaComponent } from './lista/lista.component';\n\n// Services\nimport { ComercialKanbanPedidosService } from './pedidos.service';\nimport { ComercialKanbanPedidosRoutingModule } from './pedidos-routing.module';\n\n@NgModule({\n  declarations: [ComercialKanbanPedidosListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule.forRoot(),\n    TooltipModule,\n    NgSelectModule,\n    CurrencyMaskModule,\n    SharedModule,\n    TemplatesModule,\n    ComercialTemplatesModule,\n    ComercialCadastrosMateriaisTemplatesModule,\n    ComercialKanbanPedidosRoutingModule,\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  providers: [PNotifyService, ComercialKanbanPedidosService],\n})\nexport class ComercialKanbanPedidosModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { take, retry } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n// Services\nimport { ComercialService } from 'src/app/modules/comercial/comercial.service';\n\n// Interfaces\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComercialKanbanPedidosService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/kanban/pedidos`;\n\n  constructor(\n    protected http: HttpClient,\n    private comercialService: ComercialService,\n  ) {}\n\n  getListaKanban(params: any = []): Observable<any> {\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/lista`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getCards(params): Observable<Object | JsonResponse> {\n    let emAberto = this.getAberto(params);\n    let transferidos = this.getTransferidos(params);\n    let emLiberacao = this.getEmLiberacao(params);\n    let aguardandoFaturamento = this.getAguardandoFaturamento(params);\n    let aguardandoEntrega = this.getAguardandoEntrega(params);\n\n    return forkJoin([\n      emAberto,\n      transferidos,\n      emLiberacao,\n      aguardandoFaturamento,\n      aguardandoEntrega\n    ]).pipe(take(1));\n  }\n\n  getAberto(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/aberto`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getTransferidos(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/transferidos`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getAguardandoFaturamento(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/aguardando-faturamento`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getEmLiberacao(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/em-liberacao`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n  getAguardandoEntrega(params: any = []): Observable<any> {\n\n    let httpParams = new HttpParams();\n    for (let param in params) {\n    httpParams = httpParams.append(param, params[param]);    }\n    return this.http.get(`${this.API}/aguardando-entrega`, { params: httpParams })\n    .pipe(\n      take(1),\n      retry(2)\n      );\n  }\n\n}\n","import { ComercialCadastrosMateriaisGrupoService } from './../../../cadastros/materiais/grupos/grupos.service';\nimport { Kanban } from './../models/kanban';\nimport {\n  Component,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  AbstractControl,\n} from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// ngx-bootstrap\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\n\ndefineLocale('pt-br', ptBrLocale);\n\n// Services\nimport { PNotifyService } from 'src/app/shared/services/core/pnotify.service';\nimport { ComercialGestaoAssociacoesCoordenadoresEscritoriosService } from './../../../gestao/associacoes/coordenadores-escritorios/coordenadores-escritorios.service';\nimport { ComercialVendedoresService } from './../../../services/vendedores.service';\nimport { AuthService } from './../../../../../shared/services/core/auth.service';\nimport { ComercialService } from './../../../comercial.service';\nimport { DateService } from './../../../../../shared/services/core/date.service';\nimport { AtividadesService } from './../../../../../shared/services/requests/atividades.service';\nimport { ComercialKanbanPedidosService } from './../pedidos.service';\nimport { TitleService } from 'src/app/shared/services/core/title.service';\nimport { EscritoriosService } from 'src/app/shared/services/requests/escritorios.service';\n\n// Interfaces\nimport { Breadcrumb } from 'src/app/shared/modules/breadcrumb/breadcrumb';\nimport { Subtitles } from 'src/app/shared/modules/subtitles/subtitles';\nimport { CustomTableConfig } from 'src/app/shared/templates/custom-table/models/config';\nimport { JsonResponse } from 'src/app/models/json-response';\n\n@Component({\n  selector: 'comercial-kanban-pedidos-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.scss'],\n})\nexport class ComercialKanbanPedidosListaComponent implements OnInit {\n  @ViewChild('scrollToFilter', {}) scrollToFilter: ElementRef;\n\n  private user = this.authService.getCurrentUser();\n\n  loaderNavbar = false;\n  loaderFullScreen = true;\n\n  profile: any = {};\n\n  breadCrumbTree: Array<Breadcrumb> = [];\n\n  activatedRouteSubscription: Subscription;\n\n  form: FormGroup;\n\n  showDashboard = false;\n  showFilter = false;\n  showPermissionDenied = false;\n\n  red: boolean = false;\n  yellow: boolean = false;\n  green: boolean = false;\n\n  codCliente: number;\n  coordenadores: Array<any> = [];\n  vendedores: Array<any> = [];\n  vendedoresTotal: Array<any> = [];\n  filteredVendedores: Array<any> = [];\n  gerencia: Array<any> = [];\n  empresa: Array<any> = [];\n\n  linhas: Array<any> = [];\n\n  emAberto: Array<any> = [];\n  transferidos: Array<any> = [];\n  emLiberacao: Array<any> = [];\n  aguardandoFaturamento: Array<any> = [];\n  aguardandoEntrega: Array<any> = [];\n\n  viewVendedor = false;\n\n  idEscritorio: number;\n  idVendedor: number;\n  nomeVendedor: string;\n  nomeEscritorio: string;\n\n  itemsPerPage = 50;\n  currentPage = 1;\n  maxSize = 10;\n\n  clientesPagination: Array<any> = [];\n  detalhes = false;\n\n  dadosLoaded = false;\n  dadosEmpty = false;\n\n  orderType;\n  orderBy;\n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  dadosFiltrados: Array<any> = [];\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private formBuilder: FormBuilder,\n    private pnotifyService: PNotifyService,\n    private activatedRoute: ActivatedRoute,\n    private atividadesService: AtividadesService,\n    private kanbanPedidosService: ComercialKanbanPedidosService,\n    private dateService: DateService,\n    private localeService: BsLocaleService,\n    private comercialService: ComercialService,\n    private authService: AuthService,\n    private comercialVendedoresService: ComercialVendedoresService,\n    private gestaoAssociacoesService: ComercialGestaoAssociacoesCoordenadoresEscritoriosService,\n    private materiaisGrupoService: ComercialCadastrosMateriaisGrupoService,\n    private titleService: TitleService,\n    private escritoriosService: EscritoriosService\n  ) {\n    this.pnotifyService.getPNotify();\n    this.localeService.use('pt-br');\n    this.bsConfig = Object.assign(\n      {},\n      { containerClass: 'theme-dark-blue' },\n      { adaptivePosition: true },\n      { showWeekNumbers: false }\n    );\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle('Pedidos');\n    this.registrarAcesso();\n    this.setFormFilter();\n    this.getPerfil();\n    this.getFilteredValues();\n    this.setBreadCrumb();\n    this.loadingFilters();\n  }\n\n  setBreadCrumb(): void {\n    this.activatedRoute.params.subscribe((params: any) => {\n      this.breadCrumbTree = [\n        {\n          descricao: 'Home',\n          routerLink: '/comercial/home',\n        },\n        {\n          descricao: 'Kanban',\n          routerLink: `/comercial/kanban/${params.idSubModulo}`,\n        },\n        {\n          descricao: 'Pedidos',\n        },\n      ];\n    });\n  }\n\n  registrarAcesso() {\n    this.atividadesService.registrarAcesso().subscribe();\n  }\n\n  setFormFilter() {\n    const formValue: any = this.checkRouterParams();\n\n    this.form = this.formBuilder.group({\n      dataInicial: [\n        formValue.dataInicial\n          ? formValue.dataInicial\n          : this.dateService.getFirstDayMonth(),\n        [Validators.required],\n      ],\n      dataFinal: [\n        formValue.dataFinal\n          ? formValue.dataFinal\n          : this.dateService.getLastDayMonth(),\n        [Validators.required],\n      ],\n      codVendedor: [formValue.codVendedor],\n      codGerencia: [formValue.codGerencia],\n      codEmpresa: [formValue.codEmpresa],\n      codLinha: [formValue.codLinha],\n      cliente: [formValue.cliente],\n    });\n\n    this.checkValuesGerente();\n  }\n\n  checkRouterParams() {\n    let formValue = {\n      dataInicial: this.dateService.getFirstDayMonth(),\n      dataFinal: this.dateService.getLastDayMonth(),\n      codEmpresa: '',\n      codLinha: '',\n      codGerencia: '',\n      codVendedor: '',\n      cliente: '',\n    };\n\n    this.activatedRouteSubscription = this.activatedRoute.queryParams.subscribe(\n      (queryParams: any) => {\n        if (Object.keys(queryParams).length > 0) {\n          let params: any = atob(queryParams['q']);\n          params = JSON.parse(params);\n          this.search(params);\n\n          this.showFilter = false;\n          this.showDashboard = true;\n\n          Object.keys(formValue).forEach((formKey) => {\n            Object.keys(params).forEach((paramKey) => {\n              if (\n                formKey == paramKey &&\n                formValue[formKey] != params[paramKey]\n              ) {\n                if (!isNaN(Number(params[paramKey]))) {\n                  formValue[formKey] = Number(params[paramKey]);\n                } else {\n                  formValue[formKey] = params[paramKey];\n                }\n              }\n            });\n          });\n        } else {\n          this.showFilter = true;\n          this.showDashboard = false;\n        }\n      }\n    );\n    this.activatedRouteSubscription.unsubscribe();\n\n    return formValue;\n  }\n\n  // Pesquisa\n  onFilter(): void {\n    if (this.form.valid) {\n      this.itemsPerPage = this.form.value.registros;\n      this.currentPage = 1;\n      this.setRouterParams(this.getParams());\n    }\n  }\n\n  search(params: any): void {\n    this.loaderNavbar = true;\n    this.dadosFiltrados = [];\n    this.dadosLoaded = false;\n    this.dadosEmpty = true;\n\n    this.emAberto = [];\n    this.transferidos = [];\n    this.emLiberacao = [];\n    this.aguardandoFaturamento = [];\n    this.aguardandoEntrega = [];\n\n    this.kanbanPedidosService\n      .getCards(params)\n      .pipe(\n        finalize(() => {\n          this.loaderNavbar = false;\n          this.dadosLoaded = true;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          console.log(response);\n          if (\n            response[0].hasOwnProperty('success') &&\n            response[0].success === true\n          ) {\n            this.emAberto = response[0].data;\n            this.dadosLoaded = true;\n            this.dadosEmpty = false;\n          }\n\n          if (\n            response[1].hasOwnProperty('success') &&\n            response[1].success === true\n          ) {\n            this.transferidos = response[1].data;\n            this.dadosLoaded = true;\n            this.dadosEmpty = false;\n          }\n\n          if (\n            response[2].hasOwnProperty('success') &&\n            response[2].success === true\n          ) {\n            this.emLiberacao = response[2].data;\n            this.dadosLoaded = true;\n            this.dadosEmpty = false;\n          }\n\n          if (\n            response[3].hasOwnProperty('success') &&\n            response[3].success === true\n          ) {\n            this.aguardandoFaturamento = response[3].data;\n            this.dadosLoaded = true;\n            this.dadosEmpty = false;\n          }\n\n          if (\n            response[4].hasOwnProperty('success') &&\n            response[4].success === true\n          ) {\n            this.aguardandoEntrega = response[4].data;\n            this.dadosLoaded = true;\n            this.dadosEmpty = false;\n          } else if (\n            (response[0].hasOwnProperty('success') ||\n              response[1].hasOwnProperty('success') ||\n              response[2].hasOwnProperty('success') ||\n              response[3].hasOwnProperty('success') ||\n              response[4].hasOwnProperty('success')) &&\n            (response[0].success === false ||\n              response[1].success === false ||\n              response[2].success === false ||\n              response[3].success === false ||\n              response[4].success === false)\n          ) {\n          } else {\n            this.pnotifyService.error();\n            this.dadosEmpty = true;\n          }\n        },\n        error: (error: any) => {\n          this.dadosEmpty = true;\n\n          if (error.error.hasOwnProperty('mensagem')) {\n            this.pnotifyService.error(error.error.mensagem);\n          } else {\n            this.pnotifyService.error();\n          }\n        }\n      });\n  }\n\n  setRouterParams(params: any) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: { q: btoa(JSON.stringify(params)) },\n    });\n    this.search(params);\n  }\n\n  getParams() {\n    let _params = {};\n    let _obj = this.form.value;\n    for (let prop in _obj) {\n      if (_obj[prop]) {\n        if (_obj[prop] instanceof Date)\n          _params[prop] = this.dateService.convertToUrlDate(_obj[prop]);\n        else _params[prop] = _obj[prop];\n      }\n    }\n    return _params;\n  }\n\n  // Get perfil\n  getPerfil() {\n    this.comercialService.getPerfil().subscribe({\n      next: (response: any) => {\n        if (response.responseCode === 200) {\n          this.profile = response.result;\n          if (\n            this.profile.coordenador === true ||\n            this.profile.gestor === true\n          ) {\n            this.getVendedores();\n            this.form.controls.codGerencia.setValue('');\n            this.form.controls.codGerencia.updateValueAndValidity();\n          } else if (\n            this.profile.vendedor === true\n            // this.profile.hasVinculoOperadores === true\n          ) {\n            this.viewVendedor == true;\n            this.getVinculoOperadores();\n            this.form.controls.codVendedor.setValue(\n              parseInt(this.user.info.idVendedor)\n            );\n            this.form.controls.codVendedor.updateValueAndValidity();\n            this.form.controls.codGerencia.setValue('');\n            this.form.controls.codGerencia.updateValueAndValidity();\n            this.showDashboard = true;\n          } else {\n            this.showPermissionDenied = true;\n          }\n        } else {\n          this.showPermissionDenied = true;\n        }\n      },\n      error: (error: any) => {\n        this.showPermissionDenied = true;\n      }\n    });\n  }\n\n  onChangeEscritorio(event: any, reset: boolean) {\n    if (this.viewVendedor == false) {\n      if (reset == true) {\n        this.form.controls.codVendedor.reset();\n        this.form.controls.codVendedor.setValue('');\n        this.vendedores = this.vendedoresTotal;\n      }\n      this.filteredVendedores = this.vendedores.filter(\n        (value: any) => value.idEscritorio == this.form.value.codGerencia\n      );\n\n      this.filteredVendedores.unshift({\n        id: '',\n        nome: 'EXIBIR TODOS',\n      });\n      this.onChangeVendedores();\n\n      if (this.form.value.codGerencia == '') {\n        this.vendedores = this.vendedoresTotal;\n      }\n    }\n  }\n\n  onChangeVendedores(): void {\n    this.vendedores = this.filteredVendedores;\n  }\n\n  checkValuesGerente(): void {\n    if (\n      this.form.value.codGerencia !== '' &&\n      this.form.value.codGerencia !== null\n    ) {\n      this.onChangeEscritorio(this.form.value.codGerencia, false);\n    }\n  }\n\n  getFilteredValues() {\n    this.getGestores();\n    this.getEmpresas();\n    this.getLinhas();\n  }\n\n  loadingFilters() {\n    this.form.controls.codEmpresa.disable();\n    this.form.controls.codLinha.disable();\n    this.form.controls.codGerencia.disable();\n    this.form.controls.codVendedor.disable();\n  }\n\n  // Get Selects\n  getLinhas(): void {\n    this.materiaisGrupoService.getFilterValues().subscribe((response: any) => {\n      if (response[0].responseCode === 200) {\n        this.linhas = response[0].result;\n\n        this.linhas.unshift({\n          id: '',\n          descricao: 'EXIBIR TODOS',\n        });\n        this.form.controls.codLinha.enable();\n      } else {\n        this.pnotifyService.error();\n        this.location.back();\n      }\n    });\n  }\n\n  getEmpresas() {\n    this.comercialService.getEmpresas({ tipo: 'faturamento' }).subscribe({\n      next: (response: any) => {\n        if (response.responseCode === 200) {\n          this.empresa = response.result;\n\n          this.empresa.unshift({\n            idEmpresa: '',\n            nomeEmpresa: 'EXIBIR TODOS',\n          });\n\n          this.form.controls.codEmpresa.enable();\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      },\n      error: (error: any) => {\n        this.pnotifyService.error();\n        this.location.back();\n      }\n    });\n  }\n\n  getGestores() {\n    this.escritoriosService.getEscritorios().subscribe({\n      next: (response: any) => {\n        if (response.responseCode === 200) {\n          this.coordenadores = response.result;\n\n          this.coordenadores.unshift({\n            codEscritorio: '',\n            nomeEscritorio: 'EXIBIR TODOS',\n          });\n          this.form.controls.codGerencia.enable();\n        } else {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      },\n      error: (error: any) => {\n        this.pnotifyService.error();\n        this.location.back();\n      }\n    });\n  }\n\n  getVendedores() {\n    this.comercialVendedoresService\n      .getVendedores()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.vendedores = response['result'];\n          this.vendedoresTotal = this.vendedores;\n          this.vendedores.unshift({\n            id: '',\n            nome: 'EXIBIR TODOS',\n          });\n          this.form.controls.codVendedor.enable();\n        },\n        error: (error: any) => {\n          this.pnotifyService.error();\n          this.location.back();\n        }\n      });\n  }\n\n  getVinculoOperadores(): void {\n    this.comercialVendedoresService\n      .getVinculoOperadores()\n      .pipe(\n        finalize(() => {\n          this.loaderFullScreen = false;\n        })\n      )\n      .subscribe((response: any) => {\n        if (response.responseCode === 200) {\n          this.vendedores = response.result;\n          this.form.controls.codVendedor.enable();\n          this.form.controls.codGerencia.disable();\n          this.form.controls.codGerencia.setValue('');\n          this.form.controls.codGerencia.updateValueAndValidity();\n        }\n      });\n  }\n\n  // Tratamento de erros\n  onFieldError(field: string): string {\n    if (this.onFieldInvalid(field)) {\n      return 'is-invalid';\n    }\n\n    return '';\n  }\n\n  onFieldInvalid(field: any): boolean {\n    field = this.form.get(field);\n\n    return field.status == 'INVALID' && field.touched;\n  }\n\n  onFieldRequired(\n    abstractControl: AbstractControl,\n    abstractControlField?: string\n  ): string {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return 'is-required';\n      }\n    }\n\n    if (abstractControlField) {\n      for (const controlName in abstractControl['controls']) {\n        if (abstractControl['controls'][controlName]) {\n          if (\n            this.onFieldRequired(abstractControl['controls'][controlName]) &&\n            controlName == abstractControlField\n          ) {\n            return 'is-required';\n          }\n        }\n      }\n    }\n\n    return '';\n  }\n\n  handleFormFieldsError() {\n    this.pnotifyService.error();\n    this.location.back();\n  }\n\n  onRefresh() {\n    this.setFormFilter();\n  }\n}\n","export default \"::ng-deep .dropdown-item:hover {\\n  cursor: pointer;\\n}\\n::ng-deep .card-title {\\n  font-size: 1.05rem;\\n}\\n::ng-deep h6 {\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 45px;\\n  text-align: center;\\n  vertical-align: middle;\\n  -ms-flex-pack: center;\\n      justify-content: center;\\n  -ms-flex-align: center;\\n      align-items: center;\\n}\\n::ng-deep .em-aberto {\\n  background-color: #F5B7B1;\\n  border: solid 1.5px #b60707;\\n  border-radius: 7px;\\n}\\n::ng-deep .cartao-em-aberto:hover {\\n  background-color: #F1948A;\\n  border-radius: 7px;\\n}\\n::ng-deep .transferidos {\\n  background-color: #F5CBA7;\\n  border: solid 1.5px #E67E22;\\n  border-radius: 7px;\\n}\\n::ng-deep .cartao-transferidos:hover {\\n  background-color: #F0B27A;\\n  border-radius: 7px;\\n}\\n::ng-deep .em-liberacao {\\n  background-color: #F9E79F;\\n  border: solid 1.5px #F1C40F;\\n  border-radius: 7px;\\n}\\n::ng-deep .cartao-em-liberacao:hover {\\n  background-color: #F7DC6F;\\n  border-radius: 7px;\\n}\\n::ng-deep .aguard-faturamento {\\n  background-color: #A9DFBF;\\n  border: solid 1.5px #067504;\\n  border-radius: 7px;\\n}\\n::ng-deep .cartao-aguard-faturamento:hover {\\n  background-color: #7DCEA0;\\n  border-radius: 7px;\\n}\\n::ng-deep .aguard-entrega {\\n  background-color: #A9CCE3;\\n  border: solid 1.5px #0f2edb;\\n  border-radius: 7px;\\n}\\n::ng-deep .cartao-aguard-entrega:hover {\\n  background-color: #7FB3D5;\\n  border-radius: 7px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9jb21lcmNpYWwva2FuYmFuL3BlZGlkb3MvbGlzdGEvbGlzdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxlQUFBO0FBQUo7QUFFRTtFQUNFLGtCQUFBO0FBQUo7QUFHRTtFQUNFLG9CQUFBO0VBQUEsYUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EscUJBQUE7TUFBQSx1QkFBQTtFQUNBLHNCQUFBO01BQUEsbUJBQUE7QUFESjtBQUlFO0VBQ0UseUJBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0FBRko7QUFJRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFGSjtBQUtFO0VBQ0UseUJBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0FBSEo7QUFLRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFISjtBQU1FO0VBQ0UseUJBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0FBSko7QUFNRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFKSjtBQU9FO0VBQ0UseUJBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0FBTEo7QUFPRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFMSjtBQVFFO0VBQ0UseUJBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0FBTko7QUFRRTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFOSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tZXJjaWFsL2thbmJhbi9wZWRpZG9zL2xpc3RhL2xpc3RhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIHtcbiAgLmRyb3Bkb3duLWl0ZW06aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICAuY2FyZC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjA1cmVtO1xuICB9XG5cbiAgaDZ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuXG4gIC5lbS1hYmVydG8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNUI3QjE7XG4gICAgYm9yZGVyOiBzb2xpZCAxLjVweCAjYjYwNzA3O1xuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgfVxuICAuY2FydGFvLWVtLWFiZXJ0bzpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YxOTQ4QTtcbiAgICBib3JkZXItcmFkaXVzOiA3cHg7XG4gIH1cblxuICAudHJhbnNmZXJpZG9zIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVDQkE3O1xuICAgIGJvcmRlcjogc29saWQgMS41cHggI0U2N0UyMjtcbiAgICBib3JkZXItcmFkaXVzOiA3cHg7XG4gIH1cbiAgLmNhcnRhby10cmFuc2Zlcmlkb3M6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGMEIyN0E7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xuICB9XG5cbiAgLmVtLWxpYmVyYWNhbyB7XG4gICAgYmFja2dyb3VuZC1jb2xvciA6I0Y5RTc5RjtcbiAgICBib3JkZXI6IHNvbGlkIDEuNXB4ICNGMUM0MEY7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xuICB9XG4gIC5jYXJ0YW8tZW0tbGliZXJhY2FvOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjdEQzZGO1xuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgfVxuXG4gIC5hZ3VhcmQtZmF0dXJhbWVudG8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBOURGQkY7XG4gICAgYm9yZGVyOiBzb2xpZCAxLjVweCAjMDY3NTA0O1xuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgfVxuICAuY2FydGFvLWFndWFyZC1mYXR1cmFtZW50bzpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzdEQ0VBMDtcbiAgICBib3JkZXItcmFkaXVzOiA3cHg7XG4gIH1cblxuICAuYWd1YXJkLWVudHJlZ2Ege1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNBOUNDRTM7XG4gICAgYm9yZGVyOiBzb2xpZCAxLjVweCAjMGYyZWRiO1xuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgfVxuICAuY2FydGFvLWFndWFyZC1lbnRyZWdhOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0ZCM0Q1O1xuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgfVxuXG59XG5cblxuIl19 */\";","export default \"<loader-spinner-navbar *ngIf=\\\"loaderNavbar\\\"></loader-spinner-navbar>\\n<loader-spinner-full-screen *ngIf=\\\"loaderFullScreen\\\"></loader-spinner-full-screen>\\n<app-header appTitle=\\\"Pedidos\\\">\\n  <button\\n    type=\\\"button\\\"\\n    (click)= 'onRefresh();'>\\n    Atualizar\\n  </button>\\n  <button\\n    type=\\\"button\\\"\\n    (click)=\\\"onFilter()\\\">\\n    Filtrar\\n  </button>\\n</app-header>\\n<app-body [breadCrumbTree]=\\\"breadCrumbTree\\\" >\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <advanced-filter>\\n        <form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"dataInicial\\\">Data Inicial</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataInicial\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                placeholder=\\\"Selecione...\\\"\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataInicial\\\"\\n                [ngClass]=\\\"onFieldError('dataInicial') + ' ' + onFieldRequired(form.controls.dataInicial)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataInicial')\\\" message=\\\"Data Inicial é obrigatória\\\"></invalid-form-control>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"dataFinal\\\">Data final</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></span>\\n                </div>\\n                <input\\n                class=\\\"form-control\\\"\\n                id=\\\"dataFinal\\\"\\n                type=\\\"text\\\"\\n                bsDatepicker\\n                placeholder=\\\"Selecione...\\\"\\n                [bsConfig]=\\\"bsConfig\\\"\\n                formControlName=\\\"dataFinal\\\"\\n                [ngClass]=\\\"onFieldError('dataFinal') + ' ' + onFieldRequired(form.controls.dataFinal)\\\">\\n                <invalid-form-control [show]=\\\"onFieldInvalid('dataFinal')\\\" message=\\\"Data Final é obrigatória\\\"></invalid-form-control>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-5 pl-0\\\">\\n              <label for=\\\"cliente\\\">Cliente</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"codLinha\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"cliente\\\"\\n              >\\n            <invalid-form-control [show]=\\\"onFieldInvalid('cliente')\\\" message=\\\"Descrição é obrigatório.\\\"></invalid-form-control>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"codLinha\\\">Linha</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                [items]=\\\"linhas\\\"\\n                formControlName=\\\"codLinha\\\"\\n                [virtualScroll]=\\\"true\\\"\\n                labelForId=\\\"codLinha\\\"\\n                bindLabel=\\\"descricao\\\"\\n                bindValue=\\\"id\\\"\\n                value=''>\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-2 pl-0\\\">\\n              <label for=\\\"codGerencia\\\">gerência</label>\\n              <ng-select\\n                  [searchable]=\\\"true\\\"\\n                  [clearable]=\\\"false\\\"\\n                  [items]=\\\"coordenadores\\\"\\n                  [virtualScroll]=\\\"true\\\"\\n                  placeholder=\\\"Selecione...\\\"\\n                  bindLabel=\\\"nomeEscritorio\\\"\\n                  bindValue=\\\"codEscritorio\\\"\\n                  formControlName=\\\"codGerencia\\\"\\n                  (change)=\\\"onChangeEscritorio($event.id, true)\\\"\\n                >\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-4 pl-0\\\">\\n              <label for=\\\"codVendedor\\\">vendedor</label>\\n              <ng-select\\n                [searchable]=\\\"true\\\"\\n                [clearable]=\\\"false\\\"\\n                type='text'\\n                [items]=\\\"vendedores\\\"\\n                placeholder=\\\"Selecione...\\\"\\n                bindLabel=\\\"nome\\\"\\n                bindValue=\\\"id\\\"\\n                formControlName=\\\"codVendedor\\\"\\n              >\\n                  <invalid-form-control\\n                  [show]=\\\"onFieldInvalid('codVendedor')\\\"\\n                  message=\\\"Descrição é obrigatório.\\\">\\n                  </invalid-form-control>\\n              </ng-select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3 pl-0\\\">\\n              <label for=\\\"codEmpresa\\\">Empresa</label>\\n                    <ng-select\\n                      [searchable]=\\\"true\\\"\\n                      [clearable]=\\\"false\\\"\\n                      type='text'\\n                      [items]=\\\"empresa\\\"\\n                      [virtualScroll]=\\\"true\\\"\\n                      placeholder=\\\"Selecione...\\\"\\n                      bindLabel=\\\"nomeEmpresa\\\"\\n                      bindValue=\\\"idEmpresa\\\"\\n                      formControlName=\\\"codEmpresa\\\"\\n                    >\\n\\n                    <invalid-form-control\\n                    [show]=\\\"onFieldInvalid('codEmpresa')\\\"\\n                    message=\\\"Empresa é obrigatório.\\\">\\n                    </invalid-form-control>\\n                    </ng-select>\\n                </div>\\n\\n          </div>\\n        </form>\\n      </advanced-filter>\\n    </div>\\n  </div>\\n\\n  <empty-result message=\\\"Nenhuma informação encontrada\\\" *ngIf=\\\"dadosEmpty && dadosLoaded\\\"></empty-result>\\n\\n  <div class=\\\"row mt-4\\\" *ngIf=\\\"!dadosEmpty && dadosLoaded\\\">\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-2\\\">\\n      <h6 >EM ABERTO</h6>\\n    <div\\n      class=\\\" mb-1 em-aberto\\\"\\n      *ngFor=\\\"let item of emAberto\\\"\\n      [tooltip]=\\\"tooltipAutoScrollTemplate\\\">\\n        <div class=\\\"card-body cartao-em-aberto\\\" >\\n          <strong >#{{ item.nrPedido }} - {{ item.razaoSocial }}</strong><br>\\n          <span>{{ item.nomeLinha }}</span><br>\\n          <span>{{ item.valorPedido | currency:'BRL':'symbol':'1.2-2' }} - {{ item.peso }}kg </span><br>\\n          <span>{{ item.nomeVendedor }}</span><br>\\n          <span>{{ item.nomeEmpresa }}</span>\\n        </div>\\n        <ng-template #tooltipAutoScrollTemplate>\\n          <p class=\\\"mt-1 mb-1\\\"><b>TEMPO DO STATUS:</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.ano > 0\\\" ><b>{{ item.tempo.ano }} ano(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.mes > 0\\\" ><b>{{ item.tempo.mes }} mês(es),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.dia > 0\\\"><b>{{ item.tempo.dia }} dia(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\"><b>{{ item.tempo.hora }} hora(s) e {{ item.tempo.min }} minuto(s)</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br></p>\\n        </ng-template>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-2\\\">\\n    <h6 class='text-center'>TRANSFERIDOS</h6>\\n    <div\\n      class=\\\"mb-1  transferidos\\\"\\n      *ngFor=\\\"let item of transferidos\\\"\\n      [tooltip]=\\\"tooltipAutoScrollTemplate\\\">\\n        <div class=\\\"card-body cartao-transferidos\\\" >\\n          <strong >#{{ item.nrPedido }} - {{ item.razaoSocial }}</strong><br>\\n          <span>{{ item.nomeLinha }}</span><br>\\n          <span>{{ item.valorPedido | currency:'BRL':'symbol':'1.2-2' }} - {{ item.peso }}kg </span><br>\\n          <span>{{ item.nomeVendedor }}</span><br>\\n          <span>{{ item.nomeEmpresa }}</span>\\n        </div>\\n        <ng-template #tooltipAutoScrollTemplate>\\n          <p class=\\\"mt-1 mb-1\\\"><b>TEMPO DO STATUS:</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.ano > 0\\\" ><b>{{ item.tempo.ano }} ano(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.mes > 0\\\" ><b>{{ item.tempo.mes }} mês(es),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.dia > 0\\\"><b>{{ item.tempo.dia }} dia(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\"><b>{{ item.tempo.hora }} hora(s) e {{ item.tempo.min }} minuto(s)</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br></p>\\n          <p class=\\\"mb-0\\\" *ngIf=\\\"item.retira == 1\\\"><b>RETIRA</b></p>\\n          <p class=\\\"mb-0\\\" *ngIf=\\\"item.entregaForaEstado == 1\\\"><b>ENTREGA FORA DO ESTADO</b></p>\\n          <p class=\\\"mb-0\\\" *ngIf=\\\"item.preFaturado == 1\\\"><b>PRÉ-FATURADO</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n        </ng-template>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-2 \\\">\\n    <h6 class='text-center '>EM LIBERAÇÂO</h6>\\n    <div\\n      class=\\\"mb-1 em-liberacao\\\"\\n      *ngFor=\\\"let item of emLiberacao\\\"\\n      [tooltip]=\\\"tooltipAutoScrollTemplate\\\">\\n        <div class=\\\"card-body cartao-em-liberacao\\\" >\\n          <strong >#{{ item.nrPedido }} - {{ item.razaoSocial }}</strong><br>\\n          <span>{{ item.nomeLinha }}</span><br>\\n          <span>{{ item.valorPedido | currency:'BRL':'symbol':'1.2-2' }} - {{ item.peso }}kg </span><br>\\n          <span>{{ item.nomeVendedor }}</span><br>\\n          <span>{{ item.nomeEmpresa }}</span>\\n        </div>\\n        <ng-template #tooltipAutoScrollTemplate>\\n          <p class=\\\"mt-1 mb-1\\\"><b>TEMPO DO STATUS:</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.ano > 0\\\" ><b>{{ item.tempo.ano }} ano(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.mes > 0\\\" ><b>{{ item.tempo.mes }} mês(es),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.dia > 0\\\"><b>{{ item.tempo.dia }} dia(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\"><b>{{ item.tempo.hora }} hora(s) e {{ item.tempo.min }} minuto(s)</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br></p>\\n          <p class=\\\"mb-0\\\"><b>LIBERAÇÃO - {{ item.departamentoLiberacao }}</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br><br></p>\\n        </ng-template>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-2\\\">\\n    <h6 class='text-center '>AGUARD. FATURAMENTO</h6>\\n    <div\\n      class=\\\"mb-1 aguard-faturamento\\\"\\n      *ngFor=\\\"let item of aguardandoFaturamento\\\"\\n      [tooltip]=\\\"tooltipAutoScrollTemplate\\\">\\n        <div class=\\\"card-body cartao-aguard-faturamento\\\" >\\n          <strong >#{{ item.nrPedido }} - {{ item.razaoSocial }}</strong><br>\\n          <span>{{ item.nomeLinha }}</span><br>\\n          <span>{{ item.valorPedido | currency:'BRL':'symbol':'1.2-2' }} - {{ item.peso }}kg </span><br>\\n          <span>{{ item.nomeVendedor }}</span><br>\\n          <span>{{ item.nomeEmpresa }}</span>\\n        </div>\\n        <ng-template #tooltipAutoScrollTemplate>\\n          <p class=\\\"mt-1 mb-1\\\"><b>TEMPO DO STATUS:</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.ano > 0\\\" ><b>{{ item.tempo.ano }} ano(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.mes > 0\\\" ><b>{{ item.tempo.mes }} mês(es),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.dia > 0\\\"><b>{{ item.tempo.dia }} dia(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\"><b>{{ item.tempo.hora }} hora(s) e {{ item.tempo.min }} minuto(s)</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br></p>\\n        </ng-template>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-2\\\">\\n    <h6 class='text-center '>AGUARD. ENTREGA</h6>\\n    <div\\n      class=\\\"mb-1 aguard-entrega\\\"\\n      *ngFor=\\\"let item of aguardandoEntrega\\\"\\n      [tooltip]=\\\"tooltipAutoScrollTemplate\\\">\\n          <div class=\\\"card-body cartao-aguard-entrega\\\" >\\n          <strong >#{{ item.nrPedido }} - {{ item.razaoSocial }}</strong><br>\\n          <span>{{ item.nomeLinha }}</span><br>\\n          <span>{{ item.valorPedido | currency:'BRL':'symbol':'1.2-2' }} - {{ item.peso }}kg </span><br>\\n          <span>{{ item.nomeVendedor }}</span><br>\\n          <span>{{ item.nomeEmpresa }}</span>\\n        </div>\\n        <ng-template #tooltipAutoScrollTemplate>\\n          <p class=\\\"mt-1 mb-1\\\"><b>TEMPO DO STATUS:</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.ano > 0\\\" ><b>{{ item.tempo.ano }} ano(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.mes > 0\\\" ><b>{{ item.tempo.mes }} mês(es),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\" *ngIf=\\\"item.tempo.dia > 0\\\"><b>{{ item.tempo.dia }} dia(s),</b></p>\\n          <p class=\\\"mt-0 mb-0\\\"><b>{{ item.tempo.hora }} hora(s) e {{ item.tempo.min }} minuto(s)</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\" *ngIf=\\\"item.descSituacao != ''\\\"><br></p>\\n          <p class=\\\"mb-0\\\" *ngIf=\\\"item.descSituacao != ''\\\"><b>{{ item.descSituacao }}</b></p>\\n          <p class=\\\"text-nowrap mb-0\\\"><br></p>\\n        </ng-template>\\n    </div>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { ComercialKanbanPedidosListaComponent } from './lista/lista.component';\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: 'lista', component: ComercialKanbanPedidosListaComponent },\n      {\n        path: '',\n        redirectTo: 'lista',\n        pathMatch: 'full',\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComercialKanbanPedidosRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take, retry } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComercialTidSoftwareService {\n  private readonly API = `https://crm360.monterrey.com.bo/api/comercial/tid-software`;\n\n  constructor(protected http: HttpClient) {}\n\n  loadDependencies() {\n    let empresas = this.getEmpresas('vendas');\n    let linhas = this.getLinhas();\n    let modulosVendas = this.getModulosVendas();\n    let modulosProducaoTela = this.getModulosProducaoTela();\n\n    return forkJoin([\n      empresas,\n      linhas,\n      modulosVendas,\n      modulosProducaoTela\n    ]).pipe(take(1), retry(2));\n  }\n\n  getEmpresas(acao: any) {\n    return this.http\n      .get(`${this.API}/empresas/${acao}`)\n      .pipe(take(1), retry(2));\n  }\n\n  getLinhas() {\n    return this.http.get(`${this.API}/linhas`).pipe(take(1), retry(2));\n  }\n\n  getModulosVendas() {\n    return this.http.get(`${this.API}/modulos/vendas`).pipe(take(1), retry(2));\n  }\n\n  getModulosProducaoTela() {\n    return this.http\n      .get(`${this.API}/modulos/producao-tela`)\n      .pipe(take(1), retry(2));\n  }\n\n  postGerarAcesso(data: any) {\n    return this.http\n      .post(`${this.API}/gerar-acesso`, data)\n      .pipe(take(1), retry(2));\n  }\n}\n"]}